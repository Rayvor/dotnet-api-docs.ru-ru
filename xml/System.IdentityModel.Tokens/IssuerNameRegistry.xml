<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65a0bf0b90e5e9241ee97581d3e2f5917939d093" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69281634" /></Metadata><TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Абстрактный базовый класс для реестра имен издателей. Реестр имени издателя используется для сопоставления мнемонического имени с криптографическим материалом, необходимым для проверки подписей токенов, выдаваемых соответствующим издателем. Реестр имен издателей ведет список издателей, которым доверяет приложение проверяющей стороны (RP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реестр имен издателей используется для связывания назначенного имени с криптографическим материалом, необходимым для проверки подписей маркеров, созданных соответствующим издателем. Это имя затем используется для задания <xref:System.Security.Claims.Claim.Issuer%2A> <xref:System.Security.Claims.Claim.OriginalIssuer%2A> свойства утверждения или. Методы, предоставляемые <xref:System.IdentityModel.Tokens.IssuerNameRegistry> классом, вызываются из конвейера обработчиком маркеров безопасности, который обрабатывает маркер. Маркеры, подписанные материалом, который не сопоставлен с реестром имен издателей, отбрасываются как ненадежные. Имя, возвращаемое реестром имен издателя, должно быть уникальным в контексте приложения RP.  
  
 В коде можно указать реестр имен издателя для использования, задав <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> свойство. В файле конфигурации реестр имен издателя можно указать, указав [ &lt;элемент&gt; IssuerNameRegistry](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) в [ &lt;элементе секурититокенхандлерконфигуратион&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) .  
  
 Windows Identity Foundation (WIF) предоставляет реализацию <xref:System.IdentityModel.Tokens.IssuerNameRegistry> класса из Box <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> : класс. При использовании этой реализации можно указать список доверенных издателей в файле конфигурации приложения RP в `<issuerNameRegistry>` [ &lt;элементе трустедиссуерс&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) , который является дочерним элементом элемента, если . класс упоминается в `type` атрибуте этого элемента. <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> `<trustedIssuers>` В элементе каждое имя поставщика сопоставляется с сертификатом X. 509, который следует использовать для проверки его подписи.  
  
 Чтобы создать пользовательский реестр имен поставщиков, необходимо переопределить <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> метод. Этот метод возвращает имя издателя для указанного маркера безопасности. При необходимости можно переопределить <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> метод, чтобы предоставить механизм подсказки при получении имен издателей <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> и метода, если необходимо предоставить имя издателя для маркеров Windows, отличающихся от <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Переопределите <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> метод, чтобы разрешить инициализацию реестра имени поставщика из файла конфигурации.  
  
   
  
## Examples  
 В следующем коде показана реализация <xref:System.IdentityModel.Tokens.IssuerNameRegistry> класса, который принимает только издатели, использующие сертификаты с темой "CN = localhost".  
  
> [!WARNING]
>  Приведенный ниже код предназначен только для наглядных целей. Проверка сертификатов на основе имени субъекта не рекомендуется. Этот код не следует использовать как есть в рабочей среде.  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 Ниже приведен XML-код, необходимый для настройки приложения с помощью реестра доверенных имен поставщиков.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28">&lt;issuerNameRegistry&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>При переопределении в производном классе возвращает имя поставщика для указанного токена безопасности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из конвейера обработки обработчиком маркеров безопасности, который обрабатывает токен. Метод должен возвращать уникальное имя для издателя в контексте приложения RP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">Токен безопасности, для которого требуется вернуть имя издателя.</param>
        <summary>При переопределении в производном классе возвращает имя поставщика указанного токена безопасности.</summary>
        <returns>Имя издателя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализации должны возвращать значение, отличное от NULL, и непустую строку для идентификации известного издателя или пустую строку для идентификации неизвестного издателя.  
  
 Вызывается из конвейера обработки обработчиком маркеров безопасности, который обрабатывает токен. Метод должен возвращать уникальное имя для издателя в контексте приложения RP.  
  
   
  
## Examples  
 В следующем коде показан <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> метод для реестра имени издателя. Полный пример приведен в <xref:System.IdentityModel.Tokens.IssuerNameRegistry> разделе Обзор класса.  
  
> [!WARNING]
>  Приведенный ниже код предназначен только для наглядных целей. Проверка сертификатов на основе имени субъекта не рекомендуется. Этот код не следует использовать как есть в рабочей среде.  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">Токен безопасности, для которого требуется вернуть имя издателя.</param>
        <param name="requestedIssuerName">Имя издателя, которые следует учитывать в запросе.</param>
        <summary>При переопределении в производном классе возвращает имя поставщика указанного токена безопасности. Указанное имя издателя может учитываться при определении возвращаемого имени издателя.</summary>
        <returns>Имя издателя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию игнорирует `requestedIssuerName` параметр и просто <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> вызывает метод.  
  
 Вызывается из конвейера обработки обработчиком маркеров безопасности, который обрабатывает токен. Метод должен возвращать уникальное имя для издателя в контексте приложения RP.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает имя издателя по умолчанию, используемое для утверждений Windows.</summary>
        <returns>Имя издателя по умолчанию для утверждений Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию возвращает значение <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.  
  
 Вызывается из конвейера обработки обработчиком маркеров безопасности, который обрабатывает токен. Метод должен возвращать уникальное имя для издателя в контексте приложения RP.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">XML-элемент конфигурации. Каждый узел в списке имеет тип <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> Метод вызывается инфраструктурой конфигурации. При вызове этого метода объект `nodelist` будет содержать дочерние элементы [ &lt;верхнего уровня элемента IssuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) из файла конфигурации. Каждая из них, в свою очередь, может содержать атрибуты или дочерние элементы в зависимости от схемы конфигурации, определяемой для производного класса.  
  
 Реализация по умолчанию создает <xref:System.NotImplementedException>исключение. Переопределите этот метод в производном классе, чтобы включить инициализацию реестра имен поставщиков из файла конфигурации.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28">&lt;issuerNameRegistry&gt;</related>
      </Docs>
    </Member>
  </Members>
</Type>
