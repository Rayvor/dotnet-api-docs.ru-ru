<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="327accb4c305cecb389e3391c5dfd852fac4aed4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70492620" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет базовый класс, используемый для реализации всех маркеров безопасности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте маркер безопасности, чтобы обеспечить учетные данные для проверки подлинности или защитить сообщение.  
  
 Маркер безопасности можно использовать для предоставления учетных данных проверки подлинности, материала криптографического ключа или, в случае маркера безопасности, выданного службой маркеров безопасности (STS), коллекции заявок о субъекте. Все маркеры безопасности являются производными от <xref:System.IdentityModel.Tokens.SecurityToken> класса.  
  
 Начиная с .NET 4,5, Windows Identity Foundation (WIF) полностью интегрирована в .NET Framework и классы, предоставляемые WIF, являются предпочтительным способом обработки маркеров безопасности в коде. В WIF маркеры безопасности сериализуются и десериализуются в их XML-представление и проверяются с помощью классов, производных от <xref:System.IdentityModel.Tokens.SecurityTokenHandler> базового класса. Проверка маркера не только гарантирует допустимость маркера, но и возвращает <xref:System.Security.Claims.ClaimsIdentity> экземпляр из токена, который можно использовать для проверки подлинности и авторизации. Объект <xref:System.Security.Claims.ClaimsIdentity> создается реализацией <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> обработчика маркером метода из утверждений, содержащихся в маркере, а также из утверждений, которые являются встроенными для самого типа токена.  
  
 WIF поставляется с поддержкой следующих типов маркеров безопасности:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>— Представляет маркер безопасности, основанный на утверждении SAML 2,0. Этот тип токена обычно выдается службой маркеров безопасности в ответ на запрос маркера безопасности WS-Trust или WS-Federation (RST).  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>— Представляет маркер безопасности, основанный на утверждении SAML 1,1. Этот тип токена обычно выдается службой маркеров безопасности в ответ на запрос маркера безопасности WS-Trust или WS-Federation (RST).  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>и <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>— это маркер безопасности, основанный на билете Kerberos, полученном или отправленном в сообщении SOAP.  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>— Представляет маркер безопасности, основанный на ключе, созданном с помощью алгоритма RSA.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>— Представляет маркер безопасности, содержащий сведения о сеансе.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>— Представляет маркер безопасности, основанный на имени пользователя и пароле.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>— Представляет маркер безопасности, основанный на удостоверении домена или учетной записи пользователя Windows.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>— Представляет маркер безопасности, основанный на сертификате X. 509.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>— Представляет маркер безопасности, основанный на сертификате X. 509, сопоставленном с учетной записью пользователя домена Windows или локального компьютера.  
  
 Для управления общими сценариями можно <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> использовать <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>два других класса маркеров безопасности: и.  
  
 Широко говоря, маркеры безопасности делятся на три основные категории:  
  
-   Токены, которые содержат или ссылаются на материал криптографического ключа. Например, <xref:System.IdentityModel.Tokens.RsaSecurityToken> для этой <xref:System.IdentityModel.Tokens.X509SecurityToken> цели часто используются типы и.  
  
-   Токены, представляющие учетные данные для пользователей, которые уже прошли проверку подлинности. Например <xref:System.IdentityModel.Tokens.UserNameSecurityToken> <xref:System.IdentityModel.Tokens.X509SecurityToken> ,, и в случае, если пользователь прошел проверку подлинности с помощью сертификата, типы. <xref:System.IdentityModel.Tokens.WindowsSecurityToken>  
  
-   Токены, выданные службой маркеров безопасности (STS) в ответ на запрос маркера безопасности с помощью протокола WS-Trust или WS-Federation. Обычно они возвращаются в `wst:RequestSecurityTokenResponse` фрагменте XML. Типы <xref:System.IdentityModel.Tokens.Saml2SecurityToken> и <xref:System.IdentityModel.Tokens.SamlSecurityToken>  чаще всего используются для представления этих токенов.  
  
 Специальный тип <xref:System.IdentityModel.Tokens.SessionSecurityToken>токена, содержит сведения, необходимые для повторного создания субъекта при использовании сеансов в активных или пассивных сценариях.  
  
 Чтобы добавить функциональные возможности в существующие типы токенов, можно наследовать от конкретного типа и связанного с ним обработчика маркера для поддержки всех новых элементов, добавляемых в маркер. Чтобы добавить поддержку новых типов токенов, можно наследовать непосредственно от <xref:System.IdentityModel.Tokens.SecurityToken> класса. При этом необходимо также создать класс обработчика маркеров, производный от <xref:System.IdentityModel.Tokens.SecurityTokenHandler> класса. В зависимости от того, как будет использоваться токен, может потребоваться создать пользовательский сопоставитель токенов, производный от <xref:System.IdentityModel.Tokens.IssuerTokenResolver> класса, а также один или несколько типов предложений пользовательских идентификаторов, производных <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> от класса.  
  
   
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.Tokens.SecurityToken> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT). Он включает реализацию `SimpleWebToken` класса `SimpleWebTokenHandler` и класса, а также другие классы, поддерживающие маркеры SWT. Сведения об этом образце и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показана реализация `SimpleWebToken` класса. Этот класс расширяет <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />свойства, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />и. <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />Методы <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" /> , <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> и поддерживают <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />  идентификаторы ключей типа. Эти методы необходимо переопределить для поддержки других типов идентификаторов ключей в производном классе.</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Вызывается конструкторами в производных классах для инициализации класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
        <summary>Возвращает значение, определяющее, может ли маркер безопасности создать указанный идентификатор ключа.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="T" /> принадлежит к типу <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>, чтобы определить, может ли маркер безопасности создать определенный идентификатор ключа. Чтобы создать идентификатор ключа, вызовите метод <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 Реализация по умолчанию поддерживает предложения идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Предложение <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, задающее создаваемый идентификатор ключа.</typeparam>
        <summary>Создает предложение заданного идентификатора ключа.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, являющийся предложением идентификатора ключа для маркера безопасности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>, чтобы определить, может ли маркер безопасности создать определенный идентификатор ключа. Чтобы создать идентификатор ключа, вызовите метод <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 Реализация по умолчанию поддерживает предложения идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Если невозможно создать предложение идентификатора ключа типа <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> <xref:System.NotSupportedException> , создается исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает уникальный идентификатор маркера безопасности.</summary>
        <value>Уникальный идентификатор маркера безопасности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, если маркер безопасности сериализуется в формат XML, для атрибута `Id` маркера безопасности задается значение свойства <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>.  
  
   
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.Tokens.SecurityToken> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT). Он включает реализацию `SimpleWebToken` класса `SimpleWebTokenHandler` и класса, а также другие классы, поддерживающие маркеры SWT. Сведения об этом образце и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> свойства.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
        <param name="skiClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, сравниваемый с данным экземпляром.</param>
        <summary>Возвращает значение, указывающее, можно ли идентификатор ключа данного экземпляра разрешить в определенный идентификатор ключа.</summary>
        <returns>Значение <see langword="true" />, если <paramref name="keyIdentifierClause" /> является объектом <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> и имеет такой же уникальный идентификатор, что и свойство <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию поддерживает предложения идентификатора ключа типа<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого получается ключ.</param>
        <param name="skiClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого получается ключ.</param>
        <summary>Возвращает ключ для указанной конструкции идентификатора ключа.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, который представляет ключ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> вызывает метод <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>, чтобы определить, совпадает ли указанная конструкция идентификатора ключа с данным экземпляром.  
  
 Реализация по умолчанию <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> возвращает первый элемент коллекции, если коллекция не пуста, и если <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> возвращает `true`; в противном случае возвращается `null`значение.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если при наследовании класса <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> и реализации метода <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> не удается разрешить <paramref name="keyIdentifierClause" />, необходимо возвратить <see langword="null" />. Метод <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> не должен выдавать исключения.</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ключи шифрования, связанные с маркером безопасности.</summary>
        <value>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащая набор ключей, связанных с маркером безопасности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> Используйте свойство, чтобы задать криптографические ключи для этого маркера безопасности, чтобы защитить маркеры или сообщение SOAP. Ключи можно использовать, помимо прочего, для цифровой подписи или шифрования либо маркеров, либо сообщений SOAP.  
  
   
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.Tokens.SecurityToken> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT). Он включает реализацию `SimpleWebToken` класса `SimpleWebTokenHandler` и класса, а также другие классы, поддерживающие маркеры SWT. Сведения об этом образце и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> свойства.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает первый момент времени, когда данный маркер безопасности становиться действительным.</summary>
        <value>Значение типа <see cref="T:System.DateTime" />, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> для определения периода времени, в течение которого действителен маркер <xref:System.IdentityModel.Tokens.SecurityToken>. Свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> представляют соответственно первый и последний моменты времени, когда данный маркер безопасности является действительным.  
  
   
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.Tokens.SecurityToken> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT). Он включает реализацию `SimpleWebToken` класса `SimpleWebTokenHandler` и класса, а также другие классы, поддерживающие маркеры SWT. Сведения об этом образце и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> свойства.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает момент времени, когда данный маркер безопасности становится недействительным.</summary>
        <value>Значение <see cref="T:System.DateTime" />, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> для определения периода времени, в течение которого действителен маркер <xref:System.IdentityModel.Tokens.SecurityToken>. Свойства <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> представляют соответственно первый и последний моменты времени, когда данный маркер безопасности является действительным.  
  
   
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.Tokens.SecurityToken> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT). Он включает реализацию `SimpleWebToken` класса `SimpleWebTokenHandler` и класса, а также другие классы, поддерживающие маркеры SWT. Сведения об этом образце и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показано переопределение <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> свойства.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Необходимо переопределить <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> свойство.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
