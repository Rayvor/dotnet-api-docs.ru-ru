<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db6ee2647211996474244058d82b42c4ff2a279b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70467850" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenHandler = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="37019-101">Абстрактный базовый класс для обработчиков токенов безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-101">The abstract base class for security token handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-102"><xref:System.IdentityModel.Tokens.SecurityTokenHandler> Класс является базовым классом, из которого наследуются все обработчики маркеров безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="37019-103">Обработчик маркеров безопасности отвечает за следующее:</span><span class="sxs-lookup"><span data-stu-id="37019-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="37019-104">Проверка маркеров безопасности (<xref:System.IdentityModel.Tokens.SecurityToken>) типа, который предназначен для обработки и упаковки утверждений, содержащихся в маркере, <xref:System.Security.Claims.ClaimsIdentity> в объект.</span><span class="sxs-lookup"><span data-stu-id="37019-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="37019-105">Сериализация и десериализация маркеров безопасности типа, предназначенного для обработки.</span><span class="sxs-lookup"><span data-stu-id="37019-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="37019-106">Сериализация и десериализация предложений идентификатора ключа (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>), которые ссылаются на токены типа, предназначенного для обработки в элементах и из `<wsse:SecurityTokenReference>` них.</span><span class="sxs-lookup"><span data-stu-id="37019-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="37019-107">Создание маркеров безопасности из <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> объекта, переданного реализациями <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="37019-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="37019-108">Создание предложений идентификатора ключа из маркера безопасности для реализации <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="37019-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="37019-109">Windows Identity Foundation (WIF) поставляется со следующими обработчиками маркеров безопасности:</span><span class="sxs-lookup"><span data-stu-id="37019-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="37019-110">Большинство из этих классов предоставляют дополнительные члены, которые реализуют функциональные возможности, характерные для обработки маркеров, для которых предназначен класс.</span><span class="sxs-lookup"><span data-stu-id="37019-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="37019-111">Во многих случаях может быть лучше наследовать от одного из этих классов, а не непосредственно от <xref:System.IdentityModel.Tokens.SecurityTokenHandler> класса.</span><span class="sxs-lookup"><span data-stu-id="37019-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="37019-112">Обработчик маркеров безопасности можно добавить или удалить из коллекции обработчиков маркеров, указав [ &lt;Add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;Remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)или [ &lt;Clear&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) . элементы в элементе [&gt; securityTokenHandlers в файле конфигурации. &lt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</span><span class="sxs-lookup"><span data-stu-id="37019-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="37019-113">Доступ к <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> объекту, содержащему параметры конфигурации для коллекции обработчиков, можно получить с помощью свойства и коллекции обработчиков, членом которой является обработчик маркеров, к которому можно получить доступ из свойства. <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration></span><span class="sxs-lookup"><span data-stu-id="37019-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="37019-114">Можно переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> метод для обработки любых пользовательских элементов конфигурации, принимаемых обработчиком.</span><span class="sxs-lookup"><span data-stu-id="37019-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="37019-115"><xref:System.IdentityModel.Tokens.SecurityTokenHandler> Класс предоставляет несколько других свойств и методов.</span><span class="sxs-lookup"><span data-stu-id="37019-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="37019-116">В зависимости от функциональности, которую вы выбираете для реализации, можно переопределить некоторые или все эти члены.</span><span class="sxs-lookup"><span data-stu-id="37019-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="37019-117">Необходимо переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> свойство <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> и метод, чтобы предоставить инфраструктуре WIF сведения о типе маркера безопасности, для обработки которого предназначен класс.</span><span class="sxs-lookup"><span data-stu-id="37019-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="37019-118">Функции проверки, сериализации и десериализации предоставляются через свойства или методы, которые указывают, может ли обработчик выполнять определенную функцию в сочетании с методом или методами, реализующими эту функциональность.</span><span class="sxs-lookup"><span data-stu-id="37019-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="37019-119">В следующем списке применяются пары свойств или методов, которые указывают функциональность с помощью методов, реализующих эту функцию:</span><span class="sxs-lookup"><span data-stu-id="37019-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="37019-120">Свойство и метод: проверяет маркер и упаковывает утверждения, содержащиеся в маркере, <xref:System.Security.Claims.ClaimsIdentity>в. <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A></span><span class="sxs-lookup"><span data-stu-id="37019-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="37019-121"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Свойство <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A>  и методы: Сериализация маркера.</span><span class="sxs-lookup"><span data-stu-id="37019-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="37019-122"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> Методы <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A>  и методы: десериализация маркера.</span><span class="sxs-lookup"><span data-stu-id="37019-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="37019-123"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> Метод <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A>  и метод: десериализация предложений идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="37019-124"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> Метод <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A>  и метод: сериализация предложений идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="37019-125">Методы и вызываются из конвейера <xref:System.IdentityModel.SecurityTokenService> в реализациях класса. <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A></span><span class="sxs-lookup"><span data-stu-id="37019-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="37019-126"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> Метод вызывается инфраструктурой WIF для определения того, был ли уже получен указанный токен.</span><span class="sxs-lookup"><span data-stu-id="37019-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="37019-127">По умолчанию этот метод `false`возвращает значение, которое указывает на то, что токен еще не был получен.</span><span class="sxs-lookup"><span data-stu-id="37019-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="37019-128">Можно переопределить метод и предоставить логику для обнаружения воспроизводимых токенов.</span><span class="sxs-lookup"><span data-stu-id="37019-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-129">Примеры кода во всех <xref:System.IdentityModel.Tokens.SecurityTokenHandler> разделах взяты `Custom Token` из примера.</span><span class="sxs-lookup"><span data-stu-id="37019-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-130">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-131">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="37019-132">В следующем коде XML показано, как добавить обработчик токенов SWT в коллекцию обработчиков маркеров.</span><span class="sxs-lookup"><span data-stu-id="37019-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37019-133">Вызывается из конструкторов в производных классах для инициализации класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />.</span><span class="sxs-lookup"><span data-stu-id="37019-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="37019-134">Средство чтения XML, размещаемое на начальном элементе.</span><span class="sxs-lookup"><span data-stu-id="37019-134">An XML reader positioned at the start element.</span></span> <span data-ttu-id="37019-135">Средство чтения не должно предваряться этим методом.</span><span class="sxs-lookup"><span data-stu-id="37019-135">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="37019-136">Возвращает значение, указывающее, является ли элемент xml, на которое ссылается указанное средство чтения XML, предложением идентификатора ключа, которое может десериализоваться этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span></span></summary>
        <returns><span data-ttu-id="37019-137">Значение <see langword="true" />, если метод <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> может считывать элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-137"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="37019-138">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-138">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-139">Реализация по умолчанию `false` возвращает значение, указывающее, что невозможно прочитать предложение идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="37019-140">Производный класс проверяет элемент, на который ссылается средство чтения, чтобы определить, может ли экземпляр выполнить десериализацию предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="37019-141">Обычно это выполняется с помощью вызова <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> метода с указанными строками элемента и пространства имен.</span><span class="sxs-lookup"><span data-stu-id="37019-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="37019-142">При переопределении <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>необходимо также <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> переопределить метод, чтобы предоставить логику для десериализации предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37019-143">Возвращает значение, показывающее, может ли указанный токен десериализоваться как токен типа, обработанного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : string -&gt; bool&#xA;override this.CanReadToken : string -&gt; bool" Usage="securityTokenHandler.CanReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="37019-144">Строка токена для чтения</span><span class="sxs-lookup"><span data-stu-id="37019-144">The token string to read.</span></span></param>
        <summary><span data-ttu-id="37019-145">Возвращает значение, показывающее, может ли указанная строка десериализоваться как токен типа, обработанного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span></span></summary>
        <returns><span data-ttu-id="37019-146">Значение <see langword="true" />, если метод <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> может считывать элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-146"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="37019-147">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-147">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-148">Реализация по умолчанию всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="37019-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="37019-149">При переопределении этого метода необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> метод, чтобы предоставить логику для десериализации маркера.</span><span class="sxs-lookup"><span data-stu-id="37019-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="37019-150">Средство чтения XML, размещаемое на начальном элементе.</span><span class="sxs-lookup"><span data-stu-id="37019-150">An XML reader positioned at a start element.</span></span> <span data-ttu-id="37019-151">Средство чтения не должно предваряться этим методом.</span><span class="sxs-lookup"><span data-stu-id="37019-151">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="37019-152">Возвращает значение, указывающее, является ли элемент xml, на которое ссылается указанное средство чтения XML, считываемым, как токен типа, обрабатываемого этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span></span></summary>
        <returns><span data-ttu-id="37019-153">Значение <see langword="true" />, если метод <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> может считывать элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-153"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="37019-154">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-154">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-155">Реализация по умолчанию всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="37019-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="37019-156">Производный класс проверяет элемент, на который ссылается средство чтения, чтобы определить, может ли экземпляр выполнить десериализацию маркера безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="37019-157">Обычно это выполняется с помощью вызова <xref:System.Xml.XmlReader.IsStartElement%2A> метода с указанными строками элемента и пространства имен.</span><span class="sxs-lookup"><span data-stu-id="37019-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="37019-158">При переопределении <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>необходимо также <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> переопределить метод или <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> метод, чтобы предоставить логику для десериализации предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-159">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> метод, чтобы определить, может ли маркер быть прочитан обработчиком.</span><span class="sxs-lookup"><span data-stu-id="37019-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="37019-160">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-161">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-162">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37019-163">Получает значение, указывающее, может ли этот обработчик поддерживать проверку токенов безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-163">Gets a value that indicates whether the handler supports validation of security tokens.</span></span></summary>
        <value><span data-ttu-id="37019-164">Значение <see langword="true" />, если класс может проверять токены безопасности; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-164"><see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="37019-165">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-166">Чтобы реализовать проверку в производном классе, Переопределите это свойство, `true` чтобы оно возвращало и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> переопределяет метод для реализации логики проверки.</span><span class="sxs-lookup"><span data-stu-id="37019-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-167">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> свойство, чтобы указать, что пользовательский обработчик может проверить маркеры.</span><span class="sxs-lookup"><span data-stu-id="37019-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="37019-168">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-169">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-170">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="37019-171">Предложение идентификатора ключа для проверки.</span><span class="sxs-lookup"><span data-stu-id="37019-171">The key identifier clause to be checked.</span></span></param>
        <summary><span data-ttu-id="37019-172">Возвращает значение, показывающее, может ли указанная конструкция идентификатора ключа быть сериализована этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span></span></summary>
        <returns><span data-ttu-id="37019-173">Значение <see langword="true" />, если можно сериализовать конструкцию идентификатора ключа; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-173"><see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="37019-174">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-174">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-175">Реализация по умолчанию всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="37019-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="37019-176">При переопределении <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>необходимо также <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> переопределить метод, чтобы предоставить логику для сериализации предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37019-177">Получает значение, указывающее, может ли этот обработчик сериализовать токены безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-177">Gets a value that indicates whether the handler can serialize security tokens.</span></span></summary>
        <value><span data-ttu-id="37019-178"><see langword="true" />, если класс может выполнять сериализацию токенов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-178"><see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span></span> <span data-ttu-id="37019-179">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37019-179">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-180">Чтобы реализовать сериализацию в производном классе, Переопределите это свойство, `true` чтобы оно возвращало и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> переопределяет методы для реализации логики сериализации.</span><span class="sxs-lookup"><span data-stu-id="37019-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-181">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> свойство, чтобы указать, что пользовательский обработчик может сериализовать маркеры.</span><span class="sxs-lookup"><span data-stu-id="37019-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="37019-182">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-183">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-184">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Configuration : System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration with get, set" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37019-185">Получает или задает объект <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />, который предоставляет конфигурацию для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="37019-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span></span></summary>
        <value><span data-ttu-id="37019-186">Объект конфигурации для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="37019-186">The configuration object for the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-187">Свойство обычно задается инфраструктурой конфигурации [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) из элемента секурититокенхандлерконфигуратион в файле конфигурации во время запуска приложения. <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A></span><span class="sxs-lookup"><span data-stu-id="37019-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="37019-188">В производных классах для доступа <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> к параметрам конфигурации используется свойство. Например, к реестру имен издателя, используемому <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> в методе, <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> можно обращаться из свойства объекта конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainingCollection : System.IdentityModel.Tokens.SecurityTokenHandlerCollection" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37019-189">Получает коллекцию обработчиков токена, содержащую текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="37019-189">Gets the token handler collection that contains the current instance.</span></span></summary>
        <value><span data-ttu-id="37019-190">коллекция обработчиков токена, содержащая текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="37019-190">The token handler collection that contains the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-191">При добавлении обработчика маркеров к <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> экземпляру это свойство устанавливается автоматически.</span><span class="sxs-lookup"><span data-stu-id="37019-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.CreateSecurityTokenReference (token, attached)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="37019-192">Токен, для которого требуется создать ссылку.</span><span class="sxs-lookup"><span data-stu-id="37019-192">The token for which the reference is to be created.</span></span></param>
        <param name="attached"><span data-ttu-id="37019-193">Значение <see langword="true" />, если должна быть создана присоединенная ссылка; значение <see langword="false" />, если должна быть создана неприсоединенная ссылка.</span><span class="sxs-lookup"><span data-stu-id="37019-193"><see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span></span></param>
        <summary><span data-ttu-id="37019-194">При переопределении в производном классе создает ссылку токена безопасности для токенов, обрабатываемых этим классом.</span><span class="sxs-lookup"><span data-stu-id="37019-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span></span> <span data-ttu-id="37019-195">Этот метод обычно вызывается службой токенов безопасности (STS).</span><span class="sxs-lookup"><span data-stu-id="37019-195">This method is typically called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="37019-196">Предложение идентификатора ключа, ссылающееся на указанный токен.</span><span class="sxs-lookup"><span data-stu-id="37019-196">A key identifier clause that references the specified token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-197">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-198">Производные классы переопределяют этот метод, чтобы вернуть предложение идентификатора<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>ключа (), которое можно использовать для `<wsse:SecurityTokenReference>` создания элемента для указанного токена.</span><span class="sxs-lookup"><span data-stu-id="37019-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="37019-199">Вызывается из реализаций <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="37019-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="37019-200">Как правило, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> не требуется использовать, кроме случаев, когда создается пользовательская служба маркеров безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="37019-201">Когда служба маркеров безопасности возвращает маркер безопасности, выданный маркер безопасности содержит ссылки на прикрепленные и неприкрепленные маркеры безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="37019-202">Прикрепленные ссылки указывают на маркеры безопасности, содержащиеся в заголовке безопасности сообщения SOAP, а неприкрепленные ссылки указывают на маркеры безопасности, не входящие в заголовок безопасности сообщения SOAP.</span><span class="sxs-lookup"><span data-stu-id="37019-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="37019-203">Обычно эти ссылки подтверждают подлинность выданного маркера безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-204">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> метод, чтобы создать предложение идентификатора ключа из указанного токена.</span><span class="sxs-lookup"><span data-stu-id="37019-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="37019-205">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-206">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-207">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="37019-208">Дескриптор токена безопасности, на основании которого создается токен.</span><span class="sxs-lookup"><span data-stu-id="37019-208">The security token descriptor from which the token is to be created.</span></span> <span data-ttu-id="37019-209">Свойства дескриптора токена задаются до вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="37019-209">Properties of the token descriptor are set before this method is called.</span></span></param>
        <summary><span data-ttu-id="37019-210">При переопределении в производном классе создает токен безопасности с помощью заданного дескриптора токена.</span><span class="sxs-lookup"><span data-stu-id="37019-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span></span> <span data-ttu-id="37019-211">Этот метод вызывается службой токенов безопасности (STS).</span><span class="sxs-lookup"><span data-stu-id="37019-211">This method is called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="37019-212">токен безопасности, соответствующий свойствам дескриптора токена.</span><span class="sxs-lookup"><span data-stu-id="37019-212">A security token that matches the properties of the token descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-213">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-214">Вызывается из реализаций <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="37019-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-215">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> метод для создания и возврата маркера из дескриптора маркера.</span><span class="sxs-lookup"><span data-stu-id="37019-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="37019-216">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-217">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-218">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.DetectReplayedToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="37019-219">Токен для проверки воспроизведения.</span><span class="sxs-lookup"><span data-stu-id="37019-219">The token to check for replay.</span></span></param>
        <summary><span data-ttu-id="37019-220">При переопределении в производном классе вызывает исключение, если обнаруживается, что указанный токен используется повторно.</span><span class="sxs-lookup"><span data-stu-id="37019-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-221">Реализация по умолчанию не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="37019-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="37019-222">Производные классы должны вызывать <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> исключение, если токен уже используется.</span><span class="sxs-lookup"><span data-stu-id="37019-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="37019-223">Windows Identity Foundation (WIF) предоставляет <xref:System.IdentityModel.Tokens.TokenReplayCache> класс, из которого могут быть получены кэши воспроизведения, [ &lt;и элемент конфигурации tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) , который можно использовать для настройки кэша воспроизведения, используемого токеном. обработчики в приложении; Однако точная реализация <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> метода является конструктором производного класса.</span><span class="sxs-lookup"><span data-stu-id="37019-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="securityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37019-224">При переопределении в производном классе возвращает набор универсальных кодов ресурса (URI), которые используются в запросах для идентификации токена обрабатываемого этим классом типа.</span><span class="sxs-lookup"><span data-stu-id="37019-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="37019-225">Набор универсальных кодов ресурсов (URI), определяющих тип токенов, поддерживаемый этим обработчиком.</span><span class="sxs-lookup"><span data-stu-id="37019-225">The set of URIs that identify the token type that this handler supports.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-226">Доступ к маркеру, обрабатываемому текущим экземпляром, осуществляется <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> через свойство. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="37019-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="37019-227"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> Метод возвращает набор допустимых идентификаторов, которые можно использовать в сообщениях для ссылки на тип токена.</span><span class="sxs-lookup"><span data-stu-id="37019-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="37019-228">Например, значение URI, используемое в `<wst:TokenType>` элементе `<wst:RequestSecurityToken>` в элементе для запроса определенного вида <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> маркера (представленного свойством в объектной модели).</span><span class="sxs-lookup"><span data-stu-id="37019-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-229">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> метод для возврата идентификаторов типа маркера для пользовательского токена.</span><span class="sxs-lookup"><span data-stu-id="37019-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="37019-230">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-231">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-232">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenHandler.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="37019-233">XML-элемент конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-233">The configuration XML elements.</span></span> <span data-ttu-id="37019-234">Каждый узел в списке имеет тип <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="37019-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="37019-235">При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</span><span class="sxs-lookup"><span data-stu-id="37019-235">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-236"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> Метод вызывается инфраструктурой конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="37019-237">При вызове этого метода объект `nodelist` будет содержать дочерние элементы верхнего уровня элемента [ &lt;Add&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) обработчика маркеров из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler's [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="37019-238">Каждая из них, в свою очередь, может содержать атрибуты или дочерние элементы в зависимости от схемы конфигурации, определяемой для производного класса.</span><span class="sxs-lookup"><span data-stu-id="37019-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="37019-239">Реализация по умолчанию создает <xref:System.NotImplementedException>исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="37019-240">Переопределите этот метод в производном классе, чтобы включить инициализацию обработчика маркеров безопасности из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="37019-241">Средство чтения XML, расположенный в начальном элементе XML, который десериализуется в предложение идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="37019-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="37019-242">При переопределении в производном классе десериализует XML-код, на который имеется ссылка в указанном модуле чтения XML, в конструкцию идентификатора ключа, который ссылается на токен, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="37019-243">Предложение идентификатора ключа, десериализованное из XML.</span><span class="sxs-lookup"><span data-stu-id="37019-243">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-244">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-245">Переопределите этот метод, чтобы предоставить логику для десериализации предложения идентификатора ключа из XML.</span><span class="sxs-lookup"><span data-stu-id="37019-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="37019-246">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="37019-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37019-247">При переопределении в производном классе десериализует заданный XML-код в токен обрабатываемого этим производным классом типа.</span><span class="sxs-lookup"><span data-stu-id="37019-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="37019-248">Строка, подлежащая десериализации.</span><span class="sxs-lookup"><span data-stu-id="37019-248">The string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="37019-249">При переопределении в производном классе десериализует заданную строку в токен обрабатываемого этим производным классом типа.</span><span class="sxs-lookup"><span data-stu-id="37019-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="37019-250">Токен безопасности, который был десериализован из указанной строки.</span><span class="sxs-lookup"><span data-stu-id="37019-250">The security token that was deserialized from the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="37019-251">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-251">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-252">Переопределите этот метод, чтобы обеспечить возможность десериализации токена безопасности из строки.</span><span class="sxs-lookup"><span data-stu-id="37019-252">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="37019-253">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="37019-253">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="37019-254">Средство чтения XML, размещаемое на начальном элементе токена.</span><span class="sxs-lookup"><span data-stu-id="37019-254">An XML reader positioned at the start element of the token.</span></span></param>
        <summary><span data-ttu-id="37019-255">При переопределении в производном классе десериализует десериализует XML-код, на который имеется ссылка в указанном модуле чтения XML, в токен обрабатываемого этим производным классом типа.</span><span class="sxs-lookup"><span data-stu-id="37019-255">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="37019-256">Токен безопасности, который был десериализован из XML.</span><span class="sxs-lookup"><span data-stu-id="37019-256">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="37019-257">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-257">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-258">Переопределите этот метод, чтобы предоставить логику для десериализации маркера безопасности из XML.</span><span class="sxs-lookup"><span data-stu-id="37019-258">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="37019-259">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="37019-259">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="37019-260">Как правило, в производных классах, если метод не может десериализовать токен из упоминаемого XML- <xref:System.Xml.XmlException>документа, он создает исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-260">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-261">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> метод для чтения пользовательского токена из указанного модуля чтения XML.</span><span class="sxs-lookup"><span data-stu-id="37019-261">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="37019-262">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-262">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-263">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-263">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-264">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-264">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="37019-265">Средство чтения XML, размещаемое на начальном элементе токена.</span><span class="sxs-lookup"><span data-stu-id="37019-265">An XML reader positioned at the start element of the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="37019-266">сопоставитель токена, содержащий внештатные и кэшированных токены.</span><span class="sxs-lookup"><span data-stu-id="37019-266">A token resolver that contains out-of-band and cached tokens.</span></span></param>
        <summary><span data-ttu-id="37019-267">При переопределении в производном классе десериализует XML-код, на который имеется ссылка в указанном модуле чтения XML, в токен, обрабатываемый производным классом, путем использования заданного сопоставителя токенов.</span><span class="sxs-lookup"><span data-stu-id="37019-267">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="37019-268">Токен безопасности, который был десериализован из XML.</span><span class="sxs-lookup"><span data-stu-id="37019-268">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="37019-269">Реализация по умолчанию игнорирует `tokenResolver` параметр и делегирует вызов <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> методу.</span><span class="sxs-lookup"><span data-stu-id="37019-269">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="37019-270">Переопределите этот метод, чтобы предоставить логику для десериализации маркера безопасности из XML.</span><span class="sxs-lookup"><span data-stu-id="37019-270">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="37019-271">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="37019-271">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="37019-272">Как правило, в производных классах, если метод не может десериализовать токен из упоминаемого XML- <xref:System.Xml.XmlException>документа, он создает исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-272">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37019-273">При переопределении в производном классе получает тип токена безопасности, обрабатываемого этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-273">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span></span></summary>
        <value><span data-ttu-id="37019-274">Тип токена безопасности, обрабатываемого этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="37019-274">The type of the security token that is processed by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-275">Это свойство необходимо переопределить в производных классах и вернуть <xref:System.Type> маркер безопасности (<xref:System.IdentityModel.Tokens.SecurityToken>), который обрабатывается производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-275">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-276">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> свойство, чтобы оно <xref:System.Type> возвращало маркеры безопасности, обрабатываемые пользовательским обработчиком.</span><span class="sxs-lookup"><span data-stu-id="37019-276">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="37019-277">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-277">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-278">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-278">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-279">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-279">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationFailure : System.IdentityModel.Tokens.SecurityToken * string -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationFailure (token, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="37019-280">Токен безопасности, который проверяется.</span><span class="sxs-lookup"><span data-stu-id="37019-280">The security token that is being validated.</span></span></param>
        <param name="errorMessage"><span data-ttu-id="37019-281">Сообщение для записи в трассировку.</span><span class="sxs-lookup"><span data-stu-id="37019-281">The message to write to the trace.</span></span></param>
        <summary><span data-ttu-id="37019-282">Трассирует событие сбоя во время проверки токенов безопасности, если трассировка включена.</span><span class="sxs-lookup"><span data-stu-id="37019-282">Traces the failure event during the validation of security tokens when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-283">Этот метод следует вызывать из <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода при сбое проверки маркера.</span><span class="sxs-lookup"><span data-stu-id="37019-283">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationSuccess : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationSuccess token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="37019-284">Проверенный токен.</span><span class="sxs-lookup"><span data-stu-id="37019-284">The token that was validated.</span></span></param>
        <summary><span data-ttu-id="37019-285">Трассирует успешную проверку событий токен безопасности, если трассировка включена.</span><span class="sxs-lookup"><span data-stu-id="37019-285">Traces the successful validation of security tokens event when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-286">Этот метод следует вызывать из <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода после успешной проверки маркера.</span><span class="sxs-lookup"><span data-stu-id="37019-286">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;&#xA;override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="securityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="37019-287">Токен для проверки.</span><span class="sxs-lookup"><span data-stu-id="37019-287">The token to validate.</span></span></param>
        <summary><span data-ttu-id="37019-288">При переопределении в производном классе проверяет указанный токен безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-288">When overridden in a derived class, validates the specified security token.</span></span> <span data-ttu-id="37019-289">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-289">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="37019-290">Идентификаторы, содержащееся в токене.</span><span class="sxs-lookup"><span data-stu-id="37019-290">The identities contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-291">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-291">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-292"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Метод вызывается инфраструктурой для проверки и извлечения утверждений из десериализованного маркера безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-292">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="37019-293">Эти утверждения возвращаются в коллекции <xref:System.Security.Claims.ClaimsIdentity> объектов, возвращаемых методом.</span><span class="sxs-lookup"><span data-stu-id="37019-293">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="37019-294">В типичном случае эта коллекция будет содержать одно удостоверение.</span><span class="sxs-lookup"><span data-stu-id="37019-294">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="37019-295">В производных классах проверка обычно включает проверку предполагаемой аудитории, указанной в маркере, для URI аудитории, <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> указанных в свойстве объекта конфигурации обработчика токенов <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> , указанного в свойстве.</span><span class="sxs-lookup"><span data-stu-id="37019-295">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="37019-296">Эти URI обычно задаются в файле [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) конфигурации в элементе audienceUris.</span><span class="sxs-lookup"><span data-stu-id="37019-296">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="37019-297">Если аудиторию не удается проверить, <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> должно быть выдано исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-297">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="37019-298">При обработке маркера издатель обычно проверяется путем передачи маркера издателя в один из <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> методов <xref:System.IdentityModel.Tokens.IssuerNameRegistry> объекта, настроенного <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> для обработчика через свойство.</span><span class="sxs-lookup"><span data-stu-id="37019-298">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="37019-299">Реестр имен издателей обычно настраивается с [ &lt;помощью&gt; элемента IssuerNameRegistry](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-299">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="37019-300"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> Возвращает имя издателя.</span><span class="sxs-lookup"><span data-stu-id="37019-300">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="37019-301">Это имя должно использоваться для задания <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> свойства в утверждениях, содержащихся в токене.</span><span class="sxs-lookup"><span data-stu-id="37019-301">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="37019-302">Если в реестре имен издателя не содержится запись для маркера издателя, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> возвращается значение. `null`</span><span class="sxs-lookup"><span data-stu-id="37019-302">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="37019-303">В этом случае a <xref:System.IdentityModel.Tokens.SecurityTokenException> обычно вызывается в производных классах, но это поведение наблюдается в конструкторе класса.</span><span class="sxs-lookup"><span data-stu-id="37019-303">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-304">В следующем коде показано переопределение <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода для обработчика маркеров безопасности, обрабатывающего простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-304">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="37019-305">Код берется из `CustomToken` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-305">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="37019-306">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-306">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="37019-307">В следующем коде показан `CreateClaims` метод, который вызывается из переопределения <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="37019-307">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="37019-308">Этот метод возвращает <xref:System.Security.Claims.ClaimsIdentity> объект, созданный на основе утверждений в токене.</span><span class="sxs-lookup"><span data-stu-id="37019-308">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="37019-309">Код берется из `CustomToken` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-309">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="37019-310">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-310">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="37019-311">В следующем коде показан `ValidateSignature` метод, который вызывается из переопределения <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода в простом обработчике веб-токена.</span><span class="sxs-lookup"><span data-stu-id="37019-311">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="37019-312">Этот метод проверяет сигнатуру токена с помощью настроенного <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="37019-312">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="37019-313">Код берется из `CustomToken` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-313">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="37019-314">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-314">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="37019-315">В следующем коде показан `ValidateAudience` метод, который вызывается из переопределения <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода в простом обработчике веб-токена.</span><span class="sxs-lookup"><span data-stu-id="37019-315">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="37019-316">Этот метод проверяет аудиторию, содержащуюся в маркере, по URI аудитории, указанным в конфигурации.</span><span class="sxs-lookup"><span data-stu-id="37019-316">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="37019-317">Код берется из `CustomToken` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-317">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="37019-318">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-318">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit&#xA;override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="37019-319">Модуль записи XML.</span><span class="sxs-lookup"><span data-stu-id="37019-319">The XML writer.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="37019-320">Конструкция идентификатора ключа для сериализации.</span><span class="sxs-lookup"><span data-stu-id="37019-320">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="37019-321">При переопределении в производном классе сериализует указанную конструкцию идентификатора ключа в формат XML.</span><span class="sxs-lookup"><span data-stu-id="37019-321">When overridden in a derived class, serializes the specified key identifier clause to XML.</span></span> <span data-ttu-id="37019-322">Предложения идентификатора ключа должно иметь тип, поддерживаемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-322">The key identifier clause must be of the type supported by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-323">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-323">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-324">Переопределите этот метод, чтобы предоставить логику для сериализации предложения идентификатора ключа в XML.</span><span class="sxs-lookup"><span data-stu-id="37019-324">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="37019-325">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="37019-325">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37019-326">При переопределении в производном классе сериализует указанный токен безопасности.</span><span class="sxs-lookup"><span data-stu-id="37019-326">When overridden in a derived class, serializes the specified security token.</span></span> <span data-ttu-id="37019-327">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-327">The token must be of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string&#xA;override this.WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="securityTokenHandler.WriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="37019-328">Токен для сериализации.</span><span class="sxs-lookup"><span data-stu-id="37019-328">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="37019-329">При переопределении в производном классе сериализует указанный токен безопасности в строку.</span><span class="sxs-lookup"><span data-stu-id="37019-329">When overridden in a derived class, serializes the specified security token to a string.</span></span> <span data-ttu-id="37019-330">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-330">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="37019-331">Сериализованный токен.</span><span class="sxs-lookup"><span data-stu-id="37019-331">The serialized token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-332">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-333">Переопределите этот метод, чтобы предоставить логику сериализации маркера безопасности в XML.</span><span class="sxs-lookup"><span data-stu-id="37019-333">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="37019-334">При переопределении этого метода необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="37019-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="37019-335">Модуль записи XML.</span><span class="sxs-lookup"><span data-stu-id="37019-335">The XML writer.</span></span></param>
        <param name="token"><span data-ttu-id="37019-336">Токен для сериализации.</span><span class="sxs-lookup"><span data-stu-id="37019-336">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="37019-337">При переопределении в производном классе сериализует указанный токен безопасности в формат XML.</span><span class="sxs-lookup"><span data-stu-id="37019-337">When overridden in a derived class, serializes the specified security token to XML.</span></span> <span data-ttu-id="37019-338">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="37019-338">The token must be of the type processed by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37019-339">По умолчанию этот метод создает <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="37019-339">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="37019-340">Переопределите этот метод, чтобы предоставить логику сериализации маркера безопасности в XML.</span><span class="sxs-lookup"><span data-stu-id="37019-340">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="37019-341">При переопределении этого метода необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="37019-341">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37019-342">В следующем коде показано, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> метод для сериализации пользовательского токена.</span><span class="sxs-lookup"><span data-stu-id="37019-342">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="37019-343">Код берется из `Custom Token` примера.</span><span class="sxs-lookup"><span data-stu-id="37019-343">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="37019-344">Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT).</span><span class="sxs-lookup"><span data-stu-id="37019-344">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="37019-345">Сведения об этом образце и других примерах, доступных для WIF, и о том, где их можно скачать, см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="37019-345">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
