<Type Name="SecurityKeyType" FullName="System.IdentityModel.Tokens.SecurityKeyType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42f6abecd202595ca3654b6dff53562f7ebfeafd" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64014200" /></Metadata><TypeSignature Language="C#" Value="public enum SecurityKeyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityKeyType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityKeyType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityKeyType" />
  <TypeSignature Language="F#" Value="type SecurityKeyType = " />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="e1a9a-101">Задает тип ключа, связанного с маркером безопасности.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-101">Specifies the type of key that is associated with a security token.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1a9a-102">Перечисление <xref:System.IdentityModel.Tokens.SecurityKeyType>, используется для задания свойства <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-102">Use the <xref:System.IdentityModel.Tokens.SecurityKeyType> enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.</span></span>  
  
 <span data-ttu-id="e1a9a-103">Поле BearerKey используется с <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-103">The BearerKey field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property.</span></span>  
  
### <a name="bearerkey-requires-wsuid-or-transport-security-with-message-credentials"></a><span data-ttu-id="e1a9a-104">Поле BearerKey требует атрибут Wsu:Id или режим безопасности транспорта с учетными данными сообщения</span><span class="sxs-lookup"><span data-stu-id="e1a9a-104">BearerKey Requires Wsu:Id or Transport Security with Message Credentials</span></span>  
 <span data-ttu-id="e1a9a-105">В федеративных сценариях выданный маркер обычно настраивается в качестве подтверждающего поддерживающего маркера для обеспечения безопасности сообщений между клиентом и проверяющими сторонами.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-105">In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties.</span></span> <span data-ttu-id="e1a9a-106">Тем не менее, когда служба маркеров безопасности (STS) выдает маркер без ключа (BearerKey), WCF настраивает его в качестве <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> вспомогательного маркера (не может не утверждает WCF без ключа).</span><span class="sxs-lookup"><span data-stu-id="e1a9a-106">However, when a Security Token Service (STS) issues a token with no key (BearerKey), WCF configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> supporting token (WCF cannot endorse without a key).</span></span> <span data-ttu-id="e1a9a-107">Требуется, чтобы на выданный маркер была ссылка в сигнатуре.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-107">This requires the issued token to be referenced in the signature.</span></span> <span data-ttu-id="e1a9a-108">WCF в настоящее время использует следующие: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id качестве механизма ссылок (wsu: ID).</span><span class="sxs-lookup"><span data-stu-id="e1a9a-108">WCF currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id).</span></span>  
  
 <span data-ttu-id="e1a9a-109">Если выданный маркер не имеет такого атрибута, на стороне клиента создается исключение <xref:System.ServiceModel.Security.MessageSecurityException>, содержащее текст "Подписываемый элемент должен иметь идентификатор".</span><span class="sxs-lookup"><span data-stu-id="e1a9a-109">If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text "Element to sign must have id".</span></span> <span data-ttu-id="e1a9a-110">Такая ситуация возникает, когда в качестве выданного маркера используется маркер SAML 1.1 (атрибут Wsu:Id не определен в спецификации SAML 1.1).</span><span class="sxs-lookup"><span data-stu-id="e1a9a-110">This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).</span></span>  
  
 <span data-ttu-id="e1a9a-111">Чтобы обойти эту проблему, либо использовать безопасность транспорта с учетными данными сообщения (например, <xref:System.ServiceModel.Configuration.AuthenticationMode>) или STS необходимо добавить http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (wsu: ID) для выданного маркера.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-111">To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode>) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token.</span></span>  
  
 <span data-ttu-id="e1a9a-112">Обратите внимание, что в случае добавления атрибута Wsu:Id в маркер SAML 1.1, получаемый код XML не соответствует спецификации SAML 1.1.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-112">Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification.</span></span> <span data-ttu-id="e1a9a-113">Другой способ: добавить атрибут Wsu:Id в элемент `EncryptedData`, который получается в результате шифрования выданного маркера.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-113">The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token.</span></span> <span data-ttu-id="e1a9a-114">Эта процедура соответствует спецификации SAML 1.1, поскольку элемент `EncryptedData` поддерживает атрибут Wsu:Id.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-114">This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute.</span></span>  
  
 <span data-ttu-id="e1a9a-115">Поэтому чтобы обеспечить соответствие спецификации, маркер, не являющийся подтверждающим, должен быть зашифрован службой STS.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-115">So to be compliant with the specification, the bearer token must be encrypted by the STS.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsymmetricKey">
      <MemberSignature Language="C#" Value="AsymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType AsymmetricKey = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="AsymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="AsymmetricKey" />
      <MemberSignature Language="F#" Value="AsymmetricKey = 1" Usage="System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1a9a-116">Указывает, что ключ является асимметричным.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-116">Specifies that the key is an asymmetric key.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKey">
      <MemberSignature Language="C#" Value="BearerKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType BearerKey = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberSignature Language="VB.NET" Value="BearerKey" />
      <MemberSignature Language="C++ CLI" Value="BearerKey" />
      <MemberSignature Language="F#" Value="BearerKey = 2" Usage="System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1a9a-117">Указывает, что маркер безопасности не содержит ключ доказательства владения.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-117">Specifies that the security token does not contain a proof-of-possession key.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKey">
      <MemberSignature Language="C#" Value="SymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType SymmetricKey = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberSignature Language="VB.NET" Value="SymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKey" />
      <MemberSignature Language="F#" Value="SymmetricKey = 0" Usage="System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1a9a-118">Указывает, что ключ является симметричным.</span><span class="sxs-lookup"><span data-stu-id="e1a9a-118">Specifies that the key is a symmetric key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>