<Type Name="IWindowProvider" FullName="System.Windows.Automation.Provider.IWindowProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6b93eff44e26ff3dc4bf761ae2182ed8e0cd795" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65012316" /></Metadata><TypeSignature Language="C#" Value="public interface IWindowProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWindowProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IWindowProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWindowProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWindowProvider" />
  <TypeSignature Language="F#" Value="type IWindowProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет методы и свойства для поддержки клиентского доступа с автоматизацией пользовательского интерфейса к элементам управления, предоставляющим фундаментальную функциональность окон в традиционном графическом пользовательском интерфейсе.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуется в поставщике автоматизации пользовательского интерфейса, который <xref:System.Windows.Automation.WindowPattern> должен поддерживать шаблон элемента управления.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.WindowPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Общие сведения о шаблонах элементов управления модели автоматизации пользовательского интерфейса</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe">Реализация поставщика автоматизации пользовательского интерфейса на стороне сервера</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6">Реализация поставщика автоматизации пользовательского интерфейса на стороне клиента</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776">Поддержка шаблонов элементов управления в поставщике модели автоматизации пользовательского интерфейса</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iWindowProvider.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Пытается закрыть окно.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A>должен возвращаться немедленно без блокировки.  
  
 Метод <xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> формирует событие <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent>. Если это возможно, событие должно быть вызвано после того, как элемент управления завершит связанное с ним действие.  
  
 При вызове в элементе управления "разделительная область" Этот метод закрывает панель и удаляет связанное разбиение. Этот метод также может закрыть все остальные панели в зависимости от реализации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элементу управления не удалось выполнить запрошенное действие.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Если конечный элемент больше недоступен (например, окно закрыто).</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="InteractionState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowInteractionState InteractionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowInteractionState InteractionState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractionState As WindowInteractionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowInteractionState InteractionState { System::Windows::Automation::WindowInteractionState get(); };" />
      <MemberSignature Language="F#" Value="member this.InteractionState : System.Windows.Automation.WindowInteractionState" Usage="System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowInteractionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает состояние взаимодействия окна.</summary>
        <value>Тип <see cref="T:System.Windows.Automation.WindowInteractionState" /> элемента управления.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="IsModal">
      <MemberSignature Language="C#" Value="public bool IsModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModal : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли окно модальным.</summary>
        <value><see langword="true" />, если окно является модальным; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="IsTopmost">
      <MemberSignature Language="C#" Value="public bool IsTopmost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTopmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTopmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTopmost { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTopmost : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли окно элементом верхнего уровня в z-порядке.</summary>
        <value>Значение <see langword="true" />, если окно является элементом верхнего уровня; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="Maximizable">
      <MemberSignature Language="C#" Value="public bool Maximizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Maximizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Maximizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, можно ли развернуть окно.</summary>
        <value><see langword="true" />, если окно можно развернуть; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="Minimizable">
      <MemberSignature Language="C#" Value="public bool Minimizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Minimizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Minimizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, можно ли свернуть окно.</summary>
        <value><see langword="true" />, если окно можно свернуть; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="SetVisualState">
      <MemberSignature Language="C#" Value="public void SetVisualState (System.Windows.Automation.WindowVisualState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVisualState(valuetype System.Windows.Automation.WindowVisualState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVisualState (state As WindowVisualState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVisualState(System::Windows::Automation::WindowVisualState state);" />
      <MemberSignature Language="F#" Value="abstract member SetVisualState : System.Windows.Automation.WindowVisualState -&gt; unit" Usage="iWindowProvider.SetVisualState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Automation.WindowVisualState" />
      </Parameters>
      <Docs>
        <param name="state">Запрошенное визуальное состояние окна.</param>
        <summary>Изменяет визуальное состояние окна. Например, свертывает или развертывает его.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Если элемент управления не поддерживает запрошенное поведение.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="VisualState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowVisualState VisualState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowVisualState VisualState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisualState As WindowVisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowVisualState VisualState { System::Windows::Automation::WindowVisualState get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualState : System.Windows.Automation.WindowVisualState" Usage="System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowVisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает визуальное состояние окна.</summary>
        <value>Визуальное состояние окна.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member WaitForInputIdle : int -&gt; bool" Usage="iWindowProvider.WaitForInputIdle milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Время ожидания перехода связанного процесса в состояние бездействия в миллисекундах. Максимальное значение — <see cref="F:System.Int32.MaxValue" />.</param>
        <summary>Блокирует вызывающий код в течение заданного промежутка времени или до того момента, как связанный процесс перейдет в состояние бездействия, в зависимости от того, что произойдет раньше.</summary>
        <returns>Значение <see langword="true" />, если окно перешло в состояние бездействия; значение <see langword="false" /> в случае истечения времени ожидания.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод обычно используется в сочетании с обработкой <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.  
  
 Реализация зависит от базовой платформы приложения; Поэтому этот метод может вернуть некоторое время после того, как окно будет готово к вводу данных пользователем. Вызывающий код не должен полагаться на этот метод, чтобы убедиться в том, что окно становится неактивным.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Если параметр не является допустимым числом.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">Реализация шаблона элемента управления Window автоматизированного пользовательского интерфейса</related>
      </Docs>
    </Member>
  </Members>
</Type>