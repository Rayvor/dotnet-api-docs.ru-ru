<Type Name="ITextRangeProvider" FullName="System.Windows.Automation.Provider.ITextRangeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2f20a29c8e22d82d605decacbdb737eea374887" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69225103" /></Metadata><TypeSignature Language="C#" Value="public interface ITextRangeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextRangeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextRangeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextRangeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextRangeProvider" />
  <TypeSignature Language="F#" Value="type ITextRangeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="048ef-101">Предоставляет методы и свойства для поддержки доступа клиента автоматизации пользовательского интерфейса к диапазону непрерывного текста в текстовом контейнере, реализующем <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-101">Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-102">Реализуется в поставщике автоматизации пользовательского интерфейса, который <xref:System.Windows.Automation.TextPattern> должен поддерживать шаблон элемента управления.</span><span class="sxs-lookup"><span data-stu-id="048ef-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TextPattern> control pattern.</span></span>  
  
 <span data-ttu-id="048ef-103">Может представлять точку вставки, подмножество или весь текст <xref:System.Windows.Automation.TextPattern> в контейнере. <xref:System.Windows.Automation.Text.TextPatternRange></span><span class="sxs-lookup"><span data-stu-id="048ef-103">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Text.TextPatternRange" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="048ef-104">Общие сведения о шаблонах элементов управления модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="048ef-104">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="048ef-105">Реализация поставщика автоматизации пользовательского интерфейса на стороне сервера</span><span class="sxs-lookup"><span data-stu-id="048ef-105">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="048ef-106">Реализация поставщика автоматизации пользовательского интерфейса на стороне клиента</span><span class="sxs-lookup"><span data-stu-id="048ef-106">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="048ef-107">Поддержка шаблонов элементов управления в поставщике модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="048ef-107">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/41787927-df1f-4f4a-aba3-641662854fc4"><span data-ttu-id="048ef-108">Общие сведения о TextPattern модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="048ef-108">UI Automation TextPattern Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="abstract member AddToSelection : unit -&gt; unit" Usage="iTextRangeProvider.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-109">Добавляет в коллекцию выделенного текста в текстовом контейнере, поддерживающем раздельное множественное выделение.</span><span class="sxs-lookup"><span data-stu-id="048ef-109">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-110">Точка вставки текста переместится в область нового выделения.</span><span class="sxs-lookup"><span data-stu-id="048ef-110">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="048ef-111">При предоставлении вырожденного текста точка вставки перемещается.</span><span class="sxs-lookup"><span data-stu-id="048ef-111">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="048ef-112">Если поставщик текста не поддерживает раздельное множественное выделение (то есть, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> должно иметь значение <see langword="Multiple" />).</span><span class="sxs-lookup"><span data-stu-id="048ef-112">If text provider does not support multiple, disjoint selections (that is, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-113">Возвращает новый <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />, идентичный исходному <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> и наследующий все его свойства.</span><span class="sxs-lookup"><span data-stu-id="048ef-113">Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and inheriting all properties of the original.</span></span></summary>
        <returns><span data-ttu-id="048ef-114">Новый текстовый диапазон.</span><span class="sxs-lookup"><span data-stu-id="048ef-114">The new text range.</span></span> <span data-ttu-id="048ef-115">Пустая ссылка (<see langword="Nothing" /> в Visual Basic) никогда не возвращается.</span><span class="sxs-lookup"><span data-stu-id="048ef-115">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-116">Новый диапазон можно манипулировать независимо от исходного.</span><span class="sxs-lookup"><span data-stu-id="048ef-116">The new range can be manipulated independently from the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compare(class System.Windows.Automation.Provider.ITextRangeProvider range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As ITextRangeProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Provider::ITextRangeProvider ^ range);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Automation.Provider.ITextRangeProvider -&gt; bool" Usage="iTextRangeProvider.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
      </Parameters>
      <Docs>
        <param name="range"><span data-ttu-id="048ef-117">Текстовый диапазон для сравнения.</span><span class="sxs-lookup"><span data-stu-id="048ef-117">A text range to compare</span></span></param>
        <summary><span data-ttu-id="048ef-118">Возвращает значение, указывающее, является ли расположение (от конечной точки <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> до конечной точки <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />) текстового диапазона таким же, как расположение другого текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-118">Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span></span></summary>
        <returns><span data-ttu-id="048ef-119"><see langword="true" />, если расположение текстовых диапазонов идентично; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-119"><see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="048ef-120">Если сравниваемый диапазон не принадлежит тому же поставщику текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-120">If the range being compared does not come from the same text provider.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="iTextRangeProvider.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="048ef-121">Конечная точка <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> или <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="048ef-121">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span></span></param>
        <param name="targetRange"><span data-ttu-id="048ef-122">Целевой диапазон для сравнения.</span><span class="sxs-lookup"><span data-stu-id="048ef-122">The target range for comparison.</span></span></param>
        <param name="targetEndpoint"><span data-ttu-id="048ef-123">Конечная точка <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> или <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="048ef-123">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span></span></param>
        <summary><span data-ttu-id="048ef-124">Возвращает значение, указывающее, имеют ли два текстовых диапазона одинаковые конечные точки.</span><span class="sxs-lookup"><span data-stu-id="048ef-124">Returns a value that specifies whether two text ranges have identical endpoints.</span></span></summary>
        <returns><span data-ttu-id="048ef-125">Возвращает отрицательное значение, если конечная точка вызывающего объекта размещена ближе к началу, чем конечная точка целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="048ef-125">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span></span>  
  
 <span data-ttu-id="048ef-126">Возвращает значение нуль, если конечные точки вызывающего и целевого объектов имеют одинаковое расположение.</span><span class="sxs-lookup"><span data-stu-id="048ef-126">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span></span>  
  
 <span data-ttu-id="048ef-127">Возвращает положительное значение, если конечная точка вызывающего объекта размещена дальше конечной точки целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="048ef-127">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="048ef-128">Если <paramref name="targetRange" /> принадлежит другому поставщику текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-128">If <paramref name="targetRange" /> is from a different text provider.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="abstract member ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="iTextRangeProvider.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="048ef-129">Единица текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-129">The textual unit.</span></span></param>
        <summary><span data-ttu-id="048ef-130">Расширяет текстовый диапазон до заданной единицы текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-130">Expands the text range to the specified text unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-131">Если диапазон уже является точным количеством указанных единиц, он остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="048ef-131">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="048ef-132">Для успешного выполнения <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> метода существует ряд действий, выполняемых в фоновом режиме.</span><span class="sxs-lookup"><span data-stu-id="048ef-132">There is a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="048ef-133">Текстовый диапазон нормализован, т. е. он свернут до вырожденного диапазона в конечной точке <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> , что делает конечную точку <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> избыточной.</span><span class="sxs-lookup"><span data-stu-id="048ef-133">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="048ef-134">Этот шаг необходим для устранения неоднозначности в ситуациях, когда текстовый диапазон охватывает `unit` границы, например "{The U} RL [https://www.microsoft.com/](https://www.microsoft.com/) внедряется в текст", где "{" и "}" — конечные точки текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-134">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="048ef-135">Результирующий диапазон перемещается в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> в начало запрошенной границы `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-135">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="048ef-136">Диапазон перемещается вперед или назад в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> на запрошенное число границ `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-136">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="048ef-137">Затем диапазон расширяется из вырожденного состояния путем перемещения конечной точки <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> на одну запрошенную границу `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-137">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="048ef-138">![Корректировки диапазона путем перемещения & експандтоенклосингунит] (~/add/media/uia-textpattern-moveandexpand-examples.png "Корректировки диапазона путем перемещения & експандтоенклосингунит")</span><span class="sxs-lookup"><span data-stu-id="048ef-138">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="048ef-139">Примеры корректировки текстового диапазона для Move() и ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="048ef-139">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="048ef-140">Эти действия необходимы, поскольку средство чтения с экрана часто считывает полное слово, предложение или весь абзац в точке вставки или в любой позиции виртуального курсора.</span><span class="sxs-lookup"><span data-stu-id="048ef-140">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="048ef-141"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A>учитывает как скрытый, так и видимый текст.</span><span class="sxs-lookup"><span data-stu-id="048ef-141"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="048ef-142"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A>откладывает на следующий самый крупный <xref:System.Windows.Automation.Text.TextUnit> поддерживаемый, если <xref:System.Windows.Automation.Text.TextUnit> данный элемент не поддерживается элементом управления.</span><span class="sxs-lookup"><span data-stu-id="048ef-142"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="048ef-143">Ниже перечислены заказы, от наименьших единиц до самых крупных.</span><span class="sxs-lookup"><span data-stu-id="048ef-143">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindAttribute(int32 attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As Integer, value As Object, backward As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindAttribute(int attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="abstract member FindAttribute : int * obj * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="048ef-144">Искомый атрибут.</span><span class="sxs-lookup"><span data-stu-id="048ef-144">The attribute to search for.</span></span></param>
        <param name="value"><span data-ttu-id="048ef-145">Искомое значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="048ef-145">The attribute value to search for.</span></span> <span data-ttu-id="048ef-146">Это значение должно соответствовать заданному для атрибута типу.</span><span class="sxs-lookup"><span data-stu-id="048ef-146">This value must match the type specified for the attribute.</span></span></param>
        <param name="backward"><span data-ttu-id="048ef-147"><see langword="true" />, если вместо первого должно быть возвращено последнее вхождение текстового диапазона; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-147"><see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="048ef-148">Возвращает подмножество текстового диапазона, имеющее заданное значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="048ef-148">Returns a text range subset that has the specified attribute value.</span></span></summary>
        <returns><span data-ttu-id="048ef-149">Текстовый диапазон, имеющий соответствующий атрибут с заданным значением; в противном случае — NULL (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="048ef-149">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-150">Различия между скрытым и видимым текстом не различаются.</span><span class="sxs-lookup"><span data-stu-id="048ef-150">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member FindText : string * bool * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="048ef-151">Искомая текстовая строка.</span><span class="sxs-lookup"><span data-stu-id="048ef-151">The text string to search for.</span></span></param>
        <param name="backward"><span data-ttu-id="048ef-152">Значение <see langword="true" />, если вместо первого должно быть возвращено последнее вхождение текстового диапазона; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-152"><see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="048ef-153"><see langword="true" />, если регистр следует игнорировать; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-153"><see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="048ef-154">Возвращает подмножество текстового диапазона, содержащее заданный текст.</span><span class="sxs-lookup"><span data-stu-id="048ef-154">Returns a text range subset that contains the specified text.</span></span></summary>
        <returns><span data-ttu-id="048ef-155">Текстовый диапазон, соответствующий заданному тексту; в противном случае — NULL (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="048ef-155">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-156">Различия между скрытым и видимым текстом не различаются.</span><span class="sxs-lookup"><span data-stu-id="048ef-156">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAttributeValue(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(int attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; obj" Usage="iTextRangeProvider.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="048ef-157">Атрибут текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-157">The text attribute.</span></span></param>
        <summary><span data-ttu-id="048ef-158">Извлекает значение заданного атрибута для текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-158">Retrieves the value of the specified attribute across the text range.</span></span></summary>
        <returns><span data-ttu-id="048ef-159">Извлекает объект, представляющий значение заданного атрибута.</span><span class="sxs-lookup"><span data-stu-id="048ef-159">Retrieves an object representing the value of the specified attribute.</span></span> <span data-ttu-id="048ef-160">Например, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> вернет строку, представляющую имя шрифта текстового диапазона, а <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> вернет значение типа <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-160">For example, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> would return a string that represents the font name of the text range while <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> would return a value of type <see cref="T:System.Boolean" />.</span></span>  
  
<span data-ttu-id="048ef-161">Возвращает <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" />, если значение заданного атрибута различается в пределах текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-161">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span></span>  
  
<span data-ttu-id="048ef-162">Возвращает <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />, если заданный атрибут не поддерживается поставщиком или элементом управления.</span><span class="sxs-lookup"><span data-stu-id="048ef-162">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-163">Различия между скрытым и видимым текстом не различаются.</span><span class="sxs-lookup"><span data-stu-id="048ef-163">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="048ef-164">Если указанный атрибут недопустим.</span><span class="sxs-lookup"><span data-stu-id="048ef-164">If the specified attribute is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public double[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingRectangles : unit -&gt; double[]" Usage="iTextRangeProvider.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-165">Извлекает коллекцию ограничивающих прямоугольников для каждой полностью или частично видимой строки текста в текстовом диапазоне.</span><span class="sxs-lookup"><span data-stu-id="048ef-165">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span></span></summary>
        <returns><span data-ttu-id="048ef-166">Массив ограничивающих прямоугольников для каждой полной или частичной строки текста в текстовом диапазоне.</span><span class="sxs-lookup"><span data-stu-id="048ef-166">An array of bounding rectangles for each full or partial line of text in a text range.</span></span>  
  
 <span data-ttu-id="048ef-167">Для вырожденного диапазона — пустой массив.</span><span class="sxs-lookup"><span data-stu-id="048ef-167">An empty array for a degenerate range.</span></span>  
  
 <span data-ttu-id="048ef-168">Пустой массив, если экранные координаты текстового диапазона которого полностью находятся вне экрана, он перемещен за пределы экрана в результате прокрутки или заслонен другим окном.</span><span class="sxs-lookup"><span data-stu-id="048ef-168">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iTextRangeProvider.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-169">Извлекает коллекцию всех внедренных объектов, попадающих в текстовый диапазон.</span><span class="sxs-lookup"><span data-stu-id="048ef-169">Retrieves a collection of all embedded objects that fall within the text range.</span></span></summary>
        <returns><span data-ttu-id="048ef-170">Коллекция дочерних объектов, попадающих в текстовый диапазон.</span><span class="sxs-lookup"><span data-stu-id="048ef-170">A collection of child objects that fall within the range.</span></span> <span data-ttu-id="048ef-171">Дочерний объект, пересекающийся с текстовым диапазоном, но не полностью в нем находящийся, также будет включен в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="048ef-171">Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</span></span>  
  
 <span data-ttu-id="048ef-172">Возвращает пустую коллекцию, если нет ни одного дочернего объекта.</span><span class="sxs-lookup"><span data-stu-id="048ef-172">Returns an empty collection if there are no child objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="abstract member GetEnclosingElement : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iTextRangeProvider.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-173">Возвращает самый внутренний элемент управления, который содержит текстовый диапазон.</span><span class="sxs-lookup"><span data-stu-id="048ef-173">Returns the innermost control that encloses the text range.</span></span></summary>
        <returns><span data-ttu-id="048ef-174">Охватывающий элемент управления, обычно поставщик текста, предоставляющий текстовый диапазон.</span><span class="sxs-lookup"><span data-stu-id="048ef-174">The enclosing control, typically the text provider that supplies the text range.</span></span> <span data-ttu-id="048ef-175">Однако если поставщик текста содержит дочерние элементы управления, такие как таблицы или гиперссылки, охватывающий элемент должен быть наследником поставщика текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-175">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="abstract member GetText : int -&gt; string" Usage="iTextRangeProvider.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength"><span data-ttu-id="048ef-176">Максимальная длина возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="048ef-176">The maximum length of the string to return.</span></span> <span data-ttu-id="048ef-177">Если длина не ограничена, задайте значение <c>–1</c>.</span><span class="sxs-lookup"><span data-stu-id="048ef-177">Use <c>-1</c> if no limit is required.</span></span></param>
        <summary><span data-ttu-id="048ef-178">Извлекает содержимое текстового диапазона в виде обычного текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-178">Retrieves the plain text of the range.</span></span></summary>
        <returns><span data-ttu-id="048ef-179">Содержимое текстового диапазона в виде обычного текста, возможно, обрезанное до заданной в параметре <paramref name="maxLength" /> длины.</span><span class="sxs-lookup"><span data-stu-id="048ef-179">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-180"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A>учитывает как скрытый, так и видимый текст.</span><span class="sxs-lookup"><span data-stu-id="048ef-180"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="048ef-181">Если `maxLength` значение превышает длину текстового диапазона вызывающего объекта, возвращаемая строка будет являться обычным текстом в текстовом диапазоне.</span><span class="sxs-lookup"><span data-stu-id="048ef-181">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="048ef-182"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A>не зависит от порядка конечных точек в потоке текста; Он всегда будет возвращать текст между начальной и конечной конечными точками текстового диапазона в логическом порядке потока текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-182"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="048ef-183">Если <paramref name="maxLength" /> меньше –1.</span><span class="sxs-lookup"><span data-stu-id="048ef-183">If <paramref name="maxLength" /> is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="048ef-184">Граница единицы текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-184">The text unit boundary.</span></span></param>
        <param name="count"><span data-ttu-id="048ef-185">Количество единиц текста, на которое следует выполнить перемещение.</span><span class="sxs-lookup"><span data-stu-id="048ef-185">The number of text units to move.</span></span>  
  
 <span data-ttu-id="048ef-186">Положительное значение соответствует перемещению текстового диапазона вперед, отрицательное — назад, а при значении 0 перемещение не выполняется.</span><span class="sxs-lookup"><span data-stu-id="048ef-186">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span></span></param>
        <summary><span data-ttu-id="048ef-187">Перемещает текстовый диапазон на заданное количество единиц текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-187">Moves the text range the specified number of text units.</span></span></summary>
        <returns><span data-ttu-id="048ef-188">Количество единиц текста, на которое выполнено перемещение.</span><span class="sxs-lookup"><span data-stu-id="048ef-188">The number of units actually moved.</span></span> <span data-ttu-id="048ef-189">Оно может быть меньше запрошенного количества, если одна из новых конечных точек текстового диапазона больше или меньше конечных точек <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />.</span><span class="sxs-lookup"><span data-stu-id="048ef-189">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-190">Для обхода содержимого текстового диапазона в фоновом режиме применяется ряд шагов для успешного выполнения метода <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> .</span><span class="sxs-lookup"><span data-stu-id="048ef-190">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="048ef-191">Текстовый диапазон нормализован, т. е. он свернут до вырожденного диапазона в конечной точке <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> , что делает конечную точку <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> избыточной.</span><span class="sxs-lookup"><span data-stu-id="048ef-191">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="048ef-192">Этот шаг необходим для устранения неоднозначности в ситуациях, когда текстовый диапазон охватывает `unit` границы, например "{The U} RL [https://www.microsoft.com/](https://www.microsoft.com/) внедряется в текст", где "{" и "}" — конечные точки текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-192">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="048ef-193">Результирующий диапазон перемещается в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> в начало запрошенной границы `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-193">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="048ef-194">Диапазон перемещается вперед или назад в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> на запрошенное число границ `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-194">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="048ef-195">Затем диапазон расширяется из вырожденного состояния путем перемещения конечной точки <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> на одну запрошенную границу `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-195">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="048ef-196">![Корректировки диапазона путем перемещения & експандтоенклосингунит] (~/add/media/uia-textpattern-moveandexpand-examples.png "Корректировки диапазона путем перемещения & експандтоенклосингунит")</span><span class="sxs-lookup"><span data-stu-id="048ef-196">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="048ef-197">Примеры корректировки текстового диапазона для Move() и ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="048ef-197">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="048ef-198">Текстовое содержимое (или внутренний текст) контейнера текста и внедренного объекта, например гиперссылки или ячейки таблицы, представляется как один непрерывный текстовый поток и в представлении элемента управления и в представлении содержимого дерева [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] . Границы объекта игнорируются.</span><span class="sxs-lookup"><span data-stu-id="048ef-198">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span>  
  
 <span data-ttu-id="048ef-199">![Текстовые диапазоны, охваченные внедренными объектами.] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Текстовые диапазоны, охваченные внедренными объектами.")</span><span class="sxs-lookup"><span data-stu-id="048ef-199">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="048ef-200">Пример текстового потока с внедренными объектами и их диапазонами</span><span class="sxs-lookup"><span data-stu-id="048ef-200">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="048ef-201"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>учитывает как скрытый, так и видимый текст.</span><span class="sxs-lookup"><span data-stu-id="048ef-201"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="048ef-202"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>откладывает на следующий самый крупный <xref:System.Windows.Automation.Text.TextUnit> поддерживаемый, если <xref:System.Windows.Automation.Text.TextUnit> данный элемент не поддерживается элементом управления.</span><span class="sxs-lookup"><span data-stu-id="048ef-202"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="048ef-203">Ниже перечислены заказы, от наименьших единиц до самых крупных.</span><span class="sxs-lookup"><span data-stu-id="048ef-203">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 <span data-ttu-id="048ef-204">Текст не изменяется каким-либо образом, текстовый диапазон просто охватывает другую часть текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-204">The text is not altered in any way, the text range just spans a different part of the text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="iTextRangeProvider.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="048ef-205">Перемещаемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="048ef-205">The endpoint to move.</span></span></param>
        <param name="targetRange"><span data-ttu-id="048ef-206">Второй диапазон от того же поставщика текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-206">Another range from the same text provider.</span></span></param>
        <param name="targetEndpoint"><span data-ttu-id="048ef-207">Конечная точка второго диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-207">An endpoint on the other range.</span></span></param>
        <summary><span data-ttu-id="048ef-208">Перемещает конечную точку текстового диапазона в заданную конечную точку второго текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-208">Moves one endpoint of a text range to the specified endpoint of a second text range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-209">Если перемещаемая конечная точка пересекает другую конечную точку того же текстового диапазона, то также перемещается другая конечная точка, что приводит к вырождению диапазона и обеспечению правильного порядка конечных <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> точек (то есть всегда меньше или равно <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="048ef-209">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="048ef-210">Перемещаемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="048ef-210">The endpoint to move.</span></span></param>
        <param name="unit"><span data-ttu-id="048ef-211">Единица текста.</span><span class="sxs-lookup"><span data-stu-id="048ef-211">The textual unit for moving.</span></span></param>
        <param name="count"><span data-ttu-id="048ef-212">Число перемещаемых единиц.</span><span class="sxs-lookup"><span data-stu-id="048ef-212">The number of units to move.</span></span> <span data-ttu-id="048ef-213">При положительном значении выполняется перемещение вперед.</span><span class="sxs-lookup"><span data-stu-id="048ef-213">A positive value moves the endpoint forward.</span></span> <span data-ttu-id="048ef-214">При отрицательном значении выполняется перемещение назад.</span><span class="sxs-lookup"><span data-stu-id="048ef-214">A negative value moves backward.</span></span> <span data-ttu-id="048ef-215">При значении 0 перемещение не выполняется.</span><span class="sxs-lookup"><span data-stu-id="048ef-215">A value of 0 has no effect.</span></span></param>
        <summary><span data-ttu-id="048ef-216">Перемещает конечную точку текстового диапазона на заданное количество единиц текста в диапазоне всего документа.</span><span class="sxs-lookup"><span data-stu-id="048ef-216">Moves one endpoint of the text range the specified number of text units within the document range.</span></span></summary>
        <returns><span data-ttu-id="048ef-217">Количество единиц, на которое выполнено перемещение; оно может быть меньше запрошенного количества единиц, если при перемещении конечная точка достигает начала или конца документа.</span><span class="sxs-lookup"><span data-stu-id="048ef-217">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-218">Для обхода содержимого текстового диапазона в фоновом режиме применяется ряд шагов для успешного выполнения метода <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> .</span><span class="sxs-lookup"><span data-stu-id="048ef-218">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="048ef-219">Текстовый диапазон нормализован, т. е. он свернут до вырожденного диапазона в конечной точке <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> , что делает конечную точку <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> избыточной.</span><span class="sxs-lookup"><span data-stu-id="048ef-219">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="048ef-220">Этот шаг необходим для устранения неоднозначности в ситуациях, когда текстовый диапазон охватывает `unit` границы, например "{The U} RL [https://www.microsoft.com/](https://www.microsoft.com/) внедряется в текст", где "{" и "}" — конечные точки текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-220">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="048ef-221">Результирующий диапазон перемещается в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> в начало запрошенной границы `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-221">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="048ef-222">Затем диапазон расширяется из вырожденного состояния путем перемещения конечной точки <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> на одну запрошенную границу `unit` .</span><span class="sxs-lookup"><span data-stu-id="048ef-222">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="048ef-223">![Корректировки диапазона путем перемещения & експандтоенклосингунит] (~/add/media/uia-textpattern-moveandexpand-examples.png "Корректировки диапазона путем перемещения & експандтоенклосингунит")</span><span class="sxs-lookup"><span data-stu-id="048ef-223">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="048ef-224">Примеры корректировки текстового диапазона для Move() и ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="048ef-224">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="048ef-225"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A>откладывает на следующий самый крупный <xref:System.Windows.Automation.Text.TextUnit> поддерживаемый, если <xref:System.Windows.Automation.Text.TextUnit> данный элемент не поддерживается элементом управления.</span><span class="sxs-lookup"><span data-stu-id="048ef-225"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="048ef-226">Ниже перечислены заказы, от наименьших единиц до самых крупных.</span><span class="sxs-lookup"><span data-stu-id="048ef-226">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromSelection : unit -&gt; unit" Usage="iTextRangeProvider.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-227">Удаляет выделенный текст, соответствующий конечным точкам <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> и <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> вызывающего объекта, из коллекции выделенного текста в текстовом контейнере, поддерживающем раздельное множественное выделение.</span><span class="sxs-lookup"><span data-stu-id="048ef-227">Removes a highlighted section of text, corresponding to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-228">Точка вставки текста будет перемещена в область удаленного выделения.</span><span class="sxs-lookup"><span data-stu-id="048ef-228">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="048ef-229">При предоставлении вырожденного диапазона точка вставки будет перемещена.</span><span class="sxs-lookup"><span data-stu-id="048ef-229">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="048ef-230">Если поставщик текста не поддерживает раздельное множественное выделение (например, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> должно иметь значение <see langword="Multiple" />).</span><span class="sxs-lookup"><span data-stu-id="048ef-230">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="abstract member ScrollIntoView : bool -&gt; unit" Usage="iTextRangeProvider.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop"><span data-ttu-id="048ef-231">Значение <see langword="true" />, если текстовый элемент управления должен выполнить прокрутку так, чтобы текстовый диапазон отобразился у верхней границы окна просмотра; <see langword="false" />, если текстовый диапазон должен отобразиться у верхней границы окна просмотра.</span><span class="sxs-lookup"><span data-stu-id="048ef-231"><see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span></span></param>
        <summary><span data-ttu-id="048ef-232">Заставляет текстовый элемент управления выполнять вертикальную прокрутку, пока текстовый диапазон не появится в окне просмотра.</span><span class="sxs-lookup"><span data-stu-id="048ef-232">Causes the text control to scroll vertically until the text range is visible in the viewport.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-233"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A>учитывает как скрытый, так и видимый текст.</span><span class="sxs-lookup"><span data-stu-id="048ef-233"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="048ef-234">Если текстовый диапазон скрыт, элемент управления "текст" прокручивается только в том случае, если скрытый текст имеет привязку в окне просмотра.</span><span class="sxs-lookup"><span data-stu-id="048ef-234">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="iTextRangeProvider.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="048ef-235">Выделяет в текстовом элементе управления текст, соответствующий конечным точкам <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> и <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-235">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="048ef-236">Если выводится вырожденный диапазон текста, точка вставки текста будет перемещена в <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> конечную точку текстового диапазона.</span><span class="sxs-lookup"><span data-stu-id="048ef-236">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="048ef-237">Возникает, когда выделение текста не поддерживается в элементе управления текстом.</span><span class="sxs-lookup"><span data-stu-id="048ef-237">Occurs when text selection is not supported by the text control.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
