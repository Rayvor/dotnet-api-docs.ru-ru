<Type Name="IInvokeProvider" FullName="System.Windows.Automation.Provider.IInvokeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a4d30701cbf46362bb48ef1905bfb1b4bd3ccbd" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65013313" /></Metadata><TypeSignature Language="C#" Value="public interface IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvokeProvider" />
  <TypeSignature Language="F#" Value="type IInvokeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ac07f-101">Предоставляет методы и свойства для поддержки доступа клиента автоматизации пользовательского интерфейса к элементам управления, которые инициируют или выполняют единственное однозначное действие и не сохраняют состояние при активации.</span><span class="sxs-lookup"><span data-stu-id="ac07f-101">Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac07f-102">Реализован на поставщик автоматизации пользовательского интерфейса, который должен поддерживаться <xref:System.Windows.Automation.InvokePattern> шаблон элемента управления.</span><span class="sxs-lookup"><span data-stu-id="ac07f-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.</span></span>  
  
 <span data-ttu-id="ac07f-103">Элементы управления реализуют <xref:System.Windows.Automation.Provider.IInvokeProvider> , если то же самое поведение не доступно через другого поставщика шаблона элемента управления.</span><span class="sxs-lookup"><span data-stu-id="ac07f-103">Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider.</span></span> <span data-ttu-id="ac07f-104">Например, если метод <xref:System.Windows.Automation.InvokePattern.Invoke%2A> в элементе управления выполняет те же действия, что и метод <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> или <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> этот элемент управления не должен реализовывать <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span><span class="sxs-lookup"><span data-stu-id="ac07f-104">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.InvokePattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="ac07f-105">Общие сведения о шаблонах элементов управления модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="ac07f-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="ac07f-106">Реализация поставщика автоматизации пользовательского интерфейса на стороне сервера</span><span class="sxs-lookup"><span data-stu-id="ac07f-106">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="ac07f-107">Реализация поставщика автоматизации пользовательского интерфейса на стороне клиента</span><span class="sxs-lookup"><span data-stu-id="ac07f-107">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="ac07f-108">Поддержка шаблонов элементов управления в поставщике модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="ac07f-108">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e5b1e239-49f8-468e-bfec-1fba02ec9ac4"><span data-ttu-id="ac07f-109">Реализация шаблона элемента управления модели автоматизации пользовательского интерфейса Invoke</span><span class="sxs-lookup"><span data-stu-id="ac07f-109">Implementing the UI Automation Invoke Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="abstract member Invoke : unit -&gt; unit" Usage="iInvokeProvider.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac07f-110">Отправляет запрос для активации элемента управления и инициализации его единственного однозначного действия.</span><span class="sxs-lookup"><span data-stu-id="ac07f-110">Sends a request to activate a control and initiate its single, unambiguous action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac07f-111"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> является асинхронным вызовом и должен возвращаться немедленно без блокировки.</span><span class="sxs-lookup"><span data-stu-id="ac07f-111"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac07f-112">Это особенно важно для элементов управления, которые при вызове прямо или косвенно запускают модальное диалоговое окно.</span><span class="sxs-lookup"><span data-stu-id="ac07f-112">This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.</span></span> <span data-ttu-id="ac07f-113">Любой клиент автоматизации пользовательского интерфейса, инициировавший это событие, будет оставаться заблокированным до закрытия модального диалогового окна.</span><span class="sxs-lookup"><span data-stu-id="ac07f-113">Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.</span></span>  
  
 <span data-ttu-id="ac07f-114">Метод <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> формирует событие <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>.</span><span class="sxs-lookup"><span data-stu-id="ac07f-114"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event.</span></span> <span data-ttu-id="ac07f-115">Если это возможно событие должно вызываться после завершения связанного действия в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="ac07f-115">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="ac07f-116"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> должен вызываться перед обслуживанием <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> запроса в следующих сценариях:</span><span class="sxs-lookup"><span data-stu-id="ac07f-116"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:</span></span>  
  
-   <span data-ttu-id="ac07f-117">невозможно или нецелесообразно ожидать завершения действия;</span><span class="sxs-lookup"><span data-stu-id="ac07f-117">It is not possible or practical to wait until the action is complete.</span></span>  
  
-   <span data-ttu-id="ac07f-118">действие требует взаимодействия с пользователем;</span><span class="sxs-lookup"><span data-stu-id="ac07f-118">The action requires user interaction.</span></span>  
  
-   <span data-ttu-id="ac07f-119">Действие занимает много времени и приведет к блокировке для значительного промежутка времени вызывающего клиента.</span><span class="sxs-lookup"><span data-stu-id="ac07f-119">The action is time-consuming and will cause the calling client to block for a significant length of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac07f-120">В следующем примере реализуется <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> метод обработчика события MouseDown элемента управления.</span><span class="sxs-lookup"><span data-stu-id="ac07f-120">The following example implements the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> method on the MouseDown event handler of a control.</span></span> <span data-ttu-id="ac07f-121">Предполагается, что `providerControl` является переменной-членом, инициализированной при создании класса.</span><span class="sxs-lookup"><span data-stu-id="ac07f-121">Assume that `providerControl` is a member variable that was initialized when the class was constructed.</span></span>  
  
 [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException"><span data-ttu-id="ac07f-122">Если элемент управления не включен.</span><span class="sxs-lookup"><span data-stu-id="ac07f-122">If the control is not enabled.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e5b1e239-49f8-468e-bfec-1fba02ec9ac4"><span data-ttu-id="ac07f-123">Реализация шаблона элемента управления модели автоматизации пользовательского интерфейса Invoke</span><span class="sxs-lookup"><span data-stu-id="ac07f-123">Implementing the UI Automation Invoke Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>