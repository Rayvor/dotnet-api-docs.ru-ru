<Type Name="AsyncResult" FullName="System.Runtime.Remoting.Messaging.AsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfd3cd12b8b6e95f23fab31c45cacd966f2010d8" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64052475" /></Metadata><TypeSignature Language="C#" Value="public class AsyncResult : IAsyncResult, System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncResult&#xA;Implements IAsyncResult, IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult : IAsyncResult, System::Runtime::Remoting::Messaging::IMessageSink" />
  <TypeSignature Language="F#" Value="type AsyncResult = class&#xA;    interface IAsyncResult&#xA;    interface IMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessageSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8f2f7-101">Инкапсулирует результаты асинхронной операции на делегате.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-101">Encapsulates the results of an asynchronous operation on a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-102"><xref:System.Runtime.Remoting.Messaging.AsyncResult> Класс используется в сочетании с асинхронными вызовами метода с помощью делегатов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-102">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is used in conjunction with asynchronous method calls made using delegates.</span></span> <span data-ttu-id="8f2f7-103"><xref:System.IAsyncResult> Возвращаемые делегата `BeginInvoke` метод может быть приведен к <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-103">The <xref:System.IAsyncResult> returned from the delegate's `BeginInvoke` method can be cast to an <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span></span> <span data-ttu-id="8f2f7-104"><xref:System.Runtime.Remoting.Messaging.AsyncResult> Имеет <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> объекта свойство, которое содержит делегат, на котором был вызван асинхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-104">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> has the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property that holds the delegate object on which the asynchronous call was invoked.</span></span>  
  
 <span data-ttu-id="8f2f7-105">Дополнительные сведения о `BeginInvoke` и асинхронные вызовы с использованием делегатов см. в разделе [асинхронного программирования с помощью делегатов](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-105">For more information about `BeginInvoke` and asynchronous calls using delegates, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f2f7-106">Следующий пример демонстрирует, как использовать <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> свойство для получения <xref:System.Threading.WaitHandle>и Ожидание асинхронного вызова для делегата.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-106">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="8f2f7-107">Объект <xref:System.Threading.WaitHandle> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="8f2f7-107">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="8f2f7-108">Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-108">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8f2f7-109">Дополнительные сведения и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-109">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md"><span data-ttu-id="8f2f7-110">Асинхронное программирование с использованием делегатов</span><span class="sxs-lookup"><span data-stu-id="8f2f7-110">Asynchronous Programming Using Delegates</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AsyncDelegate">
      <MemberSignature Language="C#" Value="public virtual object AsyncDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncDelegate As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncDelegate { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncDelegate : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-111">Возвращает объект делегата, для которого был вызван асинхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-111">Gets the delegate object on which the asynchronous call was invoked.</span></span></summary>
        <value><span data-ttu-id="8f2f7-112">Объект делегата, для которого был вызван асинхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-112">The delegate object on which the asynchronous call was invoked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-113"><xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> Свойство может быть приведен на фактический класс определяемого пользователем делегата.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-113">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property can be cast to the actual class of the user-defined delegate.</span></span>  
  
 <span data-ttu-id="8f2f7-114">Например, если делегат, который был использован для асинхронного вызова имеет тип `MyDelegate`, делегат, который возвращается этим свойством должен быть приведен к `MyDelegate`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-114">For example, if the delegate that was used to make the asynchronous call is of type `MyDelegate`, the delegate that is returned by this property must be cast to `MyDelegate`.</span></span> <span data-ttu-id="8f2f7-115">Метод обратного вызова может затем вызвать делегата `EndInvoke` метод с корректной сигнатурой, чтобы получить результаты асинхронного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-115">The callback method can then call the delegate's `EndInvoke` method with the correct signature, in order to obtain the results of the asynchronous method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f2f7-116">В следующем примере кода демонстрируется использование <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> свойство для получения делегата, который был использован для асинхронного вызова, чтобы выполнить вызов `EndInvoke`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-116">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property to get the delegate that was used to make the asynchronous call, in order to call `EndInvoke`.</span></span> <span data-ttu-id="8f2f7-117">Пример приведения <xref:System.IAsyncResult>, который является единственным параметром метода обратного вызова, к <xref:System.Runtime.Remoting.Messaging.AsyncResult> объекта.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-117">The example casts the <xref:System.IAsyncResult>, which is the only parameter of the callback method, to an <xref:System.Runtime.Remoting.Messaging.AsyncResult> object.</span></span>  
  
 <span data-ttu-id="8f2f7-118">Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-118">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8f2f7-119">Дополнительные сведения о механизме работы данного примера обратного вызова, и Дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-119">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl&#xA;override this.AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="asyncResult.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f2f7-120">Интерфейс запроса <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-120">The request <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span></span></param>
        <param name="replySink"><span data-ttu-id="8f2f7-121">Интерфейс ответа <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-121">The response <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span></span></param>
        <summary><span data-ttu-id="8f2f7-122">Реализует интерфейс <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-122">Implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span></span></summary>
        <returns><span data-ttu-id="8f2f7-123">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-123">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-124"><xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> Метод <xref:System.Runtime.Remoting.Messaging.IMessageSink> интерфейса не имеет отношения к <xref:System.Runtime.Remoting.Messaging.AsyncResult> класса.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-124">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> method of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface is not relevant to the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.</span></span> <span data-ttu-id="8f2f7-125">Реализация по <xref:System.Runtime.Remoting.Messaging.AsyncResult> вызывает <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-125">Implementation by <xref:System.Runtime.Remoting.Messaging.AsyncResult> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8f2f7-126">Вместо этого получить <xref:System.Runtime.Remoting.Messaging.AsyncResult> путем приведения <xref:System.IAsyncResult> интерфейса, возвращаемого методом асинхронного вызова, сделанного с помощью делегата.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-126">Instead, obtain an <xref:System.Runtime.Remoting.Messaging.AsyncResult> by casting the <xref:System.IAsyncResult> interface returned by an asynchronous call made using a delegate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public virtual object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-127">Возвращает объект, предоставленный как последний параметр вызова метода <see langword="BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-127">Gets the object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span></span></summary>
        <value><span data-ttu-id="8f2f7-128">Объект, предоставленный как последний параметр вызова метода <see langword="BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-128">The object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-129">Дополнительные сведения о `BeginInvoke` метод, см. в разделе [асинхронного программирования с помощью делегатов](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-129">For more information about the `BeginInvoke` method, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f2f7-130">В следующем примере кода показано, как <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> свойство используется для передачи информации в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-130">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="8f2f7-131">В последнем параметре `BeginInvoke` вызов метода — это строка формата, используемую методом обратного вызова для форматирования выходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-131">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="8f2f7-132">Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-132">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8f2f7-133">Дополнительные сведения о механизме работы данного примера обратного вызова, и Дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-133">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-134">Возвращает <see cref="T:System.Threading.WaitHandle" />, который инкапсулирует дескрипторы синхронизации Win32 и разрешает реализацию различных схем синхронизации.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-134">Gets a <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span></span></summary>
        <value><span data-ttu-id="8f2f7-135"><see cref="T:System.Threading.WaitHandle" />, который инкапсулирует дескрипторы синхронизации Win32 и разрешает реализацию различных схем синхронизации.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-135">A <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-136"><xref:System.Threading.WaitHandle> Возвращает этот метод автоматически получает сигнал при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-136">The <xref:System.Threading.WaitHandle> returned by this method is automatically signaled when the asynchronous operation has completed.</span></span>  
  
 <span data-ttu-id="8f2f7-137">Дескриптор ожидания не закрывается автоматически при вызове `EndInvoke` в делегате, использованном для асинхронного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-137">The wait handle is not closed automatically when you call `EndInvoke` on the delegate that was used to make the asynchronous method call.</span></span> <span data-ttu-id="8f2f7-138">Если удалить все ссылки на дескриптор ожидания, системные ресурсы будут освобождены при удалении дескриптора ожидания сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-138">If you release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle.</span></span> <span data-ttu-id="8f2f7-139">Чтобы освободить системные ресурсы сразу после завершения использования дескриптора ожидания, вызовите <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-139">To free the system resources as soon as you are finished using the wait handle, call the <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8f2f7-140">Сборка мусора работает более эффективно Уничтожаемые объекты явно закрыт или удален.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-140">Garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8f2f7-141"><xref:System.Threading.WaitHandle> Содержащихся в <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> свойство может использоваться для блокировки текущего потока до завершения асинхронного вызова.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-141">The <xref:System.Threading.WaitHandle> contained in the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property can be used to block the current thread until the asynchronous call is complete.</span></span> <span data-ttu-id="8f2f7-142">Тем не менее <xref:System.Threading.WaitHandle> будет игнорировать <xref:System.AsyncCallback>, если таковой был указан во время `BeginInvoke` вызова.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-142">However the <xref:System.Threading.WaitHandle> will ignore the <xref:System.AsyncCallback>, if one was specified during the `BeginInvoke` call.</span></span> <span data-ttu-id="8f2f7-143">Таким образом, ситуация может возникнуть, когда приложение завершает работу перед <xref:System.AsyncCallback> завершено выполнение, даже если <xref:System.Threading.WaitHandle> используется блок до завершения асинхронного вызова.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-143">Therefore, a situation can occur where the application shuts down before the <xref:System.AsyncCallback> has finished executing, even if a <xref:System.Threading.WaitHandle> is used to block until the asynchronous call completion.</span></span> <span data-ttu-id="8f2f7-144">Пример такой ситуации, см. пример для <xref:System.Runtime.Remoting.Messaging.AsyncResult> класса и удалите <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> инструкции.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-144">For an example of such a situation, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class, and remove the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f2f7-145">Следующий пример демонстрирует, как использовать <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> свойство для получения <xref:System.Threading.WaitHandle>и Ожидание асинхронного вызова для делегата.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-145">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="8f2f7-146">Объект <xref:System.Threading.WaitHandle> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="8f2f7-146">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="8f2f7-147">Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-147">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8f2f7-148">Дополнительные сведения и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-148">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.WaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public virtual bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-149">Возвращает значение, определяющее, завершен ли вызов <see langword="BeginInvoke" /> синхронно.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-149">Gets a value indicating whether the <see langword="BeginInvoke" /> call completed synchronously.</span></span></summary>
        <value><span data-ttu-id="8f2f7-150"><see langword="true" />, если вызов <see langword="BeginInvoke" /> завершен синхронно; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-150"><see langword="true" /> if the <see langword="BeginInvoke" /> call completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-151">При обнаружении, `BeginInvoke` вызов завершен синхронно в <xref:System.AsyncCallback> делегата, вполне вероятно, что поток, который вызывается BeginInvoke является текущим потоком.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-151">If it is detected that the `BeginInvoke` call completed synchronously in the <xref:System.AsyncCallback> delegate, it is probable that the thread that called BeginInvoke is the current thread.</span></span> <span data-ttu-id="8f2f7-152">Большинство поставщиков <xref:System.IAsyncResult> интерфейс не будет использовать данную возможность и возвратят значение по умолчанию `false`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-152">Most providers of the <xref:System.IAsyncResult> interface will not use the capability and will return a default `false`.</span></span>  
  
 <span data-ttu-id="8f2f7-153">Текущая реализация <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> всегда возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-153">Current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvokeCalled">
      <MemberSignature Language="C#" Value="public bool EndInvokeCalled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndInvokeCalled" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberSignature Language="VB.NET" Value="Public Property EndInvokeCalled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndInvokeCalled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EndInvokeCalled : bool with get, set" Usage="System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-154">Возвращает или задает значение, указывающее, вызван ли <see langword="EndInvoke" /> в текущем <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-154">Gets or sets a value indicating whether <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span></span></summary>
        <value><span data-ttu-id="8f2f7-155"><see langword="true" />, если <see langword="EndInvoke" /> вызван в текущем <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-155"><see langword="true" /> if <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage GetReplyMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage GetReplyMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplyMessage () As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ GetReplyMessage();" />
      <MemberSignature Language="F#" Value="abstract member GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.GetReplyMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f2f7-156">Возвращает сообщение ответа на асинхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-156">Gets the response message for the asynchronous call.</span></span></summary>
        <returns><span data-ttu-id="8f2f7-157">Сообщение удаленного взаимодействие, которое должно представлять ответ на вызов метода удаленного объекта.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-157">A remoting message that should represent a response to a method call on a remote object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-158"><xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> Метод может возвращать объект после <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-158">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method can return an object after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method is called.</span></span> <span data-ttu-id="8f2f7-159"><xref:System.Runtime.Remoting.Messaging.IMessage> Возвращаемое значение может быть приведен к <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-159">The <xref:System.Runtime.Remoting.Messaging.IMessage> return value can be cast to an <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span></span>  
  
 <span data-ttu-id="8f2f7-160">Тем не менее не нужно вызывать эти методы напрямую.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-160">However, you do not need to call either of these methods directly.</span></span> <span data-ttu-id="8f2f7-161">Они предназначены для использования инфраструктурой удаленного взаимодействия платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-161">They are intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public virtual bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-162">Возвращает значение, указывающее, завершил ли сервер вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-162">Gets a value indicating whether the server has completed the call.</span></span></summary>
        <value><span data-ttu-id="8f2f7-163"><see langword="true" /> после завершения вызова сервером; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-163"><see langword="true" /> after the server has completed the call; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-164">Сервер не должен использовать все предоставленные клиентом ресурсы за пределами согласованный разделением семантики после установки <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-164">The server must not use any client supplied resources outside of the agreed upon sharing semantics after it sets the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property to `true`.</span></span> <span data-ttu-id="8f2f7-165">Таким образом, можно безопасно для клиента, чтобы удалить ресурсы после <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-165">Thus, it is safe for the client to destroy the resources after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property returns `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f2f7-166">В следующем примере показано, как использовать <xref:System.IAsyncResult.IsCompleted%2A> свойство <xref:System.Runtime.Remoting.Messaging.AsyncResult> возвращаемые `BeginInvoke` для обнаружения после завершения асинхронного вызова.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-166">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.Runtime.Remoting.Messaging.AsyncResult> returned by `BeginInvoke` to discover when an asynchronous call completes.</span></span> <span data-ttu-id="8f2f7-167">Это можно делать, когда асинхронный вызов выполнен из потока, обслуживающего пользовательский интерфейс.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-167">You might do this when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="8f2f7-168">Опрос завершения позволяет вызывающему потоку продолжить выполнение при асинхронном вызове для потока <xref:System.Threading.ThreadPool> .</span><span class="sxs-lookup"><span data-stu-id="8f2f7-168">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="8f2f7-169">Пример состоит из двух классов: класс, содержащий метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-169">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8f2f7-170">Дополнительные сведения и Дополнительные примеры асинхронного вызова методов с помощью делегатов, см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8f2f7-170">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f2f7-171">Возвращает следующий приемник сообщений в цепочке приемников.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-171">Gets the next message sink in the sink chain.</span></span></summary>
        <value><span data-ttu-id="8f2f7-172">Интерфейс <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />, представляющий следующий приемник сообщений в цепочке приемников.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-172">An <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface that represents the next message sink in the sink chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-173">Текущая реализация <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-173">The current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageCtrl">
      <MemberSignature Language="C#" Value="public virtual void SetMessageCtrl (System.Runtime.Remoting.Messaging.IMessageCtrl mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMessageCtrl(class System.Runtime.Remoting.Messaging.IMessageCtrl mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl(System.Runtime.Remoting.Messaging.IMessageCtrl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMessageCtrl (mc As IMessageCtrl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMessageCtrl(System::Runtime::Remoting::Messaging::IMessageCtrl ^ mc);" />
      <MemberSignature Language="F#" Value="abstract member SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit&#xA;override this.SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit" Usage="asyncResult.SetMessageCtrl mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="System.Runtime.Remoting.Messaging.IMessageCtrl" />
      </Parameters>
      <Docs>
        <param name="mc"><span data-ttu-id="8f2f7-174"><see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> для текущего удаленного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-174">The <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call.</span></span></param>
        <summary><span data-ttu-id="8f2f7-175">Задает <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> для текущего вызова удаленного метода, что позволяет управлять асинхронными сообщениями после их отправки.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-175">Sets an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call, which provides a way to control asynchronous messages after they have been dispatched.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-176">Необходимо вызвать <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-176">You do not need to call the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f2f7-177">Сообщение ответа на вызов метода удаленного объекта.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-177">A response message to a method call on a remote object.</span></span></param>
        <summary><span data-ttu-id="8f2f7-178">Синхронно обрабатывает сообщение ответа, возвращенное вызовом метода удаленного объекта.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-178">Synchronously processes a response message returned by a method call on a remote object.</span></span></summary>
        <returns><span data-ttu-id="8f2f7-179">Возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-179">Returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f2f7-180"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Реализует метод <xref:System.Runtime.Remoting.Messaging.IMessageSink> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-180">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method implements the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="8f2f7-181">Необходимо вызывать этот метод напрямую.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-181">You do not need to call this method directly.</span></span> <span data-ttu-id="8f2f7-182">Он предназначен для использования инфраструктурой удаленного взаимодействия платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-182">It is intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 <span data-ttu-id="8f2f7-183"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> вызывающий код потребителя <xref:System.AsyncCallback> делегировать.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-183"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> invokes the consumer code's <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="8f2f7-184">Он также задает <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> экземпляр, возвращаемый <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-184">It also sets the <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> instance returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method.</span></span> <span data-ttu-id="8f2f7-185">Если `msg` принадлежит к типу <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, возвращается тот же объект <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-185">If the `msg` parameter is of type <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, the same object is returned by <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span></span> <span data-ttu-id="8f2f7-186">В противном случае возвращается ответного сообщения, которое содержит исключение удаленного доступа.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-186">Otherwise, a reply message that contains a remoting exception is returned.</span></span>  
  
 <span data-ttu-id="8f2f7-187"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> также изменяет значение, возвращенное <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8f2f7-187"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> also modifies the value returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>