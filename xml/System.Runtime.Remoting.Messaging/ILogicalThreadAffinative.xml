<Type Name="ILogicalThreadAffinative" FullName="System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3678102e6ab1363882e5159a05e3f2b57a63512f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69266964" /></Metadata><TypeSignature Language="C#" Value="public interface ILogicalThreadAffinative" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogicalThreadAffinative" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogicalThreadAffinative" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogicalThreadAffinative" />
  <TypeSignature Language="F#" Value="type ILogicalThreadAffinative = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Помечает объект, который может распространяться вне <see cref="T:System.AppDomain" /> в <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове удаленного метода к объекту в другом <xref:System.AppDomain>, текущий <xref:System.Runtime.Remoting.Messaging.CallContext> класс создает объект <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> , который перемещается вместе с вызовом к удаленному расположению. Только объекты, которые предоставляют <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> интерфейс и хранятся в, <xref:System.Runtime.Remoting.Messaging.CallContext> распространяются вне <xref:System.AppDomain>. Объекты, которые не поддерживают этот интерфейс, не передаются в <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> экземплярах с удаленными вызовами метода.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> интерфейса для передачи [объектов Principal и Identity](~/docs/standard/security/principal-and-identity-objects.md) в удаленное расположение для идентификации. Код для `HelloServiceClass` класса, используемого в образце, см. в примере <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> для метода. Чтобы просмотреть код для класса сервера, используемого в этом примере, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> класса. Чтобы просмотреть код для клиентского класса, используемого в примере, см. пример для <xref:System.Runtime.Remoting.Messaging.CallContext> класса.  
  
 [!code-cpp[CallContext#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/service.cpp#2)]
 [!code-csharp[CallContext#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/service.cs#2)]
 [!code-vb[CallContext#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/service.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
