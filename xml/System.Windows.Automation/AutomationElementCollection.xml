<Type Name="AutomationElementCollection" FullName="System.Windows.Automation.AutomationElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0ce571e3c9c4a7145c27b8a7da780928ee75e63" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70634836" /></Metadata><TypeSignature Language="C#" Value="public class AutomationElementCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationElementCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElementCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type AutomationElementCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8dc6e-101">Представляет коллекцию объектов <see cref="T:System.Windows.Automation.AutomationElement" />.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-101">Represents a collection of <see cref="T:System.Windows.Automation.AutomationElement" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dc6e-102"><xref:System.Windows.Automation.AutomationElementCollection>используется в качестве возвращаемого типа для таких методов, <xref:System.Windows.Automation.AutomationElement.FindAll%2A>как.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-102"><xref:System.Windows.Automation.AutomationElementCollection> is used as the return type for methods such as <xref:System.Windows.Automation.AutomationElement.FindAll%2A>.</span></span> <span data-ttu-id="8dc6e-103">Он не предназначен для использования в коллекциях, определяемых приложением, для которых следует использовать более универсальный класс, например <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-103">It is not intended to be used for application-defined collections, for which you should use a more generic class such as <xref:System.Collections.ArrayList>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171"><span data-ttu-id="8dc6e-104">Получение элементов автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="8dc6e-104">Obtaining UI Automation Elements</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8dc6e-105">Копирует элементы коллекции в массив, начиная с указанного индекса в целевом массиве.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-105">Copies the collection's elements to an array, starting at the specified index in the target array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="automationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8dc6e-106">Назначение элементов, копируемых из коллекции.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-106">The destination of the elements copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="8dc6e-107">Начинающийся с нуля индекс в целевом массиве, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-107">The zero-based index in the target array where copying should begin.</span></span></param>
        <summary><span data-ttu-id="8dc6e-108">Копирует элементы коллекции в массив, начиная с указанного индекса в целевом массиве.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-108">Copies the collection's elements to an array, starting at the specified index in the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dc6e-109">В следующем примере показано, как скопировать объект <xref:System.Windows.Automation.AutomationElementCollection> в массив объектов.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-109">The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of objects.</span></span>  
  
 [!code-csharp[UIAClient_snip#118](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#118)]
 [!code-vb[UIAClient_snip#118](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Automation.AutomationElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Automation.AutomationElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As AutomationElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Automation::AutomationElement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Automation.AutomationElement[] * int -&gt; unit" Usage="automationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Automation.AutomationElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8dc6e-110">Назначение элементов, копируемых из коллекции.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-110">The destination of the elements copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="8dc6e-111">Начинающийся с нуля индекс в целевом массиве, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-111">The zero-based index in the target array where copying should begin.</span></span></param>
        <summary><span data-ttu-id="8dc6e-112">Копирует элементы коллекции в специальный экземпляр массива, начиная с указанного индекса в целевом массиве.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-112">Copies the collection's elements to a specialized array instance, starting at the specified index in the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dc6e-113">В следующем примере показано, как скопировать объект <xref:System.Windows.Automation.AutomationElementCollection> в <xref:System.Windows.Automation.AutomationElement> массив объектов.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-113">The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of <xref:System.Windows.Automation.AutomationElement> objects.</span></span>  
  
 [!code-csharp[UIAClient_snip#117](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#117)]
 [!code-vb[UIAClient_snip#117](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#117)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8dc6e-114">Целевой массив недостаточно большой, или параметр <paramref name="index" /> превышает границы массива.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-114">The destination array is not large enough, or <paramref name="index" /> is outside the bounds of the array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Automation.AutomationElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dc6e-115">Возвращает количество элементов в данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-115">Gets the number of elements in this collection.</span></span></summary>
        <value><span data-ttu-id="8dc6e-116">Количество элементов</span><span class="sxs-lookup"><span data-stu-id="8dc6e-116">The number of elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dc6e-117">В следующем примере показано <xref:System.Windows.Automation.AutomationElementCollection.Count%2A> используемое свойство.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-117">The following example shows the <xref:System.Windows.Automation.AutomationElementCollection.Count%2A> property being used.</span></span>  
  
 [!code-csharp[UIAClient_snip#117](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#117)]
 [!code-vb[UIAClient_snip#117](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="automationElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dc6e-118">Возвращает перечислитель, который можно использовать для итерации по элементам коллекции.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-118">Returns an enumerator that can be used to iterate through the items in the collection.</span></span></summary>
        <returns><span data-ttu-id="8dc6e-119">Перечислитель, который может использоваться для выполнения итерации по объекту <see cref="T:System.Windows.Automation.AutomationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-119">An enumerator that can be used to iterate through the <see cref="T:System.Windows.Automation.AutomationElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Automation.AutomationElementCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dc6e-120">Возвращает значение, которое показывает, является ли объект <see cref="T:System.Windows.Automation.AutomationElementCollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="8dc6e-120">Gets a value indicating whether the <see cref="T:System.Windows.Automation.AutomationElementCollection" /> object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="8dc6e-121">Всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-121">Always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dc6e-122">Не <xref:System.Windows.Automation.AutomationElementCollection> является потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-122">An <xref:System.Windows.Automation.AutomationElementCollection> is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ default[int] { System::Windows::Automation::AutomationElement ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElementCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8dc6e-123">Индекс (с нуля) элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-123">The zero-based index of the element in the collection.</span></span></param>
        <summary><span data-ttu-id="8dc6e-124">Возвращает объект <see cref="T:System.Windows.Automation.AutomationElement" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-124">Gets the <see cref="T:System.Windows.Automation.AutomationElement" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="8dc6e-125">Параметр <see cref="T:System.Windows.Automation.AutomationElement" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-125">The <see cref="T:System.Windows.Automation.AutomationElement" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dc6e-126">В следующем примере первый элемент извлекается из <xref:System.Windows.Automation.AutomationElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-126">In the following example, the first element is retrieved from an <xref:System.Windows.Automation.AutomationElementCollection>.</span></span>  
  
 [!code-csharp[UIAClient_snip#182](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#182)]
 [!code-vb[UIAClient_snip#182](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#182)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="8dc6e-127">Отрицательное целое число, указанное для параметра <paramref name="index" /> или <paramref name="index" />, больше или равно значению <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-127">A negative integer was specified for <paramref name="index" />, or <paramref name="index" /> is greater than or equal to <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Automation.AutomationElementCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dc6e-128">Получает объект, который можно использовать для синхронизации доступа к коллекции <see cref="T:System.Windows.Automation.AutomationElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-128">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Automation.AutomationElementCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="8dc6e-129">Объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="8dc6e-129">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
