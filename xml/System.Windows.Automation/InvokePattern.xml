<Type Name="InvokePattern" FullName="System.Windows.Automation.InvokePattern">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c5e0cf3a0f268f88ccdf71cd1b01ca3b3e02060" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69223522" /></Metadata><TypeSignature Language="C#" Value="public class InvokePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.InvokePattern" />
  <TypeSignature Language="VB.NET" Value="Public Class InvokePattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokePattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type InvokePattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="caeb5-101">Представляет элементы управления, которые инициируют или выполняют одно однозначное действие и не поддерживают данные о своем состоянии при работе.</span><span class="sxs-lookup"><span data-stu-id="caeb5-101">Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caeb5-102">Элементы управления <xref:System.Windows.Automation.InvokePattern> поддерживают, если такое же поведение не предоставляется через другой шаблон элемента управления.</span><span class="sxs-lookup"><span data-stu-id="caeb5-102">Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern.</span></span> <span data-ttu-id="caeb5-103">Например, если <xref:System.Windows.Automation.InvokePattern.Invoke%2A> метод в элементе управления выполняет то же действие, <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> что и метод или <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> , элемент управления не будет поддерживать <xref:System.Windows.Automation.InvokePattern>.</span><span class="sxs-lookup"><span data-stu-id="caeb5-103">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="caeb5-104">элементы, представляющие такие элементы управления, как флажки и переключатели, которые поддерживают состояние, <xref:System.Windows.Automation.TogglePattern> а <xref:System.Windows.Automation.SelectionItemPattern>не поддерживают или.</span><span class="sxs-lookup"><span data-stu-id="caeb5-104">elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IInvokeProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="caeb5-105">Общие сведения о шаблонах элементов управления модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="caeb5-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md"><span data-ttu-id="caeb5-106">Шаблоны элементов управления модели автоматизации пользовательского интерфейса для клиентов</span><span class="sxs-lookup"><span data-stu-id="caeb5-106">UI Automation Control Patterns for Clients</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="caeb5-107">Вызов элемента управления с помощью модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="caeb5-107">Invoke a Control Using UI Automation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="caeb5-108">Пример пункта меню InvokePattern и ExpandCollapsePattern</span><span class="sxs-lookup"><span data-stu-id="caeb5-108">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.InvokePattern.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="member this.Invoke : unit -&gt; unit" Usage="invokePattern.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="caeb5-109">Отправляет запрос для активации элемента управления и инициализации его единственного однозначного действия.</span><span class="sxs-lookup"><span data-stu-id="caeb5-109">Sends a request to activate a control and initiate its single, unambiguous action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caeb5-110">Вызовы метода <xref:System.Windows.Automation.InvokePattern.Invoke%2A> должны возвращаться немедленно без блокировки.</span><span class="sxs-lookup"><span data-stu-id="caeb5-110">Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking.</span></span> <span data-ttu-id="caeb5-111">Однако это поведение полностью зависит [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] от реализации поставщика.</span><span class="sxs-lookup"><span data-stu-id="caeb5-111">However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation.</span></span> <span data-ttu-id="caeb5-112">В сценариях, <xref:System.Windows.Automation.InvokePattern.Invoke%2A> в которых вызов вызывает ошибку блокировки (например, модальное диалоговое окно), для вызова метода может потребоваться отдельный вспомогательный поток.</span><span class="sxs-lookup"><span data-stu-id="caeb5-112">In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caeb5-113">В следующем примере <xref:System.Windows.Automation.InvokePattern> шаблон элемента управления получается из элемента управления <xref:System.Windows.Automation.InvokePattern.Invoke%2A> и вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="caeb5-113">In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.</span></span>  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="caeb5-114">Элемент не поддерживает шаблон элемента управления <see cref="T:System.Windows.Automation.InvokePattern" />, или он является скрытым или заблокированным.</span><span class="sxs-lookup"><span data-stu-id="caeb5-114">The element does not support the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern or is hidden or blocked.</span></span></exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException"><span data-ttu-id="caeb5-115">Элемент не включен.</span><span class="sxs-lookup"><span data-stu-id="caeb5-115">The element is not enabled.</span></span> <span data-ttu-id="caeb5-116">Может вызываться, когда поставщик автоматизации пользовательского интерфейса реализовал собственную обработку свойства <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="caeb5-116">Can be raised when a UI Automation provider has implemented its own handling of the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> property.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="caeb5-117">Вызов элемента управления с помощью модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="caeb5-117">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="caeb5-118">Пример пункта меню InvokePattern и ExpandCollapsePattern</span><span class="sxs-lookup"><span data-stu-id="caeb5-118">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caeb5-119">Идентифицирует событие, которое вызывается при вызове или активации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="caeb5-119">Identifies the event raised when a control is invoked or activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caeb5-120">Этот идентификатор используется клиентскими приложениями модели автоматизации пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="caeb5-120">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="caeb5-121">Поставщики автоматизации пользовательского интерфейса должны использовать эквивалентное поле <xref:System.Windows.Automation.InvokePatternIdentifiers>в.</span><span class="sxs-lookup"><span data-stu-id="caeb5-121">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="caeb5-122">Идентификатор передается в качестве параметра в <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>. <xref:System.Windows.Automation.InvokePattern.InvokedEvent></span><span class="sxs-lookup"><span data-stu-id="caeb5-122">The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caeb5-123">В следующем примере обработчик событий идентифицирует событие как вызванное событие, сравнивая <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> в аргументах события <xref:System.Windows.Automation.InvokePattern.InvokedEvent> с полем идентификатора.</span><span class="sxs-lookup"><span data-stu-id="caeb5-123">In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier field.</span></span>  
  
 [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="caeb5-124">Вызов элемента управления с помощью модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="caeb5-124">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="caeb5-125">Пример пункта меню InvokePattern и ExpandCollapsePattern</span><span class="sxs-lookup"><span data-stu-id="caeb5-125">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.InvokePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caeb5-126">Определяет шаблон элемента управления <see cref="T:System.Windows.Automation.InvokePattern" />.</span><span class="sxs-lookup"><span data-stu-id="caeb5-126">Identifies the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caeb5-127">Этот идентификатор используется клиентскими приложениями модели автоматизации пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="caeb5-127">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="caeb5-128">Поставщики автоматизации пользовательского интерфейса должны использовать эквивалентное поле <xref:System.Windows.Automation.InvokePatternIdentifiers>в.</span><span class="sxs-lookup"><span data-stu-id="caeb5-128">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="caeb5-129">Идентификатор шаблона передается методам, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> например, для получения шаблона элемента управления, представляющего интерес из указанного. <xref:System.Windows.Automation.AutomationElement></span><span class="sxs-lookup"><span data-stu-id="caeb5-129">The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caeb5-130">В следующем примере <xref:System.Windows.Automation.InvokePattern> шаблон элемента управления получается из элемента управления <xref:System.Windows.Automation.InvokePattern.Invoke%2A> и вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="caeb5-130">In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.</span></span>  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="caeb5-131">Вызов элемента управления с помощью модели автоматизации пользовательского интерфейса</span><span class="sxs-lookup"><span data-stu-id="caeb5-131">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="caeb5-132">Пример пункта меню InvokePattern и ExpandCollapsePattern</span><span class="sxs-lookup"><span data-stu-id="caeb5-132">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
