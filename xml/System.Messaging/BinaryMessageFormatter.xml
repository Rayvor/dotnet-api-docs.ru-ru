<Type Name="BinaryMessageFormatter" FullName="System.Messaging.BinaryMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e10a52fc29a480a4d626cc03f43198b0e711ce77" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70670146" /></Metadata><TypeSignature Language="C#" Value="public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.BinaryMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type BinaryMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9c295-101">Сериализует или десериализует объект или весь граф подключенных объектов, помещая их в текст сообщения службы Message Queuing или извлекая из текста сообщения службы Message Queuing с использованием двоичного формата.</span><span class="sxs-lookup"><span data-stu-id="9c295-101">Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="9c295-102"><xref:System.Messaging.BinaryMessageFormatter> Является очень эффективным и может использоваться для сериализации большинства объектов.</span><span class="sxs-lookup"><span data-stu-id="9c295-102">The <xref:System.Messaging.BinaryMessageFormatter> is very efficient and can be used to serialize most objects.</span></span> <span data-ttu-id="9c295-103">Результат является очень компактным и быстрым для синтаксического анализа, но не допускает слабо связанный обмен сообщениями, <xref:System.Messaging.XmlMessageFormatter> как это делает.</span><span class="sxs-lookup"><span data-stu-id="9c295-103">The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does.</span></span> <span data-ttu-id="9c295-104">Слабая связь означает, что клиент и сервер могут независимо от версии передаваемого и получаемого типа.</span><span class="sxs-lookup"><span data-stu-id="9c295-104">Loosely coupled means that the client and the server can independently version the type that is sent and received.</span></span>  
  
 <span data-ttu-id="9c295-105">Когда приложение отправляет сообщение в очередь с помощью экземпляра <xref:System.Messaging.MessageQueue> класса, модуль форматирования сериализует объект в поток и вставляет его в текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c295-105">When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="9c295-106">При чтении из очереди с помощью <xref:System.Messaging.MessageQueue>модуль форматирования десериализует данные сообщения <xref:System.Messaging.Message.Body%2A> в свойство объекта <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="9c295-106">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="9c295-107"><xref:System.Messaging.BinaryMessageFormatter>обеспечивает более высокую пропускную способность, <xref:System.Messaging.XmlMessageFormatter>чем.</span><span class="sxs-lookup"><span data-stu-id="9c295-107"><xref:System.Messaging.BinaryMessageFormatter> provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="9c295-108">Используйте, <xref:System.Messaging.BinaryMessageFormatter> когда требуется чистая скорость, а не слабо связанный обмен сообщениями.</span><span class="sxs-lookup"><span data-stu-id="9c295-108">Use the <xref:System.Messaging.BinaryMessageFormatter> when pure speed rather than loosely coupled messaging is desired.</span></span>  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c295-109">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="9c295-109">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c295-110">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" /> без задания стиля типа или стиля сборки верхнего объекта.</span><span class="sxs-lookup"><span data-stu-id="9c295-110">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c295-111">Необходимо указать значения для <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> свойства (которое определяет, как располагается корневой объект в графе) <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> и свойство (определяющее способ расположения описаний типов объектов) перед <xref:System.Messaging.BinaryMessageFormatter> использованием экземпляра класса для Сериализация и отправка сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c295-111">You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topObjectFormat As FormatterAssemblyStyle, typeFormat As FormatterTypeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle topObjectFormat, System::Runtime::Serialization::Formatters::FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="F#" Value="new System.Messaging.BinaryMessageFormatter : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.Formatters.FormatterTypeStyle -&gt; System.Messaging.BinaryMessageFormatter" Usage="new System.Messaging.BinaryMessageFormatter (topObjectFormat, typeFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topObjectFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="typeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Parameters>
      <Docs>
        <param name="topObjectFormat"><span data-ttu-id="9c295-112">Определяет, каким образом верхний (корневой) объект графа располагается в сериализованном потоке.</span><span class="sxs-lookup"><span data-stu-id="9c295-112">Determines how the top (root) object of a graph is laid out in the serialized stream.</span></span></param>
        <param name="typeFormat"><span data-ttu-id="9c295-113">Определяет порядок расположения описаний типов в сериализованном потоке.</span><span class="sxs-lookup"><span data-stu-id="9c295-113">Determines how type descriptions are laid out in the serialized stream.</span></span></param>
        <summary><span data-ttu-id="9c295-114">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" /> с заданием форматов корневого объекта и описаний типов.</span><span class="sxs-lookup"><span data-stu-id="9c295-114">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="binaryMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9c295-115">Объект <see cref="T:System.Messaging.Message" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="9c295-115">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="9c295-116">Определяет, может ли модуль форматирования выполнить десериализацию содержимого сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c295-116">Determines whether the formatter can deserialize the contents of the message.</span></span></summary>
        <returns><span data-ttu-id="9c295-117">Значение <see langword="true" />, если двоичный модуль форматирования сообщений может выполнить десериализацию сообщения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c295-117"><see langword="true" /> if the binary message formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="9c295-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A>Возвращает `false` , если текст сообщения не является двоичным объектом.</span><span class="sxs-lookup"><span data-stu-id="9c295-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `false` if the message body is not a binary object.</span></span>  
  
 <span data-ttu-id="9c295-119">На принимающем компьютере возвращает <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> `true` , если сборка класса для десериализации существует локально.</span><span class="sxs-lookup"><span data-stu-id="9c295-119">On the receiving computer, <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `true` if the assembly for the class to be deserialized exists locally.</span></span> <span data-ttu-id="9c295-120">Сборка должна быть найдена в глобальном кэше сборок или связана с приложением (например, если объект представляет пользовательский класс).</span><span class="sxs-lookup"><span data-stu-id="9c295-120">The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c295-121">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c295-121">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="binaryMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c295-122">Создает экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" />, свойства чтения и записи (форматы корневого объекта и описания типа) которого такие же, как и у текущего класса <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="9c295-122">Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="9c295-123">Объект со свойствами, идентичными свойствам данного объекта <see cref="T:System.Messaging.BinaryMessageFormatter" />, но с метаданными, которые не определяют его как экземпляр класса модуля форматирования.</span><span class="sxs-lookup"><span data-stu-id="9c295-123">An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]
 
<span data-ttu-id="9c295-124">Этот метод создает копию модуля форматирования и инициализирует все его свойства значениями этого <xref:System.Messaging.BinaryMessageFormatter>параметра.</span><span class="sxs-lookup"><span data-stu-id="9c295-124">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>.</span></span> <span data-ttu-id="9c295-125">Он используется для масштабируемости, но не гарантирует безопасность потоков чтения или записи.</span><span class="sxs-lookup"><span data-stu-id="9c295-125">It is used for scalability, but does not guarantee read or write thread safety.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="binaryMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9c295-126">Сообщение <see cref="T:System.Messaging.Message" /> в двоичном формате, предназначенное для десериализации.</span><span class="sxs-lookup"><span data-stu-id="9c295-126">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="9c295-127">Считывает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</span><span class="sxs-lookup"><span data-stu-id="9c295-127">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="9c295-128">Десериализованное сообщение.</span><span class="sxs-lookup"><span data-stu-id="9c295-128">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="9c295-129">Текст сообщения должен быть в двоичном формате, и тот же сериализатор должен использоваться для десериализации сообщения, которое изначально было сериализовано.</span><span class="sxs-lookup"><span data-stu-id="9c295-129">The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</span></span> <span data-ttu-id="9c295-130">Если текст представляет пользовательский класс, сборка для этого класса должна существовать локально.</span><span class="sxs-lookup"><span data-stu-id="9c295-130">If the body represents a custom class, the assembly for that class must exist locally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c295-131">Свойство <see cref="P:System.Messaging.Message.BodyType" /> сообщения не обозначает двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="9c295-131">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c295-132">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c295-132">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TopObjectFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObjectFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle TopObjectFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TopObjectFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTopObjectFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c295-133">Возвращает или задает значение, которое определяет порядок десериализации верхнего (корневого) объекта графа в части, касающейся поиска и загрузки сборки этого потока.</span><span class="sxs-lookup"><span data-stu-id="9c295-133">Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</span></span></summary>
        <value><span data-ttu-id="9c295-134">Одно из значений перечисления, определяющее поведение десериализации.</span><span class="sxs-lookup"><span data-stu-id="9c295-134">One of the enumeration values that defines the deserialization behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

<span data-ttu-id="9c295-135">В настоящее время следует принять значение по умолчанию `AssemblyStyle`,.</span><span class="sxs-lookup"><span data-stu-id="9c295-135">Currently, you should accept the default value, `AssemblyStyle`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTypeFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c295-136">Возвращает или задает значение, которое определяет расположение описаний типа в сериализованном потоке.</span><span class="sxs-lookup"><span data-stu-id="9c295-136">Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</span></span></summary>
        <value><span data-ttu-id="9c295-137">Одно из значений перечисления, определяющее формат описания типа.</span><span class="sxs-lookup"><span data-stu-id="9c295-137">One of the enumeration values that defines the type description format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="9c295-138">В настоящее время следует принять значение по умолчанию `TypesWhenNeeded`,.</span><span class="sxs-lookup"><span data-stu-id="9c295-138">Currently, you should accept the default value, `TypesWhenNeeded`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="binaryMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9c295-139">Сообщение <see cref="T:System.Messaging.Message" />, свойство <see cref="P:System.Messaging.Message.Body" /> которого будет содержать сериализованный объект.</span><span class="sxs-lookup"><span data-stu-id="9c295-139">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="9c295-140">Объект, который должен быть сериализован в текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c295-140">The object to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="9c295-141">Сериализует объект в текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c295-141">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="9c295-142">Не нужно указывать формат верхнего объекта и формат типа для записи в очередь, так как они должны быть в процессе чтения.</span><span class="sxs-lookup"><span data-stu-id="9c295-142">The top object format and type format need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="9c295-143">Свойства <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> и <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>  используются модулем форматирования только при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c295-143">The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="9c295-144"><xref:System.Messaging.BinaryMessageFormatter> Может выполнять сериализацию большинства объектов, но результат не является слабо связанным.</span><span class="sxs-lookup"><span data-stu-id="9c295-144">The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled.</span></span> <span data-ttu-id="9c295-145">Однако он является компактным, поэтому модуль форматирования эффективен для больших объектов.</span><span class="sxs-lookup"><span data-stu-id="9c295-145">However, it is compact, so the formatter is efficient for large objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c295-146">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c295-146">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>
