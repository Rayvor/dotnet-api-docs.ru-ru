<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="606b0f7492088e4785a8d9beb805a9a976740b95" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70572785" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет контекст безопасности для сообщения в очереди.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Контекст безопасности содержит кэшированные сведения о безопасности, такие как внутренний сертификат, соответствующий закрытый ключ, идентификатор безопасности пользователя, необходимый для присоединения сертификата и идентификатора отправителя к сообщению при запросе проверки подлинности.  
  
 Если клиент, например приложение ASP.NET, олицетворяет пользователя для отправки сообщения в очередь, идентификатор пользователя используется для доступа к очереди. Если очередь является удаленной, эти учетные данные кэшируются и используются для сообщений, которые впоследствии отправляются в очередь. Таким образом, идентификатор безопасности в последующих сообщениях будет кэшированным идентификатором первого пользователя, отправившего сообщение в очередь. Кэшированное удостоверение первого пользователя, отправившего сообщение в очередь, будет использоваться для последующих пользователей.  
  
 Чтобы преодолеть эту проблему, задайте контекст безопасности, используя <xref:System.Messaging.Message.SecurityContext%2A> перед отправкой сообщения в удаленную очередь, чтобы убедиться, что учетные данные текущего пользователя используются для получения доступа к очереди. Однако Рекомендуемая рекомендация заключается в следующем:  
  
1.  Сделайте очередь подлинной очередью.  
  
2.  Запустите приложение ASP.NET как удостоверение домена и Авторизуйте это приложение для записи в очередь.  
  
3.  Не олицетворяйте пользователя при использовании очереди. Вместо этого получите удостоверение вызывающего объекта и либо выполните проверку авторизации в приложении ASP.NET, либо включите удостоверение вызывающей стороны как часть сообщения и выполните проверку авторизации в приложении получателя.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Messaging.SecurityContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SecurityContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="securityContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
