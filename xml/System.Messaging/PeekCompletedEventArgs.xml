<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06d7d0e11493b9c6ffec8fc3198ba8fa4a7120ba" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70696046" /></Metadata><TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />. Когда асинхронная операция считывания вызывает обработчик событий, экземпляр этого класса передается в обработчик.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании уведомления о событии для асинхронного просмотра (чтения без удаления) сообщений из очереди необходимо создать метод, обрабатывающий обработку сообщений. Код должен вызывать <xref:System.Messaging.MessageQueue.BeginPeek%2A> , чтобы начать асинхронную обработку. При просмотре сообщения приложение получает уведомление через <xref:System.Messaging.MessageQueue.PeekCompleted> событие. Экземпляр <xref:System.Messaging.PeekCompletedEventArgs> передается в делегат события, вызывающий обработчик событий. Данные, связанные с <xref:System.Messaging.MessageQueue.PeekCompleted> событием, содержатся в <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> параметре делегата.  
  
 Существует два способа предоставления уведомлений о завершении событий: уведомления о событиях и обратные вызовы. <xref:System.Messaging.PeekCompletedEventArgs>используется только с уведомлением о событии. Сведения о сравнении обратных вызовов и уведомления о событиях см. в разделе "события и обратные вызовы" на сайте MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs>предоставляет доступ к сообщению, которое инициировало окончание асинхронной операции просмотра через <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> элемент. Это альтернативный доступ к сообщению, который работает практически так же, как и вызов <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода создается обработчик события для <xref:System.Messaging.MessageQueue.PeekCompleted> события, который связывается с делегатом события с <xref:System.Messaging.PeekCompletedEventHandler>помощью. Обработчик событий, `MyPeekCompleted`, считывает сообщение и записывает его метку на экран.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает результат запрошенной асинхронной операции.</summary>
        <value>Объект <see cref="T:System.IAsyncResult" />, содержащий данные, связанные с операцией считывания.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A>определяет текущие или завершенные асинхронные операции. Свойство содержит данные, которые помогают определить, какие из нескольких возможных асинхронных операций должны быть завершены, и при передаче в обработчик <xref:System.Messaging.MessageQueue.EndPeek%2A> событий предоставляет доступ к сообщению, связанному с завершенной операцией.  
  
 При вызове <xref:System.Messaging.MessageQueue.BeginPeek%2A>метод <xref:System.IAsyncResult> возвращается немедленно, несмотря на то что сообщение, если оно существует, еще не получено, так как операция не завершена. <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> Указывает состояние асинхронной операции. <xref:System.Messaging.MessageQueue.BeginPeek%2A>Создает объект, который изменяется во всей операции до <xref:System.Messaging.MessageQueue.EndPeek%2A> завершения.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сообщение, связанное с данной асинхронной операцией считывания.</summary>
        <value>Объект <see cref="T:System.Messaging.Message" />, представляющий собой конечный результат асинхронной операции считывания.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> Свойство предоставляет средства для получения сообщения, которое инициировало завершение асинхронной операции просмотра.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>вызывается при первом <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> считывании свойства, поэтому перед получением значения этого свойства нет необходимости <xref:System.Messaging.MessageQueue.EndPeek%2A> вызывать.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">Невозможно извлечь <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />. Возможно, в асинхронной операции истек срок действия тайм-аута.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>
