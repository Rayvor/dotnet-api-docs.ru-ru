<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcf03214bd0e54119fc99b044459a67f8df68556" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68396449" /></Metadata><TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type XmlMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="45f5c-101">Сериализует объекты в текст сообщения или десериализует текст сообщения в объекты, используя для этого формат XML, основанный на определении схемы XSD.</span><span class="sxs-lookup"><span data-stu-id="45f5c-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-102">— Это модуль форматирования по умолчанию, который <xref:System.Messaging.MessageQueue> используется экземпляром для сериализации сообщений, записанных в очередь. <xref:System.Messaging.XmlMessageFormatter></span><span class="sxs-lookup"><span data-stu-id="45f5c-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="45f5c-103">При создании экземпляра <xref:System.Messaging.MessageQueue> <xref:System.Messaging.XmlMessageFormatter> экземпляр создается для <xref:System.Messaging.MessageQueue>вас и связывается с.</span><span class="sxs-lookup"><span data-stu-id="45f5c-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="45f5c-104">Можно указать другой модуль форматирования, создав его в коде и назначив его <xref:System.Messaging.MessageQueue.Formatter%2A> свойству. <xref:System.Messaging.MessageQueue></span><span class="sxs-lookup"><span data-stu-id="45f5c-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="45f5c-105">Экземпляр очереди по умолчанию <xref:System.Messaging.XmlMessageFormatter> может быть использован для записи в очередь, но не может использоваться для чтения из очереди, пока не задано <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойство или <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> модуля форматирования.</span><span class="sxs-lookup"><span data-stu-id="45f5c-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="45f5c-106">Можно задать одно или оба этих значения в экземпляре модуля форматирования по умолчанию или создать новый экземпляр модуля форматирования и задать значения автоматически, передав их в качестве аргументов в соответствующий <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="45f5c-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="45f5c-107">При указании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, а не, тип существование проверяется во время компиляции, а не на время чтения, уменьшая вероятность ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="45f5c-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>требует, чтобы каждая запись была полностью квалифицирована, указывая ее имя сборки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="45f5c-109">Кроме того, при работе с несколькими параллельными версиями номер версии также должен быть добавлен к имени целевого типа.</span><span class="sxs-lookup"><span data-stu-id="45f5c-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="45f5c-110">Свойства <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают модулю форматирования, какие схемы следует пытаться сопоставить при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="45f5c-111">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="45f5c-112">Экземпляр, сериализованный в тексте сообщения, должен соответствовать одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="45f5c-113">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> метода метод создает объект типа, соответствующий указанной схеме, и считывает в него текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="45f5c-114">При чтении из очереди необходимо задать только одно из двух свойств, но можно задать и то, и другое.</span><span class="sxs-lookup"><span data-stu-id="45f5c-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="45f5c-115">Набор типов — это объединенный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="45f5c-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="45f5c-116">Решение о том, какое свойство следует использовать, зависит от вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="45f5c-117">Если текст сообщения содержит тип, схема которого не совпадает ни с одним из типов в массиве для любого из свойств, при считывании сообщения будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="45f5c-118"><xref:System.Messaging.XmlMessageFormatter> Является важнейшим компонентом слабо связанного обмена сообщениями на основе XML.</span><span class="sxs-lookup"><span data-stu-id="45f5c-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="45f5c-119">Программа XSD. exe использует формат XML для создания схемы XML, например, при использовании программы для сериализации класса, используемого приложением.</span><span class="sxs-lookup"><span data-stu-id="45f5c-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="45f5c-120">Класс должен содержать конструктор без параметров.</span><span class="sxs-lookup"><span data-stu-id="45f5c-120">The class must have a parameterless constructor.</span></span>  
  
 <span data-ttu-id="45f5c-121">Этот формат снова используется в обратном процессе, когда программа создает класс на основе схемы, которую вы распространяете для описания данных класса.</span><span class="sxs-lookup"><span data-stu-id="45f5c-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="45f5c-122">Использование программы и создаваемой ею схемы XML позволяет избежать повторного распространения DLL-файлов при каждой перекомпиляции класса после изменения реализации класса.</span><span class="sxs-lookup"><span data-stu-id="45f5c-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="45f5c-123">Пока схема не изменяется на клиенте или сервере, другие изменения на обеих сторонах не влияют на другую.</span><span class="sxs-lookup"><span data-stu-id="45f5c-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45f5c-124">Следующий пример кода включает три части кода: серверный компонент, класс заказа и клиентский код.</span><span class="sxs-lookup"><span data-stu-id="45f5c-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="45f5c-125">Класс Order может использоваться служебной программой XSD. exe для создания схемы, которую сервер распознает в входящих сообщениях.</span><span class="sxs-lookup"><span data-stu-id="45f5c-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="45f5c-126">Схема представляет собой файл в формате XML, описывающий "форму" класса.</span><span class="sxs-lookup"><span data-stu-id="45f5c-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="45f5c-127">Затем эту схему можно использовать на стороне клиента для создания класса заказов конкретного клиента, который использует ту же схему, что и серверный класс.</span><span class="sxs-lookup"><span data-stu-id="45f5c-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="45f5c-128">В следующем примере кода представлен серверный компонент, который получает заказы через очередь сообщений.</span><span class="sxs-lookup"><span data-stu-id="45f5c-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="45f5c-129">Тело сообщения должно быть объектом Order, схема которого соответствует классу Order.cs ниже.</span><span class="sxs-lookup"><span data-stu-id="45f5c-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="45f5c-130">Серверный процесс или приложение десериализует порядок.</span><span class="sxs-lookup"><span data-stu-id="45f5c-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="45f5c-131">В следующем примере кода представлен класс Order, предоставляющий схему для объектов Order, которые получает и десериализует приложение на сервере.</span><span class="sxs-lookup"><span data-stu-id="45f5c-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="45f5c-132">Любое клиентское приложение, взаимодействующее с приложением на сервере, должно отсылать сообщения на сервер путем сериализации сведений в локально определенный класс Order в текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="45f5c-133">Локально определенный класс Order должен иметь ту же схему, что и определяемый сервером порядок, в котором приложение на сервере будет пытаться десериализовать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="45f5c-134">Программа XSD. exe позволяет диспетчеру приложения на сервере создать и распространить схему, которую клиент должен использовать для сериализации сообщений, отправляемых на сервер.</span><span class="sxs-lookup"><span data-stu-id="45f5c-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="45f5c-135">Когда диспетчер клиентского приложения получает схему для класса Order, служебная программа XSD. exe снова используется для создания класса упорядочения, зависящего от клиента, из схемы.</span><span class="sxs-lookup"><span data-stu-id="45f5c-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="45f5c-136">Этот класс используется в примере кода клиента, а не в классе порядка сервера (программа XSD. exe заставляет создаваемый схемой класс иметь то же имя, что и исходный класс).</span><span class="sxs-lookup"><span data-stu-id="45f5c-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="45f5c-137">Этот новый класс Order используется для сериализации заказа в текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="45f5c-138">В следующем примере кода показана обработка на стороне клиента, используемая для сериализации заказа и отправки сведений, связанных с заказом, в очередь.</span><span class="sxs-lookup"><span data-stu-id="45f5c-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="45f5c-139">Код связывает элементы, количество и сведения об адресе с элементами схемы, созданными для класса Order.cs служебной программой XSD. exe.</span><span class="sxs-lookup"><span data-stu-id="45f5c-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="45f5c-140">Заказ отправляется в очередь заказов на локальном компьютере.</span><span class="sxs-lookup"><span data-stu-id="45f5c-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="45f5c-141">После создания схемы из класса Order на сервере можно изменить класс.</span><span class="sxs-lookup"><span data-stu-id="45f5c-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="45f5c-142">Если схема не изменяется, повторное распространение схемы не требуется.</span><span class="sxs-lookup"><span data-stu-id="45f5c-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="45f5c-143">После распространения схемы и создания класса заказа на стороне клиента этот клиентский класс также может быть изменен независимо от класса порядка сервера, если сама схема не изменена.</span><span class="sxs-lookup"><span data-stu-id="45f5c-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="45f5c-144">Эти два класса стали слабо связанными.</span><span class="sxs-lookup"><span data-stu-id="45f5c-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45f5c-145">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45f5c-146">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" /> без набора типов целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-147">Эта перегрузка конструктора чаще всего используется при записи в очередь, так как типы целей не требуются при записи.</span><span class="sxs-lookup"><span data-stu-id="45f5c-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="45f5c-148">Для чтения сообщения из очереди с помощью экземпляра <xref:System.Messaging.XmlMessageFormatter> , созданного с помощью этого конструктора, необходимо <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> задать свойства или <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> , чтобы модуль форматирования знал, какие типы следует попытаться десериализовать.</span><span class="sxs-lookup"><span data-stu-id="45f5c-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="45f5c-149">При создании нового <xref:System.Messaging.MessageQueue>экземпляр по умолчанию <xref:System.Messaging.XmlMessageFormatter> создается без задания целевых типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="45f5c-150">Как и при использовании модуля форматирования, созданного с помощью этого конструктора, необходимо задать типы целевых объектов для этого экземпляра модуля форматирования, если требуется считывать данные из очереди.</span><span class="sxs-lookup"><span data-stu-id="45f5c-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : string[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypeNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames"><span data-ttu-id="45f5c-151">Массив типа <see cref="T:System.String" />, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span> <span data-ttu-id="45f5c-152">Эти значения должны быть полностью определены, например, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span><span class="sxs-lookup"><span data-stu-id="45f5c-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span></span></param>
        <summary><span data-ttu-id="45f5c-153">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, устанавливая типы целевых объектов, передаваемых как массив (полностью определенных) строковых значений.</span><span class="sxs-lookup"><span data-stu-id="45f5c-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-154">Конструкторы с параметрами целевого типа чаще всего используются при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="45f5c-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="45f5c-155">При записи не нужно указывать типы целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="45f5c-156">Эта перегрузка <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> конструктора <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> задает для свойства `targetTypeNames` значения массива, передаваемые через параметр.</span><span class="sxs-lookup"><span data-stu-id="45f5c-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="45f5c-157">Задание этого свойства позволяет <xref:System.Messaging.MessageQueue> использовать этот <xref:System.Messaging.XmlMessageFormatter> экземпляр для чтения сообщений, содержащих объекты заданных типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="45f5c-158">И свойства, <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> и указывают модулю форматирования, какие схемы следует пытаться сопоставить при десериализации сообщения. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="45f5c-159">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="45f5c-160">Экземпляр, сериализованный в тексте сообщения, должен соответствовать одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="45f5c-161">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> метода метод создает объект типа, соответствующий указанной схеме, и считывает в него текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="45f5c-162">При чтении из очереди необходимо задать только одно из двух свойств, но можно задать и то, и другое.</span><span class="sxs-lookup"><span data-stu-id="45f5c-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="45f5c-163">Набор типов — это объединенный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="45f5c-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="45f5c-164">Решение о том, какой из них следует использовать, зависит от вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="45f5c-165">Если текст сообщения содержит тип, схема которого не соответствует ни одному из типов в массиве для любого из свойств, то во время чтения будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-166">Параметр <paramref name="targetTypeNames" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : Type[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes"><span data-ttu-id="45f5c-167">Массив типа <see cref="T:System.Type" />, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></param>
        <summary><span data-ttu-id="45f5c-168">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, устанавливая типы целевых объектов, передаваемых как массив типов объектов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-169">Конструкторы с параметрами целевого типа чаще всего используются при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="45f5c-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="45f5c-170">При записи не нужно указывать типы целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="45f5c-171">Эта перегрузка <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> конструктора <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> задает для свойства `targetTypes` значения массива, передаваемые через параметр.</span><span class="sxs-lookup"><span data-stu-id="45f5c-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="45f5c-172">Задание этого свойства позволяет <xref:System.Messaging.MessageQueue> использовать этот <xref:System.Messaging.XmlMessageFormatter> экземпляр для чтения сообщений, содержащих объекты заданных типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="45f5c-173">И свойства, <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> и указывают модулю форматирования, какие схемы следует пытаться сопоставить при десериализации сообщения. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="45f5c-174">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="45f5c-175">Экземпляр, сериализованный в тексте сообщения, должен соответствовать одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="45f5c-176">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> метода метод создает объект типа, соответствующий указанной схеме, и считывает в него текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="45f5c-177">При чтении из очереди необходимо задать только одно из двух свойств, но можно задать и то, и другое.</span><span class="sxs-lookup"><span data-stu-id="45f5c-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="45f5c-178">Набор типов — это объединенный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="45f5c-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="45f5c-179">Решение о том, какой из них следует использовать, зависит от вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="45f5c-180">Если текст сообщения содержит тип, схема которого не соответствует ни одному из типов в массиве для любого из свойств, то во время чтения будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="45f5c-181">При указании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, а не, тип существование проверяется во время компиляции, а не на время чтения, уменьшая вероятность ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="45f5c-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>требует, чтобы каждая запись была полностью квалифицирована, указывая ее имя сборки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="45f5c-183">Кроме того, при работе с несколькими параллельными версиями номер версии также должен быть добавлен к имени целевого типа.</span><span class="sxs-lookup"><span data-stu-id="45f5c-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="45f5c-184">При использовании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>можно добавить каждый объект (например, `MyClass`) в список, как показано в следующем C# коде.</span><span class="sxs-lookup"><span data-stu-id="45f5c-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-185">Параметр <paramref name="targetTypes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="xmlMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="45f5c-186">Объект <see cref="T:System.Messaging.Message" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="45f5c-187">Определяет, может ли модуль форматирования десериализовать сообщение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-187">Determines whether the formatter can deserialize the message.</span></span></summary>
        <returns><span data-ttu-id="45f5c-188">Значение <see langword="true" />, если XML-модуль форматирования может десериализовать сообщение; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-188"><see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-189">При <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> вызове модуль форматирования пытается определить, может ли содержимое сообщения быть десериализовано.</span><span class="sxs-lookup"><span data-stu-id="45f5c-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="45f5c-190">Модуль форматирования может выполнить десериализацию сообщения только в том случае, если тип в теле сообщения имеет ту же схему, что <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и один из типов в массиве, представленный свойствами и. <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="45f5c-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A>Возвращает `false` в следующих двух случаях:</span><span class="sxs-lookup"><span data-stu-id="45f5c-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="45f5c-192">Сообщение не было отформатировано с <xref:System.Messaging.XmlMessageFormatter>помощью.</span><span class="sxs-lookup"><span data-stu-id="45f5c-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="45f5c-193">Схема текста сообщения не является частью, указанной в <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> свойстве или. <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="45f5c-194">Свойства <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают модулю форматирования, какие типы объектов должны быть способны десериализовать.</span><span class="sxs-lookup"><span data-stu-id="45f5c-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="45f5c-195">Если в списке отсутствует какой-либо тип, то он находится в сообщении, а <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="45f5c-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="45f5c-196">Ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />, ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> не установлены.</span><span class="sxs-lookup"><span data-stu-id="45f5c-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-197">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-197">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="xmlMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45f5c-198">Создает экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, свойства чтения и записи (наборы типов целевых объектов) которого такие же, как и у текущего экземпляра <see cref="T:System.Messaging.XmlMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="45f5c-199">Объект со свойствами, идентичными свойствам данного экземпляра <see cref="T:System.Messaging.XmlMessageFormatter" />, но с метаданными, которые не определяют его как экземпляр класса модуля форматирования.</span><span class="sxs-lookup"><span data-stu-id="45f5c-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-200">Этот метод создает копию модуля форматирования и инициализирует все его свойства значениями этого <xref:System.Messaging.XmlMessageFormatter> объекта.</span><span class="sxs-lookup"><span data-stu-id="45f5c-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="xmlMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="45f5c-201">Десериализуемое сообщение <see cref="T:System.Messaging.Message" /> в XML-формате.</span><span class="sxs-lookup"><span data-stu-id="45f5c-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="45f5c-202">Читает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="45f5c-203">Десериализованное сообщение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-203">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-204">И свойства, <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> и указывают модулю форматирования, какие схемы следует пытаться сопоставить при десериализации сообщения. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="45f5c-205">Перед десериализациюм сообщения необходимо задать одно из этих свойств.</span><span class="sxs-lookup"><span data-stu-id="45f5c-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="45f5c-206">Экземпляр, сериализованный в тексте сообщения, должен соответствовать одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="45f5c-207">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> метода метод создает объект типа, соответствующий указанной схеме, и считывает в него текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="45f5c-208">Для записи в очередь не обязательно указывать целевые типы.</span><span class="sxs-lookup"><span data-stu-id="45f5c-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="45f5c-209">Ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />, ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> не установлены.</span><span class="sxs-lookup"><span data-stu-id="45f5c-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span>  
  
<span data-ttu-id="45f5c-210">- или -</span><span class="sxs-lookup"><span data-stu-id="45f5c-210">-or-</span></span> 
<span data-ttu-id="45f5c-211">Экземпляр, сериализуемый в тело сообщения, не согласуется ни с одной из схем, представленных типами в свойствах <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> и <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-212">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-212">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypeNames : string[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45f5c-213">Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="45f5c-214">Массив типа <see cref="T:System.String" />, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-215">И свойства, <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> и указывают модулю форматирования, какие схемы следует пытаться сопоставить при десериализации сообщения. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="45f5c-216">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="45f5c-217">Экземпляр, сериализованный в тексте сообщения, должен соответствовать одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="45f5c-218">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> метода метод создает объект типа, соответствующий указанной схеме, и считывает в него текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="45f5c-219">При чтении из очереди необходимо задать только одно из двух свойств, но можно задать и то, и другое.</span><span class="sxs-lookup"><span data-stu-id="45f5c-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="45f5c-220">Набор типов — это объединенный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="45f5c-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="45f5c-221">Решение о том, какое свойство следует использовать, зависит от вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="45f5c-222">Если текст сообщения содержит тип, схема которого не совпадает ни с одним из типов в массиве для любого из свойств, при считывании сообщения будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="45f5c-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>требует, чтобы каждая запись была полностью квалифицирована, указывая ее имя сборки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="45f5c-224">Кроме того, при работе с несколькими параллельными версиями номер версии также должен быть добавлен к имени целевого типа.</span><span class="sxs-lookup"><span data-stu-id="45f5c-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="45f5c-225">Типы целевых объектов требуются только при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="45f5c-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="45f5c-226">Свойства <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> не нужно задавать для записи в очередь.</span><span class="sxs-lookup"><span data-stu-id="45f5c-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-227">Значение свойства <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypes : Type[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45f5c-228">Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="45f5c-229">Массив типа <see cref="T:System.Type" />, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-230">И свойства, <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> и указывают модулю форматирования, какие схемы следует пытаться сопоставить при десериализации сообщения. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="45f5c-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="45f5c-231">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="45f5c-232">Экземпляр, сериализованный в тексте сообщения, должен соответствовать одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="45f5c-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="45f5c-233">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> метода метод создает объект типа, соответствующий указанной схеме, и считывает в него текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="45f5c-234">При чтении из очереди необходимо задать только одно из двух свойств, но можно задать и то, и другое.</span><span class="sxs-lookup"><span data-stu-id="45f5c-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="45f5c-235">Набор типов — это объединенный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="45f5c-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="45f5c-236">Решение о том, какое свойство следует использовать, зависит от вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="45f5c-237">Если текст сообщения содержит тип, схема которого не совпадает ни с одним из типов в массиве для любого из свойств, при считывании сообщения будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="45f5c-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="45f5c-238">Типы целевых объектов требуются только при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="45f5c-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="45f5c-239">Свойства <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> не нужно задавать для записи в очередь.</span><span class="sxs-lookup"><span data-stu-id="45f5c-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="45f5c-240">При указании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, а не, тип существование проверяется во время компиляции, а не на время чтения, уменьшая вероятность ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f5c-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="45f5c-241">При использовании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>можно добавить каждый объект (например, `MyClass`) в список способом, демонстрируемым в `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};` C# коде.</span><span class="sxs-lookup"><span data-stu-id="45f5c-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45f5c-242">Следующий пример кода отправляет и получает сообщение, которое содержит порядок в очередь и из нее.</span><span class="sxs-lookup"><span data-stu-id="45f5c-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-243">Значение свойства <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="xmlMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="45f5c-244">Сообщение <see cref="T:System.Messaging.Message" />, свойство <see cref="P:System.Messaging.Message.Body" /> которого будет содержать сериализованный объект.</span><span class="sxs-lookup"><span data-stu-id="45f5c-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="45f5c-245">Объект <see cref="T:System.Object" />, сериализуемый в тело сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="45f5c-246">Сериализует объект в текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-246">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f5c-247">Не нужно указывать типы целевых объектов для записи в очередь, так как они должны быть в процессе чтения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="45f5c-248">Свойство <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> или<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> используется модулем форматирования только при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f5c-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="45f5c-249">Компонентиспользует<xref:System.Xml.Serialization.XmlSerializer> класс, который определяет, что можно сериализовать. <xref:System.Messaging.XmlMessageFormatter></span><span class="sxs-lookup"><span data-stu-id="45f5c-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="45f5c-250">Сериализуются могут только открытые поля и общие свойства.</span><span class="sxs-lookup"><span data-stu-id="45f5c-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="45f5c-251">Структуры, структуры с массивами и массивами структур являются сериализуемыми, при условии, что они не используют закодированный стиль с протоколом SOAP.</span><span class="sxs-lookup"><span data-stu-id="45f5c-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45f5c-252">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-252">The <paramref name="message" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="45f5c-253">- или -</span><span class="sxs-lookup"><span data-stu-id="45f5c-253">-or-</span></span> 
<span data-ttu-id="45f5c-254">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45f5c-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>