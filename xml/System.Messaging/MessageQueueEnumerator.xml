<Type Name="MessageQueueEnumerator" FullName="System.Messaging.MessageQueueEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="744ed7e99161f6cb01b915cd9bba30ccb941dd93" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69382574" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueEnumerator extends System.MarshalByRefObject implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueEnumerator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type MessageQueueEnumerator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="64672-101">Предоставляет курсор, перемещающийся только в прямом направлении, для перечисления сообщений в очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="64672-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-102">Используется <xref:System.Messaging.MessageQueueEnumerator> для динамического взаимодействия с очередями в сети.</span><span class="sxs-lookup"><span data-stu-id="64672-102">Use <xref:System.Messaging.MessageQueueEnumerator> for dynamic interaction with queues on the network.</span></span> <span data-ttu-id="64672-103">Методы, доступные через <xref:System.Messaging.MessageQueue> класс, могут возвращать <xref:System.Messaging.MessageQueueEnumerator> либо содержащий динамический список очередей, либо массив, содержащий моментальный снимок коллекции очередей на момент вызова указанного метода.</span><span class="sxs-lookup"><span data-stu-id="64672-103">Methods available through the <xref:System.Messaging.MessageQueue> class can return either a <xref:System.Messaging.MessageQueueEnumerator> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</span></span>  
  
 <span data-ttu-id="64672-104">В сети не определено упорядочение очередей.</span><span class="sxs-lookup"><span data-stu-id="64672-104">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="64672-105">Они не упорядочиваются, например, по компьютеру, метке, общедоступному или частному состоянию или другим критериям, доступным для пользователя.</span><span class="sxs-lookup"><span data-stu-id="64672-105">They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</span></span> <span data-ttu-id="64672-106">A <xref:System.Messaging.MessageQueueEnumerator> — это курсор, инициализированный в заголовке динамического списка.</span><span class="sxs-lookup"><span data-stu-id="64672-106">A <xref:System.Messaging.MessageQueueEnumerator> is a cursor, initialized to the head of a dynamic list.</span></span> <span data-ttu-id="64672-107">Курсор можно переместить в первую очередь перечисления, вызвав метод <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="64672-107">You can move the cursor to the first queue of the enumeration by calling <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="64672-108">После инициализации перечислителя можно использовать <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> для прохода по оставшимся очередям.</span><span class="sxs-lookup"><span data-stu-id="64672-108">After the enumerator has been initialized, you can use <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to step forward through the remaining queues.</span></span>  
  
 <span data-ttu-id="64672-109">Невозможно выполнить шаг назад с <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="64672-109">It is not possible to step backward with a <xref:System.Messaging.MessageQueueEnumerator>.</span></span> <span data-ttu-id="64672-110">Курсор допускает перемещение только вперед через перечисление очередей.</span><span class="sxs-lookup"><span data-stu-id="64672-110">A cursor only allows forward movement through the queue enumeration.</span></span> <span data-ttu-id="64672-111">Однако можно вызвать метод <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> , чтобы сбросить перечисление и снова поставить курсор в начало списка.</span><span class="sxs-lookup"><span data-stu-id="64672-111">However, you can call <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to reset the enumeration and put the cursor at the beginning of the list again.</span></span> <span data-ttu-id="64672-112">Поскольку перечислитель является динамическим, перечислитель может получить очередь, которая добавляется за пределы текущей позиции курсора.</span><span class="sxs-lookup"><span data-stu-id="64672-112">Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</span></span> <span data-ttu-id="64672-113">Очередь, вставленная до текущей позиции курсора, недоступна без предварительного вызова Reset.</span><span class="sxs-lookup"><span data-stu-id="64672-113">A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64672-114">В следующем примере кода выполняется перебор всех очередей сообщений в сети и проверяется путь для каждой очереди.</span><span class="sxs-lookup"><span data-stu-id="64672-114">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="64672-115">И, наконец, отображается число общих очередей в сети.</span><span class="sxs-lookup"><span data-stu-id="64672-115">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageQueueEnumerator.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64672-116">Освобождает ресурсы, связанные с перечислителем.</span><span class="sxs-lookup"><span data-stu-id="64672-116">Frees the resources associated with the enumerator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-117">Операционная система удерживает открытый маркер <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>в перечислителе очереди в течение времени существования курсора.</span><span class="sxs-lookup"><span data-stu-id="64672-117">The operating system retains an open handle, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, to the queue enumerator during the lifetime of the cursor.</span></span> <span data-ttu-id="64672-118">После завершения работы с перечислителем вызовите <xref:System.Messaging.MessageQueueEnumerator.Close%2A> метод, чтобы освободить ресурсы, связанные с этим маркером.</span><span class="sxs-lookup"><span data-stu-id="64672-118">When you finish working with the enumerator, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to release the resources associated with the handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ Current { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueueEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64672-119">Получает текущий объект <see cref="T:System.Messaging.MessageQueue" /> перечисления.</span><span class="sxs-lookup"><span data-stu-id="64672-119">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span></span></summary>
        <value><span data-ttu-id="64672-120">Очередь, на которую в данный момент установлен курсор.</span><span class="sxs-lookup"><span data-stu-id="64672-120">The queue at which the cursor is currently positioned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-121">При создании перечислителя он не указывает на ничего, поэтому <xref:System.Messaging.MessageQueueEnumerator.Current%2A> является недопустимым и будет вызывать исключение при обращении к нему.</span><span class="sxs-lookup"><span data-stu-id="64672-121">When the enumerator is created, it does not point to anything, so <xref:System.Messaging.MessageQueueEnumerator.Current%2A> is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="64672-122">Необходимо вызвать <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> , чтобы поместить курсор в первую очередь в перечислении.</span><span class="sxs-lookup"><span data-stu-id="64672-122">You must call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to position the cursor at the first queue in the enumeration.</span></span>  
  
 <span data-ttu-id="64672-123">Несколько вызовов <xref:System.Messaging.MessageQueueEnumerator.Current%2A> без промежуточных <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> вызовов будут возвращать один и тот же <xref:System.Messaging.MessageQueue> объект.</span><span class="sxs-lookup"><span data-stu-id="64672-123">Multiple calls to <xref:System.Messaging.MessageQueueEnumerator.Current%2A> with no intervening calls to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return the same <xref:System.Messaging.MessageQueue> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="64672-124">Вы вызвали <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> до первого вызова <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span><span class="sxs-lookup"><span data-stu-id="64672-124">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span></span> <span data-ttu-id="64672-125">Курсор располагается перед первой очередью в перечислении.</span><span class="sxs-lookup"><span data-stu-id="64672-125">The cursor is located before the first queue in the enumeration.</span></span>  
  
<span data-ttu-id="64672-126">- или -</span><span class="sxs-lookup"><span data-stu-id="64672-126">-or-</span></span> 
<span data-ttu-id="64672-127">Вы вызвали <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> после вызова <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />, вернувшего ложное (false) значение (это указывает, что курсор расположен за последней очередью в перечислении).</span><span class="sxs-lookup"><span data-stu-id="64672-127">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration).</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="64672-128">Освобождает ресурсы, используемые объектом <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="64672-128">Releases the resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="messageQueueEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64672-129">Освобождает все ресурсы, занятые модулем <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="64672-129">Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-130">Вызов <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> позволяет перераспределить ресурсы, используемые <xref:System.Messaging.MessageQueueEnumerator> в, для других целей.</span><span class="sxs-lookup"><span data-stu-id="64672-130">Calling <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> allows the resources used by the <xref:System.Messaging.MessageQueueEnumerator> to be reallocated for other purposes.</span></span> <span data-ttu-id="64672-131">Дополнительные сведения о <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="64672-131">For more information about <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="64672-132">Очистка неуправляемых ресурсов</span><span class="sxs-lookup"><span data-stu-id="64672-132">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="messageQueueEnumerator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="64672-133">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="64672-133"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="64672-134">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Messaging.MessageQueueEnumerator" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="64672-134">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-135">Этот метод вызывается открытым <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> методом <xref:System.Object.Finalize%2A> и методом.</span><span class="sxs-lookup"><span data-stu-id="64672-135">This method is called by the public <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="64672-136">`Dispose`вызывает защищенный `Dispose(Boolean)` метод с параметром `disposing` , для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="64672-136">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="64672-137"><xref:System.Object.Finalize%2A>вызывает метод `disposing` `false`с параметром, равным. `Dispose`</span><span class="sxs-lookup"><span data-stu-id="64672-137"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="64672-138">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="64672-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Messaging.MessageQueueEnumerator> references.</span></span> <span data-ttu-id="64672-139">Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="64672-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="64672-140">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="64672-140">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="64672-141">При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="64672-141">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="64672-142">Дополнительные сведения о реализации <see langword="Dispose" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="64672-142">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="64672-143"><see langword="Dispose" /> Дополнительные сведения о <see langword="Finalize" />и см. в разделе Очистка неуправляемых [ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и переопределение [метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="64672-143">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="64672-144">Реализация метода Dispose</span><span class="sxs-lookup"><span data-stu-id="64672-144">Implementing a Dispose method</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="64672-145">Очистка неуправляемых ресурсов</span><span class="sxs-lookup"><span data-stu-id="64672-145">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MessageQueueEnumerator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="messageQueueEnumerator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64672-146">Освобождает ресурсы, используемые очередью.</span><span class="sxs-lookup"><span data-stu-id="64672-146">Releases the resources held by the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="64672-147">Этот метод переопределяет метод <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="64672-147">This method overrides <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="64672-148">Код приложения не должен вызывать этот метод; метод Finalize объекта автоматически вызывается во время сборки мусора, если окончательное завершение сборщика мусора не было отключено вызовом <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="64672-148">Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>

<span data-ttu-id="64672-149">Дополнительные сведения см. в статьях [методы Finalize и деструкторы](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v=vs.100)), [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md)и переопределение [метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="64672-149">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v=vs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocatorHandle">
      <MemberSignature Language="C#" Value="public IntPtr LocatorHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int LocatorHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocatorHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr LocatorHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.LocatorHandle : nativeint" Usage="System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64672-150">Получает собственный дескриптор Message Queuing, используемый для определения очередей в сети.</span><span class="sxs-lookup"><span data-stu-id="64672-150">Gets the native Message Queuing handle used to locate queues in a network.</span></span></summary>
        <value><span data-ttu-id="64672-151">Собственный дескриптор для текущей очереди.</span><span class="sxs-lookup"><span data-stu-id="64672-151">The native handle to the current queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-152">Если этот <xref:System.Messaging.MessageQueueEnumerator> экземпляр больше не нужен, вызовите <xref:System.Messaging.MessageQueueEnumerator.Close%2A> метод, чтобы освободить этот обработчик для ресурса.</span><span class="sxs-lookup"><span data-stu-id="64672-152">When you no longer need this <xref:System.Messaging.MessageQueueEnumerator> instance, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to free this handle to the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="64672-153">Этот дескриптор не существует.</span><span class="sxs-lookup"><span data-stu-id="64672-153">The handle does not exist.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="64672-154">Вызывающий код не имеет разрешений на просмотр.</span><span class="sxs-lookup"><span data-stu-id="64672-154">The calling code does not have browse permissions.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="messageQueueEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64672-155">Перемещает перечислитель на следующую очередь перечисления, если таковая имеется.</span><span class="sxs-lookup"><span data-stu-id="64672-155">Advances the enumerator to the next queue of the enumeration, if one is currently available.</span></span></summary>
        <returns><span data-ttu-id="64672-156">Значение <see langword="true" />, если перечислитель был успешно перемещен на следующую очередь; значение <see langword="false" />, если перечислитель достиг конца перечисления.</span><span class="sxs-lookup"><span data-stu-id="64672-156"><see langword="true" /> if the enumerator was successfully advanced to the next queue; <see langword="false" /> if the enumerator has reached the end of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-157"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>Возвращает `false` значение немедленно, если с перечислением не связаны очереди.</span><span class="sxs-lookup"><span data-stu-id="64672-157"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> returns `false` immediately if there are no queues associated with the enumeration.</span></span>  
  
 <span data-ttu-id="64672-158"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>Возвращает `true` , пока не достигнет конца коллекции.</span><span class="sxs-lookup"><span data-stu-id="64672-158"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="64672-159">Затем он будет возвращаться `false` для каждого последующего вызова.</span><span class="sxs-lookup"><span data-stu-id="64672-159">It will then return `false` for each successive call.</span></span> <span data-ttu-id="64672-160">Однако после <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> возврата `false`доступ к <xref:System.Messaging.MessageQueueEnumerator.Current%2A> свойству вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="64672-160">However once <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Messaging.MessageQueueEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="64672-161">После создания перечислитель по сути позиционируется перед первым <xref:System.Messaging.MessageQueue> из перечисления, а первый <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> вызов возвращает первую очередь перечисления в представление.</span><span class="sxs-lookup"><span data-stu-id="64672-161">Upon creation, an enumerator is conceptually positioned before the first <xref:System.Messaging.MessageQueue> of the enumeration, and the first call to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> brings the first queue of the enumeration into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="64672-162">Вызывающий код не имеет разрешений на просмотр.</span><span class="sxs-lookup"><span data-stu-id="64672-162">The calling code does not have browse permissions.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="messageQueueEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64672-163">Сброс курсора, теперь он указывает на начало перечисления.</span><span class="sxs-lookup"><span data-stu-id="64672-163">Resets the cursor, so it points to the beginning of the enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64672-164">Перечислитель перемещается в прямом направлении.</span><span class="sxs-lookup"><span data-stu-id="64672-164">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="64672-165">Этот метод используется для возврата в начало перечисления очередей.</span><span class="sxs-lookup"><span data-stu-id="64672-165">Use this method to return to the beginning of the enumeration of queues.</span></span>  
  
 <span data-ttu-id="64672-166"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A>позиционирует курсор в первой очереди в списке.</span><span class="sxs-lookup"><span data-stu-id="64672-166"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> positions the cursor at the first queue in the list.</span></span> <span data-ttu-id="64672-167">Вам не нужно вызывать <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> после вызова <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> для перемещения курсора вперед к первой очереди в перечислении.</span><span class="sxs-lookup"><span data-stu-id="64672-167">You do not need to call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to move the cursor forward to the first queue in the enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64672-168">Получает текущий объект <see cref="T:System.Messaging.MessageQueue" /> перечисления.</span><span class="sxs-lookup"><span data-stu-id="64672-168">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span></span></summary>
        <value><span data-ttu-id="64672-169">Очередь, на которую в данный момент установлен курсор.</span><span class="sxs-lookup"><span data-stu-id="64672-169">The queue at which the cursor is currently positioned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
