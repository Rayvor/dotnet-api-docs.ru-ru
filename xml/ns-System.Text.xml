<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70417170" /></Metadata><Docs>
    <summary>Пространство имен<see cref="N:System.Text" /> содержит классы, которые представляют кодировки ASCII и Юникода; абстрактные базовые классы для преобразования блоков знаков в блоки байтов и обратно; вспомогательный класс, который обрабатывает и форматирует объекты <see cref="T:System.String" />, не создавая промежуточные экземпляры <see cref="T:System.String" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы кодирования в основном предназначены для преобразования между различными кодировками или кодовыми страницами и кодировкой Юникода. <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>(UTF-16) используется для внутренних целей .NET Framework, а <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> кодирование часто используется для хранения символьных данных, чтобы обеспечить переносимость между компьютерами и культурами.  
  
 Классы, производные <xref:System.Text.Encoding> от, позволяют выбрать резервную стратегию, которая определяет, как обрабатываются символы, которые не могут быть закодированы в последовательность байтов, или байты, которые не могут быть декодированы в символы. Можно выбрать один из следующих элементов:  
  
-   Откат исключения. Вы можете создавать исключения для ошибок данных с помощью `throwonerror` флага, доступного в некоторых конструкторах классов или <xref:System.Text.EncoderExceptionFallback> с помощью классов и <xref:System.Text.DecoderExceptionFallback> . Если вы беспокоитесь о целостности потока данных, рекомендуется создавать исключение.  
  
-   Замена резервной. Можно использовать <xref:System.Text.EncoderFallback> классы и <xref:System.Text.DecoderFallback> для автоматического изменения символа на "?" или в символ замены Юникода (U + FFFD).  
  
-   Стратегия наилучшего соответствия. Этот параметр сопоставляет символ в одной кодировке с символом в другой кодировке. Резервные стратегии наилучшего соответствия часто не рекомендуются, так как это может привести к потере и путанице данных и медленнее, чем простые замены символов "?". Однако для кодовых страниц ANSI оптимальным поведением является значение по умолчанию.  
  
 <xref:System.Text.StringBuilder> Класс предназначен для операций, выполняющих обширные манипуляции с одной строкой. <xref:System.String> В <xref:System.Text.StringBuilder>  отличие от класса, класс является изменяемым и обеспечивает лучшую производительность при объединении или удалении строк.  
  
 Дополнительные сведения о <xref:System.Text?displayProperty=nameWithType>см. [в разделе кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md) .  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
