<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9293f21cd4b3744a22a4be776519f12230f12c18" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69169010" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет службу уровня приложения, обрабатывающую мультисенсорный ввод из операционной системы и порождающую событие <see cref="E:System.Windows.Input.Touch.FrameReported" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие включено в [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] для поддержки совместимости с Silverlight. <xref:System.Windows.Input.Touch.FrameReported> Если нет необходимости обеспечивать совместимость с Silverlight, используйте события касания, такие как <xref:System.Windows.UIElement.TouchDown> и <xref:System.Windows.UIElement.TouchMove>, в <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>или <xref:System.Windows.ContentElement>.  
  
 Событие не использует ту же модель событий, что и другие события ввода WPF, такие как <xref:System.Windows.UIElement.TouchDown> и <xref:System.Windows.UIElement.TouchMove>. <xref:System.Windows.Input.Touch.FrameReported> Вместо того чтобы предоставляться как событие конкретного элемента, которое потенциально передается через дерево объектов пользовательского интерфейса, <xref:System.Windows.Input.Touch.FrameReported> событие является одним событием, которое обрабатывается на уровне приложения. Поэтому нельзя использовать `sender` параметр обработчика событий для определения того, какой элемент затронут.  
  
 <xref:System.Windows.Input.TouchFrameEventArgs> Используйте для<xref:System.Windows.Input.TouchPoint> получения значений, относящихся к событию касания. <xref:System.Windows.Input.TouchPoint>В <xref:System.Windows.Input.TouchAction.Up> <xref:System.Windows.Input.TouchAction.Move> можно<xref:System.Windows.Input.TouchAction.Down> получить<xref:System.Windows.Input.TouchAction> касание и определить, было ли действие, или. <xref:System.Windows.Input.TouchPoint.Position%2A> Можно также использовать <xref:System.Windows.Input.TouchPoint> для <xref:System.Windows.Input.TouchDevice>получения. С помощью <xref:System.Windows.Input.TouchDevice>можно определить устройство <xref:System.Windows.Input.TouchDevice.Id%2A> и получить сведения об элементе, который затронут.  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Controls.Canvas> создавать простые шаблоны в, перетаскивая два пальца по сенсорному экрану. Каждое касание представлено <xref:System.Windows.Input.TouchDevice>. Шаблон создается путем рисования линии между сенсорными точками, предоставленными касаниями. Для этого примера требуется экран, совместимый с Windows Touch.  
  
 Следующая разметка создает пользовательский интерфейс, состоящий из <xref:System.Windows.Controls.Canvas> объекта, который находится <xref:System.Windows.Controls.Grid>в центре.  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 Следующий код обрабатывает <xref:System.Windows.Input.Touch.FrameReported> событие. При нажатии касания на объект <xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice> захватывается <xref:System.Windows.Controls.Canvas>в. Когда сенсорное касание ликвидируется, <xref:System.Windows.Input.TouchDevice> освобождается. Когда касание перемещается <xref:System.Windows.Controls.Canvas>по <xref:System.Windows.Input.TouchDevice.Id%2A> , проверяется. Если перемещение поступило от первого касания, его расположение записывается. Если перемещение поступило со второго касания, линия будет отрисована от положения первого касания до положения второго касания.  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при отправлении сенсорного сообщения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кадр — это один из Мультисенсорная сообщений или точек касания. Вы можете реагировать на касания, обрабатывая <xref:System.Windows.Input.Touch.FrameReported> событие и обращаясь к сведениям <xref:System.Windows.Input.TouchPoint> из <xref:System.Windows.Input.TouchFrameEventArgs> данных о событии.  
  
 Событие не использует ту же модель событий, что и другие [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] события ввода, такие как <xref:System.Windows.UIElement.TouchDown> и <xref:System.Windows.UIElement.TouchMove>. <xref:System.Windows.Input.Touch.FrameReported> Вместо того чтобы предоставляться как событие конкретного элемента, которое потенциально передается через дерево объектов пользовательского интерфейса, <xref:System.Windows.Input.Touch.FrameReported> событие является одним событием, которое обрабатывается на уровне приложения. Поэтому нельзя использовать `sender` параметр обработчика событий для определения того, какой элемент затронут.  
  
   
  
## Examples  
 В следующем примере обрабатывается <xref:System.Windows.Input.Touch.FrameReported> событие. При нажатии касания на объект <xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice> захватывается <xref:System.Windows.Controls.Canvas>в. Когда сенсорное касание ликвидируется, <xref:System.Windows.Input.TouchDevice> освобождается. Когда касание перемещается <xref:System.Windows.Controls.Canvas>по <xref:System.Windows.Input.TouchDevice.Id%2A> , проверяется. Если перемещение поступило от первого касания, его расположение записывается. Если перемещение поступило со второго касания, линия будет отрисована от положения первого касания до положения второго касания.  
  
 Этот пример является частью более крупного примера, доступного в <xref:System.Windows.Input.Touch> обзоре класса.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
