<Type Name="ManipulationDeltaEventArgs" FullName="System.Windows.Input.ManipulationDeltaEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46a0a6359d8694c210dae7198d68c7ffd00aa4af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69171217" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationDeltaEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDeltaEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationDeltaEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDeltaEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationDeltaEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e6ae2-101">Предоставляет данные для события <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-102"><xref:System.Windows.Input.ManipulationDeltaEventArgs> Класс содержит данные об изменениях в положении манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-102">The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class contains data about changes in the position of a manipulation.</span></span> <span data-ttu-id="e6ae2-103">Свойство содержит изменения, произошедшие с момента возникновения последнего <xref:System.Windows.UIElement.ManipulationDelta> события. <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A></span><span class="sxs-lookup"><span data-stu-id="e6ae2-103">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="e6ae2-104"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> Свойство содержит общие изменения, произошедшие для текущей манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="e6ae2-105">Для преобразования управляемого объекта используется одно из этих свойств.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-105">You use one of those properties to transform the manipulated object.</span></span>  
  
 <span data-ttu-id="e6ae2-106">Вы можете завершить манипуляцию, вызвав <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> метод или принудительно заменив манипуляцию инерцией <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> , вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-106">You can end a manipulation by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method or force the manipulation into inertia by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ae2-107">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationDelta> события.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-107">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e6ae2-108">В примере <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> свойство используется для перемещения, изменения размера и <xref:System.Windows.Shapes.Rectangle>поворота.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-108">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="e6ae2-109">В примере также проверяется, <xref:System.Windows.UIElement.ManipulationDelta> произошло ли событие во время инерции, а также находится ли прямоугольник в границах окна.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-109">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="e6ae2-110">Если эти случаи истинны, приложение останавливает манипуляцию, чтобы прямоугольник не отображал видимую область приложения.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-110">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="e6ae2-111">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-111">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationDeltaEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6ae2-112">Отменяет операцию.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-112">Cancels the manipulation.</span></span></summary>
        <returns><span data-ttu-id="e6ae2-113">Значение <see langword="true" />, если манипуляция была успешно отменена; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-113"><see langword="true" /> if the manipulation was successfully canceled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-114">Если метод завершается с ошибкой, то <xref:System.Windows.Input.TouchDevice> по умолчанию отправляет предыдущие события касания в элемент, а события перемещения мыши в будущем не возникают.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-114">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur.</span></span> <span data-ttu-id="e6ae2-115">Сенсорный ввод не может быть повышен до событий мыши <xref:System.Windows.UIElement.ManipulationCompleted> , если событие возникает во время инерции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-115">Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="manipulationDeltaEventArgs.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6ae2-116">Завершает манипуляцию без инерции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-116">Completes the manipulation without inertia.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-117">Для завершения манипуляции <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> можно вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-117">You can call the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method to end the manipulation.</span></span> <span data-ttu-id="e6ae2-118">Например, когда объект достигает края окна, можно вызвать <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> , чтобы предотвратить выход объекта из экрана.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-118">For example, when an object reaches the edge of a window, you can call <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> to prevent the object from going off the screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ae2-119">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationDelta> события.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-119">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e6ae2-120">В примере проверяется, <xref:System.Windows.UIElement.ManipulationDelta> произошло ли событие во время инерции, а также находится ли прямоугольник в границах окна.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-120">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="e6ae2-121">Если эти случаи истинны, приложение останавливает манипуляцию, чтобы прямоугольник не отображал видимую область приложения.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-121">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="e6ae2-122">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-122">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CumulativeManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta CumulativeManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CumulativeManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ CumulativeManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CumulativeManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-123">Получает накопленные изменения текущей манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-123">Gets the cumulated changes of the current manipulation.</span></span></summary>
        <value><span data-ttu-id="e6ae2-124">Накопленные изменения текущей манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-124">The cumulated changes of the current manipulation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-125"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> Свойство содержит общие изменения, произошедшие для текущей манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-125">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="e6ae2-126">Для преобразования управляемого объекта можно использовать <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> .</span><span class="sxs-lookup"><span data-stu-id="e6ae2-126">You can use <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> to transform the manipulated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta DeltaManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeltaManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ DeltaManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeltaManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-127">Получает последние изменения текущей манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-127">Gets the most recent changes of the current manipulation.</span></span></summary>
        <value><span data-ttu-id="e6ae2-128">Последние изменения текущей манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-128">The most recent changes of the current manipulation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-129">Свойство содержит изменения, произошедшие с момента возникновения последнего <xref:System.Windows.UIElement.ManipulationDelta> события. <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A></span><span class="sxs-lookup"><span data-stu-id="e6ae2-129">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="e6ae2-130">Это свойство можно использовать для преобразования управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-130">You can use this property to transform the manipulated object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ae2-131">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationDelta> события.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-131">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e6ae2-132">В примере <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> свойство используется для перемещения, изменения размера и <xref:System.Windows.Shapes.Rectangle>поворота.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-132">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="e6ae2-133">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-133">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationDeltaEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInertial">
      <MemberSignature Language="C#" Value="public bool IsInertial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInertial" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInertial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInertial { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInertial : bool" Usage="System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-134">Получает значение, показывающее, происходит ли событие <see cref="E:System.Windows.UIElement.ManipulationDelta" /> во время инерции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-134">Gets a value that indicates whether the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia.</span></span></summary>
        <value><span data-ttu-id="e6ae2-135">Значение <see langword="true" />, если событие <see cref="E:System.Windows.UIElement.ManipulationDelta" /> происходит во время инерции; значение <see langword="false" />, если событие происходит во время контакта пользователя с элементом <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-135"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia; <see langword="false" /> if the event occurs while the user has contact with the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-136">Этот метод можно использовать для определения того, <xref:System.Windows.UIElement.ManipulationDelta> возникает ли событие во время инерции или когда пользователь имеет контакт с элементом, <xref:System.Windows.UIElement.ManipulationDelta> получающим событие.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-136">You can use this method to determine whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurs during inertia or while the user has contact with the element that receives the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ae2-137">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationDelta> события.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-137">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e6ae2-138">В примере проверяется, <xref:System.Windows.UIElement.ManipulationDelta> произошло ли событие во время инерции, а также находится ли прямоугольник в границах окна.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-138">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="e6ae2-139">Если эти случаи истинны, приложение останавливает манипуляцию, чтобы прямоугольник не отображал видимую область приложения.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-139">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="e6ae2-140">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement" Usage="System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-141">Получает контейнер, определяющий координаты манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-141">Gets the container that defines the coordinates for the manipulation.</span></span></summary>
        <value><span data-ttu-id="e6ae2-142">Контейнер, определяющий координаты манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-142">The container that defines the coordinates for the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationOrigin : System.Windows.Point" Usage="System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-143">Получает точку, с которой началась манипуляция.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-143">Gets the point from which the manipulation originated.</span></span></summary>
        <value><span data-ttu-id="e6ae2-144">Точка, с которой началась манипуляция.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-144">The point from which the manipulation originated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-145">Получает коллекцию объектов, представляющих сенсорные контакты для обработки.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-145">Gets a collection of objects that represents the touch contacts for the manipulation.</span></span></summary>
        <value><span data-ttu-id="e6ae2-146">Коллекция объектов, представляющих сенсорные контакты для обработки.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-146">A collection of objects that represents the touch contacts for the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportBoundaryFeedback">
      <MemberSignature Language="C#" Value="public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportBoundaryFeedback(class System.Windows.Input.ManipulationDelta unusedManipulation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportBoundaryFeedback (unusedManipulation As ManipulationDelta)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportBoundaryFeedback(System::Windows::Input::ManipulationDelta ^ unusedManipulation);" />
      <MemberSignature Language="F#" Value="member this.ReportBoundaryFeedback : System.Windows.Input.ManipulationDelta -&gt; unit" Usage="manipulationDeltaEventArgs.ReportBoundaryFeedback unusedManipulation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unusedManipulation" Type="System.Windows.Input.ManipulationDelta" />
      </Parameters>
      <Docs>
        <param name="unusedManipulation"><span data-ttu-id="e6ae2-147">Часть манипуляций, представляющая выход за границы.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-147">The portion of the manipulation that represents moving beyond the boundary.</span></span></param>
        <summary><span data-ttu-id="e6ae2-148">Указывает, что манипуляция вышла за определенные границы.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-148">Specifies that the manipulation has gone beyond certain boundaries.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ae2-149"><xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> Используйте метод, чтобы указать, что элемент переместился за определенную границу.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-149">Use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method to indicate that an element has moved beyond a certain boundary.</span></span>  <span data-ttu-id="e6ae2-150">Например, если пользователь перемещает элемент за пределы границ <xref:System.Windows.Window>, можно вызвать этот метод, чтобы сообщить о нем в окно.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-150">For example, if a user moves an element outside of the bounds of a <xref:System.Windows.Window>, you can call this method to report that to the window.</span></span>  <span data-ttu-id="e6ae2-151">При вызове <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> происходит событие.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-151">When you call <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event occurs.</span></span>  <span data-ttu-id="e6ae2-152">По умолчанию объект <xref:System.Windows.Window> подписывается <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> на событие, чтобы предоставить пользователю визуальный отзыв о достижении границы.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-152">By default, the <xref:System.Windows.Window> subscribes to the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event to provide visual feedback to the user that a boundary has been reached.</span></span>  <span data-ttu-id="e6ae2-153">Вы можете подписываться <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> на, чтобы реализовать пользовательское поведение.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-153">You can subscribe to <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> to implement custom behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ae2-154">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationDelta> события, которое <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> вызывает метод, когда пользователь перемещает элемент над границей контейнера.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-154">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event that calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method when the user moves the element over the edge of its container.</span></span>  <span data-ttu-id="e6ae2-155">Чтобы протестировать этот пример, выполните действия [, описанные в разделе Пошаговое руководство. Создайте свое первое приложение](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) Touch и замените код на шаге 5 на этот код.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-155">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 5 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#reportboundaryfeedback)]
 [!code-vb[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#reportboundaryfeedback)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6ae2-156">Свойство <paramref name="unusedManipulation" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-156"><paramref name="unusedManipulation" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public void StartInertia ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartInertia() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartInertia ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartInertia();" />
      <MemberSignature Language="F#" Value="member this.StartInertia : unit -&gt; unit" Usage="manipulationDeltaEventArgs.StartInertia " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6ae2-157">Запускает инерцию для операции, игнорируя последующие контактные движения и порождая событие <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-157">Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Velocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities Velocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities Velocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Velocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ Velocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Velocities : System.Windows.Input.ManipulationVelocities" Usage="System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6ae2-158">Получает скорости последних изменений в манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-158">Gets the rates of the most recent changes to the manipulation.</span></span></summary>
        <value><span data-ttu-id="e6ae2-159">Скорости последних изменений в манипуляции.</span><span class="sxs-lookup"><span data-stu-id="e6ae2-159">The rates of the most recent changes to the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
