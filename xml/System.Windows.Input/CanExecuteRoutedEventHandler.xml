<Type Name="CanExecuteRoutedEventHandler" FullName="System.Windows.Input.CanExecuteRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d59f4554561d75bef1c57729e43a1f1ef365511f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70608486" /></Metadata><TypeSignature Language="C#" Value="public delegate void CanExecuteRoutedEventHandler(object sender, CanExecuteRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CanExecuteRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CanExecuteRoutedEventHandler(sender As Object, e As CanExecuteRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CanExecuteRoutedEventHandler(System::Object ^ sender, CanExecuteRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type CanExecuteRoutedEventHandler = delegate of obj * CanExecuteRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="d8dbd-101">Целевой объект команды, вызывающей данный обработчик.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-101">The command target that is invoking the handler.</span></span></param>
    <param name="e"><span data-ttu-id="d8dbd-102">Данные события.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-102">The event data.</span></span></param>
    <summary><span data-ttu-id="d8dbd-103">Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Input.CommandBinding.CanExecute" />.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8dbd-104">Определяет <xref:System.Windows.Input.CanExecuteRoutedEventHandler> , может ли команда, связанная с источником события, выполняться на целевом объекте команды.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-104">The <xref:System.Windows.Input.CanExecuteRoutedEventHandler> determines if the command associated with the event source is able to execute on the command target.</span></span> <span data-ttu-id="d8dbd-105">Если у команды есть источник команды, указывающий целевой объект, то целевые сведения можно получить с помощью `sender`.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-105">If the command has a command source that specifies a target, then the target information can be obtained through `sender`.</span></span> <span data-ttu-id="d8dbd-106">Если параметр <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> не задан, то элемент с фокусом клавиатуры является целевым объектом, и его также можно получить с `sender`помощью.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-106">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set, the element with keyboard focus is the target, and can also be obtained through `sender`.</span></span>  <span data-ttu-id="d8dbd-107">Если определено, что команда может выполняться на целевом объекте, <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> свойство должно иметь `true`значение; `false`в противном случае — значение.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-107">If it is determined that the command can execute on the target, then the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> property should be set to `true`; otherwise, set it to `false`.</span></span>  
  
 <span data-ttu-id="d8dbd-108">Для определения команды, источника и целевого объекта не нужно полагаться на данные события.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-108">You do not need to rely on event data to determine the command, source, and target.</span></span> <span data-ttu-id="d8dbd-109">Вы можете ограничить использование обработчика известными возможными вызовами команд, хотя это труднее сделать, если структура команд широко используется в маршрутизации команд для выполнения одной и той же команды для последовательных потенциальных целей в событии. направлены.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-109">You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8dbd-110">В следующем примере показан объект <xref:System.Windows.Input.CanExecuteRoutedEventHandler> , для <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> которого `true`задается значение.</span><span class="sxs-lookup"><span data-stu-id="d8dbd-110">The following example shows a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> that sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  </Docs>
</Type>
