<Type Name="AccessKeyPressedEventHandler" FullName="System.Windows.Input.AccessKeyPressedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a54c915802b3598c13651e9e40b9370f641f6d9f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69173595" /></Metadata><TypeSignature Language="C#" Value="public delegate void AccessKeyPressedEventHandler(object sender, AccessKeyPressedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AccessKeyPressedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AccessKeyPressedEventHandler(sender As Object, e As AccessKeyPressedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AccessKeyPressedEventHandler(System::Object ^ sender, AccessKeyPressedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AccessKeyPressedEventHandler = delegate of obj * AccessKeyPressedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.AccessKeyPressedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="04e38-101">Объект, к которому присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="04e38-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="04e38-102">Данные события.</span><span class="sxs-lookup"><span data-stu-id="04e38-102">The event data.</span></span></param>
    <summary><span data-ttu-id="04e38-103">Представляет метод, обрабатывающий присоединенное событие <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span><span class="sxs-lookup"><span data-stu-id="04e38-103">Represents the method that will handle the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> attached event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04e38-104">Ключи доступа в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] службах обрабатываются классом Manager, который работает в некоторой степени как служба для ключей доступа, и перенаправляет входные данные ключа доступа [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] во входную систему.</span><span class="sxs-lookup"><span data-stu-id="04e38-104">Access keys in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are handled by a manager class that acts somewhat like a service for access keys, and forwards access key input to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input system.</span></span> <span data-ttu-id="04e38-105">Вместо того чтобы обрабатывать события нажатия клавиши доступа, в частности присоединив <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> обработчик для присоединенного события к конкретному объекту, обычно рекомендуется связать клавишу доступа с определенной командой через привязку команды, а затем Обработайте перенаправляемые команды с помощью соответствующих перенаправленных событий.</span><span class="sxs-lookup"><span data-stu-id="04e38-105">Rather than handling access key pressed events specifically by attaching a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event on a specific object, it is generally a better practice to associate the access key with a particular command through a command binding, and then handle the routed commands through the corresponding routed events.</span></span> <span data-ttu-id="04e38-106">Этот метод обеспечивает единую систему обработки событий для вводимых пользователем данных независимо от того, какой режим ввода инициировал входные данные.</span><span class="sxs-lookup"><span data-stu-id="04e38-106">This technique provides a unified event system for user input regardless of what input mode initiated the input.</span></span> <span data-ttu-id="04e38-107">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="04e38-107">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyManager" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventArgs" />
    <altmember cref="P:System.Windows.Controls.AccessText.AccessKey" />
  </Docs>
</Type>
