<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee5a979344397742da82bb0b7af1c58e9dcf79d3" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64206006" /></Metadata><TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="6bc5b-101">Объект, к которому присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="6bc5b-102">Данные события.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-102">The event data.</span></span></param>
    <summary><span data-ttu-id="6bc5b-103">Представляет метод, обрабатывающий перенаправленные события <see cref="E:System.Windows.Input.CommandBinding.Executed" /> и <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, а также связанные присоединенные события.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bc5b-104">Этот делегат содержит логику реализации для <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="6bc5b-105">Отделение логики реализации от команды позволяет команду, чтобы вызываться из разных источников и типов, а также централизовать логику команды.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="6bc5b-106">Этот делегат используется также для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, которые являются вложенные события на <xref:System.Windows.Input.CommandManager> класс, реализующий большая часть инфраструктуры системы команд.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="6bc5b-107">Но наиболее удобным обработчики будут обрабатывать <xref:System.Windows.Input.CommandBinding.Executed> события из определенного <xref:System.Windows.Input.CommandBinding>, а не работают на <xref:System.Windows.Input.CommandManager> уровень.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="6bc5b-108">В рамках <xref:System.Windows.Input.ExecutedRoutedEventArgs>, следующие свойства обычно представляют интерес при написании обработчика событий для перенаправленного события, полученный в результате выполняемая команда:</span><span class="sxs-lookup"><span data-stu-id="6bc5b-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="6bc5b-109"><xref:System.Windows.RoutedEventArgs.Source%2A> сообщает о целевой объект, где была выполнена команда.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="6bc5b-110">После выполнения команды можно также представить <xref:System.Windows.RoutedEventArgs.Source%2A> сведения обычно в перенаправленных событий условиями, которые объект, который вызвал перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="6bc5b-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> сообщает команда, которая выполнена.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="6bc5b-112">Это свойство полезно при использовании привязки команд, и при записи, которые потенциально обрабатывают несколько команд.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="6bc5b-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> сообщает все параметры конкретных команд, которые были переданы с помощью выполняемой команды.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="6bc5b-114">Не все команды используют или ожидают, что параметры конкретных команд.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="6bc5b-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> сообщает ли перенаправленное событие, полученное в результате выполняемая команда уже было обработано с другим элементом на маршруте.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="6bc5b-116">Для обработчиков перенаправленных событий, это рекомендуется для обработчиков, которые начать осмысленную работу при обработке события, чтобы задать <xref:System.Windows.RoutedEventArgs.Handled%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="6bc5b-117">Благодаря этому типичные обработчики для события обработки события снова далее в маршруте.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="6bc5b-118">Дополнительные сведения об обработке перенаправленных событий см. в разделе [маркировка перенаправленных событий как обработанных и обработка классов](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="6bc5b-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="6bc5b-119">Этот делегат также представляет обработчики для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, которые являются вложенные события на <xref:System.Windows.Input.CommandManager> класс, реализующий большая часть инфраструктуры системы команд.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="6bc5b-120">Но наиболее удобным обработчики будут обрабатывать <xref:System.Windows.Input.CommandBinding.Executed> события из определенного <xref:System.Windows.Input.CommandBinding>, а не работают на <xref:System.Windows.Input.CommandManager> уровень.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="6bc5b-121">Дополнительные сведения о системе команд см. в разделе [Общие сведения о системе команд](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6bc5b-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bc5b-122">В этом примере создается <xref:System.Windows.Input.ExecutedRoutedEventHandler> , задает свойство visual на целевом объекте, при выполнении команды.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="6bc5b-123">В примере также содержит <xref:System.Windows.Input.CanExecuteRoutedEventHandler> для той же команды.</span><span class="sxs-lookup"><span data-stu-id="6bc5b-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>