<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e128fe4824481b4e3dc209fbcdd4599518ff8ebd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69172903" /></Metadata><TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="c8196-101">Объект, к которому присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="c8196-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="c8196-102">Данные события.</span><span class="sxs-lookup"><span data-stu-id="c8196-102">The event data.</span></span></param>
    <summary><span data-ttu-id="c8196-103">Представляет метод, обрабатывающий перенаправленные события <see cref="E:System.Windows.Input.CommandBinding.Executed" /> и <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, а также связанные присоединенные события.</span><span class="sxs-lookup"><span data-stu-id="c8196-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8196-104">Этот делегат содержит логику реализации для <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="c8196-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="c8196-105">Отделение логики реализации от команды позволяет вызывать команду из различных источников и типов и обеспечивает централизованную логику команды.</span><span class="sxs-lookup"><span data-stu-id="c8196-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="c8196-106">Этот делегат также используется для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, которые <xref:System.Windows.Input.CommandManager> являются присоединенными событиями в классе, который реализует большую часть инфраструктуры команд.</span><span class="sxs-lookup"><span data-stu-id="c8196-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="c8196-107">Но большинство практических обработчиков будут <xref:System.Windows.Input.CommandBinding.Executed> обработаны события <xref:System.Windows.Input.CommandBinding>из определенного, а не для <xref:System.Windows.Input.CommandManager> работы на уровне.</span><span class="sxs-lookup"><span data-stu-id="c8196-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="c8196-108">В <xref:System.Windows.Input.ExecutedRoutedEventArgs>службах следующие свойства обычно представляют интерес при написании обработчика событий для перенаправленного события, полученного из выполняемой команды:</span><span class="sxs-lookup"><span data-stu-id="c8196-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="c8196-109"><xref:System.Windows.RoutedEventArgs.Source%2A>сообщает целевой объект, в котором была выполнена команда.</span><span class="sxs-lookup"><span data-stu-id="c8196-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="c8196-110">После выполнения команды можно также представить более широкое значение <xref:System.Windows.RoutedEventArgs.Source%2A> в терминах перенаправленных событий в качестве объекта, вызвавшего перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="c8196-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="c8196-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>сообщает о выполненной команде.</span><span class="sxs-lookup"><span data-stu-id="c8196-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="c8196-112">Это свойство полезно при использовании привязок команд и при написании обработчиков, которые потенциально обрабатывали несколько команд.</span><span class="sxs-lookup"><span data-stu-id="c8196-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="c8196-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>сообщает о параметрах, относящихся к команде, которые были переданы выполненной командой.</span><span class="sxs-lookup"><span data-stu-id="c8196-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="c8196-114">Не все команды используют или предполагают параметры, относящиеся к команде.</span><span class="sxs-lookup"><span data-stu-id="c8196-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="c8196-115"><xref:System.Windows.RoutedEventArgs.Handled%2A>сообщает, было ли перенаправленное событие, полученное от выполненной команды, уже обработано другим элементом маршрута.</span><span class="sxs-lookup"><span data-stu-id="c8196-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="c8196-116">Для обработчиков перенаправленных событий рекомендуется использовать обработчики, которые выполняют осмысленную работу при обработке события для установки значения <xref:System.Windows.RoutedEventArgs.Handled%2A>. `true`</span><span class="sxs-lookup"><span data-stu-id="c8196-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="c8196-117">Это предотвращает дальнейшую обработку события на маршруте обычными обработчиками события.</span><span class="sxs-lookup"><span data-stu-id="c8196-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="c8196-118">Дополнительные сведения об обработке перенаправленных событий см. в разделе Маркировка перенаправленных [событий как обработанных и обработка классов](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="c8196-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="c8196-119">Этот делегат также представляет обработчики <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> для <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>и, которые <xref:System.Windows.Input.CommandManager> являются присоединенными событиями в классе, который реализует большую часть инфраструктуры команд.</span><span class="sxs-lookup"><span data-stu-id="c8196-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="c8196-120">Но большинство практических обработчиков будут <xref:System.Windows.Input.CommandBinding.Executed> обработаны события <xref:System.Windows.Input.CommandBinding>из определенного, а не для <xref:System.Windows.Input.CommandManager> работы на уровне.</span><span class="sxs-lookup"><span data-stu-id="c8196-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="c8196-121">Дополнительные сведения о системе команд см. в разделе [Общие сведения о системе команд](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c8196-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8196-122">В этом примере создается <xref:System.Windows.Input.ExecutedRoutedEventHandler> объект, который задает визуальное свойство в целевом объекте при выполнении команды.</span><span class="sxs-lookup"><span data-stu-id="c8196-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="c8196-123">Пример также включает в <xref:System.Windows.Input.CanExecuteRoutedEventHandler> себя для той же команды.</span><span class="sxs-lookup"><span data-stu-id="c8196-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>
