<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="125de6c0ad8801f515592d6b3fa68a531bdac552" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75176994" /></Metadata><TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="39bfb-101">Представляет устройство-клавиатуру.</span><span class="sxs-lookup"><span data-stu-id="39bfb-101">Represents the keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-102">Класс <xref:System.Windows.Input.Keyboard> предоставляет события, методы и свойства, связанные с клавиатурой, которые предоставляют сведения о состоянии клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="39bfb-103">Каждое из событий, которые <xref:System.Windows.Input.Keyboard> определяет как вложенное событие, также передается классами базового элемента <xref:System.Windows.UIElement> и <xref:System.Windows.ContentElement> как новое перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="39bfb-104">Как правило, более удобно управлять событиями клавиатуры для приложения на <xref:System.Windows.UIElement> и <xref:System.Windows.ContentElement>, а не использовать события <xref:System.Windows.Input.Keyboard>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="39bfb-105">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-106">Чтобы элемент мог получать ввод с клавиатуры, элемент должен быть в фокусе.</span><span class="sxs-lookup"><span data-stu-id="39bfb-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="39bfb-107">Большинство <xref:System.Windows.UIElement> производных объектов являются фокусом по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="39bfb-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="39bfb-108">В противном случае, чтобы сделать элемент сфокусированным, задайте для свойства <xref:System.Windows.UIElement.Focusable%2A> базового элемента значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="39bfb-109">Дополнительные сведения об основных элементах см. в разделе [Общие сведения о базовых элементах](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-110"><xref:System.Windows.Controls.Panel> классы, такие как <xref:System.Windows.Controls.StackPanel> и <xref:System.Windows.Controls.Canvas>, задайте для <xref:System.Windows.UIElement.Focusable%2A> значение по умолчанию `false`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="39bfb-111">Таким образом, чтобы эти объекты получали фокус клавиатуры, <xref:System.Windows.UIElement.Focusable%2A> необходимо задать значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="39bfb-112">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-113">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-114">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-115">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-116">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-117">Статические члены класса <xref:System.Windows.Input.Keyboard> делегата к основному <xref:System.Windows.Input.KeyboardDevice> вызывающего потока, поэтому они не обязательно являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="39bfb-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-118">В следующем примере показано, как использовать метод <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>, чтобы определить, находится ли ключ в переключенном состоянии.</span><span class="sxs-lookup"><span data-stu-id="39bfb-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="39bfb-119">Если передаваемый в <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> <xref:System.Windows.Input.Key> переключается, изменяется фон кнопки.</span><span class="sxs-lookup"><span data-stu-id="39bfb-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-120">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-121">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-121">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-122">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-123">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-124">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-125">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-125">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-126">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-127">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-128">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-129">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-129">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-130">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-131">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-132">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-133">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-133">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-134">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-135">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-136">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-137">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-137">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-138">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-139">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-140">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-141">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-141">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-142">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-143">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-144">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-145">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-145">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-146">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-147">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-148">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-149">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-149">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-150">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-151">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-152">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-153">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-153">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-154">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-155">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-156">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-157">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-157">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="39bfb-158">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-159">Этот метод предоставляет доступ к присоединенным свойствам для доступа к коду и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки атрибутов <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> присоединенного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39bfb-160">Очищает фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-160">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-161">Если фокус находится в окне Win32, WPF вызывает метод <xref:System.Windows.Input.Keyboard.ClearFocus%2A> при восстановлении фокуса при закрытии меню.</span><span class="sxs-lookup"><span data-stu-id="39bfb-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="39bfb-162">При отключении режима меню фокус Win32 возвращается размещаемому дочернему элементу HWND, а элемент не имеет фокуса WPF.</span><span class="sxs-lookup"><span data-stu-id="39bfb-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-163">Получает или задает поведение [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] при возвращении фокуса.</span><span class="sxs-lookup"><span data-stu-id="39bfb-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="39bfb-164">Значение перечисления, определяющее поведение [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] при возвращении фокуса.</span><span class="sxs-lookup"><span data-stu-id="39bfb-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="39bfb-165">Значение по умолчанию — <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-166">Элемент, на который устанавливается фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-166">The element on which to set keyboard focus.</span></span></param>
        <summary><span data-ttu-id="39bfb-167">Устанавливает фокус клавиатуры на указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="39bfb-167">Sets keyboard focus on the specified element.</span></span></summary>
        <returns><span data-ttu-id="39bfb-168">Элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-168">The element with keyboard focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-169">Чтобы элемент получал ввод с клавиатуры, элемент должен быть в фокусе.</span><span class="sxs-lookup"><span data-stu-id="39bfb-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="39bfb-170">Чтобы сделать элемент неактивным, задайте для свойства <xref:System.Windows.UIElement.Focusable%2A> базового элемента значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="39bfb-171">Дополнительные сведения об основных элементах см. в разделе [Общие сведения о базовых элементах](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="39bfb-172"><xref:System.Windows.Controls.Panel> классы, такие как <xref:System.Windows.Controls.StackPanel> и <xref:System.Windows.Controls.Canvas>, задайте для <xref:System.Windows.UIElement.Focusable%2A> значение по умолчанию `false`; Таким образом, чтобы эти объекты получали фокус клавиатуры, <xref:System.Windows.UIElement.Focusable%2A> необходимо задать значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="39bfb-173">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-174">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-175">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-176">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-177">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-178">Элемент с фокусом клавиатуры также имеет логический фокус для области фокуса, к которой принадлежит элемент.</span><span class="sxs-lookup"><span data-stu-id="39bfb-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="39bfb-179">Элемент с логическим фокусом может иметь или не иметь фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-180">В следующем примере показан обработчик событий <xref:System.Windows.FrameworkElement.Loaded>, который устанавливает фокус клавиатуры на <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-181">Получает элемент, имеющий фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-181">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="39bfb-182">Элемент с фокусом.</span><span class="sxs-lookup"><span data-stu-id="39bfb-182">The focused element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-183">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-184">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-185">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-186">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-187">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-188">Элемент с фокусом клавиатуры также имеет логический фокус для области фокуса, к которой принадлежит элемент.</span><span class="sxs-lookup"><span data-stu-id="39bfb-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="39bfb-189">Элемент с логическим фокусом может иметь или не иметь фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-190">В следующем примере возвращается элемент с фокусом клавиатуры и приводится к <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="39bfb-191">Если элемент с фокусом клавиатуры является <xref:System.Windows.Controls.Control>, изменяется фон элемента.</span><span class="sxs-lookup"><span data-stu-id="39bfb-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="39bfb-192">Указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="39bfb-192">The specified key.</span></span></param>
        <summary><span data-ttu-id="39bfb-193">Получает набор состояний клавиши для заданной клавиши.</span><span class="sxs-lookup"><span data-stu-id="39bfb-193">Gets the set of key states for the specified key.</span></span></summary>
        <returns><span data-ttu-id="39bfb-194">Поразрядное сочетание значений <see cref="T:System.Windows.Input.KeyStates" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-195"><xref:System.Windows.Input.KeyStates> является перечислением битовых полей; Таким образом, ключ может находиться в нескольких состояниях.</span><span class="sxs-lookup"><span data-stu-id="39bfb-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="39bfb-196">Например, ключ может находиться в состоянии нажатия, а также в переключенном состоянии.</span><span class="sxs-lookup"><span data-stu-id="39bfb-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="39bfb-197">Используйте операции побитового сравнения для определения точного состояния или состояний, в которых находится ключ.</span><span class="sxs-lookup"><span data-stu-id="39bfb-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="39bfb-198">Класс <xref:System.Windows.Input.Keyboard> предоставляет ряд статических методов, которые также можно использовать для получения сведений о состоянии ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="39bfb-199">Методы: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>и <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-200">В следующем примере показано, как использовать метод <xref:System.Windows.Input.Keyboard.GetKeyStates%2A>, чтобы определить, находится ли <xref:System.Windows.Input.Key.Return>ный ключ в <xref:System.Windows.Input.KeyStates.Down>ном состоянии.</span><span class="sxs-lookup"><span data-stu-id="39bfb-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="39bfb-201">Бит и операция используются для сравнения <xref:System.Windows.Input.KeyStates>, возвращаемых из <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> и <xref:System.Windows.Input.Key.Down>ного состояния.</span><span class="sxs-lookup"><span data-stu-id="39bfb-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="39bfb-202">Если ключ не работает, изменяется фон <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-203">Происходит, когда элемент получает фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-203">Occurs when an element receives keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-204">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-205">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-205">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-206">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-207">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-208">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-209">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-210">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-211">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-212">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-213">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-214">Если событие <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> или <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> обрабатывается, фокус клавиатуры меняется.</span><span class="sxs-lookup"><span data-stu-id="39bfb-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-215">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-216">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="39bfb-217">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-217">Routing strategy</span></span>|<span data-ttu-id="39bfb-218">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-218">Bubbling</span></span>|  
|<span data-ttu-id="39bfb-219">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="39bfb-220">Соответствующее событие туннелирования — <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-221">В следующем примере создается <xref:System.Windows.Controls.TextBox> и присоединяются обработчики событий для события <xref:System.Windows.UIElement.GotKeyboardFocus> и события <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="39bfb-222">Когда <xref:System.Windows.Controls.TextBox> получает фокус клавиатуры, цвет фона изменяется, а текст <xref:System.Windows.Controls.TextBox> удаляется.</span><span class="sxs-lookup"><span data-stu-id="39bfb-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="39bfb-223">Когда <xref:System.Windows.Controls.TextBlock> теряет фокус клавиатуры, изменяется цвет фона и вызывается метод, который сбрасывает переменные, используемые в примере.</span><span class="sxs-lookup"><span data-stu-id="39bfb-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-224">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-225">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-226">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-227">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="39bfb-228">Указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="39bfb-228">The specified key.</span></span></param>
        <summary><span data-ttu-id="39bfb-229">Определяет, нажата ли указанная клавиша.</span><span class="sxs-lookup"><span data-stu-id="39bfb-229">Determines whether the specified key is pressed.</span></span></summary>
        <returns><span data-ttu-id="39bfb-230"><see langword="true" />, если <paramref name="key" /> нажата; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-230"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-231">Метод <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> можно использовать для определения набора состояний определенного ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-232">В следующем примере показано, как использовать метод <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> для определения состояния определенного ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="39bfb-233">Ключ <xref:System.Windows.Input.Key.Return> передается методу <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="39bfb-234">Если метод возвращает `true`, изменяется фон <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="39bfb-235">Указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="39bfb-235">The specified key.</span></span></param>
        <summary><span data-ttu-id="39bfb-236">Определяет, включена ли указанная клавиша.</span><span class="sxs-lookup"><span data-stu-id="39bfb-236">Determines whether the specified key is toggled.</span></span></summary>
        <returns><span data-ttu-id="39bfb-237"><see langword="true" />, если <paramref name="key" /> включена; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-237"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-238">Метод <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> можно использовать для определения набора состояний определенного ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-239">В следующем примере показано, как использовать метод <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> для определения состояния определенного ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="39bfb-240">Ключ <xref:System.Windows.Input.Key.Return> передается методу <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="39bfb-241">Если метод возвращает `true`, изменяется фон <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="39bfb-242">Проверяемый ключ.</span><span class="sxs-lookup"><span data-stu-id="39bfb-242">The key to check.</span></span></param>
        <summary><span data-ttu-id="39bfb-243">Определяет, отпущена ли заданная клавиша.</span><span class="sxs-lookup"><span data-stu-id="39bfb-243">Determines whether the specified key is released.</span></span></summary>
        <returns><span data-ttu-id="39bfb-244"><see langword="true" />, если <paramref name="key" /> отпущена; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-244"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-245">Метод <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> можно использовать для определения набора состояний определенного ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-246">В следующем примере показано, как использовать метод <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> для определения состояния определенного ключа.</span><span class="sxs-lookup"><span data-stu-id="39bfb-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="39bfb-247">Ключ <xref:System.Windows.Input.Key.Return> передается методу <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="39bfb-248">Если метод возвращает `true`, изменяется фон <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-249">Происходит, когда поставщик ввода с клавиатуры получает фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-249">Occurs when the keyboard input provider acquires focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-250">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-251">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-251">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-252">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-253">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-254">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-255">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-256">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="39bfb-257">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-257">Routing strategy</span></span>|<span data-ttu-id="39bfb-258">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-258">Bubbling</span></span>|  
|<span data-ttu-id="39bfb-259">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="39bfb-260">Соответствующее событие туннелирования — <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-261">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-262">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-263">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-264">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-265">Происходит при нажатии клавиши на клавиатуре.</span><span class="sxs-lookup"><span data-stu-id="39bfb-265">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-266">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-267">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-267">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-268">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-269">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-270">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-271">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-272">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="39bfb-273">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-273">Routing strategy</span></span>|<span data-ttu-id="39bfb-274">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-274">Bubbling</span></span>|  
|<span data-ttu-id="39bfb-275">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="39bfb-276">Соответствующее событие туннелирования — <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-277">В следующем примере создается <xref:System.Windows.Controls.TextBox>, который присоединяет обработчик событий для события <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="39bfb-278">При нажатии <xref:System.Windows.Input.Key.Return> обработчик событий отображает текст в <xref:System.Windows.Controls.TextBox> в <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-279">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-280">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-281">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-282">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-283">Происходит при отпускании клавиши на клавиатуре.</span><span class="sxs-lookup"><span data-stu-id="39bfb-283">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-284">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-285">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-285">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-286">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-287">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-288">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-289">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-290">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="39bfb-291">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-291">Routing strategy</span></span>|<span data-ttu-id="39bfb-292">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-292">Bubbling</span></span>|  
|<span data-ttu-id="39bfb-293">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="39bfb-294">Соответствующее событие туннелирования — <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-295">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-296">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-297">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-298">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-299">Происходит, когда элемент теряет фокус ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-299">Occurs when an element loses keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-300">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-301">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-301">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-302">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-303">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-304">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-305">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-306">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-307">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-308">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-309">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-310">Если событие <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> или <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> обрабатывается, фокус клавиатуры не меняется.</span><span class="sxs-lookup"><span data-stu-id="39bfb-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-311">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-312">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="39bfb-313">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-313">Routing strategy</span></span>|<span data-ttu-id="39bfb-314">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-314">Bubbling</span></span>|  
|<span data-ttu-id="39bfb-315">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="39bfb-316">Соответствующее событие туннелирования — <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-317">В следующем примере создается <xref:System.Windows.Controls.TextBox> и присоединяются обработчики событий для события <xref:System.Windows.UIElement.GotKeyboardFocus> и события <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="39bfb-318">Когда <xref:System.Windows.Controls.TextBox> получает фокус клавиатуры, цвет фона изменяется, а текст <xref:System.Windows.Controls.TextBox> удаляется.</span><span class="sxs-lookup"><span data-stu-id="39bfb-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="39bfb-319">Когда <xref:System.Windows.Controls.TextBlock> теряет фокус клавиатуры, изменяется цвет фона и вызывается метод, который сбрасывает переменные, используемые в образце.</span><span class="sxs-lookup"><span data-stu-id="39bfb-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-320">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-321">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-322">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-323">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-324">Получает набор клавиш <see cref="T:System.Windows.Input.ModifierKeys" />, нажатых в данный момент.</span><span class="sxs-lookup"><span data-stu-id="39bfb-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span></span></summary>
        <value><span data-ttu-id="39bfb-325">Поразрядное сочетание значений <see cref="T:System.Windows.Input.ModifierKeys" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-326"><xref:System.Windows.Input.ModifierKeys> является перечислением битовых полей, поэтому одновременно можно нажать несколько клавиш-модификаторов.</span><span class="sxs-lookup"><span data-stu-id="39bfb-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="39bfb-327">Используйте битовые операции, чтобы определить точный набор нажатых клавиш с модификатором.</span><span class="sxs-lookup"><span data-stu-id="39bfb-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39bfb-328">В следующем примере используется бит и сравнение, чтобы определить, нажата ли клавиша-модификатор <xref:System.Windows.Input.ModifierKeys.Control>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-329">Происходит, когда элемент находится в процессе получения фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-329">Occurs when an element is in the process of acquiring keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-330">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-331">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-331">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-332">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-333">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-334">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-335">Если событие <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> или <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> обрабатывается, фокус клавиатуры не меняется.</span><span class="sxs-lookup"><span data-stu-id="39bfb-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="39bfb-336">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-337">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-338">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-339">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-340">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-341">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-342">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="39bfb-343">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-343">Routing strategy</span></span>|<span data-ttu-id="39bfb-344">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="39bfb-344">Tunneling</span></span>|  
|<span data-ttu-id="39bfb-345">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="39bfb-346">Соответствующее событие восходящей маршрутизации <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-347">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-348">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-349">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-350">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-351">Происходит, когда поставщик ввода с клавиатуры находится в процессе получения фокуса.</span><span class="sxs-lookup"><span data-stu-id="39bfb-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-352">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-353">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-353">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-354">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-355">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-356">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-357">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-358">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="39bfb-359">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-359">Routing strategy</span></span>|<span data-ttu-id="39bfb-360">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="39bfb-360">Tunneling</span></span>|  
|<span data-ttu-id="39bfb-361">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="39bfb-362">Соответствующее событие восходящей маршрутизации <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-363">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-364">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-365">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-366">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-367">Происходит при нажатии клавиши на клавиатуре.</span><span class="sxs-lookup"><span data-stu-id="39bfb-367">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-368">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-369">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-369">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-370">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-371">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-372">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-373">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-374">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="39bfb-375">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-375">Routing strategy</span></span>|<span data-ttu-id="39bfb-376">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="39bfb-376">Tunneling</span></span>|  
|<span data-ttu-id="39bfb-377">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="39bfb-378">Соответствующее событие восходящей маршрутизации <xref:System.Windows.Input.Keyboard.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-379">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-380">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-381">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-382">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-383">Происходит при отпускании клавиши на клавиатуре.</span><span class="sxs-lookup"><span data-stu-id="39bfb-383">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-384">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-385">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-385">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-386">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-387">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-388">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-389">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-390">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="39bfb-391">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-391">Routing strategy</span></span>|<span data-ttu-id="39bfb-392">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="39bfb-392">Tunneling</span></span>|  
|<span data-ttu-id="39bfb-393">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="39bfb-394">Соответствующее событие восходящей маршрутизации <xref:System.Windows.Input.Keyboard.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-395">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-396">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-397">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-398">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39bfb-399">Происходит, когда элемент теряет фокус ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-399">Occurs when an element is in the process of losing keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-400">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="39bfb-401">реализует вложенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-401">implements attached events as routed events.</span></span> <span data-ttu-id="39bfb-402">Присоединенные события — это фундаментальная концепция [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ного языка для ссылок на события, которые могут быть обработаны для объектов, не определяющих это событие, которые [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяются путем включения события для прохода по маршруту.</span><span class="sxs-lookup"><span data-stu-id="39bfb-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="39bfb-403">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="39bfb-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="39bfb-404">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="39bfb-405">Если событие <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> или <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> обрабатывается, фокус клавиатуры не меняется.</span><span class="sxs-lookup"><span data-stu-id="39bfb-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="39bfb-406">Фокус клавиатуры относится к объекту, получающему ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="39bfb-407">Элемент с фокусом клавиатуры имеет <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> установлен в значение `true`.</span><span class="sxs-lookup"><span data-stu-id="39bfb-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="39bfb-408">На всем рабочем столе может быть только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="39bfb-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="39bfb-409">Логический фокус относится к объекту в области фокуса, имеющей фокус.</span><span class="sxs-lookup"><span data-stu-id="39bfb-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="39bfb-410">Дополнительные сведения о фокусе, фокусе клавиатуры и логическом фокусе см. в разделе [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md) и [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="39bfb-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="39bfb-411">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="39bfb-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="39bfb-412">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="39bfb-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="39bfb-413">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="39bfb-413">Routing strategy</span></span>|<span data-ttu-id="39bfb-414">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="39bfb-414">Tunneling</span></span>|  
|<span data-ttu-id="39bfb-415">делегат</span><span class="sxs-lookup"><span data-stu-id="39bfb-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="39bfb-416">Соответствующее событие восходящей маршрутизации <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-417">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-418">Идентификаторы перенаправленных событий создаются при регистрации маршрутизируемых событий, а результат сохраняется в виде поля в классе, который регистрирует перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="39bfb-419">Эти идентификаторы содержат идентифицирующее имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод для добавления владельцев для события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="39bfb-420">Эти идентификаторы часто используются в качестве параметров системных методов событий для идентификации конкретного перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="39bfb-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39bfb-421">Получает первичное клавиатурное устройство ввода.</span><span class="sxs-lookup"><span data-stu-id="39bfb-421">Gets the primary keyboard input device.</span></span></summary>
        <value><span data-ttu-id="39bfb-422">Устройство.</span><span class="sxs-lookup"><span data-stu-id="39bfb-422">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-423">Это свойство служит для поддержки инфраструктуры [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] и не предназначено для непосредственного использования в коде.</span><span class="sxs-lookup"><span data-stu-id="39bfb-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-424">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-425">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-425">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-426">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-427">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-428">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-429">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-429">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-430">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-431">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-432">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-433">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-433">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-434">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-435">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-436">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-437">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-437">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-438">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-439">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-440">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-441">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-441">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-442">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-443">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-444">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-445">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-445">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-446">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-447">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-448">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-449">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-449">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-450">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-451">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-452">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-453">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-453">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-454">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-455">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-456">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-457">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-457">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-458">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-459">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="39bfb-460">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="39bfb-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="39bfb-461">Удаляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="39bfb-461">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="39bfb-462">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="39bfb-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bfb-463">Этот метод предоставляет методы доступа к присоединенным свойствам для доступа кода к присоединенному событию <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="39bfb-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
