<Type Name="KeyGesture" FullName="System.Windows.Input.KeyGesture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fe858a9b6242ac976e2d3f564a1b3c2ad7655bc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70615566" /></Metadata><TypeSignature Language="C#" Value="public class KeyGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGesture : System::Windows::Input::InputGesture" />
  <TypeSignature Language="F#" Value="type KeyGesture = class&#xA;    inherit InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8b1fe-101">Определяет сочетание клавиш, которое может использоваться для вызова команды.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-101">Defines a keyboard combination that can be used to invoke a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-102">В большинстве случаев объект <xref:System.Windows.Input.KeyGesture> должен быть связан с одним или несколькими. <xref:System.Windows.Input.ModifierKeys></span><span class="sxs-lookup"><span data-stu-id="8b1fe-102">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="8b1fe-103">Исключениями из этого правила являются функциональные ключи и цифровые клавиши клавиатуры, которые могут быть действительными <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-103">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="8b1fe-104">Например, можно создать <xref:System.Windows.Input.KeyGesture> с помощью только клавиши F12, но для использования ключа X <xref:System.Windows.Input.KeyGesture> в нем необходимо связать с клавишей-модификатором.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-104">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 <span data-ttu-id="8b1fe-105">В общем случае можно</span><span class="sxs-lookup"><span data-stu-id="8b1fe-105">In general, you can</span></span>  
  
 <span data-ttu-id="8b1fe-106">Можно использовать <xref:System.Windows.Input.KeyBinding> <xref:System.Windows.Input.KeyGesture> для <xref:System.Windows.Input.KeyGesture> привязки <xref:System.Windows.Input.ICommand> к, чтобы команда вызывалась при возникновении.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-106">You can use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to an <xref:System.Windows.Input.ICommand>, so that the command is invoked when the <xref:System.Windows.Input.KeyGesture> occurs.</span></span>  
  
 <span data-ttu-id="8b1fe-107">Для <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.Input.KeyBinding.Gesture%2A>использования свойство, обычно заданное в, имеет значение, в случаях, когда жест представляет как стандартный ключ, так и клавишу-модификатор. [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</span><span class="sxs-lookup"><span data-stu-id="8b1fe-107">For <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.KeyBinding.Gesture%2A>, in cases where the gesture represents both a standard key and a modifier key.</span></span> <span data-ttu-id="8b1fe-108">Можно также задать <xref:System.Windows.Input.KeyBinding.Gesture%2A> свойство как ключ функции или просто сочетание клавиш-модификатора.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-108">You can also set the <xref:System.Windows.Input.KeyBinding.Gesture%2A> property to be just a function key, or just a modifier key combination.</span></span> <span data-ttu-id="8b1fe-109">Однако чаще устанавливается свойство, <xref:System.Windows.Input.KeyBinding.Key%2A> если предполагаемая привязка команды является функциональной клавишей без модификаторов, или <xref:System.Windows.Input.KeyBinding.Modifiers%2A> если предполагаемая привязка команды предназначена только для клавиш-модификаторов.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-109">However, it is more common to set the <xref:System.Windows.Input.KeyBinding.Key%2A> property if the intended command binding is a function key with no modifiers, or <xref:System.Windows.Input.KeyBinding.Modifiers%2A> if the intended command binding is for modifier keys only.</span></span>  
  
<a name="xamlAttributeUsage_KeyGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="8b1fe-110">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="8b1fe-110">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreModifierKeys+key"/>  
- or -  
<object property="functionKey"/>  
```  
  
<a name="xamlValues_KeyGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="8b1fe-111">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="8b1fe-111">XAML Values</span></span>  
 `functionKey`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="8b1fe-112">Одно значение ключа, которое должно быть одним из функциональных клавиш (F1-12) или клавишами цифровой клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-112">A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="8b1fe-113">Один или несколько клавиш-модификаторов, определяемых <xref:System.Windows.Input.ModifierKeys> перечислением, разделенные символом "+".</span><span class="sxs-lookup"><span data-stu-id="8b1fe-113">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 `key`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="8b1fe-114">Одно значение ключа.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-114">A single key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b1fe-115">В следующем примере показано, как привязать <xref:System.Windows.Input.ApplicationCommands.Close%2A> команду <xref:System.Windows.Input.KeyGesture> к с помощью <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-115">The following example shows how to bind the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command to a <xref:System.Windows.Input.KeyGesture> using a <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 <span data-ttu-id="8b1fe-116">В следующем примере показано, как использовать <xref:System.Windows.Input.KeyGesture> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8b1fe-116">The following example shows how to use <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="8b1fe-117">Обратите внимание [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , что при использовании не `<KeyGesture>` объявляется элемент напрямую.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-117">Note that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage does not directly declare a `<KeyGesture>` element.</span></span> <span data-ttu-id="8b1fe-118">Использование этого объектного элемента невозможно, так <xref:System.Windows.Input.KeyGesture> как не предоставляет общедоступный конструктор без параметров.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-118">That object element usage is not possible because <xref:System.Windows.Input.KeyGesture> does not expose a public parameterless constructor.</span></span> <span data-ttu-id="8b1fe-119">Вместо этого используется поведение TypeConverter для объявления всего <xref:System.Windows.Input.KeyGesture> встроенного в качестве `Gesture` значения атрибута. [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</span><span class="sxs-lookup"><span data-stu-id="8b1fe-119">Instead, the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage uses the typeconverter behavior to declare an entire <xref:System.Windows.Input.KeyGesture> inline as the `Gesture` attribute value.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b1fe-120">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8b1fe-121">Клавиша, связанная с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-121">The key associated with this gesture.</span></span></param>
        <summary><span data-ttu-id="8b1fe-122">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyGesture" /> указанным значением <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-123">В большинстве случаев объект <xref:System.Windows.Input.KeyGesture> должен быть связан с одним или несколькими. <xref:System.Windows.Input.ModifierKeys></span><span class="sxs-lookup"><span data-stu-id="8b1fe-123">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="8b1fe-124">Исключениями из этого правила являются функциональные ключи и цифровые клавиши клавиатуры, которые могут быть действительными <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-124">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b1fe-125">В следующем примере показано, как использовать этот конструктор для создания <xref:System.Windows.Input.KeyGesture> и связывания его <xref:System.Windows.Input.KeyBinding>с.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-125">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span>  <span data-ttu-id="8b1fe-126">Затем добавляется <xref:System.Windows.Input.InputBindingCollection> в коллекцию объекта  <xref:System.Windows.Window> .  <xref:System.Windows.Input.KeyBinding></span><span class="sxs-lookup"><span data-stu-id="8b1fe-126">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithnomodifier)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithnomodifier)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8b1fe-127"><paramref name="key" /> не является допустимым <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-127"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8b1fe-128"><paramref name="key" /> не является допустимым <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-128"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture (key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8b1fe-129">Клавиша, связанная с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-129">The key associated with the gesture.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8b1fe-130">Клавиши CTRL, SHIFT или ALT, связанные с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-130">The modifier keys associated with the gesture.</span></span></param>
        <summary><span data-ttu-id="8b1fe-131">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyGesture" /> с заданными свойствами <see cref="T:System.Windows.Input.Key" /> и <see cref="T:System.Windows.Input.ModifierKeys" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-132">В большинстве случаев объект <xref:System.Windows.Input.KeyGesture> должен быть связан с одним или несколькими. <xref:System.Windows.Input.ModifierKeys></span><span class="sxs-lookup"><span data-stu-id="8b1fe-132">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="8b1fe-133">Исключениями из этого правила являются функциональные ключи и цифровые клавиши клавиатуры, которые могут быть действительными <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-133">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b1fe-134">В следующем примере показано, как использовать этот конструктор для создания <xref:System.Windows.Input.KeyGesture> и связывания его <xref:System.Windows.Input.KeyBinding>с.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-134">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span> <span data-ttu-id="8b1fe-135">Затем добавляется <xref:System.Windows.Input.InputBindingCollection> в коллекцию объекта  <xref:System.Windows.Window> .  <xref:System.Windows.Input.KeyBinding></span><span class="sxs-lookup"><span data-stu-id="8b1fe-135">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8b1fe-136">Параметр <paramref name="modifiers" /> не является допустимым значением <see cref="T:System.Windows.Input.ModifierKeys" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-136"><paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span></span>  
  
<span data-ttu-id="8b1fe-137">-или-</span><span class="sxs-lookup"><span data-stu-id="8b1fe-137">-or-</span></span> 
 <span data-ttu-id="8b1fe-138"><paramref name="key" /> не является допустимым <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-138"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8b1fe-139"><paramref name="key" /> и <paramref name="modifiers" /> не образуют допустимый <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-139"><paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers, string displayString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers, string displayString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers, System::String ^ displayString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key * System.Windows.Input.ModifierKeys * string -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture (key, modifiers, displayString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
        <Parameter Name="displayString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8b1fe-140">Клавиша, связанная с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-140">The key associated with the gesture.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8b1fe-141">Клавиши CTRL, SHIFT или ALT, связанные с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-141">The modifier keys associated with the gesture.</span></span></param>
        <param name="displayString"><span data-ttu-id="8b1fe-142">Строковое представление объекта <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-142">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></param>
        <summary><span data-ttu-id="8b1fe-143">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyGesture" /> заданными <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" /> и отображаемой строкой.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-143">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-144">Для свойства задается значение параметра. `displayString` <xref:System.Windows.Input.KeyGesture.DisplayString%2A></span><span class="sxs-lookup"><span data-stu-id="8b1fe-144">The <xref:System.Windows.Input.KeyGesture.DisplayString%2A> property is set to the `displayString` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8b1fe-145">Параметр <paramref name="modifiers" /> не является допустимым значением <see cref="T:System.Windows.Input.ModifierKeys" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-145"><paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span></span>  
  
<span data-ttu-id="8b1fe-146">- или -</span><span class="sxs-lookup"><span data-stu-id="8b1fe-146">-or-</span></span> 
 <span data-ttu-id="8b1fe-147"><paramref name="key" /> не является допустимым <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-147"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b1fe-148"><paramref name="displayString" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-148"><paramref name="displayString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8b1fe-149"><paramref name="key" /> и <paramref name="modifiers" /> не образуют допустимый <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-149"><paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="DisplayString">
      <MemberSignature Language="C#" Value="public string DisplayString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.DisplayString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayString : string" Usage="System.Windows.Input.KeyGesture.DisplayString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b1fe-150">Получает строковое представление данного <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-150">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <value><span data-ttu-id="8b1fe-151">Отображаемая строка для данного <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-151">The display string for this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span> <span data-ttu-id="8b1fe-152">Значение по умолчанию — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-152">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-153">Если отображаемая строка не была задана в конструкторе, возвращается пустая строка.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-153">If a display string was not set in the constructor, an empty string is returned.</span></span>  
  
 <span data-ttu-id="8b1fe-154">Если это свойство является пустым, <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> метод возвращает строку, созданную <xref:System.Windows.Input.KeyGesture.Key%2A> из и <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-154">If this property is empty, the <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> method returns a string created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStringForCulture">
      <MemberSignature Language="C#" Value="public string GetDisplayStringForCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDisplayStringForCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDisplayStringForCulture (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDisplayStringForCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetDisplayStringForCulture : System.Globalization.CultureInfo -&gt; string" Usage="keyGesture.GetDisplayStringForCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="8b1fe-155">Сведения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-155">The culture specific information.</span></span></param>
        <summary><span data-ttu-id="8b1fe-156">Возвращает строку, которая может использоваться для отображения <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-156">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <returns><span data-ttu-id="8b1fe-157">Отображаемая строка.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-157">The string to display</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-158">Если отображаемая строка была задана конструктором, возвращается эта строка. в противном случае строка создается на основе <xref:System.Windows.Input.KeyGesture.Key%2A> и <xref:System.Windows.Input.KeyGesture.Modifiers%2A> с любыми необходимыми преобразованиями, которые управляются указанным <xref:System.Globalization.CultureInfo> объектом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-158">If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A> with any necessary conversions being governed by the specified <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key" Usage="System.Windows.Input.KeyGesture.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b1fe-159">Получает клавишу, связанную с данным <see cref="T:System.Windows.Input.KeyGesture" />,.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-159">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <value><span data-ttu-id="8b1fe-160">Клавиша, связанная с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-160">The key associated with the gesture.</span></span>  <span data-ttu-id="8b1fe-161">Значение по умолчанию — <see cref="F:System.Windows.Input.Key.None" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-161">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-162">В большинстве случаев объект <xref:System.Windows.Input.KeyGesture> должен быть связан с одним или несколькими. <xref:System.Windows.Input.ModifierKeys></span><span class="sxs-lookup"><span data-stu-id="8b1fe-162">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="8b1fe-163">Исключениями из этого правила являются функциональные ключи и цифровые клавиши клавиатуры, которые могут быть действительными <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-163">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberSignature Language="F#" Value="override this.Matches : obj * System.Windows.Input.InputEventArgs -&gt; bool" Usage="keyGesture.Matches (targetElement, inputEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement"><span data-ttu-id="8b1fe-164">Целевой объект.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-164">The target.</span></span></param>
        <param name="inputEventArgs"><span data-ttu-id="8b1fe-165">Данные события ввода для сравнения с этим жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-165">The input event data to compare this gesture to.</span></span></param>
        <summary><span data-ttu-id="8b1fe-166">Определяет, соответствует ли данный <see cref="T:System.Windows.Input.KeyGesture" /> вводу, связанному с заданным объектом <see cref="T:System.Windows.Input.InputEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-166">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span></span></summary>
        <returns><span data-ttu-id="8b1fe-167"><see langword="true" />, если данные события ввода соответствуют этому <see cref="T:System.Windows.Input.KeyGesture" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-167"><see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-168">`targetElement`может использоваться для принятия более конкретного решения о том, следует ли вызывать команду для конкретного элемента.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-168">`targetElement` can be used to make a more specific decision on whether a command should be invoked on a specific element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b1fe-169">В следующем примере показано, как проверить, соответствует <xref:System.Windows.Input.KeyGesture> ли объект входным данным, связанным с <xref:System.Windows.Input.InputEventArgs>экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-169">The following example shows how to test whether a <xref:System.Windows.Input.KeyGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="8b1fe-170">Создается обработчик <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.KeyGesture.Matches%2A> событий, который сравнивает данные события с с помощью метода. <xref:System.Windows.UIElement.KeyDown></span><span class="sxs-lookup"><span data-stu-id="8b1fe-170">A <xref:System.Windows.UIElement.KeyDown> event handler is created that compares the event data with the <xref:System.Windows.Input.KeyGesture> by using the <xref:System.Windows.Input.KeyGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlerkeygesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlerkeygesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.KeyGesture.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b1fe-171">Клавиши CTRL, SHIFT или ALT, связанные с данным <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-171">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <value><span data-ttu-id="8b1fe-172">Клавиши CTRL, SHIFT или ALT, связанные с данным жестом.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-172">The modifier keys associated with the gesture.</span></span> <span data-ttu-id="8b1fe-173">Значение по умолчанию — <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-173">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b1fe-174">В большинстве случаев объект <xref:System.Windows.Input.KeyGesture> должен быть связан с одним или несколькими. <xref:System.Windows.Input.ModifierKeys></span><span class="sxs-lookup"><span data-stu-id="8b1fe-174">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="8b1fe-175">Исключениями из этого правила являются функциональные ключи и цифровые клавиши клавиатуры, которые могут быть действительными <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-175">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="8b1fe-176">Например, можно создать <xref:System.Windows.Input.KeyGesture> с помощью только клавиши F12, но для использования ключа X <xref:System.Windows.Input.KeyGesture> в нем необходимо связать с клавишей-модификатором.</span><span class="sxs-lookup"><span data-stu-id="8b1fe-176">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
  </Members>
</Type>
