<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd5a45163260024674fb94da554be682f2069dad" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70481870" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9126-101">Связывает <see cref="T:System.Windows.Input.KeyGesture" /> с <see cref="T:System.Windows.Input.RoutedCommand" /> (или другой реализацией <see cref="T:System.Windows.Input.ICommand" />).</span><span class="sxs-lookup"><span data-stu-id="b9126-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9126-102">Объект <xref:System.Windows.Input.KeyBinding> связывает <xref:System.Windows.Input.ICommand> с, например <xref:System.Windows.Input.RoutedCommand> . <xref:System.Windows.Input.KeyGesture></span><span class="sxs-lookup"><span data-stu-id="b9126-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="b9126-103"><xref:System.Windows.Input.RoutedCommand>является основной реализацией <xref:System.Windows.Input.ICommand> интерфейса [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] для системы команд.</span><span class="sxs-lookup"><span data-stu-id="b9126-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="b9126-104">Как правило, при <xref:System.Windows.Input.KeyGesture> выполнении команды вызывается команда, хотя поведение команды в дальнейшем зависит от факторов, зависящих от конкретной команды, таких <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> как значение.</span><span class="sxs-lookup"><span data-stu-id="b9126-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="b9126-105">Дополнительные сведения о командах см. в разделе [Общие сведения о командах](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b9126-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="b9126-106">За исключением функциональных клавиш и клавиш цифровой клавиатуры, допустимость <xref:System.Windows.Input.KeyGesture> должна содержать ровно один <xref:System.Windows.Input.Key> и один или более <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="b9126-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="b9126-107">Для использования функциональных клавиш и цифровых клавиш на цифровой клавиатуре не требуется использовать клавишу-модификатор <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="b9126-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-108">Можно указать недопустимое <xref:System.Windows.Input.KeyGesture> значение <xref:System.Windows.Input.KeyBinding> и с недопустимым связанным жестом — с помощью [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] или кода.</span><span class="sxs-lookup"><span data-stu-id="b9126-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="b9126-109">Например, отсутствует проверка, которая предотвращает создание и привязку <xref:System.Windows.Input.KeyGesture> , которая содержит только нефункциональную клавишу, или только модификаторы, но не имеют ключа.</span><span class="sxs-lookup"><span data-stu-id="b9126-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="b9126-110">Такой объект <xref:System.Windows.Input.KeyBinding> никогда не будет пытаться вызвать связанную с ним команду.</span><span class="sxs-lookup"><span data-stu-id="b9126-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="b9126-111">При определении <xref:System.Windows.Input.KeyBinding> [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] в существует <xref:System.Windows.Input.KeyGesture> два способа указания.</span><span class="sxs-lookup"><span data-stu-id="b9126-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-112">Первый способ установки <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] заключается <xref:System.Windows.Input.KeyBinding.Gesture%2A> в <xref:System.Windows.Input.KeyBinding>  определении атрибута элемента, который позволяет использовать синтаксис для указания ключей и модификаторов в виде одной строки, например "Ctrl + P".</span><span class="sxs-lookup"><span data-stu-id="b9126-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="b9126-113">Второй способ — определить <xref:System.Windows.Input.KeyBinding.Key%2A> атрибут <xref:System.Windows.Input.KeyBinding.Modifiers%2A> и атрибуты <xref:System.Windows.Input.KeyBinding> элемента.</span><span class="sxs-lookup"><span data-stu-id="b9126-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="b9126-114">Оба способа установки параметров <xref:System.Windows.Input.KeyGesture> эквивалентны и изменяют один и тот же базовый объект, но при этом возникает конфликт, если оба используются.</span><span class="sxs-lookup"><span data-stu-id="b9126-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="b9126-115">В случае <xref:System.Windows.Input.KeyBinding.Key%2A>, если заданы все <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибуты, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>и, атрибут, определенный последним, будет использоваться для <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="b9126-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-116">Возможны ситуации, когда, например, в <xref:System.Windows.Input.KeyBinding.Key%2A> последнем наборе будет перезаписан только ключевой компонент предыдущего жеста, а модификаторы жеста остаются прежними.</span><span class="sxs-lookup"><span data-stu-id="b9126-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="b9126-117">Как правило, рекомендуется использовать только <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибут из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; это позволит избежать неоднозначности, предоставляет наиболее простой синтаксис и предоставляет наиболее простое представление для сериализации.</span><span class="sxs-lookup"><span data-stu-id="b9126-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="b9126-118">Можно определить для конкретного объекта или на уровне класса путем <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> регистрации <xref:System.Windows.Input.CommandManager> в классе. <xref:System.Windows.Input.KeyBinding></span><span class="sxs-lookup"><span data-stu-id="b9126-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="b9126-119">Наиболее типичный способ <xref:System.Windows.Input.KeyBinding> определения — в шаблоне элемента управления, <xref:System.Windows.UIElement.InputBindings%2A> устанавливая свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , объявляя один или несколько <xref:System.Windows.Input.MouseBinding> элементов или <xref:System.Windows.Input.KeyBinding> .</span><span class="sxs-lookup"><span data-stu-id="b9126-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9126-120">В следующем примере создается <xref:System.Windows.Input.KeyBinding> и добавляется <xref:System.Windows.Input.InputBindingCollection> в корневое окно.</span><span class="sxs-lookup"><span data-stu-id="b9126-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9126-121">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9126-122">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="b9126-123">Команда, связываемая с <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-123">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="b9126-124">Ключевая комбинация, связываемая с <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-124">The key combination to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="b9126-125">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyBinding" /> с использованием указанных объектов <see cref="T:System.Windows.Input.ICommand" /> и <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9126-126">Параметр <paramref name="command" /> или <paramref name="gesture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-126"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="b9126-127">Вызываемая команда.</span><span class="sxs-lookup"><span data-stu-id="b9126-127">The command to invoke.</span></span></param>
        <param name="key"><span data-ttu-id="b9126-128">Клавиша, связываемая с <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-128">The key to be associated with <paramref name="command" />.</span></span></param>
        <param name="modifiers"><span data-ttu-id="b9126-129">Клавиши CTRL, SHIFT и ALT, связываемые с <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-129">The modifiers to be associated with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="b9126-130">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyBinding" />, используя указанный <see cref="T:System.Windows.Input.ICommand" /> и заданные <see cref="T:System.Windows.Input.Key" /> и <see cref="T:System.Windows.Input.ModifierKeys" />, которые будут преобразованы в <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9126-131">Создает экземпляр класса <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <returns><span data-ttu-id="b9126-132">Новый объект.</span><span class="sxs-lookup"><span data-stu-id="b9126-132">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9126-133">Получает или задает жест, связанный с данным <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="b9126-134">Последовательность клавиш.</span><span class="sxs-lookup"><span data-stu-id="b9126-134">The key sequence.</span></span> <span data-ttu-id="b9126-135">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-135">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9126-136">За исключением функциональных клавиш и клавиш цифровой клавиатуры, объект <xref:System.Windows.Input.KeyGesture> должен <xref:System.Windows.Input.Key> содержать и один или более <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="b9126-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9126-137">В следующем примере показано, как привязать <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand> к с помощью метода <xref:System.Windows.Input.KeyBinding> (в разметке и примерах кода указаны разные ключи, но они эквивалентны).</span><span class="sxs-lookup"><span data-stu-id="b9126-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9126-138">задаваемое значение <paramref name="gesture" /> не является <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9126-139">Получает или задает <see cref="T:System.Windows.Input.Key" /> объекта <see cref="T:System.Windows.Input.KeyGesture" />, связанного с данным <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="b9126-140">Часть объекта <see cref="T:System.Windows.Input.KeyGesture" />, представляющая клавишу.</span><span class="sxs-lookup"><span data-stu-id="b9126-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span> <span data-ttu-id="b9126-141">Значение по умолчанию — <see cref="F:System.Windows.Input.Key.None" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9126-142">За исключением функциональных клавиш и клавиш цифровой клавиатуры, объект <xref:System.Windows.Input.KeyGesture> должен <xref:System.Windows.Input.Key> содержать и один или более <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="b9126-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="b9126-143">При определении <xref:System.Windows.Input.KeyBinding> [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] в существует <xref:System.Windows.Input.KeyGesture> два способа указания.</span><span class="sxs-lookup"><span data-stu-id="b9126-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-144">Первый способ установки <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] заключается <xref:System.Windows.Input.KeyBinding.Gesture%2A> в <xref:System.Windows.Input.KeyBinding>  определении атрибута элемента, который позволяет использовать синтаксис для указания ключей и модификаторов в виде одной строки, например "Ctrl + P".</span><span class="sxs-lookup"><span data-stu-id="b9126-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="b9126-145">Второй способ — определить <xref:System.Windows.Input.KeyBinding.Key%2A> атрибут <xref:System.Windows.Input.KeyBinding.Modifiers%2A> и атрибуты <xref:System.Windows.Input.KeyBinding> элемента.</span><span class="sxs-lookup"><span data-stu-id="b9126-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="b9126-146">Оба способа установки параметров <xref:System.Windows.Input.KeyGesture> эквивалентны и изменяют один и тот же базовый объект, но при этом возникает конфликт, если оба используются.</span><span class="sxs-lookup"><span data-stu-id="b9126-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="b9126-147">В случае <xref:System.Windows.Input.KeyBinding.Key%2A>, если заданы все <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибуты, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>и, атрибут, определенный последним, будет использоваться для <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="b9126-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-148">Возможны ситуации, когда, например, в <xref:System.Windows.Input.KeyBinding.Key%2A> последнем наборе будет перезаписан только ключевой компонент предыдущего жеста, а модификаторы жеста остаются прежними.</span><span class="sxs-lookup"><span data-stu-id="b9126-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="b9126-149">Как правило, рекомендуется использовать только <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибут из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; это позволит избежать неоднозначности, предоставляет наиболее простой синтаксис и предоставляет наиболее простое представление для сериализации.</span><span class="sxs-lookup"><span data-stu-id="b9126-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9126-150">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Input.KeyBinding.Key" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9126-151">Получает или задает <see cref="T:System.Windows.Input.ModifierKeys" /> объекта <see cref="T:System.Windows.Input.KeyGesture" />, связанного с данным <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="b9126-152">Клавиши CTRL, SHIFT и ALT объекта <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span>  <span data-ttu-id="b9126-153">Значение по умолчанию — <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9126-154">За исключением функциональных клавиш и клавиш цифровой клавиатуры, объект <xref:System.Windows.Input.KeyGesture> должен <xref:System.Windows.Input.Key> содержать и один или более <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="b9126-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="b9126-155">При определении <xref:System.Windows.Input.KeyBinding> [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] в существует <xref:System.Windows.Input.KeyGesture> два способа указания.</span><span class="sxs-lookup"><span data-stu-id="b9126-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-156">Первый способ установки <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] заключается <xref:System.Windows.Input.KeyBinding.Gesture%2A> в <xref:System.Windows.Input.KeyBinding>  определении атрибута элемента, который позволяет использовать синтаксис для указания ключей и модификаторов в виде одной строки, например "Ctrl + P".</span><span class="sxs-lookup"><span data-stu-id="b9126-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="b9126-157">Второй способ — определить <xref:System.Windows.Input.KeyBinding.Key%2A> атрибут <xref:System.Windows.Input.KeyBinding.Modifiers%2A> и атрибуты <xref:System.Windows.Input.KeyBinding> элемента.</span><span class="sxs-lookup"><span data-stu-id="b9126-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="b9126-158">Оба способа установки параметров <xref:System.Windows.Input.KeyGesture> эквивалентны и изменяют один и тот же базовый объект, но при этом возникает конфликт, если оба используются.</span><span class="sxs-lookup"><span data-stu-id="b9126-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="b9126-159">В случае <xref:System.Windows.Input.KeyBinding.Key%2A>, если заданы все <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибуты, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>и, атрибут, определенный последним, будет использоваться для <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="b9126-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="b9126-160">Возможны ситуации, когда, например, в <xref:System.Windows.Input.KeyBinding.Key%2A> последнем наборе будет перезаписан только ключевой компонент предыдущего жеста, а модификаторы жеста остаются прежними.</span><span class="sxs-lookup"><span data-stu-id="b9126-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="b9126-161">Как правило, рекомендуется использовать только <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибут из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; это позволит избежать неоднозначности, предоставляет наиболее простой синтаксис и предоставляет наиболее простое представление для сериализации.</span><span class="sxs-lookup"><span data-stu-id="b9126-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9126-162">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="b9126-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b9126-163">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="b9126-163">XAML Values</span></span>  
 <span data-ttu-id="b9126-164">*онеорморемодифиеркэйс*</span><span class="sxs-lookup"><span data-stu-id="b9126-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="b9126-165">Один или несколько клавиш-модификаторов, определяемых <xref:System.Windows.Input.ModifierKeys> перечислением, разделенные символом "+".</span><span class="sxs-lookup"><span data-stu-id="b9126-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9126-166">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />.</span><span class="sxs-lookup"><span data-stu-id="b9126-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
