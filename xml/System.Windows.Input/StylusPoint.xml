<Type Name="StylusPoint" FullName="System.Windows.Input.StylusPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d5df80403a1736f6ca79c68af899868e237360e" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73399750" /></Metadata><TypeSignature Language="C#" Value="public struct StylusPoint : IEquatable&lt;System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StylusPoint extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusPoint" />
  <TypeSignature Language="VB.NET" Value="Public Structure StylusPoint&#xA;Implements IEquatable(Of StylusPoint)" />
  <TypeSignature Language="C++ CLI" Value="public value class StylusPoint : IEquatable&lt;System::Windows::Input::StylusPoint&gt;" />
  <TypeSignature Language="F#" Value="type StylusPoint = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Input.StylusPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет одну точку данных, полученную от диджитайзера или пера.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.StylusPoint> собирает данные, когда пользователь вводит рукописный ввод с помощью дигитайзера. Поскольку информация, которую сообщает дигитайзер, зависит от производителя, свойства в <xref:System.Windows.Input.StylusPoint> могут различаться. Чтобы определить, находится ли свойство в <xref:System.Windows.Input.StylusPoint>, вызовите метод <xref:System.Windows.Input.StylusPoint.HasProperty%2A>. Свойство <xref:System.Windows.Input.StylusPoint.Description%2A> содержит <xref:System.Windows.Input.StylusPointDescription>, который указывает, какие свойства находятся в <xref:System.Windows.Input.StylusPoint>. Все объекты <xref:System.Windows.Input.StylusPoint> содержат свойства, указывающие координаты (x, y), а также нагрузку.  
  
   
  
## Examples  
 В следующем примере выполняется получение имен и значений свойств для каждого <xref:System.Windows.Input.StylusPoint> в <xref:System.Windows.Input.StylusPointCollection>. В этом примере предполагается, что имеется <xref:System.Windows.Controls.TextBlock> с именем `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">Координата Х объекта <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="y">Координата Y объекта <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.StylusPoint" />, используя указанные координаты (X, Y).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как создать <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, pressureFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double * single -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y, pressureFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Координата Х объекта <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="y">Координата Y объекта <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="pressureFactor">Степень давления, примененного к <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.StylusPoint" />, используя заданные координаты (x, y) и давление.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 значение `pressureFactor` должно находиться в диапазоне от 0 до 1 включительно. Значение 0 указывает, что давление не применяется, а значение 1 указывает на то, что применяется максимальный объем нагрузки. Значение 0,5 указывает на то, что применяется 50% максимальной нагрузки и т. д.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="pressureFactor" /> имеет значение меньше 0 или больше 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor, System.Windows.Input.StylusPointDescription stylusPointDescription, int[] additionalValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor, class System.Windows.Input.StylusPointDescription stylusPointDescription, int32[] additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Input.StylusPointDescription,System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor, System::Windows::Input::StylusPointDescription ^ stylusPointDescription, cli::array &lt;int&gt; ^ additionalValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double * single * System.Windows.Input.StylusPointDescription * int[] -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y, pressureFactor, stylusPointDescription, additionalValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="additionalValues" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="x">Координата Х объекта <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="y">Координата Y объекта <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="pressureFactor">Степень давления, примененного к <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="stylusPointDescription">Параметр <see cref="T:System.Windows.Input.StylusPointDescription" />, указывающий дополнительные свойства, которые хранятся в <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <param name="additionalValues">Массив 32-разрядных целых чисел со знаком, содержащий значения свойств, определенных в параметре <paramref name="stylusPointDescription" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.StylusPoint" />, используя указанные координаты (X, Y), <paramref name="pressureFactor" /> и дополнительные параметры, заданные в <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как создать <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="pressureFactor" /> имеет значение меньше 0 или больше 1.  
  
- или - 
Значения в параметре <paramref name="additionalValues" />, соответствующие свойствам кнопки, не являются 0 или 1.</exception>
        <exception cref="T:System.ArgumentException">Количество значений в параметре <paramref name="additionalValues" /> не совпадает с количеством свойств в <paramref name="stylusPointDescription" /> минус 3.</exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ Description { System::Windows::Input::StylusPointDescription ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : System.Windows.Input.StylusPointDescription" Usage="System.Windows.Input.StylusPoint.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Input.StylusPointDescription" /> определяющий свойства, хранящиеся в <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value><see cref="T:System.Windows.Input.StylusPointDescription" /> определяет свойства, хранящиеся в <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере свойство <xref:System.Windows.Input.StylusPoint.Description%2A> используется для получения значений свойств из <xref:System.Windows.Input.StylusPoint> в <xref:System.Windows.Input.StylusPointCollection>. В этом примере предполагается, что имеется <xref:System.Windows.Controls.TextBlock> с именем `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сравнивает два объекта <see cref="T:System.Windows.Input.StylusPoint" /> на равенство.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stylusPoint.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Объект <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения с текущим объектом <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Возвращает значение, указывающее, равен ли заданный объект объекту <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <returns>Значение <see langword="true" />, если объекты равны, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере проверяется равенство двух объектов <xref:System.Windows.Input.StylusPoint>. Поскольку свойства <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>и <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> для `point1` и `point2` имеют одно и то же значение, то "два объекта StylusPoint равны". Появится сообщение.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Input.StylusPoint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Input.StylusPoint value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Input::StylusPoint value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Input.StylusPoint -&gt; bool" Usage="stylusPoint.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения с текущим объектом <see cref="T:System.Windows.Input.StylusPoint" />.</param>
        <summary>Возвращает логическое значение, показывающее, равен ли заданный объект <see cref="T:System.Windows.Input.StylusPoint" /> текущему объекту <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Windows.Input.StylusPoint" /> равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере проверяется равенство двух объектов <xref:System.Windows.Input.StylusPoint>. Поскольку свойства <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>и <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> для `point1` и `point2` имеют одно и то же значение, то "два объекта StylusPoint равны". Появится сообщение.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="System.Windows.Input.StylusPoint.Equals (stylusPoint1, stylusPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">Первый экземпляр <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения.</param>
        <param name="stylusPoint2">Второй экземпляр <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения.</param>
        <summary>Возвращает логическое значение, указывающее, равны ли два заданных объекта <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Windows.Input.StylusPoint" /> равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере проверяется равенство двух объектов <xref:System.Windows.Input.StylusPoint>. Поскольку свойства <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>и <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> для `point1` и `point2` имеют одно и то же значение, то "два объекта StylusPoint равны". Появится сообщение.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#8](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#8)]
[!code-vb[PacketSpy#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stylusPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код данного экземпляра.</summary>
        <returns>32-разрядное целое число со знаком, являющееся хэш-кодом для данного экземпляра.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public int GetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : System.Windows.Input.StylusPointProperty -&gt; int" Usage="stylusPoint.GetPropertyValue stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty"><see cref="T:System.Windows.Input.StylusPointProperty" />, указывающий, значение какого свойства требуется получить.</param>
        <summary>Возвращает значение заданного свойства.</summary>
        <returns>Значение указанного <see cref="T:System.Windows.Input.StylusPointProperty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы проверить, содержит ли <xref:System.Windows.Input.StylusPoint> указанное свойство, вызовите <xref:System.Windows.Input.StylusPoint.HasProperty%2A>, прежде чем вызывать метод <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> или метод <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A>.  
  
   
  
## Examples  
 В следующем примере проверяется наличие свойства точки пера перед получением значения свойства. В этом примере предполагается, что имеется <xref:System.Windows.Input.StylusPoint> с именем `point`.  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stylusPointProperty" /> не является одним из свойств в <see cref="P:System.Windows.Input.StylusPoint.Description" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.HasProperty : System.Windows.Input.StylusPointProperty -&gt; bool" Usage="stylusPoint.HasProperty stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">Объект <see cref="T:System.Windows.Input.StylusPointProperty" />, наличие которого в <see cref="T:System.Windows.Input.StylusPoint" /> проверяется.</param>
        <summary>Возвращает значение, указывающее, содержит ли текущий <see cref="T:System.Windows.Input.StylusPoint" /> заданное свойство.</summary>
        <returns><see langword="true" />, если заданный <see cref="T:System.Windows.Input.StylusPointProperty" /> имеется в текущем <see cref="T:System.Windows.Input.StylusPoint" />, в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы проверить, содержит ли <xref:System.Windows.Input.StylusPoint> указанное свойство, вызовите <xref:System.Windows.Input.StylusPoint.HasProperty%2A>, прежде чем вызывать метод <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> или метод <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A>.  
  
   
  
## Examples  
 В следующем примере проверяется наличие свойства точки пера перед получением значения свойства. В этом примере предполагается, что имеется <xref:System.Windows.Input.StylusPoint> с именем `point`.  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxXY">
      <MemberSignature Language="C#" Value="public static readonly double MaxXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MaxXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxXY;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxXY : double" Usage="System.Windows.Input.StylusPoint.MaxXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает максимальное допустимое значение для пары координат (x, y).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере проверяется, что для свойства <xref:System.Windows.Input.StylusPoint.X%2A> <xref:System.Windows.Input.StylusPoint> задано допустимое значение.  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinXY">
      <MemberSignature Language="C#" Value="public static readonly double MinXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MinXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinXY;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinXY : double" Usage="System.Windows.Input.StylusPoint.MinXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает минимальное допустимое значение для пары координат (x, y).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере проверяется, что для свойства <xref:System.Windows.Input.StylusPoint.X%2A> <xref:System.Windows.Input.StylusPoint> задано допустимое значение.  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Equality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="stylusPoint1 = stylusPoint2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">Первый экземпляр <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения.</param>
        <param name="stylusPoint2">Второй экземпляр <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения.</param>
        <summary>Сравнивает два заданных объекта <see cref="T:System.Windows.Input.StylusPoint" />, и определяет, являются ли они равными.</summary>
        <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Windows.Input.StylusPoint" /> равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Эквивалентным методом для этого оператора является <xref:System.Windows.Input.StylusPoint.Equals%28System.Windows.Input.StylusPoint%2CSystem.Windows.Input.StylusPoint%29?displayProperty=nameWithType>  
  
## Examples  
 В следующем примере проверяется равенство двух объектов <xref:System.Windows.Input.StylusPoint>. Поскольку свойства <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>и <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> для `point1` и `point2` имеют одно и то же значение, то "два объекта StylusPoint равны". Появится сообщение.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#9](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#9)]
[!code-vb[PacketSpy#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Point (System.Windows.Input.StylusPoint stylusPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Explicit(valuetype System.Windows.Input.StylusPoint stylusPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Explicit(System.Windows.Input.StylusPoint)~System.Windows.Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Point(System::Windows::Input::StylusPoint stylusPoint);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Input.StylusPoint -&gt; System.Windows.Point" Usage="System.Windows.Input.StylusPoint.op_Explicit stylusPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint">Объект <see cref="T:System.Windows.Input.StylusPoint" /> для приведения к типу <see cref="T:System.Windows.Point" />.</param>
        <summary>Приводит указанный объект <see cref="T:System.Windows.Input.StylusPoint" /> к типу <see cref="T:System.Windows.Point" />.</summary>
        <returns>Объект <see cref="T:System.Windows.Point" />, содержащий те же координаты (x, y), что и <paramref name="stylusPoint" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[В следующем примере показано, как привести <xref:System.Windows.Input.StylusPoint> к объекту <xref:System.Windows.Point> для отрисовки окружности в начале каждого штриха. В этом примере предполагается, что имеется объект <xref:System.Windows.Controls.InkCanvas> с именем `inkcanvas1`, а событие <xref:System.Windows.UIElement.StylusDown> подключено к обработчику событий в примере.

           [!code-csharp[PacketSpy#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#13)]
           [!code-vb[PacketSpy#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#13)]  

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Inequality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="System.Windows.Input.StylusPoint.op_Inequality (stylusPoint1, stylusPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">Первый экземпляр <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения.</param>
        <param name="stylusPoint2">Второй экземпляр <see cref="T:System.Windows.Input.StylusPoint" /> для сравнения.</param>
        <summary>Возвращает логическое значение, указывающее, являются ли два заданных объекта <see cref="T:System.Windows.Input.StylusPoint" /> неравными.</summary>
        <returns><see langword="true" />, если заданные объекты <see cref="T:System.Windows.Input.StylusPoint" /> не равны; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Эквивалентным методом для этого оператора является отрицание <xref:System.Windows.Input.StylusPoint.Equals%2A>  
  
## Examples  
 В следующем примере показано, как проверить два объекта <xref:System.Windows.Input.StylusPoint> на неравенство. Поскольку свойства <xref:System.Windows.Input.StylusPoint.X%2A>, <xref:System.Windows.Input.StylusPoint.Y%2A>и <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> для `point1` и `point2` имеют одно и то же значение, то "два объекта StylusPoint равны". Появится сообщение.  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#10](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#10)]
[!code-vb[PacketSpy#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureFactor">
      <MemberSignature Language="C#" Value="public float PressureFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PressureFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property PressureFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PressureFactor { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PressureFactor : single with get, set" Usage="System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение от 0 до 1, отражающее силу давления пера на поверхность диджитайзера, когда создается <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>Значение от 0 до 1, указывающее силу давления пера на поверхность диджитайзера, когда создается <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> выражается как значение от 0 до 1. Значение 0 указывает, что давление не применяется, а значение 1 указывает на то, что применяется максимальный объем нагрузки. Значение 0,5 указывает на то, что применяется 50% максимальной нагрузки и т. д.  
  
   
  
## Examples  
 В следующем примере свойство <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> используется для извлечения и вывода значения давления для каждого <xref:System.Windows.Input.StylusPoint> в <xref:System.Windows.Input.StylusPointCollection> с именем `points`. В этом примере предполагается, что имеется <xref:System.Windows.Controls.TextBlock> с именем `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> задано значение меньше 0 или больше 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty, int value);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : System.Windows.Input.StylusPointProperty * int -&gt; unit" Usage="stylusPoint.SetPropertyValue (stylusPointProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty"><see cref="T:System.Windows.Input.StylusPointProperty" />, указывающий, значение какого свойства требуется установить.</param>
        <param name="value">Значение свойства.</param>
        <summary>Присваивает заданному свойству заданное значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы проверить, содержит ли <xref:System.Windows.Input.StylusPoint> указанное свойство, вызовите <xref:System.Windows.Input.StylusPoint.HasProperty%2A>, прежде чем вызывать метод <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> или метод <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A>.  
  
   
  
## Examples  
 В следующем примере проверяется наличие свойства точки пера перед установкой значения свойства. В этом примере предполагается, что имеется <xref:System.Windows.Input.StylusPoint> с именем `point`.  
  
 [!code-csharp[PacketSpy#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#12)]
 [!code-vb[PacketSpy#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stylusPointProperty" /> не является одним из свойств в <see cref="P:System.Windows.Input.StylusPoint.Description" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point ToPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point ToPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.ToPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point ToPoint();" />
      <MemberSignature Language="F#" Value="member this.ToPoint : unit -&gt; System.Windows.Point" Usage="stylusPoint.ToPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует <see cref="T:System.Windows.Input.StylusPoint" /> в <see cref="T:System.Windows.Point" />.</summary>
        <returns>Структура <see cref="T:System.Windows.Point" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Input.StylusPoint.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение координаты x объекта <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>Координата Х объекта <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере возвращается свойство <xref:System.Windows.Input.StylusPoint.X%2A> для каждого <xref:System.Windows.Input.StylusPoint> в <xref:System.Windows.Input.StylusPointCollection>. В этом примере предполагается, что имеется <xref:System.Windows.Controls.TextBlock> с именем `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Input.StylusPoint.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает y-координату объекта <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
        <value>Координата Y объекта <see cref="T:System.Windows.Input.StylusPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере возвращается свойство <xref:System.Windows.Input.StylusPoint.Y%2A> для каждого <xref:System.Windows.Input.StylusPoint> в <xref:System.Windows.Input.StylusPointCollection>. В этом примере предполагается, что имеется <xref:System.Windows.Controls.TextBlock> с именем `packetOutput`.  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
