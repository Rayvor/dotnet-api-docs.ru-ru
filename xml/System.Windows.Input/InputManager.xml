<Type Name="InputManager" FullName="System.Windows.Input.InputManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c1edbd39c805e1eaeb7cc871a350adf19d7cc4a" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004744" /></Metadata><TypeSignature Language="C#" Value="public sealed class InputManager : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InputManager extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InputManager&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputManager sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type InputManager = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет всеми системами ввода в Windows Presentation Foundation (WPF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс отвечает за координацию всех входных систем в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. <xref:System.Windows.Input.InputManager>  
  
 Фильтр — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreProcessInput> или <xref:System.Windows.Input.InputManager.PostProcessInput>.  Фильтры могут изменять промежуточную область ввода.  
  
 Монитор — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreNotifyInput> или <xref:System.Windows.Input.InputManager.PostNotifyInput>.  Мониторы не могут изменять промежуточную область ввода.  
  
 <xref:System.Windows.Input.InputManager> Управляет промежуточной областью ввода.  Промежуточная область ввода обрабатывает входные данные [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] в события.  
  
 Входные данные обрабатываются [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в на следующих этапах:  
  
1.  Этап предварительной обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreProcessInput> событие.  
  
2.  Этап предварительного уведомления.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreNotifyInput> событие.  
  
3.  События [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ввода или события вызываются.  
  
4.  Этап последующей отправки уведомлений.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostNotifyInput> событие.  
  
5.  Стадия пост-обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostProcessInput> событие.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.StagingAreaInputItem" />
    <altmember cref="T:System.Windows.Input.ProcessInputEventArgs" />
    <altmember cref="T:System.Windows.Input.PreProcessInputEventArgs" />
    <altmember cref="T:System.Windows.Input.NotifyInputEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputManager Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.InputManager Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As InputManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::InputManager ^ Current { System::Windows::Input::InputManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Input.InputManager" Usage="System.Windows.Input.InputManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Windows.Input.InputManager" />, связанный с текущим потоком.</summary>
        <value>Диспетчер ввода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс не будет доступен в зоне Интернета.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для получения текущего диспетчера ввода. Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EnterMenuMode">
      <MemberSignature Language="C#" Value="public event EventHandler EnterMenuMode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterMenuMode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.EnterMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Event EnterMenuMode As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnterMenuMode;" />
      <MemberSignature Language="F#" Value="member this.EnterMenuMode : EventHandler " Usage="member this.EnterMenuMode : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда элемент управления переходит в режим меню путем вызова метода <see cref="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компоненты регистрируют делегаты с этим событием для реагирования на элемент управления, поступающий в режим меню диспетчера ввода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestInvalidatedAsync">
      <MemberSignature Language="C#" Value="public event EventHandler HitTestInvalidatedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HitTestInvalidatedAsync" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.HitTestInvalidatedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Event HitTestInvalidatedAsync As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HitTestInvalidatedAsync;" />
      <MemberSignature Language="F#" Value="member this.HitTestInvalidatedAsync : EventHandler " Usage="member this.HitTestInvalidatedAsync : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда результат проверки попадания может измениться.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputProviders">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection InputProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection InputProviders" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.InputProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputProviders As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ InputProviders { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputProviders : System.Collections.ICollection" Usage="System.Windows.Input.InputManager.InputProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию объектов <see cref="P:System.Windows.Input.InputManager.InputProviders" />, зарегистрированных в <see cref="T:System.Windows.Input.InputManager" />.</summary>
        <value>Коллекция поставщиков ввода.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для получения коллекции поставщиков входных данных. Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsInMenuMode">
      <MemberSignature Language="C#" Value="public bool IsInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.IsInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInMenuMode : bool" Usage="System.Windows.Input.InputManager.IsInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, находится ли данный <see cref="T:System.Windows.Interop.ComponentDispatcher" /> в режиме меню.</summary>
        <value>Значение <see langword="true" />, если данный <see cref="T:System.Windows.Interop.ComponentDispatcher" /> находится в режиме меню; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство возвращает `true` значение, если открыты какие бы то ни было меню `false` , и возвращает, если меню не открыты. <xref:System.Windows.Input.InputManager.IsInMenuMode%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveMenuMode">
      <MemberSignature Language="C#" Value="public event EventHandler LeaveMenuMode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveMenuMode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.LeaveMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Event LeaveMenuMode As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LeaveMenuMode;" />
      <MemberSignature Language="F#" Value="member this.LeaveMenuMode : EventHandler " Usage="member this.LeaveMenuMode : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда элемент управления выходит из режима меню путем вызова метода <see cref="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компоненты регистрируют делегаты с этим событием для реагирования на элемент управления, который выходит из режима меню диспетчера ввода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MostRecentInputDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputDevice MostRecentInputDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputDevice MostRecentInputDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.MostRecentInputDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MostRecentInputDevice As InputDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputDevice ^ MostRecentInputDevice { System::Windows::Input::InputDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MostRecentInputDevice : System.Windows.Input.InputDevice" Usage="System.Windows.Input.InputManager.MostRecentInputDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, представляющее устройство ввода, связанное с последним событием ввода.</summary>
        <value>Устройство ввода.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopMenuMode">
      <MemberSignature Language="C#" Value="public void PopMenuMode (System.Windows.PresentationSource menuSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopMenuMode(class System.Windows.PresentationSource menuSite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopMenuMode (menuSite As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PopMenuMode(System::Windows::PresentationSource ^ menuSite);" />
      <MemberSignature Language="F#" Value="member this.PopMenuMode : System.Windows.PresentationSource -&gt; unit" Usage="inputManager.PopMenuMode menuSite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSite" Type="System.Windows.PresentationSource" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="menuSite">Меню, из которого происходит выход.</param>
        <summary>Вызывается компонентами для выхода из режима меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компонент вызывает этот метод, чтобы выйти из режима меню диспетчера ввода. `menuSite` Выпускают привилегированный доступ к сообщениям окна.  
  
 Вызов этого метода приводит к уменьшению внутреннего числа открытых меню и присваивает <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> `false`свойству значение, если это Последнее меню для закрытия.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="menuSite" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="PostNotifyInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.NotifyInputEventHandler PostNotifyInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.NotifyInputEventHandler PostNotifyInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PostNotifyInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostNotifyInput As NotifyInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::NotifyInputEventHandler ^ PostNotifyInput;" />
      <MemberSignature Language="F#" Value="member this.PostNotifyInput : System.Windows.Input.NotifyInputEventHandler " Usage="member this.PostNotifyInput : System.Windows.Input.NotifyInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.NotifyInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения обработчиками <see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> обработки ввода и генерирования соответствующих событий [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Монитор — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreNotifyInput> или <xref:System.Windows.Input.InputManager.PostNotifyInput>.  Мониторы не могут изменять промежуточную область ввода.  
  
 Обработчики, присоединенные к <xref:System.Windows.Input.InputManager.PostNotifyInput> , вызываются в обратном порядке, чтобы обработчики, добавленные пользователями, вызывались до обработчиков в системе.  
  
 Входные данные обрабатываются [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в на следующих этапах:  
  
1.  Этап предварительной обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreProcessInput> событие.  
  
2.  Этап предварительного уведомления.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreNotifyInput> событие.  
  
3.  События [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ввода или события вызываются.  
  
4.  Этап последующей отправки уведомлений.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostNotifyInput> событие.  
  
5.  Стадия пост-обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostProcessInput> событие.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления или удаления обработчика событий.  Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Windows.Input.NotifyInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostProcessInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ProcessInputEventHandler PostProcessInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ProcessInputEventHandler PostProcessInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PostProcessInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostProcessInput As ProcessInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ProcessInputEventHandler ^ PostProcessInput;" />
      <MemberSignature Language="F#" Value="member this.PostProcessInput : System.Windows.Input.ProcessInputEventHandler " Usage="member this.PostProcessInput : System.Windows.Input.ProcessInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ProcessInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения обработчиками <see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> обработки ввода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Фильтр — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreProcessInput> или <xref:System.Windows.Input.InputManager.PostProcessInput>.  Фильтры могут изменять промежуточную область ввода.  
  
 Обработчики, присоединенные к <xref:System.Windows.Input.InputManager.PostProcessInput> , вызываются в обратном порядке, чтобы обработчики, добавленные пользователями, вызывались до обработчиков в системе.  
  
 Входные данные обрабатываются [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в на следующих этапах:  
  
1.  Этап предварительной обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreProcessInput> событие.  
  
2.  Этап предварительного уведомления.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreNotifyInput> событие.  
  
3.  События [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ввода или события вызываются.  
  
4.  Этап последующей отправки уведомлений.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostNotifyInput> событие.  
  
5.  Стадия пост-обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostProcessInput> событие.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления или удаления обработчика событий. Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Windows.Input.ProcessInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PreNotifyInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.NotifyInputEventHandler PreNotifyInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.NotifyInputEventHandler PreNotifyInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PreNotifyInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreNotifyInput As NotifyInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::NotifyInputEventHandler ^ PreNotifyInput;" />
      <MemberSignature Language="F#" Value="member this.PreNotifyInput : System.Windows.Input.NotifyInputEventHandler " Usage="member this.PreNotifyInput : System.Windows.Input.NotifyInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.NotifyInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения обработчиками <see cref="E:System.Windows.Input.InputManager.PreProcessInput" /> обработки ввода, если ввод не был отменен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Монитор — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreNotifyInput> или <xref:System.Windows.Input.InputManager.PostNotifyInput>.  Мониторы не могут изменять промежуточную область ввода.  
  
 Обработчики, присоединенные к <xref:System.Windows.Input.InputManager.PreNotifyInput> , вызываются в обратном порядке, чтобы обработчики, добавленные пользователями, вызывались до обработчиков в системе.  
  
 Входные данные обрабатываются [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в на следующих этапах:  
  
1.  Этап предварительной обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreProcessInput> событие.  
  
2.  Этап предварительного уведомления.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreNotifyInput> событие.  
  
3.  События [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ввода или события вызываются.  
  
4.  Этап последующей отправки уведомлений.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostNotifyInput> событие.  
  
5.  Стадия пост-обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostProcessInput> событие.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления или удаления обработчика событий. Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Windows.Input.NotifyInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PreProcessInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.PreProcessInputEventHandler PreProcessInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.PreProcessInputEventHandler PreProcessInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PreProcessInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreProcessInput As PreProcessInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::PreProcessInputEventHandler ^ PreProcessInput;" />
      <MemberSignature Language="F#" Value="member this.PreProcessInput : System.Windows.Input.PreProcessInputEventHandler " Usage="member this.PreProcessInput : System.Windows.Input.PreProcessInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.PreProcessInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда <see cref="T:System.Windows.Input.InputManager" /> начинает обрабатывать элемент ввода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Фильтр — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreProcessInput> или <xref:System.Windows.Input.InputManager.PostProcessInput>.  Фильтры могут изменять промежуточную область ввода.  
  
 Обработчики, присоединенные к <xref:System.Windows.Input.InputManager.PreProcessInput> , вызываются в обратном порядке, чтобы обработчики, добавленные пользователями, вызывались до обработчиков в системе.  
  
 Вызов <xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A> метода, <xref:System.Windows.Input.PreProcessInputEventArgs> переданного в <xref:System.Windows.Input.PreProcessInputEventHandler> , приведет к отмене обработки входных данных.  
  
 Входные данные обрабатываются [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в на следующих этапах:  
  
1.  Этап предварительной обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreProcessInput> событие.  
  
2.  Этап предварительного уведомления.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreNotifyInput> событие.  
  
3.  События [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ввода или события вызываются.  
  
4.  Этап последующей отправки уведомлений.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostNotifyInput> событие.  
  
5.  Стадия пост-обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostProcessInput> событие.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для добавления или удаления обработчика событий. Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Windows.Input.PreProcessInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyboardDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.PrimaryKeyboardDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyboardDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::KeyboardDevice ^ PrimaryKeyboardDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyboardDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.InputManager.PrimaryKeyboardDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает первичное клавиатурное устройство ввода.</summary>
        <value>Устройство клавиатуры.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.Keyboard" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryMouseDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseDevice PrimaryMouseDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.MouseDevice PrimaryMouseDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.PrimaryMouseDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryMouseDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseDevice ^ PrimaryMouseDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryMouseDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.InputManager.PrimaryMouseDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает первичное устройство ввода — мышь.</summary>
        <value>Устройство мыши.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ProcessInput">
      <MemberSignature Language="C#" Value="public bool ProcessInput (System.Windows.Input.InputEventArgs input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ProcessInput(class System.Windows.Input.InputEventArgs input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessInput (input As InputEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ProcessInput(System::Windows::Input::InputEventArgs ^ input);" />
      <MemberSignature Language="F#" Value="member this.ProcessInput : System.Windows.Input.InputEventArgs -&gt; bool" Usage="inputManager.ProcessInput input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="input">Ввод, подлежащий обработке.</param>
        <summary>Синхронно обрабатывает заданный ввод.</summary>
        <returns><see langword="true" />, если все события ввода обработаны; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Фильтр — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreProcessInput> или <xref:System.Windows.Input.InputManager.PostProcessInput>.  Фильтры могут изменять промежуточную область ввода.  
  
 Монитор — это любой код, который прослушивает <xref:System.Windows.Input.InputManager.PreNotifyInput> или <xref:System.Windows.Input.InputManager.PostNotifyInput>.  Мониторы не могут изменять промежуточную область ввода.  
  
 Указанные входные данные обрабатываются всеми фильтрами и мониторами и, наконец, отправляются соответствующему элементу как событие ввода.  
  
 Входные данные обрабатываются [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в на следующих этапах:  
  
1.  Этап предварительной обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreProcessInput> событие.  
  
2.  Этап предварительного уведомления.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PreNotifyInput> событие.  
  
3.  События [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ввода или события вызываются.  
  
4.  Этап последующей отправки уведомлений.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostNotifyInput> событие.  
  
5.  Стадия пост-обработки.  Диспетчер ввода вызывает <xref:System.Windows.Input.InputManager.PostProcessInput> событие.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">для обработки указанных входных данных. Связанные перечисления:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PushMenuMode">
      <MemberSignature Language="C#" Value="public void PushMenuMode (System.Windows.PresentationSource menuSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushMenuMode(class System.Windows.PresentationSource menuSite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushMenuMode (menuSite As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushMenuMode(System::Windows::PresentationSource ^ menuSite);" />
      <MemberSignature Language="F#" Value="member this.PushMenuMode : System.Windows.PresentationSource -&gt; unit" Usage="inputManager.PushMenuMode menuSite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSite" Type="System.Windows.PresentationSource" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="menuSite">Меню, в которое происходит переход.</param>
        <summary>Вызывается компонентами для перехода в режим меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компонент вызывает этот метод для входа в режим меню диспетчера ввода. `menuSite` Получает привилегированный доступ к сообщениям окна. Вызов этого метода приводит к увеличению внутреннего количества открытых меню и присваивает <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> `true`свойству значение, если это первое меню для открытия.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="menuSite" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>