<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b74c1fc91dbccb0eaeef3d5dc5f2451716a7a24f" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004669" /></Metadata><TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7cc88-101">Представляет устройство мыши для определенного потока.</span><span class="sxs-lookup"><span data-stu-id="7cc88-101">Represents the mouse device to a specific thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-102"><xref:System.Windows.Input.Mouse> Класс предоставляет мыши связанные события, методы и свойства, которые предоставляют информацию о состоянии мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="7cc88-103">Каждое событие, <xref:System.Windows.Input.Mouse> определяет как вложенное событие, также повторно представляется классами базовых элементов <xref:System.Windows.UIElement> и <xref:System.Windows.ContentElement> как новое перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="7cc88-104">Как правило, более удобно для обработки событий мыши для приложения на <xref:System.Windows.UIElement> и <xref:System.Windows.ContentElement>, вместо того чтобы использовать <xref:System.Windows.Input.Mouse> события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="7cc88-105">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-106">Статические члены <xref:System.Windows.Input.Mouse> класс делегата к первичной реплике <xref:System.Windows.Input.MouseDevice> диспетчера ввода вызывающего потока.</span><span class="sxs-lookup"><span data-stu-id="7cc88-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-107">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-108">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-108">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-109">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-110">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-111">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-111">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-112">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-113">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-114">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-114">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-115">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseDown" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-116">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-117">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-117">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-118">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-119">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-120">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-120">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-121">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-122">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-123">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-123">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-124">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseMove" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-125">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-126">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-126">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-127">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseUp" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-128">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-129">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-129">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-130">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-131">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-132">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-132">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-133">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-134">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-135">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-135">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-136">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-137">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-138">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-138">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-139">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-140">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-141">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-141">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-142">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-143">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-144">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-144">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-145">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-146">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-147">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-147">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-148">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-149">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-150">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-150">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-151">Добавляет обработчик для <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-152">Захватывает ввод мыши в указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="7cc88-152">Captures mouse input to the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-153">При захвате мыши, он получает ввод от мыши ли курсор находится в границах.</span><span class="sxs-lookup"><span data-stu-id="7cc88-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="7cc88-154">Если <xref:System.Windows.Input.CaptureMode> не указан, значение по умолчанию <xref:System.Windows.Input.CaptureMode> является <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="7cc88-155">Чтобы освободить захват мыши, вызовите <xref:System.Windows.Input.Mouse.Capture%2A> передачи `null` как элемент для записи.</span><span class="sxs-lookup"><span data-stu-id="7cc88-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="7cc88-156">Если мышь захвачена при <xref:System.Windows.Input.Mouse.MouseDown> или <xref:System.Windows.Input.Mouse.MouseUp> события и входных данных не будет элемент под кнопку мыши, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> и <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> вызываются сначала.</span><span class="sxs-lookup"><span data-stu-id="7cc88-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="7cc88-157">Это позволяет захватившему ее элементу возможность освободить перед <xref:System.Windows.Input.Mouse.MouseDown> и <xref:System.Windows.Input.Mouse.MouseUp> события маршрутизируются.</span><span class="sxs-lookup"><span data-stu-id="7cc88-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Mouse.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-158">Элемент, захватывающий мышь.</span><span class="sxs-lookup"><span data-stu-id="7cc88-158">The element to capture the mouse.</span></span></param>
        <summary><span data-ttu-id="7cc88-159">Захватывает ввод мыши в указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="7cc88-159">Captures mouse input to the specified element.</span></span></summary>
        <returns><span data-ttu-id="7cc88-160">Значение <see langword="true" />, если элемент смог захватить мышь; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-160"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-161">При захвате мыши, он получает ввод от мыши ли курсор находится в границах.</span><span class="sxs-lookup"><span data-stu-id="7cc88-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="7cc88-162">Если <xref:System.Windows.Input.CaptureMode> не указан, значение по умолчанию <xref:System.Windows.Input.CaptureMode> является <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="7cc88-163">Чтобы освободить захват мыши, вызовите <xref:System.Windows.Input.Mouse.Capture%2A> передачи `null` как элемент для записи.</span><span class="sxs-lookup"><span data-stu-id="7cc88-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="7cc88-164">Если мышь захвачена при <xref:System.Windows.Input.Mouse.MouseDown> или <xref:System.Windows.Input.Mouse.MouseUp> события и входных данных не будет элемент под кнопку мыши, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> и <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> вызываются сначала.</span><span class="sxs-lookup"><span data-stu-id="7cc88-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="7cc88-165">Это позволяет захватившему ее элементу возможность освободить перед <xref:System.Windows.Input.Mouse.MouseDown> и <xref:System.Windows.Input.Mouse.MouseUp> события маршрутизируются.</span><span class="sxs-lookup"><span data-stu-id="7cc88-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cc88-166">В следующем примере показано, как, захватывающий мышь для определенных элементов с помощью <xref:System.Windows.Input.Mouse.Capture%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="7cc88-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Mouse.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-167">Элемент, захватывающий мышь.</span><span class="sxs-lookup"><span data-stu-id="7cc88-167">The element to capture the mouse.</span></span></param>
        <param name="captureMode"><span data-ttu-id="7cc88-168">Используемая политика захвата.</span><span class="sxs-lookup"><span data-stu-id="7cc88-168">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="7cc88-169">Захватывает ввод мыши в указанный элемент, используя заданный режим <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="7cc88-170">Значение <see langword="true" />, если элемент смог захватить мышь; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-170"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-171">При захвате мыши, он получает ввод от мыши, располагается ли курсор в границах.</span><span class="sxs-lookup"><span data-stu-id="7cc88-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="7cc88-172">Чтобы освободить захват мыши, вызовите <xref:System.Windows.Input.Mouse.Capture%2A> передачи `null` как элемент для записи.</span><span class="sxs-lookup"><span data-stu-id="7cc88-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="7cc88-173">Если мышь захвачена при <xref:System.Windows.Input.Mouse.MouseDown> или <xref:System.Windows.Input.Mouse.MouseUp> события и входных данных не будет элемент под кнопку мыши, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> и <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> вызываются сначала.</span><span class="sxs-lookup"><span data-stu-id="7cc88-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="7cc88-174">Это позволяет захватившему ее элементу возможность освободить перед <xref:System.Windows.Input.Mouse.MouseDown> и <xref:System.Windows.Input.Mouse.MouseUp> события маршрутизируются.</span><span class="sxs-lookup"><span data-stu-id="7cc88-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cc88-175">В следующем примере показано, как, захватывающий мышь для определенных элементов с помощью <xref:System.Windows.Input.Mouse.Capture%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="7cc88-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-176">Получает элемент, захвативший мышь.</span><span class="sxs-lookup"><span data-stu-id="7cc88-176">Gets the element that has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="7cc88-177">Элемент, захваченный мышью.</span><span class="sxs-lookup"><span data-stu-id="7cc88-177">The element captured by the mouse.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-178">При захвате мыши, он получает ввод от мыши ли курсор находится в границах.</span><span class="sxs-lookup"><span data-stu-id="7cc88-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="7cc88-179">Указатель мыши обычно захватывается таким образом только во время операции перетаскивания и вставки и сохраняет захват, пока не произойдет действие операции перетаскивания и вставки.</span><span class="sxs-lookup"><span data-stu-id="7cc88-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cc88-180">В следующем примере показано, как получить элемент, имеющий захват мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-181">Получает элемент, прямо на котором находится указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-181">Gets the element the mouse pointer is directly over.</span></span></summary>
        <value><span data-ttu-id="7cc88-182">Элемент, прямо на котором находится указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-182">The element the mouse pointer is over.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-183">Элементы управления могут состоять из нескольких элементов.</span><span class="sxs-lookup"><span data-stu-id="7cc88-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="7cc88-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> Возвращает определенный элемент в составной элемент управления, который наведен указатель мыши, а не сам элемент управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="7cc88-185">Например, в зависимости от того, какая часть <xref:System.Windows.Controls.Button> указатель находится над, <xref:System.Windows.Input.Mouse.DirectlyOver%2A> свойство может быть отправлен отчет <xref:System.Windows.Controls.TextBox> из <xref:System.Windows.Controls.ContentControl.Content%2A> свойство или <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="7cc88-186">Используйте <xref:System.Windows.IInputElement.IsMouseOver%2A> свойство <xref:System.Windows.UIElement> и <xref:System.Windows.ContentElement> для определения, находится ли курсор над элементом, который включает его визуальных дочерних элементов или элементы композиции элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="7cc88-187">Если элемент имеет захват мыши, указатель мыши считается непосредственно над элементом, независимо от того, где находится указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="static member GetIntermediatePoints : System.Windows.IInputElement * System.Windows.Point[] -&gt; int" Usage="System.Windows.Input.Mouse.GetIntermediatePoints (relativeTo, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="7cc88-188">Связанные элементы <paramref name="points" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-188">The elements <paramref name="points" /> are in relation to.</span></span></param>
        <param name="points"><span data-ttu-id="7cc88-189">Массив объектов.</span><span class="sxs-lookup"><span data-stu-id="7cc88-189">An array of objects.</span></span></param>
        <summary><span data-ttu-id="7cc88-190">Извлекает до 64 предыдущих координат указателя мыши с момента последнего события перемещения мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span></span></summary>
        <returns><span data-ttu-id="7cc88-191">Число возвращенных точек.</span><span class="sxs-lookup"><span data-stu-id="7cc88-191">The number of points returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="static member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="System.Windows.Input.Mouse.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="7cc88-192">Пространство координат для вычисления позиции указателя мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-192">The coordinate space in which to calculate the position of the mouse.</span></span></param>
        <summary><span data-ttu-id="7cc88-193">Получает позицию указателя мыши относительно заданного элемента.</span><span class="sxs-lookup"><span data-stu-id="7cc88-193">Gets the position of the mouse relative to a specified element.</span></span></summary>
        <returns><span data-ttu-id="7cc88-194">Позиция указателя мыши относительно параметра <paramref name="relativeTo" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-195">Положение указателя мыши вычисляется относительно заданного элемента с верхнего левого угла элемента является точку начала координат, 0,0.</span><span class="sxs-lookup"><span data-stu-id="7cc88-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="7cc88-196">Во время операции перетаскивания и вставки, положение мыши нельзя определить надежно через <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="7cc88-197">Это обусловлено управления мыши (в том числе захвата) удерживается с исходным элементом операции перетаскивания до завершения, при это значительная часть этого поведения управляется базовый [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] вызовов.</span><span class="sxs-lookup"><span data-stu-id="7cc88-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="7cc88-198">Вместо этого попробуйте выполните следующие подходы:</span><span class="sxs-lookup"><span data-stu-id="7cc88-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="7cc88-199">Вызовите <xref:System.Windows.DragEventArgs.GetPosition%2A> метод <xref:System.Windows.DragEventArgs> передаваемый событий перетаскивания (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span><span class="sxs-lookup"><span data-stu-id="7cc88-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="7cc88-200">Вызовите [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), с помощью P/Invoke.</span><span class="sxs-lookup"><span data-stu-id="7cc88-200">Call [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cc88-201">В следующем примере показано, как использовать <xref:System.Windows.Input.Mouse.GetPosition%2A> для определения положения указателя мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="7cc88-202">Положение указателя мыши хранится в <xref:System.Windows.Point> структуры.</span><span class="sxs-lookup"><span data-stu-id="7cc88-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="7cc88-203"><xref:System.Windows.Point.X%2A> И <xref:System.Windows.Point.Y%2A> значения <xref:System.Windows.Point> объекта отображаются в <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" Usage="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-204">Происходит при захвате мыши элементом.</span><span class="sxs-lookup"><span data-stu-id="7cc88-204">Occurs when an element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-205">При захвате мыши, он получает ввод от мыши ли курсор находится в границах.</span><span class="sxs-lookup"><span data-stu-id="7cc88-205">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="7cc88-206">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-206">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-207">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-207">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-208">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-208">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-209">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-209">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-210">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-210">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-211">Восходящая маршрутизация, фактический элемент, захвативший может быть дочерним элементом, не обязательно является элементом, где фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-211">Because of the bubbling routing, the actual element that has capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="7cc88-212">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> событий захвата аргументы, чтобы определить фактический элемент, имеющий мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-212">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that has mouse capture.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-213">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-214">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-214">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.GotMouseCaptureEvent>|  
|<span data-ttu-id="7cc88-215">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-215">Routing strategy</span></span>|<span data-ttu-id="7cc88-216">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-216">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-217">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-217">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7cc88-218">Имеется соответствующее событие не определено туннелирования.</span><span class="sxs-lookup"><span data-stu-id="7cc88-218">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-219">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-219">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-220">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-220">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-221">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-222">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-222">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-223">Получает состояние левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-223">Gets the state of the left button of the mouse.</span></span></summary>
        <value><span data-ttu-id="7cc88-224">Состояние левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-224">The state of the left mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cc88-225">Приведенный ниже показано, как определить, нажата ли левая кнопка мыши, проверяя состояние <xref:System.Windows.Input.Mouse.LeftButton%2A> равен <xref:System.Windows.Input.MouseButtonState> значение перечисления <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-225">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="7cc88-226">При нажатии кнопки, вызывается метод, обновляющий отображаемые элементы в образце.</span><span class="sxs-lookup"><span data-stu-id="7cc88-226">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" Usage="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-227">Происходит, когда элемент теряет захват мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-227">Occurs when an element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-228">При захвате мыши, он получает ввод от мыши ли курсор находится в границах.</span><span class="sxs-lookup"><span data-stu-id="7cc88-228">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="7cc88-229">T</span><span class="sxs-lookup"><span data-stu-id="7cc88-229">T</span></span>  
  
 <span data-ttu-id="7cc88-230">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-230">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-231">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-231">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-232">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-232">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-233">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-233">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-234">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-234">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-235">Восходящая маршрутизация, фактический элемент, который потерял захват может быть дочерним элементом, не обязательно является элементом, где фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-235">Because of the bubbling routing, the actual element that lost capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="7cc88-236">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в аргументах событий, чтобы определить фактический элемент, который потерял захват.</span><span class="sxs-lookup"><span data-stu-id="7cc88-236">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that lost capture.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-237">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-238">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-238">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.LostMouseCaptureEvent>|  
|<span data-ttu-id="7cc88-239">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-239">Routing strategy</span></span>|<span data-ttu-id="7cc88-240">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-240">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-241">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-241">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7cc88-242">Имеется соответствующее событие не определено туннелирования.</span><span class="sxs-lookup"><span data-stu-id="7cc88-242">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-243">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-243">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-244">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-244">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-245">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-245">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-246">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-246">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-247">Получает состояние средней кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-247">Gets the state of the middle button of the mouse.</span></span></summary>
        <value><span data-ttu-id="7cc88-248">Состояние средней кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-248">The state of the middle mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cc88-249">Приведенный ниже показано, как определить, нажата ли средняя кнопка мыши, проверяя состояние <xref:System.Windows.Input.Mouse.MiddleButton%2A> равен <xref:System.Windows.Input.MouseButtonState> значение перечисления <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-249">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="7cc88-250">При нажатии кнопки, вызывается метод, обновляющий отображаемые элементы в образце.</span><span class="sxs-lookup"><span data-stu-id="7cc88-250">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" Usage="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-251">Происходит, когда пользователь отпускает любую кнопку мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-251">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-252">Чтобы определить, какая кнопка мыши была нажата, проверьте <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> свойство в <xref:System.Windows.Input.MouseButtonEventArgs> передается обработчику.</span><span class="sxs-lookup"><span data-stu-id="7cc88-252">To determine which mouse button was depressed, check the <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property in the <xref:System.Windows.Input.MouseButtonEventArgs> passed to the handler.</span></span>  
  
 <span data-ttu-id="7cc88-253">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-253">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-254">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-254">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-255">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-255">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-256">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-256">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-257">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-257">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-258">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework основана на это вложенное событие, и отображает его как два разных [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] события на <xref:System.Windows.UIElement> и <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> и <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-258">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="7cc88-259">Эти реализации обработки базового <xref:System.Windows.Input.Mouse.MouseDown> событий и считывает аргументы события, чтобы определить, связан ли левая или правая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-259">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="7cc88-260">Три кнопки мыши не поддерживается событий уровня платформы для кнопки "center".</span><span class="sxs-lookup"><span data-stu-id="7cc88-260">For a three-button mouse, there is no framework-level event support for the center button.</span></span> <span data-ttu-id="7cc88-261">Следует использовать <xref:System.Windows.Input.Mouse.MouseDown> события и проверьте <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> событий состояния аргументы.</span><span class="sxs-lookup"><span data-stu-id="7cc88-261">You should use the <xref:System.Windows.Input.Mouse.MouseDown> event and check the <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> state in the event arguments.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7cc88-262">Несколько <xref:System.Windows.ContentElement> производные классы, которые имеют поведение схожих с элементами управления, например, <xref:System.Windows.Documents.Hyperlink>, может быть реализована собственная обработка события кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-262">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="7cc88-263">Событие нажатия левой кнопки является событие, скорее всего, чтобы класс, обработка в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-263">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="7cc88-264">Обработку часто класса помечает базовый <xref:System.Windows.Input.Mouse> класс событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="7cc88-264">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="7cc88-265">После пометки события как обработанного другие обработчики экземпляров, подключенных к этому элементу, не инициируются.</span><span class="sxs-lookup"><span data-stu-id="7cc88-265">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="7cc88-266">Любые другие обработчики класса или экземпляра, присоединенные к элементам в восходящем направлении к корню дерева пользовательского интерфейса, также обычно не инициируются.</span><span class="sxs-lookup"><span data-stu-id="7cc88-266">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="7cc88-267">Можно устранить проблему, описанную в предыдущем важное примечание и по-прежнему получать <xref:System.Windows.UIElement.MouseDown> событий для кнопки мыши в производном классе с обработкой класса с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="7cc88-267">You can resolve the issue that is outlined in the preceding Important note and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="7cc88-268">Присоединять обработчики для <xref:System.Windows.UIElement.PreviewMouseDown> события, который не помечен как обработанное в элементах управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-268">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="7cc88-269">Обратите внимание на то, что так как это события предварительного просмотра, маршрут начинается от корня и туннелируется вниз к элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-269">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="7cc88-270">Процедурному зарегистрировать обработчик для элемента управления путем вызова <xref:System.Windows.UIElement.AddHandler%2A> и выбрать вариант подписи, который позволяет обработчику прослушивать события, даже если уже отмечены как обработанное в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-270">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="7cc88-271">Для перенаправленных событий, связанных с мышью Будьте внимательны о способе и времени они помечаются как обработанные.</span><span class="sxs-lookup"><span data-stu-id="7cc88-271">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="7cc88-272">Трудность принятия правильного решения о ли родительские элементы должны также информировать о любого заданного действия мыши на самом деле именно [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] инфраструктуре выбрана модель предоставления базового маршрутизируемого события мыши как [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="7cc88-272">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying mouse routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span> <span data-ttu-id="7cc88-273">Подобные проблемы связаны с помощью мыши события нисходящей маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="7cc88-273">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="7cc88-274">Следует ли обрабатывать события и не допускать его обработки следующими дочерними элементами в направлении источника, и как это отразится на составлении элемента управления, где составные части могут ожидать поведения мыши?</span><span class="sxs-lookup"><span data-stu-id="7cc88-274">Should you handle the event and not have it be handled by further children toward the source, and how would that affect compositing a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-275">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-276">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-276">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseDownEvent>|  
|<span data-ttu-id="7cc88-277">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-277">Routing strategy</span></span>|<span data-ttu-id="7cc88-278">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-278">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-279">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7cc88-280">Соответствующее событие нисходящей маршрутизации является <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-280">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-281">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-281">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-282">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-282">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-283">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-284">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-284">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="F#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" Usage="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-285">Происходит, когда указатель мыши входит в границы элемента.</span><span class="sxs-lookup"><span data-stu-id="7cc88-285">Occurs when the mouse pointer enters the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-286">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-286">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-287">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-287">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-288">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-288">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-289">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-289">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-290">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-290">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-291">Это событие используется прямой обработки стратегия маршрутизации события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-291">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="7cc88-292">Прямые перенаправленные события не вызываются по маршруту (они обрабатываются только в том же элементе, на котором они вызываются).</span><span class="sxs-lookup"><span data-stu-id="7cc88-292">Direct routed events are not raised along a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="7cc88-293">Тем не менее, они не включают другие аспекты поведения перенаправленного события, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="7cc88-293">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="7cc88-294">Несмотря на то, что это событие используется для отслеживания при наведении мыши на элемент, он также отправляет отчеты <xref:System.Windows.UIElement.IsMouseOver%2A> свойство было изменено с `false` для `true` данного элемента.</span><span class="sxs-lookup"><span data-stu-id="7cc88-294">Although this event is used to track when the mouse enters an element, it is also reporting the <xref:System.Windows.UIElement.IsMouseOver%2A> property has changed from `false` to `true` on this element.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-295">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-295">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-296">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-296">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseEnterEvent>|  
|<span data-ttu-id="7cc88-297">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-297">Routing strategy</span></span>|<span data-ttu-id="7cc88-298">Direct</span><span class="sxs-lookup"><span data-stu-id="7cc88-298">Direct</span></span>|  
|<span data-ttu-id="7cc88-299">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-299">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-300">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-300">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-301">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-301">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-302">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-303">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-303">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" Usage="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-304">Происходит, когда указатель мыши покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="7cc88-304">Occurs when the mouse pointer leaves the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-305">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-305">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-306">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-306">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-307">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-307">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-308">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-308">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-309">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-309">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-310">Это событие используется прямой обработки стратегия маршрутизации события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-310">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="7cc88-311">События с прямой маршрутизацией не следуют по маршруту (они обрабатываются только в том же элементе, на котором они вызываются).</span><span class="sxs-lookup"><span data-stu-id="7cc88-311">Direct routed events do not follow a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="7cc88-312">Тем не менее, они не включают другие аспекты поведения перенаправленного события, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="7cc88-312">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="7cc88-313">Несмотря на то, что это событие используется для отслеживания, когда указатель мыши покидает элемент, он также отправляет отчеты, <xref:System.Windows.UIElement.IsMouseOver%2A> значение свойства было изменено с `true` для `false` данного элемента.</span><span class="sxs-lookup"><span data-stu-id="7cc88-313">Although this event is used to track when the mouse leaves an element, it is also reporting that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-314">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-315">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-315">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseLeaveEvent>|  
|<span data-ttu-id="7cc88-316">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-316">Routing strategy</span></span>|<span data-ttu-id="7cc88-317">Direct</span><span class="sxs-lookup"><span data-stu-id="7cc88-317">Direct</span></span>|  
|<span data-ttu-id="7cc88-318">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-318">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-319">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-319">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-320">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-320">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-321">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-321">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-322">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-322">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" Usage="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-323">Происходит, когда указатель мыши перемещается.</span><span class="sxs-lookup"><span data-stu-id="7cc88-323">Occurs when the mouse pointer moves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-324">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-324">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-325">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-325">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-326">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-326">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-327">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-328">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-329">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-330">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-330">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseMoveEvent>|  
|<span data-ttu-id="7cc88-331">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-331">Routing strategy</span></span>|<span data-ttu-id="7cc88-332">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-332">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-333">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-333">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7cc88-334">Соответствующее событие нисходящей маршрутизации является <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-334">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-335">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-335">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-336">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-336">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-337">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-338">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-338">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" Usage="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-339">Происходит при отпускании любой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-339">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-340">Какая кнопка мыши была выпущена определяется путем проверки аргументов события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-340">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="7cc88-341">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-341">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-342">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-342">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-343">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-343">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-344">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-344">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-345">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-345">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-346">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework основана на это вложенное событие, и отображает его как два разных [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] события на <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> и <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-346">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="7cc88-347">Эти реализации обработки базового <xref:System.Windows.Input.Mouse.MouseUp> событий и считывает аргументы события, чтобы определить, связан ли левая или правая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-347">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="7cc88-348">Три кнопки, отсутствует поддержка событий уровня платформы для средней, а также следует использовать <xref:System.Windows.Input.Mouse.MouseUp> событий и проверьте наличие средней событий условие аргументы.</span><span class="sxs-lookup"><span data-stu-id="7cc88-348">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.MouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="7cc88-349">Для перенаправленных событий, связанных с мышью Будьте внимательны о способе и времени они помечаются как обработанные.</span><span class="sxs-lookup"><span data-stu-id="7cc88-349">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="7cc88-350">Трудность принятия правильного решения о ли родительские элементы должны также информировать о любого заданного действия мыши на самом деле именно [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] инфраструктуре выбрана модель предоставления базового <xref:System.Windows.Input.Mouse> подключить перенаправленное событие как [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] события иной маршрута.</span><span class="sxs-lookup"><span data-stu-id="7cc88-350">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events all along the route.</span></span>  
  
 <span data-ttu-id="7cc88-351">Подобные проблемы связаны с помощью мыши события нисходящей маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="7cc88-351">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="7cc88-352">Следует ли обрабатывать события и не допускать его обработки следующими дочерними элементами в направлении к источнику, и как это отразится на составлении в элементе управления, где составные части могут ожидать поведения мыши?</span><span class="sxs-lookup"><span data-stu-id="7cc88-352">Should you handle the event and not have it be handled by children further towards the source, and how would that affect compositing in a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-353">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-353">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-354">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-354">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseUpEvent>|  
|<span data-ttu-id="7cc88-355">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-355">Routing strategy</span></span>|<span data-ttu-id="7cc88-356">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-356">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-357">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-357">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 <span data-ttu-id="7cc88-358">Соответствующее событие нисходящей маршрутизации является <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-358">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-359">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-359">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-360">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-360">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-361">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-361">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-362">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-362">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" Usage="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-363">Происходит при повороте колесика мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-363">Occurs when the mouse wheel is rotated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-364">Фокус или захват мыши имеют приоритет над которого указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-364">Focus or mouse capture take precedence over where the mouse pointer is.</span></span>  <span data-ttu-id="7cc88-365">При получении этого события из элемента или получившего, указатель мыши на самом деле возможно на другом элементе во время.</span><span class="sxs-lookup"><span data-stu-id="7cc88-365">If you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="7cc88-366">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-366">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-367">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-367">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-368">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-368">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-369">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-369">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-370">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-370">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-371">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-372">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-372">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseWheelEvent>|  
|<span data-ttu-id="7cc88-373">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-373">Routing strategy</span></span>|<span data-ttu-id="7cc88-374">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-374">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-375">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-375">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="7cc88-376">Соответствующее событие нисходящей маршрутизации является <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-376">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="F#" Value="val mutable MouseWheelDeltaForOneLine : int" Usage="System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-377">Представляет число единиц, на которые поворачивается колесико мыши для прокрутки на одну строку.</span><span class="sxs-lookup"><span data-stu-id="7cc88-377">Represents the number of units the mouse wheel is rotated to scroll one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-378">В текущем [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], значение этого поля — 120.</span><span class="sxs-lookup"><span data-stu-id="7cc88-378">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="7cc88-379">Намерение раскрытия поля — позволить поставщикам для сборки колеса мыши с высоким разрешением в в будущем, возможно, будет включать свободно вращающиеся колеса без засечек.</span><span class="sxs-lookup"><span data-stu-id="7cc88-379">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="7cc88-380">Ожидается, что такое устройство следует отправить дополнительные сообщения за каждое вращение, но с меньшими значениями в каждом сообщении.</span><span class="sxs-lookup"><span data-stu-id="7cc88-380">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="7cc88-381">Для поддержки этой возможности, следует добавить входящие разностные значения до <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> сумма будет достигнут (поэтому дельта-поворота вы получаете одинаковый ответ), или прокрутите частичные строки в ответ на сообщения чаще.</span><span class="sxs-lookup"><span data-stu-id="7cc88-381">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="7cc88-382">Можно также выбрать собственный уровень детализации прокрутки и накапливать детали по собственному выбору, пока что разностные достигается, или возможно ссылаться настраиваемое пользователем системных параметров чувствительности мыши и использовать их для пороговых значений разностных колесика мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-382">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-383">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-383">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-384">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-384">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-385">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-386">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-386">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.Mouse.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-387">Получает или задает курсор для всего приложения.</span><span class="sxs-lookup"><span data-stu-id="7cc88-387">Gets or sets the cursor for the entire application.</span></span></summary>
        <value><span data-ttu-id="7cc88-388">Переопределенный курсор или значение <see langword="null" />, если свойство <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> не установлено.</span><span class="sxs-lookup"><span data-stu-id="7cc88-388">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-389"><xref:System.Windows.Input.Cursor> , <xref:System.Windows.Input.Mouse.OverrideCursor%2A> Является равным применяется ко всему приложению.</span><span class="sxs-lookup"><span data-stu-id="7cc88-389">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="7cc88-390">Чтобы очистить переопределение <xref:System.Windows.Input.Cursor>, задайте <xref:System.Windows.Input.Mouse.OverrideCursor%2A> для `null`.</span><span class="sxs-lookup"><span data-stu-id="7cc88-390">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="7cc88-391">Установка <xref:System.Windows.Input.Mouse.OverrideCursor%2A> для <xref:System.Windows.Input.Cursors.None%2A> вынудит курсор мыши не должен отображаться, но по-прежнему обрабатывает события мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-391">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cc88-392">В примере показан обработчик событий для <xref:System.Windows.Controls.RadioButton> , используемый для переключения области изменения курсора между одним элементом и всего приложения.</span><span class="sxs-lookup"><span data-stu-id="7cc88-392">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="7cc88-393">Если элемент управления, который вызвал событие `rbScopeElement` <xref:System.Windows.Controls.RadioButton>, флаг, обозначающий рамки изменение курсора и <xref:System.Windows.Input.Mouse.OverrideCursor%2A> присваивается `null`.</span><span class="sxs-lookup"><span data-stu-id="7cc88-393">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="7cc88-394">Если элемент управления, который вызвал событие `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, флаг, обозначающий рамки изменение курсора и <xref:System.Windows.Input.Mouse.OverrideCursor%2A> присваивается <xref:System.Windows.FrameworkElement.Cursor%2A> свойство <xref:System.Windows.Controls.Border> управления с именем `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="7cc88-394">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" Usage="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-395">Происходит, когда пользователь отпускает любую кнопку мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-395">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-396">Какая кнопка мыши была нажата определяется путем проверки аргументов события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-396">Which mouse button was depressed is determined by checking the arguments of the event.</span></span> <span data-ttu-id="7cc88-397">Это вложенное событие (с помощью нисходящую стратегию маршрутизации), предназначенный для ссылки на существующие через синтаксис присоединенных событий [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] элементы, которые принимают входные данные.</span><span class="sxs-lookup"><span data-stu-id="7cc88-397">This is an attached event (using tunneling routing strategy) that is intended through attached event syntax to be referenced by existing [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements that take input.</span></span>  
  
 <span data-ttu-id="7cc88-398">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-399">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-399">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-400">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-400">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-401">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-401">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-402">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-402">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-403">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework основана на это вложенное событие, и отображает его как два разных [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] события на <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> и <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-403">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="7cc88-404">Эти реализации обработки базового <xref:System.Windows.Input.Mouse.PreviewMouseDown> событий и считывает аргументы события, чтобы определить, связан ли левая или правая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-404">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="7cc88-405">Три кнопки, отсутствует поддержка событий уровня платформы для средней, а также следует использовать <xref:System.Windows.Input.Mouse.PreviewMouseDown> событий и проверьте наличие средней событий условие аргументы.</span><span class="sxs-lookup"><span data-stu-id="7cc88-405">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="7cc88-406">Для перенаправленных событий, связанных с мышью Будьте внимательны о способе и времени они помечаются как обработанные.</span><span class="sxs-lookup"><span data-stu-id="7cc88-406">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="7cc88-407">Обработка событий на корневом и обработки его дочерними дальнейшей направлении источника может не подходить для составных элементов управления, где составные части могут ожидать поведения мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-407">Handling the event near the root and handling it by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="7cc88-408">Трудность принятия правильного решения о ли другие элементы должны также информировать о любого заданного действия мыши на самом деле именно [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] инфраструктуре выбрана модель предоставления базового <xref:System.Windows.Input.Mouse> подключить перенаправленное событие как [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событий в маршруте.</span><span class="sxs-lookup"><span data-stu-id="7cc88-408">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-409">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-410">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-410">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownEvent>|  
|<span data-ttu-id="7cc88-411">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-411">Routing strategy</span></span>|<span data-ttu-id="7cc88-412">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="7cc88-412">Tunneling</span></span>|  
|<span data-ttu-id="7cc88-413">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7cc88-414">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.Input.Mouse.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-414">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-415">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-415">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-416">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-416">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-417">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-417">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-418">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-418">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" Usage="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-419">Происходит при нажатии главной кнопки мыши, когда указатель находится вне элемента, захватывающего события мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-419">Occurs when the primary mouse button is pressed outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-420">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-420">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-421">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-421">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-422">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-422">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-423">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-423">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-424">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-424">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-425">Это событие не передается базовые элементы.</span><span class="sxs-lookup"><span data-stu-id="7cc88-425">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="7cc88-426">Это забота разработчиков элемента управления, для согласования захват мыши и ввод данных мышью в составе элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-426">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDownOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-427">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-428">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-428">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent>|  
|<span data-ttu-id="7cc88-429">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-429">Routing strategy</span></span>|<span data-ttu-id="7cc88-430">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="7cc88-430">Tunneling</span></span>|  
|<span data-ttu-id="7cc88-431">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-431">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-432">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-432">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-433">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-433">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-434">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-435">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-435">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" Usage="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-436">Происходит, когда указатель мыши перемещается над элементом.</span><span class="sxs-lookup"><span data-stu-id="7cc88-436">Occurs when the mouse moves over an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-437">Это событие происходит, и когда указатель мыши впервые входит в пределы элемента, а также при перемещении указателя мыши оставаясь в пределы элемента.</span><span class="sxs-lookup"><span data-stu-id="7cc88-437">This event occurs both when the mouse pointer is newly moved in the element bounds, and also when the mouse pointer moves while still remaining in the element bounds.</span></span>  
  
 <span data-ttu-id="7cc88-438">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-438">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-439">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-439">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-440">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-440">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-441">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-441">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-442">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-442">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-443">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-444">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-444">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseMoveEvent>|  
|<span data-ttu-id="7cc88-445">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-445">Routing strategy</span></span>|<span data-ttu-id="7cc88-446">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="7cc88-446">Tunneling</span></span>|  
|<span data-ttu-id="7cc88-447">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-447">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7cc88-448">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.Input.Mouse.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-448">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-449">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-449">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-450">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-450">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-451">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-451">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-452">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-452">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" Usage="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-453">Происходит при отпускании любой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-453">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-454">Какая кнопка мыши была выпущена определяется путем проверки аргументов события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-454">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="7cc88-455">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-455">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-456">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-456">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-457">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-457">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-458">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-458">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-459">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-459">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-460">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework основана на это вложенное событие, и отображает его как два разных [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] события на <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> и <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-460">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="7cc88-461">Эти реализации обработки базового <xref:System.Windows.Input.Mouse.PreviewMouseUp> событий и считывает аргументы события, чтобы определить, связан ли левая или правая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-461">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="7cc88-462">Три кнопки, отсутствует поддержка событий уровня платформы для средней, а также следует использовать <xref:System.Windows.Input.Mouse.PreviewMouseUp> событий и проверьте наличие средней событий условие аргументы.</span><span class="sxs-lookup"><span data-stu-id="7cc88-462">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="7cc88-463">Для перенаправленных событий, связанных с мышью Будьте внимательны о способе и времени они помечаются как обработанные.</span><span class="sxs-lookup"><span data-stu-id="7cc88-463">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="7cc88-464">Обработка событий на корневом и не обработки дочерними дальнейшей направлении источника может не подходить для составных элементов управления, где составные части могут ожидать поведения мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-464">Handling the event near the root and not handling by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="7cc88-465">Трудность принятия правильного решения о ли другие элементы должны также информировать о любого заданного действия мыши на самом деле именно [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] инфраструктуре выбрана модель предоставления базового <xref:System.Windows.Input.Mouse> подключить перенаправленное событие как [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событий в маршруте.</span><span class="sxs-lookup"><span data-stu-id="7cc88-465">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-466">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-467">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-467">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpEvent>|  
|<span data-ttu-id="7cc88-468">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-468">Routing strategy</span></span>|<span data-ttu-id="7cc88-469">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="7cc88-469">Tunneling</span></span>|  
|<span data-ttu-id="7cc88-470">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-470">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7cc88-471">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.Input.Mouse.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-471">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-472">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-472">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-473">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-473">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-474">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-474">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-475">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-475">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" Usage="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-476">Происходит при отпускании главной кнопки мыши, когда указатель находится вне элемента, захватывающего события мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-476">Occurs when the primary mouse button is released outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-477">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-477">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-478">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-478">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-479">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-479">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-480">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-480">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-481">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-481">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="7cc88-482">Это событие не передается базовые элементы.</span><span class="sxs-lookup"><span data-stu-id="7cc88-482">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="7cc88-483">Это забота разработчиков элемента управления, для согласования захват мыши и ввод данных мышью в составе элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7cc88-483">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUpOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-484">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-485">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-485">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent>|  
|<span data-ttu-id="7cc88-486">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-486">Routing strategy</span></span>|<span data-ttu-id="7cc88-487">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="7cc88-487">Tunneling</span></span>|  
|<span data-ttu-id="7cc88-488">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-488">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7cc88-489">Нет соответствующего события восходящей маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="7cc88-489">There is no corresponding bubbling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-490">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-490">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-491">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-491">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-492">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-492">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-493">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-493">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" Usage="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-494">Происходит при повороте колесика мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-494">Occurs when the mouse wheel rotates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-495">Фокус или захват мыши имеют приоритет над которого указатель мыши; Таким образом при получении этого события из элемента или получившего, указатель мыши на самом деле возможно на другом элементе во время.</span><span class="sxs-lookup"><span data-stu-id="7cc88-495">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="7cc88-496">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-496">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-497">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-497">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-498">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-498">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-499">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-499">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-500">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-500">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-501">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-501">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-502">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-502">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseWheelEvent>|  
|<span data-ttu-id="7cc88-503">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-503">Routing strategy</span></span>|<span data-ttu-id="7cc88-504">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="7cc88-504">Tunneling</span></span>|  
|<span data-ttu-id="7cc88-505">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-505">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="7cc88-506">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.Input.Mouse.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-506">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-507">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-507">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-508">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-508">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-509">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-509">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-510">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-510">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-511">Получает первичное устройство ввода — мышь.</span><span class="sxs-lookup"><span data-stu-id="7cc88-511">Gets the primary mouse device.</span></span></summary>
        <value><span data-ttu-id="7cc88-512">Устройство.</span><span class="sxs-lookup"><span data-stu-id="7cc88-512">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-513">Это свойство поддерживает инфраструктуру Windows Presentation Foundation и не предназначен для использования непосредственно из программного кода.</span><span class="sxs-lookup"><span data-stu-id="7cc88-513">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="F#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" Usage="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cc88-514">Происходит, когда элемент запрашивает текущий указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-514">Occurs when an element queries for the current mouse cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-515">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-515">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7cc88-516">Реализация присоединенных событий как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-516">implements attached events as routed events.</span></span> <span data-ttu-id="7cc88-517">Присоединенные события, по сути [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] концепции языка для ссылок на события, которые могут быть обработаны на объекты, которые не определяют данного события, который [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширяет, также позволяя события проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="7cc88-517">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="7cc88-518">Вложенные события не имеют синтаксис прямой обработки в коде; для присоединения обработчиков для перенаправленных событий в коде, используйте указанный добавить \* метод обработчика.</span><span class="sxs-lookup"><span data-stu-id="7cc88-518">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="7cc88-519">Дополнительные сведения см. в разделе [подключенные Общие сведения о событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-519">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_Querycursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7cc88-520">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="7cc88-520">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7cc88-521">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="7cc88-521">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.QueryCursorEvent>|  
|<span data-ttu-id="7cc88-522">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="7cc88-522">Routing strategy</span></span>|<span data-ttu-id="7cc88-523">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="7cc88-523">Bubbling</span></span>|  
|<span data-ttu-id="7cc88-524">делегат</span><span class="sxs-lookup"><span data-stu-id="7cc88-524">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
 <span data-ttu-id="7cc88-525">Имеется соответствующее событие не определено туннелирования.</span><span class="sxs-lookup"><span data-stu-id="7cc88-525">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-526">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Mouse.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-526">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-527">Идентификаторы перенаправленных событий создаются при их регистрации, а результат сохраняется в виде поля в классе, который регистрирует перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-527">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="7cc88-528">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-528">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="7cc88-529">Часто эти идентификаторы используются в качестве параметров для методов системы событий, для идентификации определенного маршрутизируемого события.</span><span class="sxs-lookup"><span data-stu-id="7cc88-529">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-530">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-530">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-531">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-531">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-532">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-532">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-533">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-533">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-534">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-534">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-535">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-535">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-536">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-536">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-537">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-537">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-538">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseDown" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-538">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-539">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-539">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-540">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-540">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-541">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-541">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-542">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-542">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-543">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-543">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-544">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-544">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-545">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-545">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-546">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-546">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-547">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseMove" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-547">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-548">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-548">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-549">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-549">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-550">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseUp" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-550">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-551">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-551">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-552">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-552">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-553">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-553">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-554">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-554">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-555">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-555">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-556">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-556">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-557">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-557">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-558">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-558">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-559">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-559">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-560">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-560">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-561">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-561">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-562">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-562">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-563">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-563">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-564">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-564">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-565">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-565">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-566">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-566">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-567">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-567">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-568">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-568">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-569">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-569">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-570">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-570">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-571">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-571">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7cc88-572">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-572">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7cc88-573">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="7cc88-573">The event handler.</span></span></param>
        <summary><span data-ttu-id="7cc88-574">Удаляет обработчик для <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="7cc88-574">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-575">Получает состояние правой кнопки.</span><span class="sxs-lookup"><span data-stu-id="7cc88-575">Gets the state of the right button.</span></span></summary>
        <value><span data-ttu-id="7cc88-576">Состояние правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-576">The state of the right mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cc88-577">Приведенный ниже показано, как определить, нажата ли правой кнопкой мыши, проверяя состояние <xref:System.Windows.Input.Mouse.RightButton%2A> равен <xref:System.Windows.Input.MouseButtonState> значение перечисления <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-577">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="7cc88-578">При нажатии кнопки, вызывается метод, обновляющий отображаемые элементы в образце.</span><span class="sxs-lookup"><span data-stu-id="7cc88-578">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="static member SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="System.Windows.Input.Mouse.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor"><span data-ttu-id="7cc88-579">Курсор, которому нужно присвоить данный указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-579">The cursor to set the mouse pointer to.</span></span></param>
        <summary><span data-ttu-id="7cc88-580">Присваивает указатель мыши заданному <see cref="T:System.Windows.Input.Cursor" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-580">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="7cc88-581">Значение <see langword="true" />, если курсор установлен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7cc88-581"><see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cc88-582">Курсор не относится к какому-либо определенному, но скорее он применяется ко всему приложению.</span><span class="sxs-lookup"><span data-stu-id="7cc88-582">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="7cc88-583">Таким образом Если после установки курсора указатель мыши перемещается над объектом, который задает курсор, курсор изменяется снова.</span><span class="sxs-lookup"><span data-stu-id="7cc88-583">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="7cc88-584">Чтобы принудительно указатель мыши к определенной <xref:System.Windows.Input.Cursor> и чтобы сделать это принудительно <xref:System.Windows.Input.Cursor> для всех элементов, задайте <xref:System.Windows.Input.Mouse.OverrideCursor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7cc88-584">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="7cc88-585">Чтобы установить курсор на определенный элемент, используйте <xref:System.Windows.FrameworkElement.Cursor%2A> либо свойство <xref:System.Windows.FrameworkElement> или <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-585">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="7cc88-586">Дополнительные сведения о базовых элементах см. в разделе [Общие сведения о базовых элементах](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7cc88-586">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Mouse.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7cc88-587">Вызывает принудительную повторную синхронизацию мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-587">Forces the mouse to resynchronize.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberSignature Language="F#" Value="static member UpdateCursor : unit -&gt; unit" Usage="System.Windows.Input.Mouse.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7cc88-588">Вызывает принудительное обновление курсора мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-588">Forces the mouse cursor to be updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-589">Получает состояние первой расширенной кнопки.</span><span class="sxs-lookup"><span data-stu-id="7cc88-589">Gets the state of the first extended button.</span></span></summary>
        <value><span data-ttu-id="7cc88-590">Состояние первой расширенной кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-590">The state of the first extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cc88-591">Приведенный ниже показано, как определить, нажата ли первой расширенной кнопки мыши, проверяя состояние <xref:System.Windows.Input.Mouse.XButton1%2A> равен <xref:System.Windows.Input.MouseButtonState> значение перечисления <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-591">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="7cc88-592">При нажатии кнопки, вызывается метод, обновляющий отображаемые элементы в образце.</span><span class="sxs-lookup"><span data-stu-id="7cc88-592">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7cc88-593">Получает состояние второй расширенной кнопки.</span><span class="sxs-lookup"><span data-stu-id="7cc88-593">Gets the state of the second extended button.</span></span></summary>
        <value><span data-ttu-id="7cc88-594">Состояние второй расширенной кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="7cc88-594">The state of the second extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cc88-595">Приведенный ниже показано, как определить, нажата ли второй расширенной кнопки мыши, проверяя состояние <xref:System.Windows.Input.Mouse.XButton2%2A> равен <xref:System.Windows.Input.MouseButtonState> значение перечисления <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="7cc88-595">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="7cc88-596">При нажатии кнопки, вызывается метод, обновляющий отображаемые элементы в образце.</span><span class="sxs-lookup"><span data-stu-id="7cc88-596">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>