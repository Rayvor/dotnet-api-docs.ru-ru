<Type Name="RoutedCommand" FullName="System.Windows.Input.RoutedCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73ff686e8a08ec56da27c0b4420781c44df4cb6e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70671996" /></Metadata><TypeSignature Language="C#" Value="public class RoutedCommand : System.Windows.Input.ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedCommand extends System.Object implements class System.Windows.Input.ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.RoutedCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedCommand&#xA;Implements ICommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedCommand : System::Windows::Input::ICommand" />
  <TypeSignature Language="F#" Value="type RoutedCommand = class&#xA;    interface ICommand" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommand</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4c94b-101">Определяет команду, реализующую <see cref="T:System.Windows.Input.ICommand" /> и маршрутизируемую по дереву элементов.</span><span class="sxs-lookup"><span data-stu-id="4c94b-101">Defines a command that implements <see cref="T:System.Windows.Input.ICommand" /> and is routed through the element tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-102">Методы <xref:System.Windows.Input.RoutedCommand.Execute%2A> <xref:System.Windows.Input.ICommand>и <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> в не содержат логику приложения для команды, как в случае с обычным, но эти методы вызывают события, которые проходят по дереву элементов для поиска объекта с <xref:System.Windows.Input.RoutedCommand> <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-102">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the application logic for the command as is the case with a typical <xref:System.Windows.Input.ICommand>, but rather, these methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="4c94b-103">Обработчики событий, присоединенные <xref:System.Windows.Input.CommandBinding> к, содержат логику команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-103">The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.</span></span>  
  
 <span data-ttu-id="4c94b-104">Метод вызывает события <xref:System.Windows.Input.CommandManager.Executed>  и  <xref:System.Windows.Input.CommandManager.PreviewExecuted> . <xref:System.Windows.Input.RoutedCommand.Execute%2A></span><span class="sxs-lookup"><span data-stu-id="4c94b-104">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.</span></span>  <span data-ttu-id="4c94b-105">Метод вызывает события <xref:System.Windows.Input.CommandManager.CanExecute>  и  <xref:System.Windows.Input.CommandManager.PreviewCanExecute> . <xref:System.Windows.Input.RoutedCommand.CanExecute%2A></span><span class="sxs-lookup"><span data-stu-id="4c94b-105">The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.</span></span>  
  
<a name="xamlAttributeUsage_RoutedCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4c94b-106">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="4c94b-106">XAML Attribute Usage</span></span>  
 <span data-ttu-id="4c94b-107">\<*объект* *Property*= "*предефинедкомманднаме*"/></span><span class="sxs-lookup"><span data-stu-id="4c94b-107">\<*object* *property*="*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="4c94b-108">-или-</span><span class="sxs-lookup"><span data-stu-id="4c94b-108">-or-</span></span>
  
 <span data-ttu-id="4c94b-109">\<*объект* *свойство*= "*предефинедкласснаме*. *предефинедкомманднаме*"/></span><span class="sxs-lookup"><span data-stu-id="4c94b-109">\<*object* *property*="*predefinedClassName*.*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="4c94b-110">- или -</span><span class="sxs-lookup"><span data-stu-id="4c94b-110">-or-</span></span>
  
 <span data-ttu-id="4c94b-111">\<*объект* *свойство*= "{ *кустомкласснаме*. *Кустомкомманднаме*} "/></span><span class="sxs-lookup"><span data-stu-id="4c94b-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span></span>  
  
<a name="xamlValues_RoutedCommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4c94b-112">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="4c94b-112">XAML Values</span></span>  
 <span data-ttu-id="4c94b-113">*предефинедкласснаме*</span><span class="sxs-lookup"><span data-stu-id="4c94b-113">*predefinedClassName*</span></span>  
 <span data-ttu-id="4c94b-114">Один из стандартных классов команд.</span><span class="sxs-lookup"><span data-stu-id="4c94b-114">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="4c94b-115">*предефинедкомманднаме*</span><span class="sxs-lookup"><span data-stu-id="4c94b-115">*predefinedCommandName*</span></span>  
 <span data-ttu-id="4c94b-116">Одна из предопределенных команд.</span><span class="sxs-lookup"><span data-stu-id="4c94b-116">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="4c94b-117">*кустомкласснаме*</span><span class="sxs-lookup"><span data-stu-id="4c94b-117">*customClassName*</span></span>  
 <span data-ttu-id="4c94b-118">Пользовательский класс, который содержит пользовательскую команду.</span><span class="sxs-lookup"><span data-stu-id="4c94b-118">A custom class which contains the custom command.</span></span> <span data-ttu-id="4c94b-119">Для пользовательских классов обычно требуется `xlmns` сопоставление префиксов; см. раздел [пространства имен и сопоставление пространств имен XAML для WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="4c94b-119">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="4c94b-120">*кустомкомманднаме*</span><span class="sxs-lookup"><span data-stu-id="4c94b-120">*customCommandName*</span></span>  
 <span data-ttu-id="4c94b-121">Пользовательская команда.</span><span class="sxs-lookup"><span data-stu-id="4c94b-121">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4c94b-122">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-122">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c94b-123">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-123">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.RoutedCommand : string * Type -&gt; System.Windows.Input.RoutedCommand" Usage="new System.Windows.Input.RoutedCommand (name, ownerType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4c94b-124">Объявленное имя для сериализации.</span><span class="sxs-lookup"><span data-stu-id="4c94b-124">Declared name for serialization.</span></span></param>
        <param name="ownerType"><span data-ttu-id="4c94b-125">Тип, регистрирующий команду.</span><span class="sxs-lookup"><span data-stu-id="4c94b-125">The type which is registering the command.</span></span></param>
        <summary><span data-ttu-id="4c94b-126">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.RoutedCommand" /> указанным именем и типом владельца.</span><span class="sxs-lookup"><span data-stu-id="4c94b-126">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name and owner type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4c94b-127">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-127"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4c94b-128">Свойство <paramref name="ownerType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-128"><paramref name="ownerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType, class System.Windows.Input.InputGestureCollection inputGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Windows.Input.InputGestureCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type, inputGestures As InputGestureCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType, System::Windows::Input::InputGestureCollection ^ inputGestures);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.RoutedCommand : string * Type * System.Windows.Input.InputGestureCollection -&gt; System.Windows.Input.RoutedCommand" Usage="new System.Windows.Input.RoutedCommand (name, ownerType, inputGestures)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="inputGestures" Type="System.Windows.Input.InputGestureCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4c94b-129">Объявленное имя для сериализации.</span><span class="sxs-lookup"><span data-stu-id="4c94b-129">Declared name for serialization.</span></span></param>
        <param name="ownerType"><span data-ttu-id="4c94b-130">Тип, регистрирующий команду.</span><span class="sxs-lookup"><span data-stu-id="4c94b-130">The type that is registering the command.</span></span></param>
        <param name="inputGestures"><span data-ttu-id="4c94b-131">Используемые по умолчанию жесты ввода, связанные с данной командой.</span><span class="sxs-lookup"><span data-stu-id="4c94b-131">Default input gestures associated with this command.</span></span></param>
        <summary><span data-ttu-id="4c94b-132">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.RoutedCommand" /> указанным именем, типом владельца и коллекцией жестов.</span><span class="sxs-lookup"><span data-stu-id="4c94b-132">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name, owner type, and collection of gestures.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4c94b-133">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-133"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4c94b-134">длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="4c94b-134">the length of <paramref name="name" /> is zero</span></span> 
<span data-ttu-id="4c94b-135">- или -</span><span class="sxs-lookup"><span data-stu-id="4c94b-135">-or-</span></span> 
 <span data-ttu-id="4c94b-136">Свойство <paramref name="ownerType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-136"><paramref name="ownerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExecute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object, target As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberSignature Language="F#" Value="member this.CanExecute : obj * System.Windows.IInputElement -&gt; bool" Usage="routedCommand.CanExecute (parameter, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4c94b-137">Пользовательский тип данных.</span><span class="sxs-lookup"><span data-stu-id="4c94b-137">A user defined data type.</span></span></param>
        <param name="target"><span data-ttu-id="4c94b-138">Целевой объект команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-138">The command target.</span></span></param>
        <summary><span data-ttu-id="4c94b-139">Определяет, может ли данная команда <see cref="T:System.Windows.Input.RoutedCommand" /> выполняться в ее текущем состоянии.</span><span class="sxs-lookup"><span data-stu-id="4c94b-139">Determines whether this <see cref="T:System.Windows.Input.RoutedCommand" /> can execute in its current state.</span></span></summary>
        <returns><span data-ttu-id="4c94b-140"><see langword="true" />, если команда может выполняться для текущего целевого объекта команды; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-140"><see langword="true" /> if the command can execute on the current command target; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-141">Фактическая логика, определяющая <xref:System.Windows.Input.RoutedCommand> , может ли объект, выполняемый в текущей цели команды, <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> не содержится в <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> <xref:System.Windows.Input.CommandManager.PreviewCanExecute> методах, вместо <xref:System.Windows.Input.CommandManager.CanExecute> этого вызывает события и, которые туннели и пузырьковые элементы проходят через элемент. дерево Поиск объекта с помощью <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-141">The actual logic that determines if a <xref:System.Windows.Input.RoutedCommand> can execute on the current command target is not contained in the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods, rather <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and the <xref:System.Windows.Input.CommandManager.CanExecute> events which tunnel and bubble through element tree looking for a object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="4c94b-142">Если найден <xref:System.Windows.Input.CommandBinding> , <xref:System.Windows.Input.CanExecuteRoutedEventHandler>  то вызывается метод, присоединенный к. <xref:System.Windows.Input.CommandBinding> <xref:System.Windows.Input.RoutedCommand></span><span class="sxs-lookup"><span data-stu-id="4c94b-142">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="4c94b-143">Эти обработчики предоставляют логику программирования для определения, <xref:System.Windows.Input.RoutedCommand> может ли выполняться или нет.</span><span class="sxs-lookup"><span data-stu-id="4c94b-143">These handlers supply the programming logic for determining if the <xref:System.Windows.Input.RoutedCommand> can execute or not.</span></span>  
  
 <span data-ttu-id="4c94b-144">События и  <xref:System.Windows.Input.CommandManager.PreviewExecuted> вызываются в. <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> <xref:System.Windows.Input.CommandManager.PreviewCanExecute></span><span class="sxs-lookup"><span data-stu-id="4c94b-144">The <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.PreviewExecuted> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="4c94b-145">Если параметр <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> не задан <xref:System.Windows.Input.ICommandSource>для, <xref:System.Windows.Input.CommandManager.PreviewCanExecute> события и <xref:System.Windows.Input.CommandManager.CanExecute> вызываются для элемента с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="4c94b-145">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c94b-146">В следующем примере показан <xref:System.Windows.Input.ICommand.CanExecuteChanged> обработчик событий из пользовательской <xref:System.Windows.Input.ICommandSource>реализации.</span><span class="sxs-lookup"><span data-stu-id="4c94b-146">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="4c94b-147">`this.Command`в этом примере это <xref:System.Windows.Input.ICommandSource.Command%2A> свойство <xref:System.Windows.Input.ICommandSource>для.</span><span class="sxs-lookup"><span data-stu-id="4c94b-147">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="4c94b-148">Если команда не `null`имеет значение, команда приводится <xref:System.Windows.Input.RoutedCommand>к типу.</span><span class="sxs-lookup"><span data-stu-id="4c94b-148">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="4c94b-149">Если команда является <xref:System.Windows.Input.RoutedCommand>, <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> то <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> метод <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>называется передачей и.</span><span class="sxs-lookup"><span data-stu-id="4c94b-149">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="4c94b-150">Если команда не <xref:System.Windows.Input.RoutedCommand>является, она приводится <xref:System.Windows.Input.ICommand> к типу, а <xref:System.Windows.Input.ICommand.CanExecute%2A> метод называется передачей <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-150">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="4c94b-151">Если метод возвращает `true`значение, элемент управления включается; в противном случае элемент управления отключается. <xref:System.Windows.Input.RoutedCommand.CanExecute%2A></span><span class="sxs-lookup"><span data-stu-id="4c94b-151">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disable.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c94b-152">Параметр <paramref name="target" /> не является объектом <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-152"><paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.RoutedCommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ CanExecuteChanged;" />
      <MemberSignature Language="F#" Value="member this.CanExecuteChanged : EventHandler " Usage="member this.CanExecuteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.ICommand.CanExecuteChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c94b-153">Происходит, когда диспетчер команд обнаруживает изменение источника команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-153">Occurs when changes to the command source are detected by the command manager.</span></span> <span data-ttu-id="4c94b-154">Эти изменения часто влияют на то, должна ли команда выполняться для текущего целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-154">These changes often affect whether the command should execute on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-155">Компонент прослушивает <xref:System.Windows.Input.CommandManager.RequerySuggested> событие, <xref:System.Windows.Input.CommandManager>которое вызывается. <xref:System.Windows.Input.RoutedCommand></span><span class="sxs-lookup"><span data-stu-id="4c94b-155">The <xref:System.Windows.Input.RoutedCommand> listens for the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, which is raised by the <xref:System.Windows.Input.CommandManager>.</span></span> <span data-ttu-id="4c94b-156"><xref:System.Windows.Input.CommandManager.RequerySuggested> Событие возникает при каждом выполнении условий, которые могут изменить, должна ли выполняться команда, например изменение фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="4c94b-156">The <xref:System.Windows.Input.CommandManager.RequerySuggested> event is raised whenever conditions are met that may change the whether the command should execute, such as a change in keyboard focus.</span></span>  <span data-ttu-id="4c94b-157">Когда команда получает <xref:System.Windows.Input.CommandManager.RequerySuggested> событие, она <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="4c94b-157">When the command receives the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, it raises the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  <span data-ttu-id="4c94b-158">Как правило, источник команды будет прослушивать это событие и запрашивать <xref:System.Windows.Input.RoutedCommand> его посредством <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="4c94b-158">Generally, the command source will listen for this event and query the <xref:System.Windows.Input.RoutedCommand> by way of the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method.</span></span>  <span data-ttu-id="4c94b-159">Большинство источников команд будет отключено, если команда не может быть выполнена в рамках привязки команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-159">Most command sources will disable themselves if the command cannot be executed, as part of their command binding.</span></span>  <span data-ttu-id="4c94b-160">Примером этого является то, что при <xref:System.Windows.Controls.MenuItem> невозможности выполнения команды выделены серые цвета.</span><span class="sxs-lookup"><span data-stu-id="4c94b-160">An example of this is when a <xref:System.Windows.Controls.MenuItem> grays itself out when the command cannot be executed.</span></span>  
  
 <span data-ttu-id="4c94b-161">В некоторых ситуациях объект <xref:System.Windows.Input.CommandManager> не знает об изменении в условиях, которые изменяют возможность выполнения команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-161">In some situations, the <xref:System.Windows.Input.CommandManager> is unaware of a change in conditions that alters the ability of a command to execute.</span></span>  <span data-ttu-id="4c94b-162">В таких случаях можно принудительно инициировать <xref:System.Windows.Input.CommandManager> <xref:System.Windows.Input.CommandManager.RequerySuggested> событие, вызвав <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> <xref:System.Windows.Input.RoutedCommand> метод, который, в свою очередь, приведет <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> к вызову события.</span><span class="sxs-lookup"><span data-stu-id="4c94b-162">In these cases, you can force the <xref:System.Windows.Input.CommandManager> to raises the <xref:System.Windows.Input.CommandManager.RequerySuggested> event by calling the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method, this will in turn cause the <xref:System.Windows.Input.RoutedCommand> to raise the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c94b-163">В следующем примере показан <xref:System.Windows.Input.ICommand.CanExecuteChanged> обработчик событий из пользовательской <xref:System.Windows.Input.ICommandSource>реализации.</span><span class="sxs-lookup"><span data-stu-id="4c94b-163">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="4c94b-164">`this.Command`в этом примере это <xref:System.Windows.Input.ICommandSource.Command%2A> свойство <xref:System.Windows.Input.ICommandSource>для.</span><span class="sxs-lookup"><span data-stu-id="4c94b-164">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="4c94b-165">Если команда не `null`имеет значение, команда приводится <xref:System.Windows.Input.RoutedCommand>к типу.</span><span class="sxs-lookup"><span data-stu-id="4c94b-165">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="4c94b-166">Если команда является <xref:System.Windows.Input.RoutedCommand>, <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> то <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> метод <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>называется передачей и.</span><span class="sxs-lookup"><span data-stu-id="4c94b-166">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="4c94b-167">Если команда не <xref:System.Windows.Input.RoutedCommand>является, она приводится <xref:System.Windows.Input.ICommand> к типу, а <xref:System.Windows.Input.ICommand.CanExecute%2A> метод называется передачей <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-167">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="4c94b-168">Если метод возвращает `true`значение, элемент управления включен; в противном случае элемент управления отключается. <xref:System.Windows.Input.RoutedCommand.CanExecute%2A></span><span class="sxs-lookup"><span data-stu-id="4c94b-168">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disabled.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object, target As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberSignature Language="F#" Value="member this.Execute : obj * System.Windows.IInputElement -&gt; unit" Usage="routedCommand.Execute (parameter, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4c94b-169">Пользовательский параметр, передаваемый данному обработчику.</span><span class="sxs-lookup"><span data-stu-id="4c94b-169">User defined parameter to be passed to the handler.</span></span></param>
        <param name="target"><span data-ttu-id="4c94b-170">Элемент, для которого следует начать поиск обработчиков команд.</span><span class="sxs-lookup"><span data-stu-id="4c94b-170">Element at which to begin looking for command handlers.</span></span></param>
        <summary><span data-ttu-id="4c94b-171">Выполняет <see cref="T:System.Windows.Input.RoutedCommand" /> для текущего целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-171">Executes the <see cref="T:System.Windows.Input.RoutedCommand" /> on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-172">Фактическая логика, которая выполняет <xref:System.Windows.Input.RoutedCommand> , не содержится <xref:System.Windows.Input.RoutedCommand.Execute%2A> в методах.</span><span class="sxs-lookup"><span data-stu-id="4c94b-172">The actual logic that executes the <xref:System.Windows.Input.RoutedCommand> is not contained in the <xref:System.Windows.Input.RoutedCommand.Execute%2A> methods.</span></span>  <span data-ttu-id="4c94b-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A>вызывает события <xref:System.Windows.Input.CommandManager.Executed> <xref:System.Windows.Input.CommandBinding>и, которые проходят и пузырьковые по дереву элементов ищут объект с. <xref:System.Windows.Input.CommandManager.PreviewExecuted></span><span class="sxs-lookup"><span data-stu-id="4c94b-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events, which tunnel and bubble through the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="4c94b-174">Если найден <xref:System.Windows.Input.CommandBinding> , <xref:System.Windows.Input.ExecutedRoutedEventHandler>  то вызывается метод, присоединенный к. <xref:System.Windows.Input.CommandBinding> <xref:System.Windows.Input.RoutedCommand></span><span class="sxs-lookup"><span data-stu-id="4c94b-174">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.ExecutedRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="4c94b-175">Эти обработчики предоставляют логику программирования, которая <xref:System.Windows.Input.RoutedCommand>выполняет.</span><span class="sxs-lookup"><span data-stu-id="4c94b-175">These handlers supply the programming logic that performs the <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 <span data-ttu-id="4c94b-176">События и  <xref:System.Windows.Input.CommandManager.Executed> вызываются в. <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> <xref:System.Windows.Input.CommandManager.PreviewExecuted></span><span class="sxs-lookup"><span data-stu-id="4c94b-176">The <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="4c94b-177">Если параметр <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> не задан <xref:System.Windows.Input.ICommandSource>для, <xref:System.Windows.Input.CommandManager.PreviewExecuted> события и <xref:System.Windows.Input.CommandManager.Executed> вызываются для элемента с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="4c94b-177">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c94b-178">Следующий пример относится к пользовательской реализации <xref:System.Windows.Input.ICommandSource> примера.</span><span class="sxs-lookup"><span data-stu-id="4c94b-178">The following example is from a custom implementation of <xref:System.Windows.Input.ICommandSource> sample.</span></span>  
  
 <span data-ttu-id="4c94b-179">`this.Command`в этом примере это свойство Command для <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-179">`this.Command` in this example is the Command property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="4c94b-180">Если команда не имеет значение null, команда приводится к <xref:System.Windows.Input.RoutedCommand>типу.</span><span class="sxs-lookup"><span data-stu-id="4c94b-180">If the command is not null, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="4c94b-181">Если это <xref:System.Windows.Input.RoutedCommand.Execute%2A> , то <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>  метод называется передачей и. <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> <xref:System.Windows.Input.RoutedCommand></span><span class="sxs-lookup"><span data-stu-id="4c94b-181">If it is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="4c94b-182">Если команда не <xref:System.Windows.Input.RoutedCommand>является, она приводится <xref:System.Windows.Input.ICommand> к типу, а <xref:System.Windows.Input.ICommand.Execute%2A> метод называется передачей <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-182">If the command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandexecute)]
 [!code-vb[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandexecute)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c94b-183">Параметр <paramref name="target" /> не является объектом <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-183"><paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputGestures">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputGestureCollection InputGestures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGestureCollection InputGestures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputGestures As InputGestureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputGestureCollection ^ InputGestures { System::Windows::Input::InputGestureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputGestures : System.Windows.Input.InputGestureCollection" Usage="System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGestureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c94b-184">Получает коллекцию объектов <see cref="T:System.Windows.Input.InputGesture" />, связанных с данной командой.</span><span class="sxs-lookup"><span data-stu-id="4c94b-184">Gets the collection of <see cref="T:System.Windows.Input.InputGesture" /> objects that are associated with this command.</span></span></summary>
        <value><span data-ttu-id="4c94b-185">Жесты ввода.</span><span class="sxs-lookup"><span data-stu-id="4c94b-185">The input gestures.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4c94b-186">В следующем примере показано, как добавить новый <xref:System.Windows.Input.MouseGesture> объект <xref:System.Windows.Input.RoutedCommand>в.</span><span class="sxs-lookup"><span data-stu-id="4c94b-186">The following example shows how to add a new <xref:System.Windows.Input.MouseGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedcommand)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Input.RoutedCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c94b-187">Получает имя команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-187">Gets the name of the command.</span></span></summary>
        <value><span data-ttu-id="4c94b-188">Имя команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-188">The name of the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-189">Это свойство может использоваться при ссылке <xref:System.Windows.Input.RoutedCommand> на в. [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4c94b-189">This property can be used when referencing a <xref:System.Windows.Input.RoutedCommand> in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerType : Type" Usage="System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c94b-190">Получает тип, зарегистрированный с данной командой.</span><span class="sxs-lookup"><span data-stu-id="4c94b-190">Gets the type that is registered with the command.</span></span></summary>
        <value><span data-ttu-id="4c94b-191">Тип владельца команды.</span><span class="sxs-lookup"><span data-stu-id="4c94b-191">The type of the command owner.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.CanExecute">
      <MemberSignature Language="C#" Value="bool ICommand.CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Input.ICommand.CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExecute (parameter As Object) As Boolean Implements ICommand.CanExecute" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Input.ICommand.CanExecute(System::Object ^ parameter) = System::Windows::Input::ICommand::CanExecute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.ICommand.CanExecute(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4c94b-192">Данные, используемые данной командой.</span><span class="sxs-lookup"><span data-stu-id="4c94b-192">Data used by the command.</span></span>  <span data-ttu-id="4c94b-193">Если команда не требует передачи данных, этому объект может быть присвоено значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-193">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4c94b-194">Описание этих членов см. в описании свойства <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-194">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="4c94b-195">Значение <see langword="true" />, если эту команду можно выполнить; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-195"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-196">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="4c94b-196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c94b-197">Он может использоваться, только если экземпляр <xref:System.Windows.Input.RoutedCommand> приведен к типу интерфейса <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-197">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.Execute">
      <MemberSignature Language="C#" Value="void ICommand.Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.ICommand.Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Execute (parameter As Object) Implements ICommand.Execute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.ICommand.Execute(System::Object ^ parameter) = System::Windows::Input::ICommand::Execute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.ICommand.Execute(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4c94b-198">Данные, используемые данной командой.</span><span class="sxs-lookup"><span data-stu-id="4c94b-198">Data used by the command.</span></span>  <span data-ttu-id="4c94b-199">Если команда не требует передачи данных, этому объект может быть присвоено значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-199">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4c94b-200">Описание этих членов см. в описании свойства <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="4c94b-200">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c94b-201">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="4c94b-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c94b-202">Он может использоваться, только если экземпляр <xref:System.Windows.Input.RoutedCommand> приведен к типу интерфейса <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="4c94b-202">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c94b-203">См. также раздел</span><span class="sxs-lookup"><span data-stu-id="4c94b-203">See Also</span></span>  
  
 <xref:System.Windows.Input.RoutedCommand.Execute%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
