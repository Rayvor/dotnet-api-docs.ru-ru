<Type Name="Stylus" FullName="System.Windows.Input.Stylus">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0abaf1a990f41a40e1129843302b6d37a10d5148" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015004" /></Metadata><TypeSignature Language="C#" Value="public static class Stylus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stylus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Stylus" />
  <TypeSignature Language="VB.NET" Value="Public Class Stylus" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stylus abstract sealed" />
  <TypeSignature Language="F#" Value="type Stylus = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3c960-101">Предоставляет доступ к общей информации о планшетном пере.</span><span class="sxs-lookup"><span data-stu-id="3c960-101">Provides access to general information about a tablet pen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-102">В следующем примере показано, как записать координаты пера, даже если перо покидает границы <xref:System.Windows.Controls.TextBox>объекта.</span><span class="sxs-lookup"><span data-stu-id="3c960-102">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3c960-103">В этом примере предполагается, что <xref:System.Windows.Controls.TextBox> имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.StylusDown>события <xref:System.Windows.Input.Stylus.StylusUp>, и <xref:System.Windows.Input.Stylus.StylusMove> подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-103">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-104">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-104">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-105">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-105">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-106">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-106">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-107">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-108">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-108">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-109">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-109">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-110">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-111">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-111">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-112">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-112">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-113">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-114">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-114">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-115">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-115">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-116">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-117">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-117">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-118">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-118">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-119">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-120">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-120">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-121">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-121">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-122">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-123">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-123">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-124">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-124">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-125">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-126">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-126">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-127">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-127">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-128">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-129">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-129">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-130">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-130">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-131">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-132">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-132">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-133">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-133">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-134">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-135">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-135">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-136">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-136">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-137">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-138">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-138">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-139">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-139">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-140">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-141">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-141">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-142">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-142">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-143">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-144">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-144">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-145">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-145">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-146">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-147">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-147">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-148">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-148">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-149">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-150">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-150">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-151">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-151">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-152">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-153">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-153">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-154">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-154">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-155">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-155">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-156">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-156">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-157">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-157">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-158">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-158">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-159">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-159">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-160">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-160">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-161">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-161">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-162">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-162">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-163">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-163">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-164">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-164">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-165">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-165">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-166">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-166">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-167">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-167">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-168">Добавляемый обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-168">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3c960-169">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-169">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-170">Захватывает перо, связанное с определенным элементом.</span><span class="sxs-lookup"><span data-stu-id="3c960-170">Captures the stylus that is bound to a particular element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Stylus.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-171">Элемент, захватывающий перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-171">The element to capture the stylus to.</span></span></param>
        <summary><span data-ttu-id="3c960-172">Захватывает перо заданным элементом.</span><span class="sxs-lookup"><span data-stu-id="3c960-172">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="3c960-173"><see langword="true" />, если перо захвачено элементом <paramref name="element" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-173"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-174">Используйте метод, чтобы гарантировать получение `element` событий пера, даже если курсор выходит за пределы элементов. <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29></span><span class="sxs-lookup"><span data-stu-id="3c960-174">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="3c960-175">Чтобы освободить перо, вызовите <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> с параметром, <xref:System.Windows.Input.CaptureMode.None> <xref:System.Windows.Input.CaptureMode> присвойте ему значение.</span><span class="sxs-lookup"><span data-stu-id="3c960-175">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="3c960-176">Метод <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> возвращает `false` , Если`element` не является видимым или недоступным.</span><span class="sxs-lookup"><span data-stu-id="3c960-176">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-177">В следующем примере показано, как записать координаты пера, даже если перо покидает границы <xref:System.Windows.Controls.TextBox>объекта.</span><span class="sxs-lookup"><span data-stu-id="3c960-177">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3c960-178">В этом примере предполагается, <xref:System.Windows.Controls.TextBox> что `textBox1`имеется вызванный метод <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>а события <xref:System.Windows.Input.Stylus.StylusMove> , и подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-178">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Stylus.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-179">Элемент, захватывающий перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-179">The element to capture the stylus to.</span></span></param>
        <param name="captureMode"><span data-ttu-id="3c960-180">Одно из значений перечисления <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-180">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</span></span></param>
        <summary><span data-ttu-id="3c960-181">Захватывает перо заданным элементом.</span><span class="sxs-lookup"><span data-stu-id="3c960-181">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="3c960-182"><see langword="true" />, если перо захвачено элементом <paramref name="element" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-182"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-183">Используйте метод, чтобы гарантировать получение `element` событий пера, даже если курсор выходит за пределы элементов. <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29></span><span class="sxs-lookup"><span data-stu-id="3c960-183">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="3c960-184">Чтобы освободить перо, вызовите <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> с параметром, <xref:System.Windows.Input.CaptureMode.None> <xref:System.Windows.Input.CaptureMode> присвойте ему значение.</span><span class="sxs-lookup"><span data-stu-id="3c960-184">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="3c960-185">Метод <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> возвращает `false` , Если`element` не является видимым или недоступным.</span><span class="sxs-lookup"><span data-stu-id="3c960-185">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-186">В следующем примере показано, как записать координаты пера, даже если перо покидает границы <xref:System.Windows.Controls.TextBox>объекта.</span><span class="sxs-lookup"><span data-stu-id="3c960-186">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3c960-187">В этом примере предполагается, что <xref:System.Windows.Controls.TextBox> имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.StylusDown>события <xref:System.Windows.Input.Stylus.StylusUp>, и <xref:System.Windows.Input.Stylus.StylusMove> подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-187">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-188">Получает элемент, с которым связано перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-188">Gets the element to which the stylus is bound.</span></span></summary>
        <value><span data-ttu-id="3c960-189">Объект <see cref="T:System.Windows.IInputElement" />, с которым связано перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-189">The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-190">В следующем примере показано, как убедиться, что перо не захвачено, когда пользователь касается пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-190">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</span></span> <span data-ttu-id="3c960-191">В <xref:System.Windows.Input.Stylus.PreviewStylusDown> этом примере предполагается, что событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-191">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStylusDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusDevice CurrentStylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.StylusDevice CurrentStylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentStylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::StylusDevice ^ CurrentStylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentStylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-192">Получает перо, представляющее используемое в данный момент перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-192">Gets the stylus that represents the stylus currently in use.</span></span></summary>
        <value><span data-ttu-id="3c960-193">Объект <see cref="T:System.Windows.Input.StylusDevice" />, представляющий используемое в данный момент перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-193">The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-194">В следующем примере показано, как стереть текст, выбранный с помощью инвертированного пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-194">The following example demonstrates how to erase the text that is selected with an inverted stylus.</span></span> <span data-ttu-id="3c960-195">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.StylusUpEvent> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusUpEvent> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[StylusSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-196">Получает элемент, который находится прямо под пером.</span><span class="sxs-lookup"><span data-stu-id="3c960-196">Gets the element that is directly beneath the stylus.</span></span></summary>
        <value><span data-ttu-id="3c960-197">Объект <see cref="T:System.Windows.IInputElement" />, который находится прямо под пером.</span><span class="sxs-lookup"><span data-stu-id="3c960-197">The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-198">В следующем примере показано, как определить, над каким элементом находится перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-198">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="3c960-199">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.StylusInAirMove> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-199">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsFlicksEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFlicksEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFlicksEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFlicksEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFlicksEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsFlicksEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-200">Элемент <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, для которого нужно определить, включены ли жесты.</span><span class="sxs-lookup"><span data-stu-id="3c960-200">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</span></span></param>
        <summary><span data-ttu-id="3c960-201">Возвращает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-201">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3c960-202">Значение <see langword="true" />, если в заданном элементе включены жесты; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-202"><see langword="true" /> if the specified element has flicks enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-203">В Windows Vista жест, один из возможных системных жестов, представляет собой короткий быстрый, прямолинейный штрих, который может быть сопоставлен с командой навигации или ярлыком.</span><span class="sxs-lookup"><span data-stu-id="3c960-203">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="3c960-204">По умолчанию жесты отключены для <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>и <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="3c960-204">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="3c960-205">Жесты включены для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-205">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-206">В следующем примере показано, как определить, включены ли жесты в <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="3c960-206">The following example demonstrates how to determine whether flicks are enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#6)]
 [!code-vb[GestureSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsPressAndHoldEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPressAndHoldEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsPressAndHoldEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsPressAndHoldEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsPressAndHoldEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-207">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, в котором требуется определить, включено ли нажатие и удерживание.</span><span class="sxs-lookup"><span data-stu-id="3c960-207">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</span></span></param>
        <summary><span data-ttu-id="3c960-208">Возвращает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-208">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3c960-209">Значение <see langword="true" />, если в заданном элементе включено нажатие и удерживание; в противном случае — значение <see langword="false" />;</span><span class="sxs-lookup"><span data-stu-id="3c960-209"><see langword="true" /> if the specified element has press and hold enabled; otherwise, <see langword="false" />;</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-210">В следующем примере показано, как включить нажатие и удержание в <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="3c960-210">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="3c960-211">В <xref:System.Windows.Controls.Slider> этом примере предполагается, что имеется `horizontalSlider1`вызванный.</span><span class="sxs-lookup"><span data-stu-id="3c960-211">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTapFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTapFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTapFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTapFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTapFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-212">Элемент <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, для которого нужно определить, включен ли отзыв на сенсорный ввод.</span><span class="sxs-lookup"><span data-stu-id="3c960-212">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</span></span></param>
        <summary><span data-ttu-id="3c960-213">Возвращает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-213">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3c960-214">Значение <see langword="true" />, если в заданном элементе включен отзыв на сенсорный ввод; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-214"><see langword="true" /> if the specified element has tap feedback enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-215">В Windows Vista короткая анимация возникает, когда пользователь касается элемента управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-215">In Windows Vista, a short animation occurs when the user taps the control.</span></span>  <span data-ttu-id="3c960-216">По умолчанию касание отключено на <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="3c960-216">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3c960-217">Он включен для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-217">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-218">В следующем примере показано, как определить, включена ли обратная связь TAP <xref:System.Windows.Controls.Canvas>в.</span><span class="sxs-lookup"><span data-stu-id="3c960-218">The following example demonstrates how to determine whether tap feedback is enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#5)]
 [!code-vb[GestureSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTouchFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTouchFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTouchFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-219">Элемент <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, в котором определяется, включен ли отзыв на сенсорный ввод.</span><span class="sxs-lookup"><span data-stu-id="3c960-219">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</span></span></param>
        <summary><span data-ttu-id="3c960-220">Возвращает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-220">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3c960-221">Значение <see langword="true" />, если отзыв на сенсорный ввод включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-221"><see langword="true" /> if touch input feedback is enabled, otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-222">В следующем примере показано, как определить, включена ли обратная связь TAP <xref:System.Windows.Controls.InkCanvas>в.</span><span class="sxs-lookup"><span data-stu-id="3c960-222">The following example demonstrates how to determine whether tap feedback is enabled on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#7)]
 [!code-vb[GestureSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" Usage="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-223">Происходит при перехвате элементом событий пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-223">Occurs when an element captures the stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-224">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-224">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-225">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-225">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-226">Присоединенные события — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-226">Attached events are, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> <span data-ttu-id="3c960-227">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Кроме того, расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-227">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-228">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-228">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-229">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-229">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-230">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-230">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-231">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-231">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.GotStylusCaptureEvent>|  
|<span data-ttu-id="3c960-232">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-232">Routing strategy</span></span>|<span data-ttu-id="3c960-233">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-233">Bubbling</span></span>|  
|<span data-ttu-id="3c960-234">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-234">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-235">В следующем примере показано, как изменить цвет фона объекта, <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> когда захватывается и выпускают события пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-235">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="3c960-236">В этом примере предполагается, что имеется текстовое `textBox1`поле с именем, <xref:System.Windows.Input.Stylus.GotStylusCapture> а <xref:System.Windows.Input.Stylus.LostStylusCapture> события и подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-236">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-237">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-237">Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabled">
      <MemberSignature Language="C#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsFlicksEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="F#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" Usage="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-238">Получает или задает значение, определяющее, включены ли жесты.</span><span class="sxs-lookup"><span data-stu-id="3c960-238">Gets or sets a value indicating whether flicks are enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-239">В [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]жест, один из возможных системных жестов, представляет собой короткий быстрый, прямолинейный штрих, который может быть сопоставлен с командой навигации или ярлыком.</span><span class="sxs-lookup"><span data-stu-id="3c960-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="3c960-240">По умолчанию жесты отключены для <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>и <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="3c960-240">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="3c960-241">Жесты включены для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-241">Flicks are enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsFlicksEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3c960-242">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="3c960-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-243">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-243">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsFlicksEnabledProperty>|  
|<span data-ttu-id="3c960-244">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="3c960-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="3c960-245">Нет</span><span class="sxs-lookup"><span data-stu-id="3c960-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-246">В следующем примере показано, как отключить жесты на <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="3c960-246">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsFlicksEnabled="False" ></Canvas>
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFlicksEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFlicksEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFlicksEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFlicksEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFlicksEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-247">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-247">Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="F#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" Usage="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-248">Получает или задает значения, указывающие, включена ли поддержка нажатия или удерживания.</span><span class="sxs-lookup"><span data-stu-id="3c960-248">Gets or sets a values indicating whether press and hold is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-249">Нажмите и удерживайте карты, чтобы щелкнуть правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="3c960-249">Press and hold maps to a right-click on a mouse.</span></span> <span data-ttu-id="3c960-250">В [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] можно отключить это поведение для элементов, если предполагается ситуация, когда пользователь может удерживать перо планшета, не выполняя имитацию щелчка правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="3c960-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
<a name="dependencyPropertyInfo_IsPressAndHoldEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3c960-251">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="3c960-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-252">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-252">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty>|  
|<span data-ttu-id="3c960-253">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="3c960-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="3c960-254">Нет</span><span class="sxs-lookup"><span data-stu-id="3c960-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-255">В следующем примере показано, как включить нажатие и удержание в <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="3c960-255">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span>  

```xaml
<Slider Name="horizontalSlider1" Stylus.IsPressAndHoldEnabled="True" />
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressAndHoldEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressAndHoldEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-256">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-256">Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" Usage="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-257">Получает или задает значение, указывающее, включено ли отображение касания.</span><span class="sxs-lookup"><span data-stu-id="3c960-257">Gets or sets whether a value indicating whether tap feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-258">В [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]короткая анимация происходит, когда пользователь касается элемента управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="3c960-259">По умолчанию касание отключено на <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="3c960-259">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3c960-260">Он включен для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-260">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTapFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3c960-261">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="3c960-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-262">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-262">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty>|  
|<span data-ttu-id="3c960-263">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="3c960-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="3c960-264">Нет</span><span class="sxs-lookup"><span data-stu-id="3c960-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-265">В следующем примере отключается обратная <xref:System.Windows.Controls.Canvas>связь TAP для.</span><span class="sxs-lookup"><span data-stu-id="3c960-265">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsTapFeedbackEnabled="False"></Canvas>
```
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTapFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTapFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-266">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-266">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" Usage="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-267">Получает или задает значение, указывающее, включено ли отображение сенсорного ввода.</span><span class="sxs-lookup"><span data-stu-id="3c960-267">Gets or sets whether a value indicating whether touch feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-268">В [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]короткая анимация возникает, когда пользователь касается элемента управления с помощью пальца.</span><span class="sxs-lookup"><span data-stu-id="3c960-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user touches the control with a finger.</span></span> <span data-ttu-id="3c960-269">По умолчанию реакция на касание отключена <xref:System.Windows.Controls.InkCanvas>на.</span><span class="sxs-lookup"><span data-stu-id="3c960-269">By default, touch feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3c960-270">Он включен для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-270">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTouchFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3c960-271">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="3c960-271">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-272">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-272">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty>|  
|<span data-ttu-id="3c960-273">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="3c960-273">Metadata properties set to `true`</span></span>|<span data-ttu-id="3c960-274">Нет</span><span class="sxs-lookup"><span data-stu-id="3c960-274">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-275">В следующем примере включается обратная связь <xref:System.Windows.Controls.InkCanvas>по сенсорному экрану.</span><span class="sxs-lookup"><span data-stu-id="3c960-275">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  

```xaml
<InkCanvas Name="inkCanvas1" Stylus.IsTouchFeedbackEnabled="True" />
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTouchFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTouchFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-276">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-276">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" Usage="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-277">Происходит, когда элемент освобождает события пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-277">Occurs when an element releases stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-278">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-278">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-279">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-279">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-280">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-280">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-281">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-281">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-282">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-282">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-283">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-283">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-284">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-284">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-285">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-285">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.LostStylusCaptureEvent>|  
|<span data-ttu-id="3c960-286">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-286">Routing strategy</span></span>|<span data-ttu-id="3c960-287">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-287">Bubbling</span></span>|  
|<span data-ttu-id="3c960-288">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-288">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-289">В следующем примере показано, как изменить цвет фона объекта, <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> когда захватывается и выпускают события пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-289">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="3c960-290">В этом примере предполагается, что имеется текстовое `textBox1`поле с именем, <xref:System.Windows.Input.Stylus.GotStylusCapture> а <xref:System.Windows.Input.Stylus.LostStylusCapture> события и подключены к обработчикам событий в примере.</span><span class="sxs-lookup"><span data-stu-id="3c960-290">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-291">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-291">Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" Usage="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-292">Происходит, когда пользователь нажимает одну из кнопок пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-292">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-293">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-293">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-294">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-294">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-295">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-295">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-296">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-296">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-297">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-297">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-298">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-298">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-299">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-299">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-300">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-300">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="3c960-301">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-301">Routing strategy</span></span>|<span data-ttu-id="3c960-302">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-302">Tunneling</span></span>|  
|<span data-ttu-id="3c960-303">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-303">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-304">В следующем примере показано, как определить, какая кнопка вызвала <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-304">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event.</span></span> <span data-ttu-id="3c960-305">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-305">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[StylusSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-306">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-306">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" Usage="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-307">Происходит, когда пользователь отпускает одну из кнопок пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-307">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-308">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-308">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-309">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-309">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-310">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-310">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-311">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-311">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-312">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-312">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-313">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-313">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-314">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-315">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-315">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="3c960-316">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-316">Routing strategy</span></span>|<span data-ttu-id="3c960-317">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-317">Tunneling</span></span>|  
|<span data-ttu-id="3c960-318">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-318">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-319">В следующем примере показано, как определить, какая кнопка вызвала <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-319">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event.</span></span> <span data-ttu-id="3c960-320">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-320">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[StylusSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-321">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-321">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" Usage="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-322">Происходит, когда пользователь касается планшета кончиком пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-322">Occurs when user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-323">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-323">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-324">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-324">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-325">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-325">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-326">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-326">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-327">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-328">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-329">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-330">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-330">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusDownEvent>|  
|<span data-ttu-id="3c960-331">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-331">Routing strategy</span></span>|<span data-ttu-id="3c960-332">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-332">Tunneling</span></span>|  
|<span data-ttu-id="3c960-333">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-334">В следующем примере показано, как убедиться, что перо не захвачено, когда пользователь касается пера планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-334">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the tablet.</span></span> <span data-ttu-id="3c960-335">В <xref:System.Windows.Input.Stylus.PreviewStylusDown> этом примере предполагается, что событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-335">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-336">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-336">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" Usage="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-337">Происходит при перемещении пера, когда оно находится в диапазоне планшета, но не касается его.</span><span class="sxs-lookup"><span data-stu-id="3c960-337">Occurs if the stylus moves while it is within range of (but not touching) the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-338">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-338">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-339">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-339">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-340">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-340">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-341">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-341">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-342">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-342">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-343">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-343">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-344">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-345">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-345">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="3c960-346">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-346">Routing strategy</span></span>|<span data-ttu-id="3c960-347">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-347">Tunneling</span></span>|  
|<span data-ttu-id="3c960-348">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-348">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-349">В следующем примере показано, как определить, над каким элементом находится перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-349">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="3c960-350">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-350">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[StylusSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-351">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-351">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" Usage="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-352">Происходит, когда перо входит в диапазон планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-352">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-353">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-353">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-354">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-354">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-355">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-355">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-356">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-356">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-357">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-357">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-358">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-358">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-359">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-359">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-360">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-360">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="3c960-361">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-361">Routing strategy</span></span>|<span data-ttu-id="3c960-362">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-362">Tunneling</span></span>|  
|<span data-ttu-id="3c960-363">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-363">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-364">В следующем примере показано, как определить, инвертировано ли перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-364">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="3c960-365">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.PreviewStylusInRange> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-365">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusInRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[StylusSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-366">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-366">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" Usage="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-367">Происходит при перемещении пера, когда оно касается планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-367">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-368">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-369">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-369">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-370">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-370">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-371">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-371">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-372">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-372">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-373">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-373">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-374">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-375">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-375">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusMoveEvent>|  
|<span data-ttu-id="3c960-376">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-376">Routing strategy</span></span>|<span data-ttu-id="3c960-377">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-377">Tunneling</span></span>|  
|<span data-ttu-id="3c960-378">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-378">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-379">В примере показано, как определить расположение пера при его перемещении.</span><span class="sxs-lookup"><span data-stu-id="3c960-379">The example demonstrates how to determine the position of the stylus when it moves.</span></span> <span data-ttu-id="3c960-380">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.PreviewStylusMove> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-380">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusMove> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[StylusSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-381">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-381">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" Usage="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-382">Происходит, когда перо выходит за пределы диапазона планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-382">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-383">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-383">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-384">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-384">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-385">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-385">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-386">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-386">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-387">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-388">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-389">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-390">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-390">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="3c960-391">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-391">Routing strategy</span></span>|<span data-ttu-id="3c960-392">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-392">Tunneling</span></span>|  
|<span data-ttu-id="3c960-393">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-393">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-394">В следующем примере показано, как определить, инвертировано ли перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-394">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="3c960-395">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что `textBox1` имеется вызванный <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> и событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-395">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[StylusSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-396">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-396">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" Usage="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-397">Возникает, когда пользователь выполняет системный жест с помощью этого пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-397">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-398">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-399">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-399">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-400">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-400">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-401">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-401">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-402">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-402">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-403">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-403">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-404">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-405">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-405">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="3c960-406">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-406">Routing strategy</span></span>|<span data-ttu-id="3c960-407">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-407">Tunneling</span></span>|  
|<span data-ttu-id="3c960-408">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-408">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-409">В следующем примере показано, как определить системный жест, вызвавший <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-409">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event.</span></span> <span data-ttu-id="3c960-410">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-410">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#17)]
 [!code-vb[StylusSamples#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-411">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-411">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" Usage="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-412">Происходит, когда пользователь отрывает перо от планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-412">Occurs when the user lifts the stylus from the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-413">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-413">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-414">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-414">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-415">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-415">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-416">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-416">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-417">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-417">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-418">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-418">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-419">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-420">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-420">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusUpEvent>|  
|<span data-ttu-id="3c960-421">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-421">Routing strategy</span></span>|<span data-ttu-id="3c960-422">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="3c960-422">Tunneling</span></span>|  
|<span data-ttu-id="3c960-423">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-423">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-424">В следующем примере показано, как определить расположение пера, когда пользователь отрывает его с помощью планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-424">The following example demonstrates how to determine the position of the stylus when the user lifts it from the tablet.</span></span> <span data-ttu-id="3c960-425">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.PreviewStylusUp> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-425">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[StylusSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-426">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-426">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-427">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-427">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-428">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-428">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-429">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-429">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-430">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-430">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-431">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-431">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-432">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-432">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-433">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-433">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-434">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-434">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-435">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-435">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-436">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-437">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-437">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-438">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-438">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-439">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-439">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-440">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-440">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-441">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-441">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-442">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-442">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-443">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-443">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-444">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-444">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-445">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-445">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-446">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-446">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-447">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-447">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-448">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-449">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-449">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-450">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-450">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-451">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-451">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-452">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-452">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-453">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-453">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-454">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-454">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-455">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-455">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-456">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-456">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-457">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-457">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-458">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-458">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-459">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-459">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-460">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-461">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-461">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-462">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-462">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-463">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-463">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-464">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-464">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-465">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-465">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-466">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-466">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-467">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-467">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-468">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-468">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-469">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-469">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-470">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-470">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-471">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-471">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-472">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-472">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-473">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-473">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-474">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-474">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-475">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-475">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-476">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-476">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-477">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-477">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-478">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-478">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-479">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-479">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-480">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-480">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-481">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-481">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-482">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-482">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-483">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-483">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-484">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-484">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-485">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-485">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-486">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-486">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-487">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-487">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-488">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-488">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-489">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-489">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-490">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-490">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3c960-491">Обработчик событий, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="3c960-491">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c960-492">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.Stylus.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-492">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsFlicksEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFlicksEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFlicksEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFlicksEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsFlicksEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsFlicksEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-493">Элемент <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, где следует включить жесты.</span><span class="sxs-lookup"><span data-stu-id="3c960-493">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</span></span></param>
        <param name="enabled"><span data-ttu-id="3c960-494">Значение <see langword="true" /> для включения жестов; значение <see langword="false" /> для отключения жестов.</span><span class="sxs-lookup"><span data-stu-id="3c960-494"><see langword="true" /> to enable flicks; <see langword="false" /> to disable flicks.</span></span></param>
        <summary><span data-ttu-id="3c960-495">Возвращает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-495">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-496">В Windows Vista жест, один из возможных системных жестов, представляет собой короткий быстрый, прямолинейный штрих, который может быть сопоставлен с командой навигации или ярлыком.</span><span class="sxs-lookup"><span data-stu-id="3c960-496">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="3c960-497">По умолчанию жесты отключены для <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>и <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="3c960-497">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="3c960-498">Жесты включены для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-498">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-499">В следующем примере показано, как отключить жесты на <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="3c960-499">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#2)]
 [!code-vb[GestureSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsPressAndHoldEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsPressAndHoldEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsPressAndHoldEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsPressAndHoldEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsPressAndHoldEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-500">Элемент <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, для которого следует включить нажатие и удерживание.</span><span class="sxs-lookup"><span data-stu-id="3c960-500">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</span></span></param>
        <param name="enabled"><span data-ttu-id="3c960-501">Значение<see langword="true" /> для включения нажатия и удерживания; значение <see langword="false" /> для отключения нажатия и удерживания.</span><span class="sxs-lookup"><span data-stu-id="3c960-501"><see langword="true" /> to enable press and hold; <see langword="false" /> to disable press and hold.</span></span></param>
        <summary><span data-ttu-id="3c960-502">Задает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-502">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-503">Нажмите и удерживайте карты, щелкнув правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="3c960-503">Press and hold maps to the right-click on a mouse.</span></span> <span data-ttu-id="3c960-504">В Windows Vista это поведение можно отключить для элементов, если предполагается ситуация, когда пользователь может удерживать перо планшета, не выполняя имитацию щелчка правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="3c960-504">In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-505">В следующем примере показано, как включить нажатие и удержание в <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="3c960-505">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="3c960-506">В <xref:System.Windows.Controls.Slider> этом примере предполагается, что имеется `horizontalSlider1`вызванный.</span><span class="sxs-lookup"><span data-stu-id="3c960-506">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTapFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTapFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTapFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTapFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTapFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-507"><see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, где следует включить отклик на сенсорный ввод.</span><span class="sxs-lookup"><span data-stu-id="3c960-507">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="3c960-508"><see langword="true" /> для включения отзыва по касанию; <see langword="false" /> для отключения отзыва по касанию.</span><span class="sxs-lookup"><span data-stu-id="3c960-508"><see langword="true" /> to enable tap feedback; <see langword="false" /> to disable tap feedback.</span></span></param>
        <summary><span data-ttu-id="3c960-509">Задает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-509">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-510">В Windows Vista короткая анимация возникает, когда пользователь касается элемента управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-510">In Windows Vista, a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="3c960-511">По умолчанию касание отключено на <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="3c960-511">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3c960-512">Он включен для всех остальных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="3c960-512">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-513">В следующем примере отключается обратная <xref:System.Windows.Controls.Canvas>связь TAP для.</span><span class="sxs-lookup"><span data-stu-id="3c960-513">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#4)]
 [!code-vb[GestureSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTouchFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTouchFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTouchFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3c960-514"><see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, где следует включить отклик на сенсорный ввод.</span><span class="sxs-lookup"><span data-stu-id="3c960-514">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="3c960-515">Значение <see langword="true" />, чтобы включить отклик на сенсорный ввод; значение <see langword="false" />, чтобы отключить отклик на сенсорный ввод.</span><span class="sxs-lookup"><span data-stu-id="3c960-515"><see langword="true" /> to enable touch input feedback; <see langword="false" /> to disable touch input feedback.</span></span></param>
        <summary><span data-ttu-id="3c960-516">Задает значение присоединенного свойства <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> в указанном элементе.</span><span class="sxs-lookup"><span data-stu-id="3c960-516">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c960-517">В следующем примере включается обратная связь <xref:System.Windows.Controls.InkCanvas>по сенсорному экрану.</span><span class="sxs-lookup"><span data-stu-id="3c960-517">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#8)]
 [!code-vb[GestureSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" Usage="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-518">Происходит, когда пользователь нажимает одну из кнопок пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-518">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-519">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-519">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-520">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-520">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-521">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-521">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-522">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-522">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-523">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-523">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-524">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-524">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-525">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-525">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-526">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-526">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonDownEvent>|  
|<span data-ttu-id="3c960-527">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-527">Routing strategy</span></span>|<span data-ttu-id="3c960-528">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-528">Bubbling</span></span>|  
|<span data-ttu-id="3c960-529">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-529">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-530">В следующем примере показано, как отобразить контекстное меню, когда пользователь нажмет кнопку на пере.</span><span class="sxs-lookup"><span data-stu-id="3c960-530">The following example demonstrates how to show a shortcut menu when the user presses the barrel button on a stylus.</span></span> <span data-ttu-id="3c960-531">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1`вызванный и <xref:System.Windows.Controls.ContextMenu> вызываемый `textBoxContextMenu`, а <xref:System.Windows.Input.Stylus.StylusButtonDown> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-531">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and a <xref:System.Windows.Controls.ContextMenu> called `textBoxContextMenu`, and that the <xref:System.Windows.Input.Stylus.StylusButtonDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[StylusSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-532">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-532">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" Usage="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-533">Происходит, когда пользователь отпускает одну из кнопок пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-533">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-534">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-534">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-535">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-535">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-536">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-536">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-537">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-537">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-538">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-538">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-539">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-539">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-540">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-541">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-541">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonUpEvent>|  
|<span data-ttu-id="3c960-542">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-542">Routing strategy</span></span>|<span data-ttu-id="3c960-543">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-543">Bubbling</span></span>|  
|<span data-ttu-id="3c960-544">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-544">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-545">В следующем примере показано, как скопировать выделенный текст, когда пользователь отпускает кнопку на пере.</span><span class="sxs-lookup"><span data-stu-id="3c960-545">The following example demonstrates how to copy the selected text when the user releases the barrel button on a stylus.</span></span> <span data-ttu-id="3c960-546">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.StylusButtonUp> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-546">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[StylusSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-547">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-547">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" Usage="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-548">Происходит, когда пользователь касается планшета кончиком пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-548">Occurs when the user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-549">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-549">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-550">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-550">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-551">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-551">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-552">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-552">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-553">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-553">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-554">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-554">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-555">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-556">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-556">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusDownEvent>|  
|<span data-ttu-id="3c960-557">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-557">Routing strategy</span></span>|<span data-ttu-id="3c960-558">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-558">Bubbling</span></span>|  
|<span data-ttu-id="3c960-559">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-559">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-560">В следующем примере показано, как записать координаты пера, даже если перо покидает границы <xref:System.Windows.Controls.TextBox>объекта.</span><span class="sxs-lookup"><span data-stu-id="3c960-560">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3c960-561">В этом примере предполагается, что <xref:System.Windows.Controls.TextBox> имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.StylusDown>события <xref:System.Windows.Input.Stylus.StylusUp>, и <xref:System.Windows.Input.Stylus.StylusMove> подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-561">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-562">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-562">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="F#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" Usage="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-563">Происходит, когда курсор пера попадает внутрь границ элемента.</span><span class="sxs-lookup"><span data-stu-id="3c960-563">Occurs when the stylus cursor enters the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-564">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-564">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-565">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-565">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-566">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-566">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-567">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-567">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-568">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-568">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-569">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-569">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-570">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-571">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-571">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusEnterEvent>|  
|<span data-ttu-id="3c960-572">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-572">Routing strategy</span></span>|<span data-ttu-id="3c960-573">Direct</span><span class="sxs-lookup"><span data-stu-id="3c960-573">Direct</span></span>|  
|<span data-ttu-id="3c960-574">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-574">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-575">В следующем примере показано, как изменить цвет объекта, <xref:System.Windows.Controls.Button> когда курсор пера покидает и оставляет свои границы.</span><span class="sxs-lookup"><span data-stu-id="3c960-575">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="3c960-576">В этом примере предполагается, что <xref:System.Windows.Controls.Button> имеется `button1` вызванный и <xref:System.Windows.Input.Stylus.StylusEnter> что <xref:System.Windows.Input.Stylus.StylusLeave> события и подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-576">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-577">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-577">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" Usage="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-578">Происходит при перемещении пера, когда оно находится в диапазоне планшета, но не касается его.</span><span class="sxs-lookup"><span data-stu-id="3c960-578">Occurs when the stylus moves while it is in range of, but not touching, the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-579">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-579">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-580">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-580">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-581">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-581">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-582">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-582">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-583">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-583">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-584">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-584">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-585">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-586">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-586">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInAirMoveEvent>|  
|<span data-ttu-id="3c960-587">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-587">Routing strategy</span></span>|<span data-ttu-id="3c960-588">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-588">Bubbling</span></span>|  
|<span data-ttu-id="3c960-589">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-589">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-590">В следующем примере показано, как определить, над каким элементом находится перо.</span><span class="sxs-lookup"><span data-stu-id="3c960-590">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="3c960-591">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.StylusInAirMove> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-591">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-592">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-592">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" Usage="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-593">Происходит, когда перо входит в диапазон планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-593">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-594">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-594">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-595">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-595">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-596">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-596">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-597">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-597">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-598">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-598">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-599">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-599">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-600">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-601">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-601">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInRangeEvent>|  
|<span data-ttu-id="3c960-602">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-602">Routing strategy</span></span>|<span data-ttu-id="3c960-603">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-603">Bubbling</span></span>|  
|<span data-ttu-id="3c960-604">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-604">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-605">В следующем примере показано, как установить <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> свойство <xref:System.Windows.Controls.InkCanvas> объекта в <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> , когда перо инвертировано.</span><span class="sxs-lookup"><span data-stu-id="3c960-605">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of an <xref:System.Windows.Controls.InkCanvas> to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> when the stylus is inverted.</span></span> <span data-ttu-id="3c960-606">В <xref:System.Windows.Controls.InkCanvas> этом примере предполагается, что имеется `inkCanvas1` вызванный и <xref:System.Windows.Input.Stylus.StylusInRange> событие подключено к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-606">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusInRange> event is connected to the event handlers.</span></span> <span data-ttu-id="3c960-607">Чтобы увидеть изменение курсора, установите <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> `true` свойство в значение Вкл `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="3c960-607">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#18)]
 [!code-vb[StylusSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-608">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-608">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" Usage="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-609">Происходит, когда курсор пера покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="3c960-609">Occurs when the stylus cursor leaves the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-610">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-610">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-611">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-611">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-612">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-612">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-613">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-613">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-614">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-614">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-615">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-615">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-616">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-616">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-617">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-617">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusLeaveEvent>|  
|<span data-ttu-id="3c960-618">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-618">Routing strategy</span></span>|<span data-ttu-id="3c960-619">Direct</span><span class="sxs-lookup"><span data-stu-id="3c960-619">Direct</span></span>|  
|<span data-ttu-id="3c960-620">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-620">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-621">В следующем примере показано, как изменить цвет объекта, <xref:System.Windows.Controls.Button> когда курсор пера покидает и оставляет свои границы.</span><span class="sxs-lookup"><span data-stu-id="3c960-621">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="3c960-622">В этом примере предполагается, что <xref:System.Windows.Controls.Button> имеется `button1` вызванный и <xref:System.Windows.Input.Stylus.StylusEnter> что <xref:System.Windows.Input.Stylus.StylusLeave> события и подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-622">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-623">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-623">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" Usage="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-624">Происходит при перемещении пера, когда оно касается планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-624">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-625">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-625">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-626">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-626">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-627">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-627">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-628">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-628">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-629">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-629">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-630">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-630">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-631">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-631">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-632">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-632">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusMoveEvent>|  
|<span data-ttu-id="3c960-633">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-633">Routing strategy</span></span>|<span data-ttu-id="3c960-634">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-634">Bubbling</span></span>|  
|<span data-ttu-id="3c960-635">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-635">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-636">В следующем примере показано, как записать координаты пера, даже если перо покидает границы <xref:System.Windows.Controls.TextBox>объекта.</span><span class="sxs-lookup"><span data-stu-id="3c960-636">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3c960-637">В этом примере предполагается, что <xref:System.Windows.Controls.TextBox> имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.StylusDown>события <xref:System.Windows.Input.Stylus.StylusUp>, и <xref:System.Windows.Input.Stylus.StylusMove> подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-637">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-638">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-638">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" Usage="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-639">Происходит, когда перо выходит за пределы диапазона планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-639">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-640">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-640">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-641">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-641">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-642">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-642">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-643">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-643">further expands an attached event's capabilities, allowing it to traverse a route.</span></span>  <span data-ttu-id="3c960-644">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-644">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-645">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-645">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-646">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-647">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-647">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusOutOfRangeEvent>|  
|<span data-ttu-id="3c960-648">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-648">Routing strategy</span></span>|<span data-ttu-id="3c960-649">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-649">Bubbling</span></span>|  
|<span data-ttu-id="3c960-650">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-650">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-651">В следующем примере показано, как изменить курсор на стрелку, когда перо выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="3c960-651">The following example demonstrates how to change the cursor to an arrow when the stylus goes out of range.</span></span> <span data-ttu-id="3c960-652">В <xref:System.Windows.Controls.InkCanvas> этом примере предполагается, что имеется `inkCanvas1` вызванный и <xref:System.Windows.Input.Stylus.StylusOutOfRange> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-652">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusOutOfRange> event is connected to an event handler.</span></span> <span data-ttu-id="3c960-653">Чтобы увидеть изменение курсора, установите <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> `true` свойство в значение Вкл `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="3c960-653">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#19)]
 [!code-vb[StylusSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-654">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-654">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" Usage="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-655">Возникает, когда пользователь выполняет системный жест с помощью этого пера.</span><span class="sxs-lookup"><span data-stu-id="3c960-655">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-656">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-656">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-657">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-657">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-658">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-658">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-659">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-659">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-660">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-660">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-661">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-661">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-662">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-662">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-663">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-663">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusSystemGestureEvent>|  
|<span data-ttu-id="3c960-664">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-664">Routing strategy</span></span>|<span data-ttu-id="3c960-665">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-665">Bubbling</span></span>|  
|<span data-ttu-id="3c960-666">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-666">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-667">В следующем примере показано, как определить системный жест, вызвавший <xref:System.Windows.Input.Stylus.StylusSystemGesture> событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-667">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event.</span></span> <span data-ttu-id="3c960-668">В <xref:System.Windows.Controls.TextBox> этом примере предполагается, что имеется `textBox1` вызванный и <xref:System.Windows.Input.Stylus.StylusSystemGesture> событие подключено к обработчику событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-668">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event is connected to an event handler.</span></span>  
  
 [!code-csharp[StylusSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[StylusSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-669">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-669">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" Usage="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c960-670">Происходит, когда пользователь поднимает перо от планшета.</span><span class="sxs-lookup"><span data-stu-id="3c960-670">Occurs when the user raises the stylus from the Tablet PC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-671">Это вложенное событие.</span><span class="sxs-lookup"><span data-stu-id="3c960-671">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-672">реализует присоединенные события как перенаправленные события.</span><span class="sxs-lookup"><span data-stu-id="3c960-672">implements attached events as routed events.</span></span> <span data-ttu-id="3c960-673">Присоединенное событие — это, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] по сути, понятие языка, используемое для ссылки на события, которые обрабатываются объектами, которые сами по себе не определяют события.</span><span class="sxs-lookup"><span data-stu-id="3c960-673">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3c960-674">дополнительно расширяет возможности присоединенного события, позволяя ему проходить по маршруту.</span><span class="sxs-lookup"><span data-stu-id="3c960-674">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3c960-675">Вложенные события не имеют синтаксиса прямой обработки в коде; чтобы присоединить обработчики для перенаправленного события в коде, используйте назначенный метод обработчика Add \*.</span><span class="sxs-lookup"><span data-stu-id="3c960-675">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3c960-676">Дополнительные сведения см. в разделе [Общие сведения о вложенных событиях](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3c960-676">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3c960-677">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="3c960-677">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3c960-678">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="3c960-678">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusUpEvent>|  
|<span data-ttu-id="3c960-679">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-679">Routing strategy</span></span>|<span data-ttu-id="3c960-680">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="3c960-680">Bubbling</span></span>|  
|<span data-ttu-id="3c960-681">делегат</span><span class="sxs-lookup"><span data-stu-id="3c960-681">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3c960-682">В следующем примере показано, как записать координаты пера, даже если перо покидает границы <xref:System.Windows.Controls.TextBox>объекта.</span><span class="sxs-lookup"><span data-stu-id="3c960-682">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3c960-683">В этом примере предполагается, что <xref:System.Windows.Controls.TextBox> имеется `textBox1`вызванный, а <xref:System.Windows.Input.Stylus.StylusDown>события <xref:System.Windows.Input.Stylus.StylusUp>, и <xref:System.Windows.Input.Stylus.StylusMove> подключены к обработчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3c960-683">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c960-684">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="3c960-684">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Stylus.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c960-685">Синхронизирует курсор и пользовательский интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3c960-685">Synchronizes the cursor and the user interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c960-686">Приложениям может потребоваться определить элемент, на котором находится курсор.</span><span class="sxs-lookup"><span data-stu-id="3c960-686">Applications may need to determine the element on which the cursor is located.</span></span> <span data-ttu-id="3c960-687">Если приложение использует анимацию, <xref:System.Windows.Input.Stylus.DirectlyOver%2A> метод может вернуть элемент, который был перемещен из курсора.</span><span class="sxs-lookup"><span data-stu-id="3c960-687">If the application uses animation, the <xref:System.Windows.Input.Stylus.DirectlyOver%2A> method might return an element that has moved out from under the cursor.</span></span> <span data-ttu-id="3c960-688">Вызовите <xref:System.Windows.Input.Stylus.Synchronize%2A> , чтобы убедиться <xref:System.Windows.Input.Stylus.DirectlyOver%2A> , что возвращает правильный элемент.</span><span class="sxs-lookup"><span data-stu-id="3c960-688">Call <xref:System.Windows.Input.Stylus.Synchronize%2A> to be sure that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the proper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c960-689">В следующем примере показано, как получить элемент, расположенный под курсором.</span><span class="sxs-lookup"><span data-stu-id="3c960-689">The following example demonstrates how to get the element that is under the cursor.</span></span> <span data-ttu-id="3c960-690">Вызов <xref:System.Windows.Input.Stylus.Synchronize%2A> гарантирует, <xref:System.Windows.Input.Stylus.DirectlyOver%2A> что возвращает правильный элемент.</span><span class="sxs-lookup"><span data-stu-id="3c960-690">Calling <xref:System.Windows.Input.Stylus.Synchronize%2A> ensures that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the correct element.</span></span>  
  
 [!code-csharp[StylusSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#24)]
 [!code-vb[StylusSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#24)]  
[!code-csharp[StylusSamples#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#25)]
[!code-vb[StylusSamples#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>