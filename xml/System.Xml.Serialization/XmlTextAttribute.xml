<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70293392585b1dab1c716856faa335231fb2bf75" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75047046" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает на <see cref="T:System.Xml.Serialization.XmlSerializer" />, что член должен обрабатываться как текст XML, когда содержащий его класс сериализуется или десериализуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTextAttribute> принадлежит семейству атрибутов, который управляет тем, как <xref:System.Xml.Serialization.XmlSerializer> сериализует и десериализует объект (через его методы <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> и <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>). Полный список схожих атрибутов см. в разделе [атрибуты, управляющие СЕРИАЛИЗАЦИЕЙ XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 В классе можно применить только один экземпляр класса <xref:System.Xml.Serialization.XmlTextAttribute>.  
  
 Можно применить <xref:System.Xml.Serialization.XmlTextAttribute> к открытым полям и открытым свойствам чтения и записи, возвращающим примитивы и типы перечисления.  
  
 Можно применить <xref:System.Xml.Serialization.XmlTextAttribute> к полю или свойству, которое возвращает массив строк. Атрибут также можно применить к массиву типа <xref:System.Object> но для свойства <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> необходимо задать значение String. В этом случае все строки, вставленные в массив, сериализуются как XML-текст.  
  
 <xref:System.Xml.Serialization.XmlTextAttribute> также можно применить к полю, которое возвращает <xref:System.Xml.XmlNode> или массив объектов <xref:System.Xml.XmlNode>.  
  
 По умолчанию <xref:System.Xml.Serialization.XmlSerializer> сериализует член класса как элемент XML. Однако при применении <xref:System.Xml.Serialization.XmlTextAttribute> к элементу <xref:System.Xml.Serialization.XmlSerializer> преобразует его значение в XML-текст. Это означает, что значение кодируется в содержимое элемента XML.  
  
 [Средство определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) иногда создает <xref:System.Xml.Serialization.XmlTextAttribute> при создании классов из файла определения схемы XML (XSD). Это происходит, когда схема содержит `complexType` со смешанным содержимым. в этом случае соответствующий класс содержит член, возвращающий массив строк, к которому применяется <xref:System.Xml.Serialization.XmlTextAttribute>. Например, когда средство `Xml Schema Definition` обрабатывает эту схему:  
  
```xml  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 создается следующий класс (лишние пробелы и примечания удалены):  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Вместо более длинного <xref:System.Xml.Serialization.XmlTextAttribute>можно использовать слово `XmlText` в коде.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Введение в сериализацию XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Практическое руководство. Указание имени альтернативного элемента для потока XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Управление сериализацией XML с использованием атрибутов</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Примеры сериализации XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить способ, с помощью которого <xref:System.Xml.Serialization.XmlSerializer> сериализует открытое поле или открытое свойство для чтения и записи, создавая <xref:System.Xml.Serialization.XmlAttributes>и устанавливая для его свойства <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> значение <xref:System.Xml.Serialization.XmlTextAttribute>. Дополнительные сведения см. в описании класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс, содержащий открытое поле с именем `Comment`. Пример применяет к полю <xref:System.Xml.Serialization.XmlTextAttribute>, тем самым переопределяя его сериализацию как элемент XML, а затем сериализует его как XML-текст.  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> сериализуемого члена.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить способ, с помощью которого <xref:System.Xml.Serialization.XmlSerializer> сериализует открытое поле или открытое свойство для чтения и записи, создавая <xref:System.Xml.Serialization.XmlAttributes>и устанавливая для его свойства <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> значение <xref:System.Xml.Serialization.XmlTextAttribute>. Дополнительные сведения см. в описании класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип данных языка определения схем XML (XSD) текста, сгенерированного <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>Тип данных схемы XML (XSD).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвоение свойству <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> простого типа данных схемы XML влияет на формат созданного XML. Например, присвоение свойству значения "Date" приводит к тому, что созданный текст будет отформатирован в общем стиле даты, например: 2001-08-31. В отличие от этого, присвоение свойству значения "dateTime" приводит к определению определенного Международная организация по стандартизации документе 8601 "представления даты и времени", например: 2001-08-15T06:59:11.0508456-07:00.  
  
 Результат установки свойства <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> также можно увидеть при использовании [средства определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) для создания схемы XML для скомпилированного файла. Дополнительные сведения об использовании этого средства см. [в разделе средство определения схемы XML и XML-сериализация](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).  
  
 В следующей таблице перечислены простые типы данных схемы XML с их эквивалентами .NET.  
  
 Для `base64Binary` и `hexBinary` типов данных схемы XML используйте массив структур <xref:System.Byte> и примените <xref:System.Xml.Serialization.XmlTextAttribute> с параметром <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>, имеющим значение "base64Binary" или "hexBinary", в зависимости от ситуации. Для типов данных XML-схемы `time` и `date` используйте тип <xref:System.DateTime> и примените <xref:System.Xml.Serialization.XmlTextAttribute> с параметром <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> со значением "Дата" или "время".  
  
 Для каждого типа данных схемы XML, сопоставленного со строкой, примените <xref:System.Xml.Serialization.XmlTextAttribute> со свойством <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>, установленным в тип данных схемы XML. Обратите внимание, что это не изменяет формат сериализации, а только схему для элемента.  
  
> [!NOTE]
>  В свойстве учитывается регистр, поэтому его необходимо задать в точности до одного из типов данных схемы XML.  
  
> [!NOTE]
>  Передача двоичных данных в виде XML-элемента более эффективна, чем передача их в виде XML-атрибута.  
  
 Дополнительные сведения о типах данных схемы XML см. в консорциум W3C документе с именем [XML-схем часть 2: Types](https://www.w3.org/TR/xmlschema-2/).  
  
|Тип данных XSD|Тип данных .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Массив объектов <xref:System.Byte>|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ОБЪЕКТАХ|<xref:System.String>|  
|float|<xref:System.Single>|  
|гдай|<xref:System.String>|  
|гмонс|<xref:System.String>|  
|гмонсдай|<xref:System.String>|  
|геар|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Массив объектов <xref:System.Byte>|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|целочисленный|<xref:System.String>|  
|язык|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|негативеинтежер|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|нонпоситивеинтежер|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|поситивеинтежер|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|длительность|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|время|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный тип данных схемы XML неверен для свойства и не может быть преобразован в тип члена.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип члена.</summary>
        <value><see cref="T:System.Type" /> члена.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойству <xref:System.Type> можно присвоить только простые типы и перечисления.  
  
 <xref:System.Xml.Serialization.XmlTextAttribute> также можно применить к полю, которое возвращает <xref:System.Xml.XmlNode> или массив объектов <xref:System.Xml.XmlNode>.  
  
 Можно применить <xref:System.Xml.Serialization.XmlTextAttribute> к полю или свойству, которое возвращает массив строк. Атрибут также можно применить к массиву типа <xref:System.Object> но для свойства <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> необходимо задать значение String. В этом случае все строки, вставленные в массив, сериализуются как XML-текст.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
