<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f4bd45e218d37eaad6b5428a5fc2f6898b533e8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75048424" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представление коллекции объектов атрибутов, управляющих сериализацией и десериализацией объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создание <xref:System.Xml.Serialization.XmlAttributes> является частью процесса, который переопределяет способ, которым <xref:System.Xml.Serialization.XmlSerializer> сериализует экземпляры класса по умолчанию. Например, предположим, что требуется сериализовать объект, созданный из библиотеки DLL, которая имеет недоступный источник. С помощью <xref:System.Xml.Serialization.XmlAttributeOverrides>можно дополнить или иным образом контролировать способ сериализации объекта.  
  
 Члены класса <xref:System.Xml.Serialization.XmlAttributes> соответствуют непосредственно семейству классов атрибутов, управляющих сериализацией. Например, свойству <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> должно быть присвоено значение <xref:System.Xml.Serialization.XmlTextAttribute>, что позволяет переопределить сериализацию поля или свойства, предписывая <xref:System.Xml.Serialization.XmlSerializer> сериализовать значение свойства в виде XML-текста. Полный список атрибутов, управляющих сериализацией, см. в <xref:System.Xml.Serialization.XmlSerializer>.  
  
 Дополнительные сведения об использовании <xref:System.Xml.Serialization.XmlAttributeOverrides> с классом <xref:System.Xml.Serialization.XmlAttributes> см. в разделе [инструкции. Указание имени альтернативного элемента для XML-потока](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).  
  
   
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Orchestra`, содержащий одно поле с именем `Instruments`, которое возвращает массив объектов `Instrument`. Второй класс с именем `Brass` наследуется от класса `Instrument`. В примере создается объект <xref:System.Xml.Serialization.XmlAttributes> для переопределения поля `Instrument`, позволяя полю принимать `Brass`ные объекты, и добавляет объект <xref:System.Xml.Serialization.XmlAttributes> в экземпляр класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Введение в сериализацию XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Практическое руководство. Указание имени альтернативного элемента для потока XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Управление сериализацией XML с использованием атрибутов</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Примеры сериализации XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Orchestra`, содержащий одно поле с именем `Instruments`, которое возвращает массив объектов `Instrument`. Второй класс с именем `Brass` наследуется от класса `Instrument`. В примере создается объект <xref:System.Xml.Serialization.XmlAttributes> для переопределения поля `Instrument`, позволяя полю принимать `Brass`ные объекты, и добавляет объект <xref:System.Xml.Serialization.XmlAttributes> в экземпляр класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="provider">Класс, представляющий альтернативный вариант реализации атрибутов, управляющих сериализацией XML.</param>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" /> и настройка сериализации и десериализации объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте конструктор без параметров для класса <xref:System.Xml.Serialization.XmlAttributes>, а не с помощью этого конструктора.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> можно применить к элементу, который возвращает массив объектов <xref:System.Xml.XmlAttribute> при десериализации. Это позволяет <xref:System.Xml.Serialization.XmlSerializer> десериализовать любые атрибуты, не имеющие соответствующего члена в объекте, для которого выполняется десериализация, таким образом, эти элементы являются "неизвестными" для <xref:System.Xml.Serialization.XmlSerializer>. Это полезно в том случае, если XML-поток был изменен с помощью XML Web Service или если известно, что случайные данные всегда включаются в поток XML.  
  
 Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> позволяет переопределить сериализацию элемента, к которому был применен <xref:System.Xml.Serialization.XmlAnyAttributeAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение коллекции объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для переопределения.</summary>
        <value>Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, представляющий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute> можно применить к элементу, который возвращает массив объектов <xref:System.Xml.XmlElement> при десериализации. Это позволяет <xref:System.Xml.Serialization.XmlSerializer> десериализовать любые элементы, не имеющие соответствующего члена в объекте, для которого выполняется десериализация, таким образом, эти элементы являются "неизвестными" для <xref:System.Xml.Serialization.XmlSerializer>. Это полезно в том случае, если XML-поток был изменен с помощью XML Web Service или если известно, что случайные данные всегда включаются в поток XML.  
  
 Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> позволяет переопределить сериализацию члена для работы в качестве члена, к которому был применен <xref:System.Xml.Serialization.XmlAnyElementAttribute>.  
  
   
  
## Examples  
 В следующем примере создается новый объект <xref:System.Xml.Serialization.XmlAnyElementAttribute> и добавляется в коллекцию объектов, доступ к которым осуществляется через свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>. Затем объект <xref:System.Xml.Serialization.XmlAttributes> добавляется в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, который используется для создания объекта <xref:System.Xml.Serialization.XmlSerializer>. <xref:System.Xml.Serialization.XmlSerializer> используется для сериализации или десериализации объекта. Чтобы увидеть результат использования свойства <xref:System.Xml.Serialization.XmlAnyElementAttributes>, создайте XML-документ с именем "Ункновнелементс. XML", выполнив метод `SerializeObject` в методе `Main`. Измените полученный документ, чтобы он включал другие (неизвестные) элементы. Закомментируйте `SerializeObject` вызов в методе `Main` и раскомментируйте вызов метода `DeserializeObject`, который выводит имя и значение любого неизвестного XML-элемента.  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует два способа сериализации открытого поля или открытого свойства чтения и записи, возвращающего массив, с помощью <xref:System.Xml.Serialization.XmlSerializer>: сериализация по умолчанию и управляемая сериализация.  
  
 В сериализации по умолчанию к элементу не применяется ни один атрибут. При сериализации массив сериализуется как вложенная последовательность XML-элементов с именем XML-элемента вложенной последовательности, взятой из имени элемента.  
  
 Для более точного управления сериализацией примените <xref:System.Xml.Serialization.XmlArrayAttribute> к полю или свойству. Например, можно изменить имя созданного элемента XML по умолчанию на другое имя, присвоив свойству <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> новое значение.  
  
 Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> позволяет переопределить сериализацию по умолчанию, а также управлять сериализацией, применяя к элементу <xref:System.Xml.Serialization.XmlArrayAttribute>. Например, можно изменить имя элемента XML, созданного по умолчанию (идентификатор элемента), на новое значение. Кроме того, если к элементу применяется <xref:System.Xml.Serialization.XmlArrayAttribute>, он переопределяется любыми <xref:System.Xml.Serialization.XmlArrayAttribute>, назначенными свойству <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс, содержащий поле с именем `Members`, которое возвращает массив объектов. <xref:System.Xml.Serialization.XmlArrayAttribute> используется для переопределения сериализации поля и переименования имени элемента в `Staff`.  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает коллекцию объектов, определяющих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для элементов, которые вставлены в массив, возвращенный открытым полем или свойством чтения/записи.</summary>
        <value>Список <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />, в котором содержится коллекция объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> позволяет указать производные типы, которые могут быть вставлены в массив, возвращаемый открытым полем или открытым свойством для чтения и записи. Для каждого нового типа, который должен принимать поле или свойство, создайте объект <xref:System.Xml.Serialization.XmlArrayItemAttribute> и <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> его в <xref:System.Xml.Serialization.XmlArrayItemAttributes>), возвращаемом свойством <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>. (Новый тип должен быть производным от типа, уже принятого полем или свойством.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> объект <xref:System.Xml.Serialization.XmlAttributes> в <xref:System.Xml.Serialization.XmlAttributeOverrides> объект и укажите тип объекта, содержащего поле или свойство, а также имя поля или свойства. Перед вызовом метода <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> или <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> создайте <xref:System.Xml.Serialization.XmlSerializer> с объектом <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс, содержащий поле с именем `Members`, которое возвращает массив объектов. Создаются два <xref:System.Xml.Serialization.XmlArrayItemAttribute> объектов, позволяющие полю принимать объекты, производные от базового класса с именем `Member`. Каждый объект добавляется в <xref:System.Xml.Serialization.XmlAttributes> с помощью свойства <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>.  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как атрибута XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, управляющий сериализацией открытого поля или свойства чтения/записи как атрибута XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию, если к открытому полю или открытому свойству для чтения и записи не применен ни один атрибут, оно сериализуется как элемент XML. Можно также указать <xref:System.Xml.Serialization.XmlSerializer> создать атрибут XML, применив <xref:System.Xml.Serialization.XmlAttributeAttribute> к полю или свойству.  
  
 Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> позволяет переопределить сериализацию по умолчанию, а также управлять сериализацией, применяя к элементу <xref:System.Xml.Serialization.XmlAttributeAttribute>. Для этого создайте <xref:System.Xml.Serialization.XmlAttributeAttribute> и задайте его свойства (например, <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>). Назначьте новый объект свойству <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>. Добавьте объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, содержащего поле или свойство, а также имя поля или свойства. Наконец, создайте <xref:System.Xml.Serialization.XmlSerializer> с помощью объекта <xref:System.Xml.Serialization.XmlAttributeOverrides> и вызовите метод <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> или <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`, содержащий свойство с именем `GroupName`; Свойство `GroupName` сериализуется как атрибут XML. В примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> и объект <xref:System.Xml.Serialization.XmlAttributes> для переопределения сериализации поля по умолчанию. Затем в примере создается <xref:System.Xml.Serialization.XmlAttributeAttribute> для специально переопределяющего свойства, а для объекта задается свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> объект <xref:System.Xml.Serialization.XmlAttributes> добавляется в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> с именем переопределенного члена. Наконец, <xref:System.Xml.Serialization.XmlSerializer> создается и возвращается с помощью объекта <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, позволяющий определиться с выбором.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, который можно применить к члену класса, который сериализуется как элемент <see langword="xsi:choice" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение по умолчанию XML-элемента или атрибута.</summary>
        <value>Объект <see cref="T:System.Object" />, представляющей значение по умолчанию элемента XML или атрибута.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать значение по умолчанию XML-элемента или XML-атрибута, применив к элементу <xref:System.ComponentModel.DefaultValueAttribute>. Чтобы проверить результат применения значения, скомпилируйте приложение в DLL или исполняемый файл и передайте полученный в качестве аргумента в инструмент определения схемы XML (XSD. exe). В документе схемы XML значение по умолчанию назначается атрибуту `default`. В следующем примере значение по умолчанию для элемента \<животного > — «собаки».  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 Чтобы переопределить значение по умолчанию, создайте <xref:System.Object> и назначьте его <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.  
  
 Если значение, присвоенное полю или свойству, равно значению по умолчанию для этого поля или свойства, то <xref:System.Xml.Serialization.XmlSerializer> не сериализует значение в XML-экземпляр. Это обусловлено тем, что присвоенное значение может быть восстановлено из схемы XML. Иными словами, присвоение полю или свойству значения по умолчанию эквивалентно отсутствию установки. Аналогично, если для поля или свойства не задано значение, <xref:System.Xml.Serialization.XmlSerializer> использует значение по умолчанию, найденное в схеме. В обоих случаях (если задать для свойства значение по умолчанию или вообще не задавать его), экземпляр XML-документа не содержит никакого значения для свойства.  
  
 Для назначения значений по умолчанию можно использовать конструкторы классов вместо схемы. Если вы используете XSD. exe для создания классов из схем, можно закомментировать или удалить все атрибуты [System. ComponentModel. DefaultValueAttribute ("Мифиелднаме")] из файлов классов.  
  
   
  
## Examples  
 В следующем примере показан класс с именем `Pet`, содержащий поле, значение по умолчанию которого равно «Dog». Однако в примере также создается объект <xref:System.Xml.Serialization.XmlAttributes>, а свойству <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> присваивается новое значение по умолчанию ("Cat"). Это переопределяет исходное значение по умолчанию. Таким образом, если для поля задано значение «Cat», <xref:System.Xml.Serialization.XmlSerializer> обрабатывает его как значение по умолчанию, а не сериализует его. Если для него задано любое другое значение, <xref:System.Xml.Serialization.XmlSerializer> сериализует значение.  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение коллекции объектов, задающих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как элемента XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlElementAttributes" />, содержащий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для каждого переопределенного члена, который сериализуется как элемент XML, необходимо добавить новый <xref:System.Xml.Serialization.XmlElementAttribute> в <xref:System.Xml.Serialization.XmlElementAttributes>, вызвав метод <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A>. По умолчанию объект <xref:System.Xml.Serialization.XmlElementAttributes> создается и назначается свойству <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс `Transportation`, содержащий одно поле с именем `Vehicles`, которое возвращает <xref:System.Collections.ArrayList>. В примере к полю `Vehicles` применяются два <xref:System.Xml.Serialization.XmlElementAttribute> атрибутов. В примере создаются два <xref:System.Xml.Serialization.XmlElementAttribute> объектов и добавляются в коллекцию <xref:System.Xml.Serialization.XmlElementAttributes> объекта <xref:System.Xml.Serialization.XmlAttributes>. Чтобы разрешить массиву принимать различные типы объектов, <xref:System.Xml.Serialization.XmlAttributes> объект добавляется в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для каждого идентификатора, который необходимо переопределить, необходимо создать объект <xref:System.Xml.Serialization.XmlAttributes> и установить для свойства <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> значение <xref:System.Xml.Serialization.XmlEnumAttribute>, переопределяющее идентификатор. Добавьте объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите как <xref:System.Type> класса, содержащего перечисление, так и переопределенное имя члена.  
  
   
  
## Examples  
 В следующем примере сериализуются два класса с именами `Food` и `FoodType`. Класс `FoodType` содержит два переопределенных перечисления, и для каждого перечисления в примере создается объект <xref:System.Xml.Serialization.XmlEnumAttribute>, который он назначает свойству <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>. Затем в примере добавляется объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, который используется для создания <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, задающее то, будет ли выполнена сериализация с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или открытого свойства чтения/записи.</summary>
        <value><see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не должен сериализовать поле или свойство; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все открытые поля и открытые свойства чтения и записи сериализуются <xref:System.Xml.Serialization.XmlSerializer>. То есть значение каждого открытого поля или свойства сохраняется как элемент XML или атрибут XML в экземпляре XML-документа.  
  
 Чтобы переопределить сериализацию поля или свойства по умолчанию, создайте объект <xref:System.Xml.Serialization.XmlAttributes> и задайте для его свойства <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> значение `true`. <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> объект в <xref:System.Xml.Serialization.XmlAttributeOverrides> объект и укажите тип объекта, содержащего поле или свойство, которые нужно игнорировать, а также имя поля или свойства, которое нужно игнорировать.  
  
 Если к полю или свойству применяется <xref:System.Xml.Serialization.XmlIgnoreAttribute>, то поле или свойство не учитывается. Однако это поведение можно переопределить, создав объект <xref:System.Xml.Serialization.XmlAttributes>, установив его свойство <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> в значение `false`, добавив его в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, указав тип объекта, содержащего поле или свойство, а также имя поля или свойства.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`, содержащий элемент с именем `Comment`, к которому применяется <xref:System.Xml.Serialization.XmlIgnoreAttribute>. В примере создается объект <xref:System.Xml.Serialization.XmlAttributes> и свойству <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> присваивается значение `false`, тем самым переопределяя <xref:System.Xml.Serialization.XmlIgnoreAttribute>.  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает значение, определяющее, стоит ли сохранить все объявления пространств имен, если объект с членом, возвращающим объект <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, переопределен.</summary>
        <value><see langword="true" />, если объявления пространств имен следует сохранить, иначе <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере содержится класс с именем `Student`. Класс содержит член с именем `MyNamespaces`, который возвращает объект <xref:System.Xml.Serialization.XmlSerializerNamespaces>. В примере создается объект <xref:System.Xml.Serialization.XmlAttributes>, который добавляется в экземпляр класса <xref:System.Xml.Serialization.XmlAttributeOverrides>. Свойство <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> имеет значение `true`, которое указывает <xref:System.Xml.Serialization.XmlSerializer> сохранять пространства имен при переопределении сериализации объекта `Student`.  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса как корневого элемента XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlRootAttribute" />, переопределяющий класс с атрибутами корневого элемента XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, объект <xref:System.Xml.Serialization.XmlAttributes> и объект <xref:System.Xml.Serialization.XmlRootAttribute>. Этот пример присваивает <xref:System.Xml.Serialization.XmlRootAttribute> свойству <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> объекта <xref:System.Xml.Serialization.XmlAttributes> и добавляет объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>. Наконец, в примере возвращается объект <xref:System.Xml.Serialization.XmlAttributes> путем передачи <xref:System.Type> сериализованного класса в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>. (В этом примере <xref:System.Type> `Group`.)  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать открытое поле или свойство чтения/записи как текст XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlTextAttribute" />, переопределяющий сериализацию по умолчанию для открытого свойства или поля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию общедоступное поле или открытое свойство для чтения и записи сериализуется <xref:System.Xml.Serialization.XmlSerializer>в виде элемента XML. Однако можно принудительно сериализовать поле или свойство в виде XML-текста, применив <xref:System.Xml.Serialization.XmlTextAttribute> к полю или свойству.  
  
> [!NOTE]
>  <xref:System.Xml.Serialization.XmlTextAttribute> нельзя применить к полю или свойству, которое возвращает массив.  
  
 Чтобы переопределить сериализацию поля или свойства по умолчанию (который не возвращает массив), создайте <xref:System.Xml.Serialization.XmlTextAttribute> и назначьте его свойству <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>. Добавьте объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, который содержит переопределенное поле или свойство, а также имя переопределенного поля или свойства.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`, который содержит поле с именем `Comment`. Чтобы переопределить способ, используемый по умолчанию <xref:System.Xml.Serialization.XmlSerializer> сериализации поля, в примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> и объект <xref:System.Xml.Serialization.XmlAttributes>. Затем в примере создается объект <xref:System.Xml.Serialization.XmlTextAttribute>, который назначается свойству <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>, и добавляется объект <xref:System.Xml.Serialization.XmlAttributes> (с именем поля, которое должно быть сериализовано как текст XML) в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>. Наконец, в примере создается <xref:System.Xml.Serialization.XmlSerializer> с помощью объекта <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса, к которому был применен <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, который переопределяет <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, примененный к объявлению класса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTypeAttribute> можно использовать для управления сериализацией типа с помощью <xref:System.Xml.Serialization.XmlSerializer>. Например, по умолчанию при сериализации типа <xref:System.Xml.Serialization.XmlSerializer> использует имя класса в качестве имени XML-элемента. Создав <xref:System.Xml.Serialization.XmlTypeAttribute>, установив для свойства <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> и создав объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, можно изменить имя XML-элемента.  
  
   
  
## Examples  
 В следующем примере создается объект <xref:System.Xml.Serialization.XmlTypeAttribute> и назначается свойству <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>.  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
