<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f4bd45e218d37eaad6b5428a5fc2f6898b533e8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75048424" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e01a-101">Представление коллекции объектов атрибутов, управляющих сериализацией и десериализацией объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-101">Represents a collection of attribute objects that control how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-102">Создание <xref:System.Xml.Serialization.XmlAttributes> является частью процесса, который переопределяет способ, которым <xref:System.Xml.Serialization.XmlSerializer> сериализует экземпляры класса по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="4e01a-102">Creating the <xref:System.Xml.Serialization.XmlAttributes> is part of a process that overrides the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes class instances.</span></span> <span data-ttu-id="4e01a-103">Например, предположим, что требуется сериализовать объект, созданный из библиотеки DLL, которая имеет недоступный источник.</span><span class="sxs-lookup"><span data-stu-id="4e01a-103">For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</span></span> <span data-ttu-id="4e01a-104">С помощью <xref:System.Xml.Serialization.XmlAttributeOverrides>можно дополнить или иным образом контролировать способ сериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="4e01a-104">By using the <xref:System.Xml.Serialization.XmlAttributeOverrides>, you can augment or otherwise control how the object is serialized.</span></span>  
  
 <span data-ttu-id="4e01a-105">Члены класса <xref:System.Xml.Serialization.XmlAttributes> соответствуют непосредственно семейству классов атрибутов, управляющих сериализацией.</span><span class="sxs-lookup"><span data-stu-id="4e01a-105">The members of the <xref:System.Xml.Serialization.XmlAttributes> class correspond directly to a family of attribute classes that control serialization.</span></span> <span data-ttu-id="4e01a-106">Например, свойству <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> должно быть присвоено значение <xref:System.Xml.Serialization.XmlTextAttribute>, что позволяет переопределить сериализацию поля или свойства, предписывая <xref:System.Xml.Serialization.XmlSerializer> сериализовать значение свойства в виде XML-текста.</span><span class="sxs-lookup"><span data-stu-id="4e01a-106">For example, the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property must be set to an <xref:System.Xml.Serialization.XmlTextAttribute>, which allows you to override serialization of a field or property by instructing the <xref:System.Xml.Serialization.XmlSerializer> to serialize the property value as XML text.</span></span> <span data-ttu-id="4e01a-107">Полный список атрибутов, управляющих сериализацией, см. в <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-107">For a complete list of attributes that control serialization, see the <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 <span data-ttu-id="4e01a-108">Дополнительные сведения об использовании <xref:System.Xml.Serialization.XmlAttributeOverrides> с классом <xref:System.Xml.Serialization.XmlAttributes> см. в разделе [инструкции. Указание имени альтернативного элемента для XML-потока](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).</span><span class="sxs-lookup"><span data-stu-id="4e01a-108">For more details on using the <xref:System.Xml.Serialization.XmlAttributeOverrides> with the <xref:System.Xml.Serialization.XmlAttributes> class, see [How to: Specify an Alternate Element Name for an XML Stream](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-109">В следующем примере сериализуется экземпляр класса с именем `Orchestra`, содержащий одно поле с именем `Instruments`, которое возвращает массив объектов `Instrument`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-109">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="4e01a-110">Второй класс с именем `Brass` наследуется от класса `Instrument`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-110">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="4e01a-111">В примере создается объект <xref:System.Xml.Serialization.XmlAttributes> для переопределения поля `Instrument`, позволяя полю принимать `Brass`ные объекты, и добавляет объект <xref:System.Xml.Serialization.XmlAttributes> в экземпляр класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-111">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="4e01a-112">Введение в сериализацию XML</span><span class="sxs-lookup"><span data-stu-id="4e01a-112">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="4e01a-113">Практическое руководство. Указание имени альтернативного элемента для потока XML</span><span class="sxs-lookup"><span data-stu-id="4e01a-113">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="4e01a-114">Управление сериализацией XML с использованием атрибутов</span><span class="sxs-lookup"><span data-stu-id="4e01a-114">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="4e01a-115">Примеры сериализации XML</span><span class="sxs-lookup"><span data-stu-id="4e01a-115">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="4e01a-116">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="4e01a-116">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4e01a-117">Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e01a-118">Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e01a-119">В следующем примере сериализуется экземпляр класса с именем `Orchestra`, содержащий одно поле с именем `Instruments`, которое возвращает массив объектов `Instrument`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-119">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="4e01a-120">Второй класс с именем `Brass` наследуется от класса `Instrument`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-120">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="4e01a-121">В примере создается объект <xref:System.Xml.Serialization.XmlAttributes> для переопределения поля `Instrument`, позволяя полю принимать `Brass`ные объекты, и добавляет объект <xref:System.Xml.Serialization.XmlAttributes> в экземпляр класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-121">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4e01a-122">Класс, представляющий альтернативный вариант реализации атрибутов, управляющих сериализацией XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-122">A class that can provide alternative implementations of attributes that control XML serialization.</span></span></param>
        <summary><span data-ttu-id="4e01a-123">Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" /> и настройка сериализации и десериализации объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class and customizes how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-124">Используйте конструктор без параметров для класса <xref:System.Xml.Serialization.XmlAttributes>, а не с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="4e01a-124">Use the parameterless constructor for the <xref:System.Xml.Serialization.XmlAttributes> class, rather than using this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-125">Получает или задает <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</span><span class="sxs-lookup"><span data-stu-id="4e01a-125">Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span></span></summary>
        <value><span data-ttu-id="4e01a-126"><see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</span><span class="sxs-lookup"><span data-stu-id="4e01a-126">The <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-127"><xref:System.Xml.Serialization.XmlAnyAttributeAttribute> можно применить к элементу, который возвращает массив объектов <xref:System.Xml.XmlAttribute> при десериализации.</span><span class="sxs-lookup"><span data-stu-id="4e01a-127">The <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlAttribute> objects on deserialization.</span></span> <span data-ttu-id="4e01a-128">Это позволяет <xref:System.Xml.Serialization.XmlSerializer> десериализовать любые атрибуты, не имеющие соответствующего члена в объекте, для которого выполняется десериализация, таким образом, эти элементы являются "неизвестными" для <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-128">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="4e01a-129">Это полезно в том случае, если XML-поток был изменен с помощью XML Web Service или если известно, что случайные данные всегда включаются в поток XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-129">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="4e01a-130">Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> позволяет переопределить сериализацию элемента, к которому был применен <xref:System.Xml.Serialization.XmlAnyAttributeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-130">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> property allows you to override the serialization of a member to which the <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-131">Получение коллекции объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для переопределения.</span><span class="sxs-lookup"><span data-stu-id="4e01a-131">Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</span></span></summary>
        <value><span data-ttu-id="4e01a-132">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, представляющий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-132">An <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> object that represents the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-133"><xref:System.Xml.Serialization.XmlAnyElementAttribute> можно применить к элементу, который возвращает массив объектов <xref:System.Xml.XmlElement> при десериализации.</span><span class="sxs-lookup"><span data-stu-id="4e01a-133">The <xref:System.Xml.Serialization.XmlAnyElementAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlElement> objects on deserialization.</span></span> <span data-ttu-id="4e01a-134">Это позволяет <xref:System.Xml.Serialization.XmlSerializer> десериализовать любые элементы, не имеющие соответствующего члена в объекте, для которого выполняется десериализация, таким образом, эти элементы являются "неизвестными" для <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-134">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="4e01a-135">Это полезно в том случае, если XML-поток был изменен с помощью XML Web Service или если известно, что случайные данные всегда включаются в поток XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-135">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="4e01a-136">Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> позволяет переопределить сериализацию члена для работы в качестве члена, к которому был применен <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-136">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property allows you to override the serialization of a member to function as a member to which the <xref:System.Xml.Serialization.XmlAnyElementAttribute> has been applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-137">В следующем примере создается новый объект <xref:System.Xml.Serialization.XmlAnyElementAttribute> и добавляется в коллекцию объектов, доступ к которым осуществляется через свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-137">The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> object and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property.</span></span> <span data-ttu-id="4e01a-138">Затем объект <xref:System.Xml.Serialization.XmlAttributes> добавляется в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, который используется для создания объекта <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-138">The <xref:System.Xml.Serialization.XmlAttributes> object is then added to a <xref:System.Xml.Serialization.XmlAttributeOverrides> object which is used to create an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span> <span data-ttu-id="4e01a-139"><xref:System.Xml.Serialization.XmlSerializer> используется для сериализации или десериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="4e01a-139">The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object.</span></span> <span data-ttu-id="4e01a-140">Чтобы увидеть результат использования свойства <xref:System.Xml.Serialization.XmlAnyElementAttributes>, создайте XML-документ с именем "Ункновнелементс. XML", выполнив метод `SerializeObject` в методе `Main`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-140">To see the effect of using the <xref:System.Xml.Serialization.XmlAnyElementAttributes> property, create an XML document named "UnknownElements.xml" by running the `SerializeObject` method in the `Main` method.</span></span> <span data-ttu-id="4e01a-141">Измените полученный документ, чтобы он включал другие (неизвестные) элементы.</span><span class="sxs-lookup"><span data-stu-id="4e01a-141">Edit the resulting document to include other (unknown) elements.</span></span> <span data-ttu-id="4e01a-142">Закомментируйте `SerializeObject` вызов в методе `Main` и раскомментируйте вызов метода `DeserializeObject`, который выводит имя и значение любого неизвестного XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="4e01a-142">Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.</span></span>  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-143">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</span><span class="sxs-lookup"><span data-stu-id="4e01a-143">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span></span></summary>
        <value><span data-ttu-id="4e01a-144"><see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</span><span class="sxs-lookup"><span data-stu-id="4e01a-144">An <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-145">Существует два способа сериализации открытого поля или открытого свойства чтения и записи, возвращающего массив, с помощью <xref:System.Xml.Serialization.XmlSerializer>: сериализация по умолчанию и управляемая сериализация.</span><span class="sxs-lookup"><span data-stu-id="4e01a-145">There are two ways in which a public field or public read/write property that returns an array is serialized by the <xref:System.Xml.Serialization.XmlSerializer>: the default serialization, and the controlled serialization.</span></span>  
  
 <span data-ttu-id="4e01a-146">В сериализации по умолчанию к элементу не применяется ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="4e01a-146">In the default serialization, no attribute is applied to the member.</span></span> <span data-ttu-id="4e01a-147">При сериализации массив сериализуется как вложенная последовательность XML-элементов с именем XML-элемента вложенной последовательности, взятой из имени элемента.</span><span class="sxs-lookup"><span data-stu-id="4e01a-147">When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</span></span>  
  
 <span data-ttu-id="4e01a-148">Для более точного управления сериализацией примените <xref:System.Xml.Serialization.XmlArrayAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="4e01a-148">To control the serialization more precisely, apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="4e01a-149">Например, можно изменить имя созданного элемента XML по умолчанию на другое имя, присвоив свойству <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> новое значение.</span><span class="sxs-lookup"><span data-stu-id="4e01a-149">For example, you can change the generated XML element name from the default to a different name by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to a new value.</span></span>  
  
 <span data-ttu-id="4e01a-150">Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> позволяет переопределить сериализацию по умолчанию, а также управлять сериализацией, применяя к элементу <xref:System.Xml.Serialization.XmlArrayAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-150">The <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlArrayAttribute> to the member.</span></span> <span data-ttu-id="4e01a-151">Например, можно изменить имя элемента XML, созданного по умолчанию (идентификатор элемента), на новое значение.</span><span class="sxs-lookup"><span data-stu-id="4e01a-151">For example, you can change the XML element name generated from the default (the member identifier) to a new value.</span></span> <span data-ttu-id="4e01a-152">Кроме того, если к элементу применяется <xref:System.Xml.Serialization.XmlArrayAttribute>, он переопределяется любыми <xref:System.Xml.Serialization.XmlArrayAttribute>, назначенными свойству <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-152">In addition, if you apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to a member, it is overridden by any <xref:System.Xml.Serialization.XmlArrayAttribute> that is assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-153">В следующем примере сериализуется класс, содержащий поле с именем `Members`, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="4e01a-153">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="4e01a-154"><xref:System.Xml.Serialization.XmlArrayAttribute> используется для переопределения сериализации поля и переименования имени элемента в `Staff`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-154">The <xref:System.Xml.Serialization.XmlArrayAttribute> is used to override the serialization of the field, and rename the element name to `Staff`.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-155">Получает или задает коллекцию объектов, определяющих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для элементов, которые вставлены в массив, возвращенный открытым полем или свойством чтения/записи.</span><span class="sxs-lookup"><span data-stu-id="4e01a-155">Gets or sets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes items inserted into an array returned by a public field or read/write property.</span></span></summary>
        <value><span data-ttu-id="4e01a-156">Список <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />, в котором содержится коллекция объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-156">An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-157">Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> позволяет указать производные типы, которые могут быть вставлены в массив, возвращаемый открытым полем или открытым свойством для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="4e01a-157">The <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</span></span> <span data-ttu-id="4e01a-158">Для каждого нового типа, который должен принимать поле или свойство, создайте объект <xref:System.Xml.Serialization.XmlArrayItemAttribute> и <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> его в <xref:System.Xml.Serialization.XmlArrayItemAttributes>), возвращаемом свойством <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-158">For each new type you want the field or property to accept, create an <xref:System.Xml.Serialization.XmlArrayItemAttribute> object and <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> it to the <xref:System.Xml.Serialization.XmlArrayItemAttributes>) returned by the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span> <span data-ttu-id="4e01a-159">(Новый тип должен быть производным от типа, уже принятого полем или свойством.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> объект <xref:System.Xml.Serialization.XmlAttributes> в <xref:System.Xml.Serialization.XmlAttributeOverrides> объект и укажите тип объекта, содержащего поле или свойство, а также имя поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="4e01a-159">(The new type must be derived from the type already accepted by the field or property.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="4e01a-160">Перед вызовом метода <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> или <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> создайте <xref:System.Xml.Serialization.XmlSerializer> с объектом <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-160">Construct an <xref:System.Xml.Serialization.XmlSerializer> with the <xref:System.Xml.Serialization.XmlAttributeOverrides> object before calling <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-161">В следующем примере сериализуется класс, содержащий поле с именем `Members`, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="4e01a-161">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="4e01a-162">Создаются два <xref:System.Xml.Serialization.XmlArrayItemAttribute> объектов, позволяющие полю принимать объекты, производные от базового класса с именем `Member`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-162">Two <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects are created to allow the field to accept objects that derive from the base class named `Member`.</span></span> <span data-ttu-id="4e01a-163">Каждый объект добавляется в <xref:System.Xml.Serialization.XmlAttributes> с помощью свойства <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-163">Each object is added to the <xref:System.Xml.Serialization.XmlAttributes> through the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-164">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как атрибута XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-164">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property as an XML attribute.</span></span></summary>
        <value><span data-ttu-id="4e01a-165"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, управляющий сериализацией открытого поля или свойства чтения/записи как атрибута XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-165">An <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> that controls the serialization of a public field or read/write property as an XML attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-166">По умолчанию, если к открытому полю или открытому свойству для чтения и записи не применен ни один атрибут, оно сериализуется как элемент XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-166">By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</span></span> <span data-ttu-id="4e01a-167">Можно также указать <xref:System.Xml.Serialization.XmlSerializer> создать атрибут XML, применив <xref:System.Xml.Serialization.XmlAttributeAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="4e01a-167">You can also instruct the <xref:System.Xml.Serialization.XmlSerializer> to generate an XML attribute by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the field or property.</span></span>  
  
 <span data-ttu-id="4e01a-168">Свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> позволяет переопределить сериализацию по умолчанию, а также управлять сериализацией, применяя к элементу <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-168">The <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the member.</span></span> <span data-ttu-id="4e01a-169">Для этого создайте <xref:System.Xml.Serialization.XmlAttributeAttribute> и задайте его свойства (например, <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span><span class="sxs-lookup"><span data-stu-id="4e01a-169">To do this, create an <xref:System.Xml.Serialization.XmlAttributeAttribute> and set its properties (such as <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span></span> <span data-ttu-id="4e01a-170">Назначьте новый объект свойству <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-170">Assign the new object to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="4e01a-171">Добавьте объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, содержащего поле или свойство, а также имя поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="4e01a-171">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="4e01a-172">Наконец, создайте <xref:System.Xml.Serialization.XmlSerializer> с помощью объекта <xref:System.Xml.Serialization.XmlAttributeOverrides> и вызовите метод <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> или <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-172">Lastly, create an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-173">В следующем примере сериализуется класс с именем `Group`, содержащий свойство с именем `GroupName`; Свойство `GroupName` сериализуется как атрибут XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-173">The following example serializes a class named `Group` that contains a property named `GroupName`; the `GroupName` property is serialized as an XML attribute.</span></span> <span data-ttu-id="4e01a-174">В примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> и объект <xref:System.Xml.Serialization.XmlAttributes> для переопределения сериализации поля по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="4e01a-174">The example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object to override the default serialization of the field.</span></span> <span data-ttu-id="4e01a-175">Затем в примере создается <xref:System.Xml.Serialization.XmlAttributeAttribute> для специально переопределяющего свойства, а для объекта задается свойство <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> объект <xref:System.Xml.Serialization.XmlAttributes> добавляется в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> с именем переопределенного члена.</span><span class="sxs-lookup"><span data-stu-id="4e01a-175">The example then creates an <xref:System.Xml.Serialization.XmlAttributeAttribute> to specifically override the property, and the object is set to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property The <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object with the name of the overridden member specified.</span></span> <span data-ttu-id="4e01a-176">Наконец, <xref:System.Xml.Serialization.XmlSerializer> создается и возвращается с помощью объекта <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-176">Finally, an <xref:System.Xml.Serialization.XmlSerializer> is constructed and returned using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-177">Получает или задает объект, позволяющий определиться с выбором.</span><span class="sxs-lookup"><span data-stu-id="4e01a-177">Gets or sets an object that allows you to distinguish between a set of choices.</span></span></summary>
        <value><span data-ttu-id="4e01a-178"><see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, который можно применить к члену класса, который сериализуется как элемент <see langword="xsi:choice" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-178">An <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> that can be applied to a class member that is serialized as an <see langword="xsi:choice" /> element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-179">Получает или задает значение по умолчанию XML-элемента или атрибута.</span><span class="sxs-lookup"><span data-stu-id="4e01a-179">Gets or sets the default value of an XML element or attribute.</span></span></summary>
        <value><span data-ttu-id="4e01a-180">Объект <see cref="T:System.Object" />, представляющей значение по умолчанию элемента XML или атрибута.</span><span class="sxs-lookup"><span data-stu-id="4e01a-180">An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-181">Можно указать значение по умолчанию XML-элемента или XML-атрибута, применив к элементу <xref:System.ComponentModel.DefaultValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-181">You can specify the default value of an XML element or XML attribute by applying a <xref:System.ComponentModel.DefaultValueAttribute> to a member.</span></span> <span data-ttu-id="4e01a-182">Чтобы проверить результат применения значения, скомпилируйте приложение в DLL или исполняемый файл и передайте полученный в качестве аргумента в инструмент определения схемы XML (XSD. exe).</span><span class="sxs-lookup"><span data-stu-id="4e01a-182">To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="4e01a-183">В документе схемы XML значение по умолчанию назначается атрибуту `default`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-183">In the XML schema document, a default value is assigned to the `default` attribute.</span></span> <span data-ttu-id="4e01a-184">В следующем примере значение по умолчанию для элемента \<животного > — «собаки».</span><span class="sxs-lookup"><span data-stu-id="4e01a-184">In the following example, the default for the \<Animal> element is "Dogs."</span></span>  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 <span data-ttu-id="4e01a-185">Чтобы переопределить значение по умолчанию, создайте <xref:System.Object> и назначьте его <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-185">To override the default value, create an <xref:System.Object> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span></span>  
  
 <span data-ttu-id="4e01a-186">Если значение, присвоенное полю или свойству, равно значению по умолчанию для этого поля или свойства, то <xref:System.Xml.Serialization.XmlSerializer> не сериализует значение в XML-экземпляр.</span><span class="sxs-lookup"><span data-stu-id="4e01a-186">If the value assigned to a field or property is equal to the default value for that field or property, the <xref:System.Xml.Serialization.XmlSerializer> does not serialize the value to the XML-instance.</span></span> <span data-ttu-id="4e01a-187">Это обусловлено тем, что присвоенное значение может быть восстановлено из схемы XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-187">This is because the assigned value can be recovered from the XML schema.</span></span> <span data-ttu-id="4e01a-188">Иными словами, присвоение полю или свойству значения по умолчанию эквивалентно отсутствию установки.</span><span class="sxs-lookup"><span data-stu-id="4e01a-188">In other words, setting a field or property to its own default value is equivalent of not setting it at all.</span></span> <span data-ttu-id="4e01a-189">Аналогично, если для поля или свойства не задано значение, <xref:System.Xml.Serialization.XmlSerializer> использует значение по умолчанию, найденное в схеме.</span><span class="sxs-lookup"><span data-stu-id="4e01a-189">Likewise, if no value is set for the field or property, the <xref:System.Xml.Serialization.XmlSerializer> uses the default value found in the schema.</span></span> <span data-ttu-id="4e01a-190">В обоих случаях (если задать для свойства значение по умолчанию или вообще не задавать его), экземпляр XML-документа не содержит никакого значения для свойства.</span><span class="sxs-lookup"><span data-stu-id="4e01a-190">In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</span></span>  
  
 <span data-ttu-id="4e01a-191">Для назначения значений по умолчанию можно использовать конструкторы классов вместо схемы.</span><span class="sxs-lookup"><span data-stu-id="4e01a-191">You can use the class constructors instead of the schema to assign the default values.</span></span> <span data-ttu-id="4e01a-192">Если вы используете XSD. exe для создания классов из схем, можно закомментировать или удалить все атрибуты [System. ComponentModel. DefaultValueAttribute ("Мифиелднаме")] из файлов классов.</span><span class="sxs-lookup"><span data-stu-id="4e01a-192">If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-193">В следующем примере показан класс с именем `Pet`, содержащий поле, значение по умолчанию которого равно «Dog».</span><span class="sxs-lookup"><span data-stu-id="4e01a-193">The following example shows a class named `Pet` that contains a field that has a default value set to "Dog".</span></span> <span data-ttu-id="4e01a-194">Однако в примере также создается объект <xref:System.Xml.Serialization.XmlAttributes>, а свойству <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> присваивается новое значение по умолчанию ("Cat").</span><span class="sxs-lookup"><span data-stu-id="4e01a-194">However, the example also creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets its <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> property to a new default value ("Cat").</span></span> <span data-ttu-id="4e01a-195">Это переопределяет исходное значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="4e01a-195">This overrides the original default value.</span></span> <span data-ttu-id="4e01a-196">Таким образом, если для поля задано значение «Cat», <xref:System.Xml.Serialization.XmlSerializer> обрабатывает его как значение по умолчанию, а не сериализует его.</span><span class="sxs-lookup"><span data-stu-id="4e01a-196">Thus, if the field value is set to "Cat", the <xref:System.Xml.Serialization.XmlSerializer> treats it as the default value, and not serialize it.</span></span> <span data-ttu-id="4e01a-197">Если для него задано любое другое значение, <xref:System.Xml.Serialization.XmlSerializer> сериализует значение.</span><span class="sxs-lookup"><span data-stu-id="4e01a-197">If it is set to any other value, the <xref:System.Xml.Serialization.XmlSerializer> serializes the value.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-198">Получение коллекции объектов, задающих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как элемента XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-198">Gets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property as an XML element.</span></span></summary>
        <value><span data-ttu-id="4e01a-199"><see cref="T:System.Xml.Serialization.XmlElementAttributes" />, содержащий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-199">An <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> that contains a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-200">Для каждого переопределенного члена, который сериализуется как элемент XML, необходимо добавить новый <xref:System.Xml.Serialization.XmlElementAttribute> в <xref:System.Xml.Serialization.XmlElementAttributes>, вызвав метод <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-200">For each overridden member that is serialized as an XML element, you must add a new <xref:System.Xml.Serialization.XmlElementAttribute> to an <xref:System.Xml.Serialization.XmlElementAttributes> by calling the <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> method.</span></span> <span data-ttu-id="4e01a-201">По умолчанию объект <xref:System.Xml.Serialization.XmlElementAttributes> создается и назначается свойству <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-201">By default, an <xref:System.Xml.Serialization.XmlElementAttributes> object is created and assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-202">В следующем примере сериализуется класс `Transportation`, содержащий одно поле с именем `Vehicles`, которое возвращает <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-202">The following example serializes the `Transportation` class, which contains a single field named `Vehicles` that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="4e01a-203">В примере к полю `Vehicles` применяются два <xref:System.Xml.Serialization.XmlElementAttribute> атрибутов.</span><span class="sxs-lookup"><span data-stu-id="4e01a-203">The example applies two <xref:System.Xml.Serialization.XmlElementAttribute> attributes to the `Vehicles` field.</span></span> <span data-ttu-id="4e01a-204">В примере создаются два <xref:System.Xml.Serialization.XmlElementAttribute> объектов и добавляются в коллекцию <xref:System.Xml.Serialization.XmlElementAttributes> объекта <xref:System.Xml.Serialization.XmlAttributes>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-204">The example creates two <xref:System.Xml.Serialization.XmlElementAttribute> objects and adds them to the <xref:System.Xml.Serialization.XmlElementAttributes> collection of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="4e01a-205">Чтобы разрешить массиву принимать различные типы объектов, <xref:System.Xml.Serialization.XmlAttributes> объект добавляется в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-205">To allow the array to accept different object types, the <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-206">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</span><span class="sxs-lookup"><span data-stu-id="4e01a-206">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span></span></summary>
        <value><span data-ttu-id="4e01a-207"><see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</span><span class="sxs-lookup"><span data-stu-id="4e01a-207">An <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-208">Для каждого идентификатора, который необходимо переопределить, необходимо создать объект <xref:System.Xml.Serialization.XmlAttributes> и установить для свойства <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> значение <xref:System.Xml.Serialization.XmlEnumAttribute>, переопределяющее идентификатор.</span><span class="sxs-lookup"><span data-stu-id="4e01a-208">For each identifier you want to override, you must create an <xref:System.Xml.Serialization.XmlAttributes> object, and set the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property to an <xref:System.Xml.Serialization.XmlEnumAttribute> that overrides the identifier.</span></span> <span data-ttu-id="4e01a-209">Добавьте объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите как <xref:System.Type> класса, содержащего перечисление, так и переопределенное имя члена.</span><span class="sxs-lookup"><span data-stu-id="4e01a-209">Add the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify both the <xref:System.Type> of the class that contains the enumeration, and the overridden member name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-210">В следующем примере сериализуются два класса с именами `Food` и `FoodType`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-210">The following example serializes two classes named `Food` and `FoodType`.</span></span> <span data-ttu-id="4e01a-211">Класс `FoodType` содержит два переопределенных перечисления, и для каждого перечисления в примере создается объект <xref:System.Xml.Serialization.XmlEnumAttribute>, который он назначает свойству <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-211">The `FoodType` class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref:System.Xml.Serialization.XmlEnumAttribute> object that it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="4e01a-212">Затем в примере добавляется объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, который используется для создания <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-212">The example then adds the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-213">Получает или задает значение, задающее то, будет ли выполнена сериализация с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или открытого свойства чтения/записи.</span><span class="sxs-lookup"><span data-stu-id="4e01a-213">Gets or sets a value that specifies whether or not the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</span></span></summary>
        <value><span data-ttu-id="4e01a-214"><see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не должен сериализовать поле или свойство; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-214"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must not serialize the field or property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-215">По умолчанию все открытые поля и открытые свойства чтения и записи сериализуются <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-215">By default, all public fields and public read/write properties are serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="4e01a-216">То есть значение каждого открытого поля или свойства сохраняется как элемент XML или атрибут XML в экземпляре XML-документа.</span><span class="sxs-lookup"><span data-stu-id="4e01a-216">That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</span></span>  
  
 <span data-ttu-id="4e01a-217">Чтобы переопределить сериализацию поля или свойства по умолчанию, создайте объект <xref:System.Xml.Serialization.XmlAttributes> и задайте для его свойства <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-217">To override the default serialization of a field or property, create an <xref:System.Xml.Serialization.XmlAttributes> object, and set its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `true`.</span></span> <span data-ttu-id="4e01a-218"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> объект в <xref:System.Xml.Serialization.XmlAttributeOverrides> объект и укажите тип объекта, содержащего поле или свойство, которые нужно игнорировать, а также имя поля или свойства, которое нужно игнорировать.</span><span class="sxs-lookup"><span data-stu-id="4e01a-218"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</span></span>  
  
 <span data-ttu-id="4e01a-219">Если к полю или свойству применяется <xref:System.Xml.Serialization.XmlIgnoreAttribute>, то поле или свойство не учитывается.</span><span class="sxs-lookup"><span data-stu-id="4e01a-219">If an <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied to a field or property, the field or property is ignored.</span></span> <span data-ttu-id="4e01a-220">Однако это поведение можно переопределить, создав объект <xref:System.Xml.Serialization.XmlAttributes>, установив его свойство <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> в значение `false`, добавив его в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, указав тип объекта, содержащего поле или свойство, а также имя поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="4e01a-220">However you can override that behavior by creating an <xref:System.Xml.Serialization.XmlAttributes> object, setting its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, adding it to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object specifying the type of the object that contains the field or property, and the name of the field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-221">В следующем примере сериализуется класс с именем `Group`, содержащий элемент с именем `Comment`, к которому применяется <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-221">The following example serializes a class named `Group`, which contains a member named `Comment` to which the <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied.</span></span> <span data-ttu-id="4e01a-222">В примере создается объект <xref:System.Xml.Serialization.XmlAttributes> и свойству <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> присваивается значение `false`, тем самым переопределяя <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-222">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets the <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, thereby overriding the <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-223">Возвращает и задает значение, определяющее, стоит ли сохранить все объявления пространств имен, если объект с членом, возвращающим объект <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, переопределен.</span><span class="sxs-lookup"><span data-stu-id="4e01a-223">Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object is overridden.</span></span></summary>
        <value><span data-ttu-id="4e01a-224"><see langword="true" />, если объявления пространств имен следует сохранить, иначе <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-224"><see langword="true" /> if the namespace declarations should be kept; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e01a-225">В следующем примере содержится класс с именем `Student`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-225">The following example contains a class named `Student`.</span></span> <span data-ttu-id="4e01a-226">Класс содержит член с именем `MyNamespaces`, который возвращает объект <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-226">The class contains a member named `MyNamespaces` that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="4e01a-227">В примере создается объект <xref:System.Xml.Serialization.XmlAttributes>, который добавляется в экземпляр класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-227">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object that is added to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span> <span data-ttu-id="4e01a-228">Свойство <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> имеет значение `true`, которое указывает <xref:System.Xml.Serialization.XmlSerializer> сохранять пространства имен при переопределении сериализации объекта `Student`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-228">The <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> property is set to `true`, which instructs the <xref:System.Xml.Serialization.XmlSerializer> to preserve the namespaces when the serialization of the `Student` object is overridden.</span></span>  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-229">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса как корневого элемента XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-229">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</span></span></summary>
        <value><span data-ttu-id="4e01a-230"><see cref="T:System.Xml.Serialization.XmlRootAttribute" />, переопределяющий класс с атрибутами корневого элемента XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-230">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that overrides a class attributed as an XML root element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e01a-231">В следующем примере создается объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, объект <xref:System.Xml.Serialization.XmlAttributes> и объект <xref:System.Xml.Serialization.XmlRootAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-231">The following example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, an <xref:System.Xml.Serialization.XmlAttributes> object, and an <xref:System.Xml.Serialization.XmlRootAttribute> object.</span></span> <span data-ttu-id="4e01a-232">Этот пример присваивает <xref:System.Xml.Serialization.XmlRootAttribute> свойству <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> объекта <xref:System.Xml.Serialization.XmlAttributes> и добавляет объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-232">The example assigns the <xref:System.Xml.Serialization.XmlRootAttribute> to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of the <xref:System.Xml.Serialization.XmlAttributes> object, and adds the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="4e01a-233">Наконец, в примере возвращается объект <xref:System.Xml.Serialization.XmlAttributes> путем передачи <xref:System.Type> сериализованного класса в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-233">Lastly, the example gets the <xref:System.Xml.Serialization.XmlAttributes> object by passing the <xref:System.Type> of the serialized class to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="4e01a-234">(В этом примере <xref:System.Type> `Group`.)</span><span class="sxs-lookup"><span data-stu-id="4e01a-234">(In this example, the <xref:System.Type> is `Group`.)</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-235">Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать открытое поле или свойство чтения/записи как текст XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-235">Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a public field or public read/write property as XML text.</span></span></summary>
        <value><span data-ttu-id="4e01a-236"><see cref="T:System.Xml.Serialization.XmlTextAttribute" />, переопределяющий сериализацию по умолчанию для открытого свойства или поля.</span><span class="sxs-lookup"><span data-stu-id="4e01a-236">An <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> that overrides the default serialization of a public property or field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-237">По умолчанию общедоступное поле или открытое свойство для чтения и записи сериализуется <xref:System.Xml.Serialization.XmlSerializer>в виде элемента XML.</span><span class="sxs-lookup"><span data-stu-id="4e01a-237">By default, a public field or public read/write property is serialized as an XML element by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="4e01a-238">Однако можно принудительно сериализовать поле или свойство в виде XML-текста, применив <xref:System.Xml.Serialization.XmlTextAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="4e01a-238">However, it can force the field or property to be serialized as XML text by applying an <xref:System.Xml.Serialization.XmlTextAttribute> to the field or property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4e01a-239"><xref:System.Xml.Serialization.XmlTextAttribute> нельзя применить к полю или свойству, которое возвращает массив.</span><span class="sxs-lookup"><span data-stu-id="4e01a-239">The <xref:System.Xml.Serialization.XmlTextAttribute> cannot be applied to a field or property that returns an array.</span></span>  
  
 <span data-ttu-id="4e01a-240">Чтобы переопределить сериализацию поля или свойства по умолчанию (который не возвращает массив), создайте <xref:System.Xml.Serialization.XmlTextAttribute> и назначьте его свойству <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-240">To override the default serialization of a field or property (that does not return an array), create an <xref:System.Xml.Serialization.XmlTextAttribute> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="4e01a-241">Добавьте объект <xref:System.Xml.Serialization.XmlAttributes> в объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, который содержит переопределенное поле или свойство, а также имя переопределенного поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="4e01a-241">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-242">В следующем примере сериализуется класс с именем `Group`, который содержит поле с именем `Comment`.</span><span class="sxs-lookup"><span data-stu-id="4e01a-242">The following example serializes the class named `Group`, which contains a field named `Comment`.</span></span> <span data-ttu-id="4e01a-243">Чтобы переопределить способ, используемый по умолчанию <xref:System.Xml.Serialization.XmlSerializer> сериализации поля, в примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> и объект <xref:System.Xml.Serialization.XmlAttributes>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-243">To override the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes the field, the example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="4e01a-244">Затем в примере создается объект <xref:System.Xml.Serialization.XmlTextAttribute>, который назначается свойству <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>, и добавляется объект <xref:System.Xml.Serialization.XmlAttributes> (с именем поля, которое должно быть сериализовано как текст XML) в объект <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-244">The example then creates an <xref:System.Xml.Serialization.XmlTextAttribute> object, which it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property, and adds the <xref:System.Xml.Serialization.XmlAttributes> object (with the name of the field to be serialized as XML text) to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="4e01a-245">Наконец, в примере создается <xref:System.Xml.Serialization.XmlSerializer> с помощью объекта <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-245">Lastly the example creates an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e01a-246">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса, к которому был применен <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="4e01a-246">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> has been applied.</span></span></summary>
        <value><span data-ttu-id="4e01a-247"><see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, который переопределяет <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, примененный к объявлению класса.</span><span class="sxs-lookup"><span data-stu-id="4e01a-247">An <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> that overrides an <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applied to a class declaration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e01a-248"><xref:System.Xml.Serialization.XmlTypeAttribute> можно использовать для управления сериализацией типа с помощью <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-248">The <xref:System.Xml.Serialization.XmlTypeAttribute> can be used to control how a type is serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="4e01a-249">Например, по умолчанию при сериализации типа <xref:System.Xml.Serialization.XmlSerializer> использует имя класса в качестве имени XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="4e01a-249">For example, by default, when a type is serialized, the <xref:System.Xml.Serialization.XmlSerializer> uses the class name as the XML element name.</span></span> <span data-ttu-id="4e01a-250">Создав <xref:System.Xml.Serialization.XmlTypeAttribute>, установив для свойства <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> и создав объект <xref:System.Xml.Serialization.XmlAttributeOverrides>, можно изменить имя XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="4e01a-250">By creating an <xref:System.Xml.Serialization.XmlTypeAttribute>, setting the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property to it, and creating an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, you can change the XML element name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e01a-251">В следующем примере создается объект <xref:System.Xml.Serialization.XmlTypeAttribute> и назначается свойству <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> объекта <xref:System.Xml.Serialization.XmlAttributes>.</span><span class="sxs-lookup"><span data-stu-id="4e01a-251">The following example creates an <xref:System.Xml.Serialization.XmlTypeAttribute> object, and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
