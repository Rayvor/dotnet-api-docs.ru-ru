<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96b6085bc0d7d1b443bcdb5ace9b45a5b724c135" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400357" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет схемой, сгенерированной <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса в качестве SOAP-кодированного XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Serialization.SoapTypeAttribute> принадлежит семейству атрибутов, который управляет тем, как <xref:System.Xml.Serialization.XmlSerializer> сериализует или десериализует объект как закодированный SOAP XML. Результирующий XML соответствует разделу 5 документа консорциум W3C, [протоколу SOAP 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Полный список схожих атрибутов см. в разделе [атрибуты, управляющие кодированной СЕРИАЛИЗАЦИЕЙ SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Чтобы сериализовать объект как закодированное сообщение SOAP, создайте <xref:System.Xml.Serialization.XmlSerializer> используя <xref:System.Xml.Serialization.XmlTypeMapping>, созданный с помощью метода <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> класса <xref:System.Xml.Serialization.SoapReflectionImporter>.  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute> можно применять только к объявлениям классов.  
  
 Свойство <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> определяет, включен ли результирующий тип XML-элемента в документ схемы XML (. xsd) для созданного XML-потока. Чтобы просмотреть схему, Скомпилируйте класс в DLL-файл. Передайте полученный файл в качестве аргумента [средству определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Средство создает XML-схему для XML-потока, созданного при сериализации класса экземпляром класса <xref:System.Xml.Serialization.XmlSerializer>.  
  
 Задание другого пространства имен приводит к тому, что XSD. exe записывает другой файл схемы (XSD) для XML-потока, созданного при сериализации класса.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу, для которого <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создание <xref:System.Xml.Serialization.SoapTypeAttribute> при переопределении сериализации типа. Назначьте объект свойству <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> <xref:System.Xml.Serialization.SoapAttributes> и добавьте <xref:System.Xml.Serialization.SoapAttributes> в <xref:System.Xml.Serialization.SoapAttributeOverrides>. Дополнительные сведения о переопределении сериализации SOAP см. в разделе Общие сведения о классе <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу с <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>, для которого задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> и задает имя типа XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создание <xref:System.Xml.Serialization.SoapTypeAttribute> при переопределении сериализации типа. Назначьте объект свойству <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> <xref:System.Xml.Serialization.SoapAttributes> и добавьте <xref:System.Xml.Serialization.SoapAttributes> в <xref:System.Xml.Serialization.SoapAttributeOverrides>. Дополнительные сведения о переопределении сериализации SOAP см. в разделе Общие сведения о классе <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу с <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>, для которого задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса).</param>
        <param name="ns">Пространство имен XML типа.</param>
        <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> и указывает имя и пространство имен XML типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создание <xref:System.Xml.Serialization.SoapTypeAttribute> при переопределении сериализации типа. Назначьте объект свойству <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> <xref:System.Xml.Serialization.SoapAttributes> и добавьте <xref:System.Xml.Serialization.SoapAttributes> в <xref:System.Xml.Serialization.SoapAttributeOverrides>. Дополнительные сведения о переопределении сериализации SOAP см. в разделе Общие сведения о классе <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 Если задать значение <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> для нескольких типов (то есть при применении атрибута к нескольким классам с разными <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>ными значениями), [средство определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) создает отдельный файл схемы (XSD) для каждого типа. Это обусловлено тем, что задание другого пространства имен для каждого типа отрисовывает каждый тип, отличающийся от остальных, что делает обязательным запись для каждого типа как независимой сущности.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу с <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>, для которого задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, включается ли тип в SOAP-кодированные документы схемы XML.</summary>
        <value><see langword="true" /> для включения типа в SOAP-кодированный документ схемы XML, в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Примените <xref:System.Xml.Serialization.SoapTypeAttribute> к объявлению класса, чтобы указать, следует ли включать тип в документ схемы XML. Чтобы просмотреть результаты установки свойств класса <xref:System.Xml.Serialization.SoapTypeAttribute>, скомпилируйте приложение как исполняемый файл или библиотеку DLL и передайте полученный файл в [средство определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Средство записывает схему, включая определение типа потока XML, созданного при сериализации класса.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу с <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>, для которого задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пространство имен типа XML.</summary>
        <value>Пространство имен типа XML. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задать значение <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> для нескольких типов (то есть при применении атрибута к нескольким классам с разными <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>ными значениями), [средство определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) создает отдельный файл схемы (XSD) для каждого типа. Это обусловлено тем, что задание другого пространства имен для каждого типа отрисовывает каждый тип, отличающийся от остальных, что делает обязательным запись для каждого типа как независимой сущности.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу с <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>, для которого задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя типа XML.</summary>
        <value>Имя типа XML. По умолчанию имя класса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Примените <xref:System.Xml.Serialization.SoapTypeAttribute> к классу, чтобы указать пространство имен типа XML, имя типа XML и указать, следует ли включать тип в документ схемы XML. Чтобы просмотреть результаты установки свойств объекта <xref:System.Xml.Serialization.SoapTypeAttribute>, скомпилируйте приложение как исполняемый файл или библиотеку DLL и передайте полученный файл в [средство определения схемы XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Средство записывает схему, включая определение типа.  
  
   
  
## Examples  
 В следующем примере сериализуется класс с именем `Group`. <xref:System.Xml.Serialization.SoapTypeAttribute> применяется к классу с <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>, для которого задано значение "Соапграуптипе". <xref:System.Xml.Serialization.SoapTypeAttribute> также переопределяется, изменяя <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> на "Team". Обе версии сериализуются, в результате чего используются два файла: IncludeInSchema. XML и SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
