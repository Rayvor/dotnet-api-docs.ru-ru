<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="175a5b89cf636f43cc8db08c4f532d9a8645806a" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67250374" /></Metadata><TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ddcf7-101">Указывает, что открытое поле или свойство представляет XML-элемент, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует или десериализует объект, содержащий его.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-102"><xref:System.Xml.Serialization.XmlElementAttribute> Принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer> сериализует или десериализует объект.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="ddcf7-103">Полный список схожих атрибутов, см. в разделе [атрибуты управления сериализацией XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="ddcf7-104">XML-документа обычно содержит элементы XML, каждый из которых состоит из трех частей: открывающий тег с возможными атрибутами, закрывающий тег и данные между тегами.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="ddcf7-105">XML-теги могут быть вложенными, является, данные между тегами также может быть XML-элементов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="ddcf7-106">Объем одного элемента, которые включать в себя другой позволяет документу содержать иерархии данных.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="ddcf7-107">Элемент XML можно также включить атрибуты.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="ddcf7-108">Применить <xref:System.Xml.Serialization.XmlElementAttribute> открытые поля или свойства чтения/записи для управления характеристиками, например имя и пространство имен XML-элементов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="ddcf7-109"><xref:System.Xml.Serialization.XmlElementAttribute> Могут применяться несколько раз в поле, возвращающее массив объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="ddcf7-110">Это делается для указания (через <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство) различных типов, которые могут быть вставлены в массив.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="ddcf7-111">Например массив, в следующем коде C# принимает строки и целые числа.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="ddcf7-112">Это приводит к XML, который может выглядеть так.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="ddcf7-113">Обратите внимание, что при применении <xref:System.Xml.Serialization.XmlElementAttribute> несколько раз без указания <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> значение свойства элементов соответствуют именам типов допустимых объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="ddcf7-114">Если применить <xref:System.Xml.Serialization.XmlElementAttribute> к полю или свойству, которое возвращает массив, элементы в массиве кодируются как последовательность элементов XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="ddcf7-115">В противоположность этому при <xref:System.Xml.Serialization.XmlElementAttribute> не применяется для такого поля или свойства, элементы в массиве кодируются как последовательность элементов, вложенных в элемент с именем поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="ddcf7-116">(Используйте <xref:System.Xml.Serialization.XmlArrayAttribute> и <xref:System.Xml.Serialization.XmlArrayItemAttribute> атрибутов для управления сериализацией массива.)</span><span class="sxs-lookup"><span data-stu-id="ddcf7-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="ddcf7-117">Можно задать <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство, чтобы указать тип, который является производным от типа исходного поля или свойства — то есть, поле или свойство, к которой применяется <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="ddcf7-118">Если поле или свойство возвращает <xref:System.Collections.ArrayList>, можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlElementAttribute> к элементу.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="ddcf7-119">Для каждого экземпляра, установите <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство с типом объекта, который может быть вставлен в массив.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="ddcf7-120">Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddcf7-121">Можно использовать слово `XmlElement` в коде вместо более длинного <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-122">В следующем примере сериализуется класс с именем `Group` и применяет <xref:System.Xml.Serialization.XmlElementAttribute> на нескольких его членов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="ddcf7-123">Поле с именем `Employees` возвращает массив `Employee` объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="ddcf7-124">В этом случае <xref:System.Xml.Serialization.XmlElementAttribute> указывает, что результирующий XML не будут вложены (это поведение по умолчанию элементы в массиве).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="ddcf7-125">Введение в сериализацию XML</span><span class="sxs-lookup"><span data-stu-id="ddcf7-125">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="ddcf7-126">Практическое руководство. Указание имени альтернативного элемента для потока XML</span><span class="sxs-lookup"><span data-stu-id="ddcf7-126">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="ddcf7-127">Управление сериализацией XML с использованием атрибутов</span><span class="sxs-lookup"><span data-stu-id="ddcf7-127">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="ddcf7-128">Примеры сериализации XML</span><span class="sxs-lookup"><span data-stu-id="ddcf7-128">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="ddcf7-129">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="ddcf7-129">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ddcf7-130">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddcf7-131">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ddcf7-132">В следующем примере применяется <xref:System.Xml.Serialization.XmlElementAttribute> к классу.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-132">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="ddcf7-133">Имя XML-элемента сериализованного члена.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-133">The XML element name of the serialized member.</span></span></param>
        <summary><span data-ttu-id="ddcf7-134">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и указывает имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-134">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-135">По умолчанию <xref:System.Xml.Serialization.XmlSerializer> использует имя члена в качестве имени элемента XML при сериализации экземпляра класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-135">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="ddcf7-136">Например, поле с именем `Vehicle` создает XML-элемент с именем `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-136">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="ddcf7-137">Однако если требуется другой элемент, такой как `Cars`, передайте его в `elementName` параметра.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-137">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-138">В примере показан простой класс, который содержит одно поле с именем `Vehicles`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-138">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="ddcf7-139">В примере применяется <xref:System.Xml.Serialization.XmlElementAttribute> к полю и включает в себя `elementName` параметра, тем самым указывая <xref:System.Xml.Serialization.XmlSerializer> для создания XML-элементов с именем «Автомобили» вместо «Автомобили».</span><span class="sxs-lookup"><span data-stu-id="ddcf7-139">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ddcf7-140"><see cref="T:System.Type" /> объекта, являющегося производным от типа члена.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-140">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="ddcf7-141">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и указывает тип для члена, к которому применяется <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="ddcf7-142">Данный тип используется при сериализации или десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> содержащего его объекта.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-142">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-143">Используйте `type` параметр для указания типа, который является производным от базового класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-143">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="ddcf7-144">Например, предположим, что свойство с именем `MyAnimal` возвращает `Animal` объекта.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-144">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="ddcf7-145">Вы хотите улучшить объект, то создается новый класс с именем `Mammal` , наследуемый от `Animal` класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-145">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="ddcf7-146">Чтобы указать <xref:System.Xml.Serialization.XmlSerializer> принимать `Mammal` класса при сериализации `MyAnimal` свойства, передайте <xref:System.Type> из `Mammal` в конструктор.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-146">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-147">В следующем примере сериализуется класс с именем `Orchestra` , содержащий одно поле с именем `Instruments`, который возвращает массив `Instrument` объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-147">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="ddcf7-148">Второй класс с именем `Brass` наследует от `Instrument` класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-148">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="ddcf7-149">В примере применяется <xref:System.Xml.Serialization.XmlElementAttribute> для `Instruments` и указывает `Brass` введите, позволяя `Instruments` полю принимать `Brass` объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-149">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="ddcf7-150">В примере также указывается имя элемента XML, задав <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-150">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="ddcf7-151">Имя XML-элемента сериализованного члена.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-151">The XML element name of the serialized member.</span></span></param>
        <param name="type"><span data-ttu-id="ddcf7-152"><see cref="T:System.Type" /> объекта, являющегося производным от типа члена.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-152">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="ddcf7-153">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> и указывает имя XML-элемента и производного типа для члена, к которому применяется <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-153">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="ddcf7-154">Данный тип члена используйте при сериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> содержащего его объекта.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-154">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-155">По умолчанию <xref:System.Xml.Serialization.XmlSerializer> использует имя члена в качестве имени элемента XML при сериализации экземпляра класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-155">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="ddcf7-156">Например, поле с именем `Vehicle` создает XML-элемент с именем `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-156">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="ddcf7-157">Тем не менее если требуется другой элемент, такой как `Cars`, передайте его в `elementName` параметра.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-157">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="ddcf7-158">Используйте `type` параметр для указания типа, который является производным от базового класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-158">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="ddcf7-159">Например, предположим, что свойство с именем `MyAnimal` возвращает `Animal` объекта.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-159">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="ddcf7-160">Вы хотите улучшить объект, то создается новый класс с именем `Mammal` , наследуемый от `Animal` класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-160">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="ddcf7-161">Чтобы указать <xref:System.Xml.Serialization.XmlSerializer> принимать `Mammal` класса при сериализации `MyAnimal` свойства, передайте <xref:System.Type> из `Mammal` в конструктор.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-161">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-162">В следующем примере сериализуется класс с именем `Orchestra` , содержащий одно поле с именем `Instruments`, который возвращает массив `Instrument` объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-162">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="ddcf7-163">Второй класс с именем `Brass` наследует от `Instrument` класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-163">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="ddcf7-164">В примере применяется <xref:System.Xml.Serialization.XmlElementAttribute> для `Instruments` и указывает `Brass` введите, позволяя `Instruments` полю принимать `Brass` объектов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-164">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="ddcf7-165">В примере также указывается имя элемента XML, задав <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-165">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-166">Получает или задает тип данных определения схемы XML (XSD), сгенерированного <see cref="T:System.Xml.Serialization.XmlSerializer" /> элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-166">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="ddcf7-167">Тип данных схемы XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-167">An XML Schema data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-168">Ниже перечислены схемы XML простые типы данных с их эквивалентами.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-168">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="ddcf7-169">XML-схемы `base64Binary` и `hexBinary` типов данных, используйте массив <xref:System.Byte> структур и применить <xref:System.Xml.Serialization.XmlElementAttribute> с <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> присвоено значение «base64Binary» или «hexBinary».</span><span class="sxs-lookup"><span data-stu-id="ddcf7-169">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="ddcf7-170">XML-схемы `time` и `date` типов данных, используйте <xref:System.DateTime> введите и применить <xref:System.Xml.Serialization.XmlElementAttribute> с <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> присвоено значение «Дата» или «время».</span><span class="sxs-lookup"><span data-stu-id="ddcf7-170">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="ddcf7-171">Для каждого типа схемы XML, сопоставленный в строку, применить <xref:System.Xml.Serialization.XmlElementAttribute> с его <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> свойства задан тип схемы XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-171">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="ddcf7-172">Вполне возможно, что это может изменить формат сериализации, а не только схему для члена.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-172">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddcf7-173">Свойство с учетом регистра, поэтому вам нужно задать ровно на один из типов данных схемы XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-173">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddcf7-174">Передача двоичных данных в виде XML-элемент является более эффективным, чем передача в качестве атрибута XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-174">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="ddcf7-175">Дополнительные сведения о типах данных см. в разделе с именем документа консорциума World Wide Web [XML Schema Part 2: Типы данных](https://www.w3.org/TR/xmlschema-2/).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-175">For more information about XML data types, see the World Wide Web Consortium document named [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).</span></span>  
  
|<span data-ttu-id="ddcf7-176">Тип данных XSD</span><span class="sxs-lookup"><span data-stu-id="ddcf7-176">XSD data type</span></span>|<span data-ttu-id="ddcf7-177">Тип данных .NET</span><span class="sxs-lookup"><span data-stu-id="ddcf7-177">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="ddcf7-178">anyURI</span><span class="sxs-lookup"><span data-stu-id="ddcf7-178">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-179">base64Binary</span><span class="sxs-lookup"><span data-stu-id="ddcf7-179">base64Binary</span></span>|<span data-ttu-id="ddcf7-180">Массив <xref:System.Byte> объектов</span><span class="sxs-lookup"><span data-stu-id="ddcf7-180">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="ddcf7-181">boolean</span><span class="sxs-lookup"><span data-stu-id="ddcf7-181">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="ddcf7-182">byte</span><span class="sxs-lookup"><span data-stu-id="ddcf7-182">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="ddcf7-183">date</span><span class="sxs-lookup"><span data-stu-id="ddcf7-183">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ddcf7-184">dateTime</span><span class="sxs-lookup"><span data-stu-id="ddcf7-184">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ddcf7-185">decimal</span><span class="sxs-lookup"><span data-stu-id="ddcf7-185">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="ddcf7-186">double</span><span class="sxs-lookup"><span data-stu-id="ddcf7-186">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="ddcf7-187">ENTITY</span><span class="sxs-lookup"><span data-stu-id="ddcf7-187">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-188">СУЩНОСТИ</span><span class="sxs-lookup"><span data-stu-id="ddcf7-188">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-189">float</span><span class="sxs-lookup"><span data-stu-id="ddcf7-189">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="ddcf7-190">gDay</span><span class="sxs-lookup"><span data-stu-id="ddcf7-190">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-191">gMonth</span><span class="sxs-lookup"><span data-stu-id="ddcf7-191">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-192">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="ddcf7-192">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-193">типа gYear</span><span class="sxs-lookup"><span data-stu-id="ddcf7-193">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-194">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="ddcf7-194">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-195">hexBinary</span><span class="sxs-lookup"><span data-stu-id="ddcf7-195">hexBinary</span></span>|<span data-ttu-id="ddcf7-196">Массив <xref:System.Byte> объектов</span><span class="sxs-lookup"><span data-stu-id="ddcf7-196">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="ddcf7-197">ID</span><span class="sxs-lookup"><span data-stu-id="ddcf7-197">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-198">IDREF</span><span class="sxs-lookup"><span data-stu-id="ddcf7-198">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-199">IDREFS</span><span class="sxs-lookup"><span data-stu-id="ddcf7-199">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-200">int</span><span class="sxs-lookup"><span data-stu-id="ddcf7-200">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="ddcf7-201">целочисленный</span><span class="sxs-lookup"><span data-stu-id="ddcf7-201">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-202">язык</span><span class="sxs-lookup"><span data-stu-id="ddcf7-202">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-203">long</span><span class="sxs-lookup"><span data-stu-id="ddcf7-203">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="ddcf7-204">name</span><span class="sxs-lookup"><span data-stu-id="ddcf7-204">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-205">NCName</span><span class="sxs-lookup"><span data-stu-id="ddcf7-205">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-206">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="ddcf7-206">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-207">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="ddcf7-207">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-208">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="ddcf7-208">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-209">normalizedString</span><span class="sxs-lookup"><span data-stu-id="ddcf7-209">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-210">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="ddcf7-210">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-211">Тип nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="ddcf7-211">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-212">NOTATION</span><span class="sxs-lookup"><span data-stu-id="ddcf7-212">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-213">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="ddcf7-213">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-214">QName</span><span class="sxs-lookup"><span data-stu-id="ddcf7-214">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="ddcf7-215">длительность</span><span class="sxs-lookup"><span data-stu-id="ddcf7-215">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-216">string</span><span class="sxs-lookup"><span data-stu-id="ddcf7-216">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-217">short</span><span class="sxs-lookup"><span data-stu-id="ddcf7-217">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="ddcf7-218">время</span><span class="sxs-lookup"><span data-stu-id="ddcf7-218">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ddcf7-219">token</span><span class="sxs-lookup"><span data-stu-id="ddcf7-219">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="ddcf7-220">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="ddcf7-220">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="ddcf7-221">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="ddcf7-221">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="ddcf7-222">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="ddcf7-222">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="ddcf7-223">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="ddcf7-223">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-224">В следующем примере сериализуется класс с именем `Group` , содержащий поле с именем `ExtraInfo`, который возвращает <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-224">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="ddcf7-225">В примере применяются два вхождения <xref:System.Xml.Serialization.XmlElementAttribute> к полю с указанием разных <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> значений для каждого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-225">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="ddcf7-226">Каждый экземпляр разрешает <xref:System.Xml.Serialization.XmlSerializer> для сериализации заданных типов, которые вставлены в массив.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-226">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ddcf7-227">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-227">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-228">Получает или задает имя созданного XML-элемента</span><span class="sxs-lookup"><span data-stu-id="ddcf7-228">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="ddcf7-229">Имя созданного XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-229">The name of the generated XML element.</span></span> <span data-ttu-id="ddcf7-230">По умолчанию используется идентификатор члена</span><span class="sxs-lookup"><span data-stu-id="ddcf7-230">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-231">Укажите <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> Если вы хотите использовать имя сгенерированного элемента XML отличалось от идентификатора участника.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-231">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="ddcf7-232">Можно задать же <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> значение на более чем один член класса, если созданный XML-документ использует пространства имен XML, чтобы различать элементы с одинаковыми именами.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-232">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="ddcf7-233">Дополнительные сведения об использовании пространства имен и имена с префиксом в XML-документе, см. в разделе <xref:System.Xml.Serialization.XmlSerializerNamespaces> класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-233">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-234">В следующем примере задается <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> свойство <xref:System.Xml.Serialization.XmlElementAttribute> новое значение.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-234">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-235">Получает или задает значение, указывающее квалифицирован ли элемент.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-235">Gets or sets a value that indicates whether the element is qualified.</span></span></summary>
        <value><span data-ttu-id="ddcf7-236">Одно из значений перечисления <see cref="T:System.Xml.Schema.XmlSchemaForm" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-236">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="ddcf7-237">Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-237">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-238"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> Определяет, является ли элемент XML полное или неполное.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-238">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="ddcf7-239"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> Свойства соответствует спецификации 1999 консорциума World Wide Web [пространства имен в XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-239">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium 1999 specification, [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>  
  
 <span data-ttu-id="ddcf7-240">Если <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> задано любое значение, попытка задать <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> свойства `XmlSchemaForm.Unqualified` возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-240">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="ddcf7-241">Значение по умолчанию `XmlSchemaForm.None`, указывает, что <xref:System.Xml.Serialization.XmlSerializer> для проверки схемы для XML-документа определить, является ли пространство имен полным.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-241">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="ddcf7-242">Если схема не задает значение для отдельного элемента или атрибута, <xref:System.Xml.Serialization.XmlSerializer> использует `elementFormDefault` и `attributeFormDefault` значения, чтобы определить, является ли элемент или атрибут полным.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-242">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="ddcf7-243">Приведенный ниже код XML показывает схему:</span><span class="sxs-lookup"><span data-stu-id="ddcf7-243">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="ddcf7-244">При <xref:System.Xml.Serialization.XmlSerializer> считывает схему, <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> для обоих `Name` и `Number` — `XmlSchemaForm.None`, но `Name` элемент квалифицировано, хотя `Number` элемента равно «unqualified».</span><span class="sxs-lookup"><span data-stu-id="ddcf7-244">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-245">В следующем примере задается <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> свойства `XmlSchemaForm.Unqualified`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-245">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-246">Получает или задает значение, которое указывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать члена, имеющего значение <see langword="null" />, в качестве пустого тега с атрибутом <see langword="xsi:nil" /> со значением <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-246">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="ddcf7-247"><see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут <see langword="xsi:nil" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-247"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-248">Спецификация схемы XML для структур позволяет явно указывать, что содержимое элемента отсутствует XML-документ.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-248">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="ddcf7-249">Такой элемент содержит атрибут `xsi:nil` присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-249">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="ddcf7-250">Дополнительные сведения см. в спецификации консорциума World Wide Web [XML Schema Part 1: Структуры](https://www.w3.org/TR/xmlschema-1/).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-250">For more information, see the World Wide Web Consortium specification, [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/).</span></span>
  
 <span data-ttu-id="ddcf7-251">Если <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> свойству `true`, `xsi:nil` атрибут создается для членов класса, которые были заданы для `null`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-251">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="ddcf7-252">Например, если выбрать поле с именем `MyStringArray` для `null`, <xref:System.Xml.Serialization.XmlSerializer> создает следующий код XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-252">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="ddcf7-253">Если <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> свойство `false`, элемент XML, создается для членов класса, которые были заданы для `null`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-253">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddcf7-254">Невозможно применить <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> свойство к элементу типизируется как тип значения, так как тип значения не может содержать `null`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-254">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="ddcf7-255">Кроме того, не может установить это свойство `false` для типов значений, допускающие значение NULL.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-255">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="ddcf7-256">Если такие типы имеют `null`, они будут сериализованы, задав `xsi:nil` для `true`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-256">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-257">В следующем примере показано поле с <xref:System.Xml.Serialization.XmlElementAttribute> применения к нему и <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> свойство значение `false`.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-257">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-258">Получает или задает пространство имен, присвоенное элементу XML, получаемому при сериализации класса.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-258">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span></span></summary>
        <value><span data-ttu-id="ddcf7-259">Пространство имен XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-259">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-260"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> Свойства соответствует спецификации консорциума World Wide Web [пространства имен в XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span><span class="sxs-lookup"><span data-stu-id="ddcf7-260">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium specification, [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>  
  
 <span data-ttu-id="ddcf7-261">Для создания пространств имен, связанных с префиксом, необходимо создать <xref:System.Xml.Serialization.XmlSerializerNamespaces> , содержащий пространства имен и префиксы, используемые в документе XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-261">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="ddcf7-262">Как задать пространство имен для каждого <xref:System.Xml.Serialization.XmlArrayAttribute>, он должен соответствовать одному из пространств имен в <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-262">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="ddcf7-263">При генерации XML каждый массив получает префикс, связанный с указанным пространством имен.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-263">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-264">Возвращает или задает явный порядок сериализации или десериализации элементов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-264">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="ddcf7-265">Порядок генерирования кода.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-265">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-266">Используйте <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> перечисление, чтобы дать указание <xref:System.Web.Services.Description.ServiceDescriptionImporter> для создания кода, который задает <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-266">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ddcf7-267">Один раз <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> свойство было использовано для одного открытого свойства или поля в типе, он должен применяться к все открытые свойства и поля для этого типа и всех наследуемых типов.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-267">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddcf7-268">Получает или задает тип объекта, используемый для представления элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-268">Gets or sets the object type used to represent the XML element.</span></span></summary>
        <value><span data-ttu-id="ddcf7-269"><see cref="T:System.Type" /> члена.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-269">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddcf7-270">Используйте <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство, чтобы указать производного типа для поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-270">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="ddcf7-271">Если поле или свойство возвращает <xref:System.Collections.ArrayList>, можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlElementAttribute> к элементу.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-271">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="ddcf7-272">Для каждого экземпляра, установите <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство с типом объекта, который может быть вставлен в массив.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-272">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddcf7-273">В следующем примере используется <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство, чтобы указать производного объекта для <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-273">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="ddcf7-274">В следующем примере применяются три экземпляра <xref:System.Xml.Serialization.XmlElementAttribute> полю, которое возвращает <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-274">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="ddcf7-275">Каждый экземпляр указывает тип, допустимый в поле.</span><span class="sxs-lookup"><span data-stu-id="ddcf7-275">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>