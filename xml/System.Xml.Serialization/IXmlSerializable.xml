<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6ba04df9f4691c166c077ed025013951e401d89" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70568885" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет пользовательский формат для сериализации и десериализации XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализовать этот интерфейс можно по двум причинам. Первый заключается в управлении способом сериализации или десериализации объекта с <xref:System.Xml.Serialization.XmlSerializer>помощью. Например, можно поблочировать данные в байты вместо буферизации больших наборов данных, а также избежать инфляции, возникающей при кодировании данных с помощью кодировки Base64. <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> Для управления сериализацией реализуйте методы и <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> для управления классами и <xref:System.Xml.XmlReader> <xref:System.Xml.XmlWriter> , используемыми для чтения и записи XML. Пример см. [в разделе как выполнить Фрагментирование сериализованных данных](~/docs/standard/serialization/how-to-chunk-serialized-data.md).  
  
 Вторая причина — возможность управлять схемой. Чтобы включить эту функцию, необходимо применить <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> к сериализуемым типу и указать имя статического члена, который возвращает схему. Пример см. в разделе <xref:System.Xml.Serialization.XmlSchemaProviderAttribute>.  
  
 Класс, реализующий интерфейс, должен иметь конструктор без параметров. Это требование для <xref:System.Xml.Serialization.XmlSerializer> класса.  
  
   
  
## Examples  
 В следующем примере кода показана реализация <xref:System.Xml.Serialization.IXmlSerializable> интерфейса, который сериализует закрытое поле.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Введение в сериализацию XML</related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Данный метод зарезервирован и не используется. При реализации интерфейса <see langword="IXmlSerializable" /> этот метод должен возвращать значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), а если необходимо указать пользовательскую схему, то вместо использования метода следует применить <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> к классу.</summary>
        <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации или десериализации объекта <xref:System.Xml.Serialization.XmlSerializer> класс не выполняет проверку XML. Поэтому часто бывает полезно опускать информацию о схеме, предоставляя тривиальный способ реализации этого метода, например возврат `null` (`Nothing` в Visual Basic).  
  
 Если требуется предоставить сведения о схеме, следует использовать <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> атрибут. Метод по-прежнему должен `null` возвращать `Nothing`(или). `GetSchema`  
  
 Некоторые [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] типы, а также устаревшие пользовательские типы, `IXmlSerializable` реализующие интерфейс, `GetSchema` `XmlSchemaProvider`могут использовать вместо. В этом случае метод возвращает точную XML-схему, описывающую XML-представление объекта, созданного <xref:System.Data.DataSet.WriteXml%2A> методом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Поток <see cref="T:System.Xml.XmlReader" />, из которого выполняется десериализация объекта.</param>
        <summary>Создает объект из представления XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод должен воспроизводить объект, используя сведения, записанные <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> методом. <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>  
  
 При вызове этого метода модуль чтения размещается на открывающем теге, который упаковывает информацию для вашего типа. То есть непосредственно в открывающем теге, который указывает начало сериализованного объекта. При возврате из этого метода он должен считывать весь элемент от начала до конца, включая все его содержимое. В отличие от <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> метода, платформа не обрабатывает элемент оболочки автоматически. Это необходимо сделать в реализации. Невозможность отслеживания этих правил позиционирования может привести к тому, что код создаст непредвиденные исключения среды выполнения или поврежденные данные.  
  
 При реализации этого метода следует учитывать возможность того, что злоумышленник может предоставить правильно сформированное, но недопустимое XML-представление, чтобы отключить или иным образом изменить поведение приложения.  
  
   
  
## Examples  
 В следующем примере показана реализация <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> метода.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 В следующем примере показано использование <xref:System.Xml.Serialization.XmlSerializer> класса для десериализации этого объекта.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Поток <see cref="T:System.Xml.XmlWriter" />, в который выполняется сериализация объекта.</param>
        <summary>Преобразует объект в представление XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предоставляемая <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> реализация должна записывать XML-представление объекта. Платформа записывает элемент-оболочку и позиционирует модуль записи XML после его запуска. Ваша реализация может записывать свое содержимое, включая дочерние элементы. Затем платформа закрывает элемент оболочки.  
  
 Напишите достаточно информации <xref:System.Xml.XmlWriter> в поток, чтобы <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> метод воссоздать объект.  
  
 Например, если состояние объекта содержит переменную массива, не забудьте записать длину массива или использовать родительский элемент для хранения элементов, описывающих значения массива, чтобы вы могли узнать, сколько значений считывать при воссоздании объекта.  
  
   
  
## Examples  
 В следующем примере показана реализация <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> метода.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 В следующем примере показано использование <xref:System.Xml.Serialization.XmlSerializer> класса для десериализации этого объекта.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
