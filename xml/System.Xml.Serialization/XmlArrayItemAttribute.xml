<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13e579faca401274b8a66994712d16f618265d9c" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70358354" /></Metadata><TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0741f-101">Представляет атрибут, который определяет производные типы, которые могут быть размещены <see cref="T:System.Xml.Serialization.XmlSerializer" /> в сериализованном массиве.</span><span class="sxs-lookup"><span data-stu-id="0741f-101">Represents an attribute that specifies the derived types that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can place in a serialized array.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-102">Объект принадлежит семейству атрибутов, который управляет тем <xref:System.Xml.Serialization.XmlSerializer> , как сериализует или десериализует объект. <xref:System.Xml.Serialization.XmlArrayItemAttribute></span><span class="sxs-lookup"><span data-stu-id="0741f-102">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="0741f-103">Полный список схожих атрибутов см. в разделе [атрибуты, управляющие СЕРИАЛИЗАЦИЕЙ XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="0741f-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="0741f-104">Можно применить <xref:System.Xml.Serialization.XmlArrayItemAttribute> к любому открытому члену, доступному для чтения и записи, который возвращает массив, или предоставляет доступ к одному.</span><span class="sxs-lookup"><span data-stu-id="0741f-104">You can apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to any public read/write member that returns an array, or provides access to one.</span></span> <span data-ttu-id="0741f-105">Например, поле, возвращающее массив объектов, коллекцию, <xref:System.Collections.ArrayList>или любой класс, <xref:System.Collections.IEnumerable> реализующий интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0741f-105">For example, a field that returns an array of objects, a collection, an <xref:System.Collections.ArrayList>, or any class that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="0741f-106">Поддерживает полиморфизм. Иными словами, он <xref:System.Xml.Serialization.XmlSerializer> позволяет добавлять производные объекты в массив. <xref:System.Xml.Serialization.XmlArrayItemAttribute></span><span class="sxs-lookup"><span data-stu-id="0741f-106">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> supports polymorphism--in other words, it allows the <xref:System.Xml.Serialization.XmlSerializer> to add derived objects to an array.</span></span> <span data-ttu-id="0741f-107">Например, предположим, что класс `Mammal` является производным от базового класса с именем. `Animal`</span><span class="sxs-lookup"><span data-stu-id="0741f-107">For example, suppose a class named `Mammal` is derived from a base class named `Animal`.</span></span> <span data-ttu-id="0741f-108">Далее предположим, что класс с `MyAnimals` именем содержит поле, которое возвращает `Animal` массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-108">Further suppose that a class named `MyAnimals` contains a field that returns an array of `Animal` objects.</span></span> <span data-ttu-id="0741f-109">Чтобы разрешить <xref:System.Xml.Serialization.XmlSerializer> для сериализации `Animal` итипа`Mammal` , и, применяйте кполюдважды,каждыйразуказываяодиниздвухдопустимыхтипов.<xref:System.Xml.Serialization.XmlArrayItemAttribute></span><span class="sxs-lookup"><span data-stu-id="0741f-109">To allow the <xref:System.Xml.Serialization.XmlSerializer> to serialize both the `Animal` and `Mammal` type, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field twice, each time specifying one of the two acceptable types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0741f-110">Можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlArrayItemAttribute> или <xref:System.Xml.Serialization.XmlElementAttribute> , чтобы указать типы объектов, которые могут быть вставлены в массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-110">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> or <xref:System.Xml.Serialization.XmlElementAttribute> to specify types of objects that can be inserted into the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0741f-111">Сериализация поля или свойства, возвращающего интерфейс или массив интерфейсов, не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="0741f-111">The serialization of a field or property that returns an interface or array of interfaces is not supported.</span></span>  
  
 <span data-ttu-id="0741f-112">Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="0741f-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0741f-113">Вы можете использовать слово `XmlArrayItem` в коде, а не дольше. <xref:System.Xml.Serialization.XmlArrayItemAttribute></span><span class="sxs-lookup"><span data-stu-id="0741f-113">You can use the word `XmlArrayItem` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-114">В следующем примере сериализуется класс с именем `Group` , `Employee` который содержит поле с `Employees` именем, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-114">The following example serializes a class named `Group` that contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="0741f-115">Пример применяет <xref:System.Xml.Serialization.XmlArrayItemAttribute> к полю, тем самым указывая <xref:System.Xml.Serialization.XmlSerializer> , что он может вставлять объекты типа базового класса (`Employee`) и производного класса (`Manager`) в сериализованный массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-115">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> that it can insert objects of both the base class (`Employee`) type and derived class type (`Manager`) into the serialized array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="0741f-116">Введение в сериализацию XML</span><span class="sxs-lookup"><span data-stu-id="0741f-116">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="0741f-117">Практическое руководство. Указание имени альтернативного элемента для потока XML</span><span class="sxs-lookup"><span data-stu-id="0741f-117">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="0741f-118">Управление сериализацией XML с использованием атрибутов</span><span class="sxs-lookup"><span data-stu-id="0741f-118">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="0741f-119">Примеры сериализации XML</span><span class="sxs-lookup"><span data-stu-id="0741f-119">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="0741f-120">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="0741f-120">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0741f-121">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0741f-122">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-122">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0741f-123">В следующем примере сериализуется класс с именем `Transportation` , `Vehicle` который содержит поле с `MyVehicles` именем, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-123">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="0741f-124">Пример применяет <xref:System.Xml.Serialization.XmlArrayItemAttribute> к полю, <xref:System.Xml.Serialization.XmlSerializer> позволяя вставлять экземпляры `Car` класса, который является производным от `Vehicle` класса, в массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-124">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="0741f-125">Имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-125">The name of the XML element.</span></span></param>
        <summary><span data-ttu-id="0741f-126">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и указывает имя элемента XML, сгенерированного в документе XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-127">Эта перегрузка задает <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0741f-127">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="0741f-128">Используйте эту перегрузку, если необходимо, чтобы имя созданного элемента XML отличалось от идентификатора члена.</span><span class="sxs-lookup"><span data-stu-id="0741f-128">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="0741f-129">XML-документ, содержащий пространства имен, может содержать более одной версии имени элемента.</span><span class="sxs-lookup"><span data-stu-id="0741f-129">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="0741f-130">Дополнительные сведения см. в свойстве <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>.</span><span class="sxs-lookup"><span data-stu-id="0741f-130">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-131">В следующем примере сериализуется класс с именем `Transportation` , `Vehicle` который содержит поле с `MyVehicles` именем, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-131">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="0741f-132">Пример применяет <xref:System.Xml.Serialization.XmlArrayItemAttribute> к полю, <xref:System.Xml.Serialization.XmlSerializer> позволяя вставлять экземпляры `Car` класса, который является производным от `Vehicle` класса, в массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-132">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="0741f-133">При применении атрибута в примере задается <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> свойство `elementName` с помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="0741f-133">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0741f-134">Тип <see cref="T:System.Type" /> сериализуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="0741f-134">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <summary><span data-ttu-id="0741f-135">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет <see cref="T:System.Type" />, который может быть вставлен в сериализованный массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-135">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the <see cref="T:System.Type" /> that can be inserted into the serialized array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0741f-136">В следующем примере сериализуется класс с именем `Transportation` , `Vehicle` который содержит поле с `MyVehicles` именем, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-136">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="0741f-137">Пример применяет <xref:System.Xml.Serialization.XmlArrayItemAttribute> к полю, <xref:System.Xml.Serialization.XmlSerializer> позволяя вставлять экземпляры `Car` класса, который является производным от `Vehicle` класса, в массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-137">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="0741f-138">При применении атрибута в примере задается <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> свойство `type` с помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="0741f-138">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="0741f-139">Имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-139">The name of the XML element.</span></span></param>
        <param name="type"><span data-ttu-id="0741f-140">Тип <see cref="T:System.Type" /> сериализуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="0741f-140">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <summary><span data-ttu-id="0741f-141">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет имя элемента XML, сгенерированного в документе XML, и <see cref="T:System.Type" />, который может быть вставлен в сгенерированный документ XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document and the <see cref="T:System.Type" /> that can be inserted into the generated XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-142">Эта перегрузка задает <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> свойства и.</span><span class="sxs-lookup"><span data-stu-id="0741f-142">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> properties.</span></span>  
  
 <span data-ttu-id="0741f-143">Используйте эту перегрузку, если необходимо, чтобы имя созданного элемента XML отличалось от идентификатора члена.</span><span class="sxs-lookup"><span data-stu-id="0741f-143">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="0741f-144">XML-документ, содержащий пространства имен, может содержать более одной версии имени элемента.</span><span class="sxs-lookup"><span data-stu-id="0741f-144">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="0741f-145">Дополнительные сведения см. в свойстве <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>.</span><span class="sxs-lookup"><span data-stu-id="0741f-145">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-146">В следующем примере сериализуется класс с именем `Transportation` , `Vehicle` который содержит поле с `MyVehicles` именем, которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-146">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="0741f-147">Пример применяет <xref:System.Xml.Serialization.XmlArrayItemAttribute> к полю, <xref:System.Xml.Serialization.XmlSerializer> позволяя вставлять экземпляры `Car` класса, который является производным от `Vehicle` класса, в массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-147">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="0741f-148">При применении <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> атрибута в примере свойство задается `elementName` с помощью параметра, `type` а <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> свойство — с помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="0741f-148">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-149">Возвращает или задает тип данных XML сгенерированного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-149">Gets or sets the XML data type of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="0741f-150">Тип данных определения схемы XML (XSD).</span><span class="sxs-lookup"><span data-stu-id="0741f-150">An XML schema definition (XSD) data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-151">В следующей таблице перечислены простые типы данных схемы XML с их эквивалентами .NET.</span><span class="sxs-lookup"><span data-stu-id="0741f-151">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="0741f-152">`base64Binary` Для схемы <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> XML и `hexBinary` типов данных используйте массив <xref:System.Byte> объектов и примените <xref:System.Xml.Serialization.XmlArrayItemAttribute> свойство со свойством, имеющим значение "base64Binary" или "hexBinary", в зависимости от ситуации.</span><span class="sxs-lookup"><span data-stu-id="0741f-152">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> objects, and apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="0741f-153">`time` Для схемы <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> XML и `date` типов <xref:System.DateTime> данных используйте тип и примените <xref:System.Xml.Serialization.XmlArrayItemAttribute> атрибут со значением "Date" или "Time".</span><span class="sxs-lookup"><span data-stu-id="0741f-153">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="0741f-154">Для каждого типа схемы XML, сопоставленного со строкой, примените <xref:System.Xml.Serialization.XmlArrayItemAttribute> <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> свойство со свойством, установленным в тип схемы XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-154">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with its <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="0741f-155">Однако это не изменяет формат сериализации, а только схему для элемента.</span><span class="sxs-lookup"><span data-stu-id="0741f-155">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0741f-156">В свойстве учитывается регистр, поэтому его необходимо задать в точности до одного из типов данных схемы XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-156">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0741f-157">Передача двоичных данных в виде XML-элемента более эффективна, а затем передается как XML-атрибут.</span><span class="sxs-lookup"><span data-stu-id="0741f-157">Passing binary data as an XML element is more efficient then passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="0741f-158">Дополнительные сведения о типах данных схемы XML см. в разделе XML- [схема документа консорциум W3C часть 2: Типы типов](https://www.w3.org/TR/xmlschema-2/).</span><span class="sxs-lookup"><span data-stu-id="0741f-158">For more information about XML Schema data types, see the World Wide Web Consortium document [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).</span></span>  
  
|<span data-ttu-id="0741f-159">Тип данных XSD</span><span class="sxs-lookup"><span data-stu-id="0741f-159">XSD data type</span></span>|<span data-ttu-id="0741f-160">Тип данных .NET</span><span class="sxs-lookup"><span data-stu-id="0741f-160">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="0741f-161">anyURI</span><span class="sxs-lookup"><span data-stu-id="0741f-161">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-162">base64Binary</span><span class="sxs-lookup"><span data-stu-id="0741f-162">base64Binary</span></span>|<span data-ttu-id="0741f-163"><xref:System.Byte> Массив объектов</span><span class="sxs-lookup"><span data-stu-id="0741f-163">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="0741f-164">boolean</span><span class="sxs-lookup"><span data-stu-id="0741f-164">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="0741f-165">byte</span><span class="sxs-lookup"><span data-stu-id="0741f-165">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="0741f-166">date</span><span class="sxs-lookup"><span data-stu-id="0741f-166">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="0741f-167">dateTime</span><span class="sxs-lookup"><span data-stu-id="0741f-167">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="0741f-168">decimal</span><span class="sxs-lookup"><span data-stu-id="0741f-168">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="0741f-169">double</span><span class="sxs-lookup"><span data-stu-id="0741f-169">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="0741f-170">ENTITY</span><span class="sxs-lookup"><span data-stu-id="0741f-170">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-171">ОБЪЕКТАХ</span><span class="sxs-lookup"><span data-stu-id="0741f-171">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-172">float</span><span class="sxs-lookup"><span data-stu-id="0741f-172">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="0741f-173">гдай</span><span class="sxs-lookup"><span data-stu-id="0741f-173">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-174">гмонс</span><span class="sxs-lookup"><span data-stu-id="0741f-174">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-175">гмонсдай</span><span class="sxs-lookup"><span data-stu-id="0741f-175">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-176">геар</span><span class="sxs-lookup"><span data-stu-id="0741f-176">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-177">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="0741f-177">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-178">hexBinary</span><span class="sxs-lookup"><span data-stu-id="0741f-178">hexBinary</span></span>|<span data-ttu-id="0741f-179"><xref:System.Byte> Массив объектов</span><span class="sxs-lookup"><span data-stu-id="0741f-179">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="0741f-180">ID</span><span class="sxs-lookup"><span data-stu-id="0741f-180">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-181">IDREF</span><span class="sxs-lookup"><span data-stu-id="0741f-181">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-182">IDREFS</span><span class="sxs-lookup"><span data-stu-id="0741f-182">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-183">int</span><span class="sxs-lookup"><span data-stu-id="0741f-183">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="0741f-184">целочисленный</span><span class="sxs-lookup"><span data-stu-id="0741f-184">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-185">язык</span><span class="sxs-lookup"><span data-stu-id="0741f-185">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-186">long</span><span class="sxs-lookup"><span data-stu-id="0741f-186">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="0741f-187">name</span><span class="sxs-lookup"><span data-stu-id="0741f-187">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-188">NCName</span><span class="sxs-lookup"><span data-stu-id="0741f-188">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-189">негативеинтежер</span><span class="sxs-lookup"><span data-stu-id="0741f-189">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-190">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="0741f-190">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-191">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="0741f-191">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-192">normalizedString</span><span class="sxs-lookup"><span data-stu-id="0741f-192">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-193">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="0741f-193">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-194">нонпоситивеинтежер</span><span class="sxs-lookup"><span data-stu-id="0741f-194">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-195">NOTATION</span><span class="sxs-lookup"><span data-stu-id="0741f-195">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-196">поситивеинтежер</span><span class="sxs-lookup"><span data-stu-id="0741f-196">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-197">QName</span><span class="sxs-lookup"><span data-stu-id="0741f-197">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="0741f-198">длительность</span><span class="sxs-lookup"><span data-stu-id="0741f-198">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-199">string</span><span class="sxs-lookup"><span data-stu-id="0741f-199">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-200">short</span><span class="sxs-lookup"><span data-stu-id="0741f-200">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="0741f-201">время</span><span class="sxs-lookup"><span data-stu-id="0741f-201">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="0741f-202">token</span><span class="sxs-lookup"><span data-stu-id="0741f-202">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="0741f-203">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="0741f-203">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="0741f-204">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="0741f-204">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="0741f-205">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="0741f-205">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="0741f-206">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="0741f-206">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="0741f-207">В следующем примере сериализуется класс с именем `PurchaseOrder`.</span><span class="sxs-lookup"><span data-stu-id="0741f-207">The following example serializes a class named `PurchaseOrder`.</span></span> <span data-ttu-id="0741f-208">К трем элементам применяются <xref:System.Xml.Serialization.XmlArrayItemAttribute> несколько экземпляров класса, <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> а свойству для каждого экземпляра присваивается тип, разрешенный в массиве.</span><span class="sxs-lookup"><span data-stu-id="0741f-208">Several instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> class are applied to three members, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property for each instance is set to a type allowed in the array.</span></span>  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-209">Получает или задает имя созданного XML-элемента</span><span class="sxs-lookup"><span data-stu-id="0741f-209">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="0741f-210">Имя созданного XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="0741f-210">The name of the generated XML element.</span></span> <span data-ttu-id="0741f-211">По умолчанию используется идентификатор члена</span><span class="sxs-lookup"><span data-stu-id="0741f-211">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-212">Укажите, <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> если необходимо, чтобы имя созданного элемента XML отличалось от идентификатора члена.</span><span class="sxs-lookup"><span data-stu-id="0741f-212">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="0741f-213">Вы можете задать одно и <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> то же значение более чем для одного члена класса, если созданный XML-документ использует пространства имен XML для различения одинаково именованных членов.</span><span class="sxs-lookup"><span data-stu-id="0741f-213">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members.</span></span> <span data-ttu-id="0741f-214">Дополнительные сведения об использовании пространств имен и префиксных имен в XML-документе см. в <xref:System.Xml.Serialization.XmlSerializerNamespaces> разделе класс.</span><span class="sxs-lookup"><span data-stu-id="0741f-214">For details about how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-215">В следующем примере <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> задается свойство `Vehicle` для класса `Car` и, тем самым <xref:System.Xml.Serialization.XmlSerializer> изменяя имена XML-элементов, создаваемых для этих классов.</span><span class="sxs-lookup"><span data-stu-id="0741f-215">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property for the `Vehicle` and `Car` class--thereby changing the names of XML elements that the <xref:System.Xml.Serialization.XmlSerializer> generates for those classes.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-216">Возвращает или задает значение, которое указывает, является ли имя сгенерированного элемента XML полным.</span><span class="sxs-lookup"><span data-stu-id="0741f-216">Gets or sets a value that indicates whether the name of the generated XML element is qualified.</span></span></summary>
        <value><span data-ttu-id="0741f-217">Одно из значений перечисления <see cref="T:System.Xml.Schema.XmlSchemaForm" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-217">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="0741f-218">Значение по умолчанию — <see langword="XmlSchemaForm.None" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-218">The default is <see langword="XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-219">Свойство определяет, является ли имя XML-элемента полным, в зависимости от [пространств имен спецификации консорциум W3C в XML.](https://www.w3.org/TR/xml-names/) <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A></span><span class="sxs-lookup"><span data-stu-id="0741f-219">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element name is qualified, based on the World Wide Web Consortium specification [Namespaces in XML](https://www.w3.org/TR/xml-names/).</span></span>  
  
 <span data-ttu-id="0741f-220"><xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> `XmlSchemaForm.Unqualified` Если для <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> свойства задано любое значение, попытка установить свойство на исключение.</span><span class="sxs-lookup"><span data-stu-id="0741f-220">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="0741f-221">Значение `XmlSchemaForm.None`по умолчанию указывает, что <xref:System.Xml.Serialization.XmlSerializer> необходимо проверить схему XML-документа, чтобы определить, является ли пространство имен полным.</span><span class="sxs-lookup"><span data-stu-id="0741f-221">The default value, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="0741f-222">Для элементов объект <xref:System.Xml.Serialization.XmlSerializer> проверяет значение атрибута `elementFormDefault`Schema-element.</span><span class="sxs-lookup"><span data-stu-id="0741f-222">For elements, the <xref:System.Xml.Serialization.XmlSerializer> checks the value of the schema-element attribute `elementFormDefault`.</span></span> <span data-ttu-id="0741f-223">Для атрибутов он проверяет значение атрибута `attributeFormDefault`элемента схемы.</span><span class="sxs-lookup"><span data-stu-id="0741f-223">For attributes, it checks the value of the schema-element attribute `attributeFormDefault`.</span></span> <span data-ttu-id="0741f-224">Например, следующая схема XML указывает, что `Name` элемент является полным, `Number` а элемент — неполным.</span><span class="sxs-lookup"><span data-stu-id="0741f-224">For example, the following XML Schema indicates that the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0741f-225">В следующем <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> примере свойству `Car` `XmlSchemaForm.Unqualified` `Vehicle`классаприсваивается значение`XmlSchemaForm.Qualified`, а свойствукласса—значение.<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A></span><span class="sxs-lookup"><span data-stu-id="0741f-225">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Vehicle` class to `XmlSchemaForm.Unqualified`, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Car` class to `XmlSchemaForm.Qualified`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="0741f-226">Свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> имеет значение <see langword="XmlSchemaForm.Unqualified" />, а свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> задано.</span><span class="sxs-lookup"><span data-stu-id="0741f-226">The <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> property is set to <see langword="XmlSchemaForm.Unqualified" /> and a <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> value is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-227">Получает или задает значение, которое показывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнить сериализацию члена как пустого тега XML с атрибутом <see langword="xsi:nil" />, для которого установлено значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-227">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="0741f-228"><see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> генерирует атрибут <see langword="xsi:nil" />, в противном случае <see langword="false" />, а экземпляр не генерируется.</span><span class="sxs-lookup"><span data-stu-id="0741f-228"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />, and no instance is generated.</span></span> <span data-ttu-id="0741f-229">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-229">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-230">Спецификация XML-схемы для структур позволяет XML-документу явно сообщать, что содержимое элемента отсутствует.</span><span class="sxs-lookup"><span data-stu-id="0741f-230">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="0741f-231">Такой элемент содержит атрибут `xsi:nil` , для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="0741f-231">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="0741f-232">Дополнительные сведения см. в спецификации консорциум W3C, озаглавленной ["схема XML", часть 1: Структуры](https://www.w3.org/TR/xmlschema-1/).</span><span class="sxs-lookup"><span data-stu-id="0741f-232">For more information, see the World Wide Web Consortium specification titled [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/).</span></span>  
  
 <span data-ttu-id="0741f-233">Если свойство имеет `true`значение, `xsi:nil` атрибут создается для членов класса, для `null`которых было задано значение. <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A></span><span class="sxs-lookup"><span data-stu-id="0741f-233">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="0741f-234">Например, если задать поле с именем `MyStringArray` `null`, то <xref:System.Xml.Serialization.XmlSerializer> создает следующий XML-код.</span><span class="sxs-lookup"><span data-stu-id="0741f-234">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="0741f-235">Если свойство имеет `false`значение, XML-элемент не создается. <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A></span><span class="sxs-lookup"><span data-stu-id="0741f-235">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0741f-236">Невозможно применить <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> свойство к элементу, типизированному как тип значения, так как тип значения не может `null`содержать.</span><span class="sxs-lookup"><span data-stu-id="0741f-236">You cannot apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-237">В следующем примере сериализуется класс с именем `Group`, который содержит поле с именем `Employees` `Employee` , которое возвращает массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-237">The following example serializes a class named `Group`, which contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="0741f-238">Второй класс с именем `Manager` является производным `Employee`от.</span><span class="sxs-lookup"><span data-stu-id="0741f-238">A second class named `Manager` derives from `Employee`.</span></span> <span data-ttu-id="0741f-239">Указывает, что объект <xref:System.Xml.Serialization.XmlSerializer> может вставлять оба `Employee` объекта `Manager` и в массив. <xref:System.Xml.Serialization.XmlArrayItemAttribute></span><span class="sxs-lookup"><span data-stu-id="0741f-239">An <xref:System.Xml.Serialization.XmlArrayItemAttribute> specifies that the <xref:System.Xml.Serialization.XmlSerializer> can insert both `Employee` and `Manager` objects into the array.</span></span> <span data-ttu-id="0741f-240">В примере <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> задается свойство, что говорит <xref:System.Xml.Serialization.XmlSerializer> о том, что `xsi:nil` не нужно создавать объекты атрибутов в массиве, для `null`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="0741f-240">The example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property, thereby telling the <xref:System.Xml.Serialization.XmlSerializer> not to generate the `xsi:nil` attribute objects in the array set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-241">Возвращает или задает пространство имен сгенерированного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-241">Gets or sets the namespace of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="0741f-242">Пространство имен сгенерированного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-242">The namespace of the generated XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-243">Свойство соответствует [пространству имен](https://www.w3.org/TR/xml-names/)спецификаций консорциум W3C в XML. <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A></span><span class="sxs-lookup"><span data-stu-id="0741f-243">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium specification [Namespaces in XML](https://www.w3.org/TR/xml-names/).</span></span>  
  
 <span data-ttu-id="0741f-244">Чтобы создать пространства имен для использования в XML-документе и соответствующих префиксах, необходимо создать объект <xref:System.Xml.Serialization.XmlSerializerNamespaces> , содержащий все пары префиксов и пространств имен.</span><span class="sxs-lookup"><span data-stu-id="0741f-244">To create namespaces to use in the XML document and associated prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains all the prefix and namespace pairs.</span></span> <span data-ttu-id="0741f-245">Пространство имен, заданное для <xref:System.Xml.Serialization.XmlArrayAttribute> каждого из них, должно <xref:System.Xml.Serialization.XmlSerializerNamespaces>содержаться в.</span><span class="sxs-lookup"><span data-stu-id="0741f-245">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="0741f-246"><xref:System.Xml.Serialization.XmlSerializer> Когда формирует документ, он правильно добавляет префикс имени элемента для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="0741f-246">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-247">В следующем примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> и <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> задается свойство.</span><span class="sxs-lookup"><span data-stu-id="0741f-247">The following example applies an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-248">Возвращает или задает уровень в иерархии элементов XML, на который воздействует <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="0741f-248">Gets or sets the level in a hierarchy of XML elements that the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> affects.</span></span></summary>
        <value><span data-ttu-id="0741f-249">Индекс, начинающийся с нуля, набора индексов в массиве массивов.</span><span class="sxs-lookup"><span data-stu-id="0741f-249">The zero-based index of a set of indexes in an array of arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-250">XML-документ может содержать иерархии XML-элементов.</span><span class="sxs-lookup"><span data-stu-id="0741f-250">An XML document can contain hierarchies of XML elements.</span></span> <span data-ttu-id="0741f-251">Для представления такой иерархии используется массив массивов.</span><span class="sxs-lookup"><span data-stu-id="0741f-251">To represent such a hierarchy, an array of arrays is used.</span></span> <span data-ttu-id="0741f-252">В таком массиве каждый индекс представляет уровень в иерархии.</span><span class="sxs-lookup"><span data-stu-id="0741f-252">In such an array, each index represents a level in the hierarchy.</span></span> <span data-ttu-id="0741f-253">Поэтому свойство используется только при <xref:System.Xml.Serialization.XmlArrayItemAttribute> применении к полю, которое возвращает массив массивов. <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A></span><span class="sxs-lookup"><span data-stu-id="0741f-253">Therefore, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is only used when applying an <xref:System.Xml.Serialization.XmlArrayItemAttribute> to a field that returns an array of arrays.</span></span>  
  
 <span data-ttu-id="0741f-254">При применении атрибута укажите уровень иерархии, на который влияет атрибут, установив <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span><span class="sxs-lookup"><span data-stu-id="0741f-254">When applying the attribute, specify which hierarchy level the attribute affects by setting the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span></span> <span data-ttu-id="0741f-255">Первый индекс всегда имеет значение 0; Поэтому необязательно устанавливать его <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> параметр- <xref:System.Xml.Serialization.XmlArrayItemAttribute> -a <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> без значения применяется к первому индексу массива.</span><span class="sxs-lookup"><span data-stu-id="0741f-255">The first index always has the value of 0; therefore it is optional to set its <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> --an <xref:System.Xml.Serialization.XmlArrayItemAttribute> without a <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> value is applied to the first array index.</span></span> <span data-ttu-id="0741f-256">Указанные значения должны <xref:System.Xml.Serialization.XmlArrayItemAttribute> <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> быть указаны только для последующих объектов (например, 1, 2, 3 и т. д.).</span><span class="sxs-lookup"><span data-stu-id="0741f-256">Only the subsequent <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects require <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> values specified (as 1, 2, 3, and so forth).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0741f-257">Следующий пример применяет <xref:System.Xml.Serialization.XmlArrayItemAttribute> три атрибута к массиву массивов.</span><span class="sxs-lookup"><span data-stu-id="0741f-257">The following example applies three <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to an array of arrays.</span></span> <span data-ttu-id="0741f-258">Чтобы указать, к какому из массивов применяется каждый атрибут, <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> свойству присваивается индекс массивов.</span><span class="sxs-lookup"><span data-stu-id="0741f-258">To specify which of the arrays each attribute applies to, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is set to the index of the arrays.</span></span>  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0741f-259">Возвращает или задает тип, допустимый в массиве.</span><span class="sxs-lookup"><span data-stu-id="0741f-259">Gets or sets the type allowed in an array.</span></span></summary>
        <value><span data-ttu-id="0741f-260"><see cref="T:System.Type" />, допустимый в массиве.</span><span class="sxs-lookup"><span data-stu-id="0741f-260">A <see cref="T:System.Type" /> that is allowed in the array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0741f-261"><xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> Используйте свойство, чтобы указать переопределенный тип для открытого поля или открытого значения свойства для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="0741f-261">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify an overridden type for a public field or public read/write property value.</span></span>  
  
 <span data-ttu-id="0741f-262">Если поле или свойство возвращает массив типа <xref:System.Object>, примените несколько экземпляров <xref:System.Xml.Serialization.XmlArrayItemAttribute> объекта к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="0741f-262">If a field or property returns an array of type <xref:System.Object>, apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field or property.</span></span> <span data-ttu-id="0741f-263">Для каждого экземпляра присвойте <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойству тип объекта, который может быть вставлен в массив.</span><span class="sxs-lookup"><span data-stu-id="0741f-263">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="0741f-264">Если массив содержит только типы-примитивы, то не нужно применять <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0741f-264">If an array contains only primitive types, you do not need to apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span> <span data-ttu-id="0741f-265">По умолчанию <xref:System.Xml.Serialization.XmlSerializer> создает ряд элементов с одинаковым именем элемента для каждого значения, но для каждого элемента устанавливается тип данных схемы XML.</span><span class="sxs-lookup"><span data-stu-id="0741f-265">By default, the <xref:System.Xml.Serialization.XmlSerializer> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type.</span></span> <span data-ttu-id="0741f-266">Например, приведенный ниже код</span><span class="sxs-lookup"><span data-stu-id="0741f-266">For example, the following code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 <span data-ttu-id="0741f-267">результаты в этом XML:</span><span class="sxs-lookup"><span data-stu-id="0741f-267">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 <span data-ttu-id="0741f-268">Однако если указать <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> свойство для каждого типа-примитива, имя элемента для каждого значения создается с использованием имени типа .NET.</span><span class="sxs-lookup"><span data-stu-id="0741f-268">However, if you specify the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property for each primitive type, the element name for each value is generated using the .NET type name.</span></span> <span data-ttu-id="0741f-269">Например, следующий код:</span><span class="sxs-lookup"><span data-stu-id="0741f-269">For example this code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 <span data-ttu-id="0741f-270">результаты в этом XML:</span><span class="sxs-lookup"><span data-stu-id="0741f-270">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0741f-271">В следующем примере сериализуется массив объектов.</span><span class="sxs-lookup"><span data-stu-id="0741f-271">The following example serializes an array of objects.</span></span> <span data-ttu-id="0741f-272">Поле, возвращающее массив, имеет атрибут с двумя <xref:System.Xml.Serialization.XmlArrayItemAttribute> экземплярами.</span><span class="sxs-lookup"><span data-stu-id="0741f-272">The field that returns the array is attributed with two <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances.</span></span> <span data-ttu-id="0741f-273">Каждый экземпляр инструктирует объект <xref:System.Xml.Serialization.XmlSerializer> для принятия указанного <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> в массиве.</span><span class="sxs-lookup"><span data-stu-id="0741f-273">Each instance instructs the <xref:System.Xml.Serialization.XmlSerializer> to accept the specified <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> in the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
