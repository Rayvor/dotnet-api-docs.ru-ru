<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aecf119aaebecbfbef513be0fbc8423b8bee592" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73395555" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="26eb0-101">Определяет набор свойств и методов для создания исходного кода в среде построения ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="26eb0-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span></span> <span data-ttu-id="26eb0-102">Это абстрактный класс.</span><span class="sxs-lookup"><span data-stu-id="26eb0-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-103">Среда сборки ASP.NET использует объекты <xref:System.Web.Compilation.BuildProvider> для создания исходного кода для различных типов файлов в приложении.</span><span class="sxs-lookup"><span data-stu-id="26eb0-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="26eb0-104">Классы, производные от <xref:System.Web.Compilation.BuildProvider>, в основном предоставляют исходный код для файлов, веб-страниц, ресурсов и других настраиваемых элементов.</span><span class="sxs-lookup"><span data-stu-id="26eb0-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="26eb0-105">Как правило, экземпляр класса <xref:System.Web.Compilation.BuildProvider> не создается напрямую.</span><span class="sxs-lookup"><span data-stu-id="26eb0-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="26eb0-106">Вместо этого реализуется класс, производный от <xref:System.Web.Compilation.BuildProvider>, и настраивается реализация <xref:System.Web.Compilation.BuildProvider> для использования в среде сборки ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="26eb0-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="26eb0-107">Экземпляры класса <xref:System.Web.Compilation.BuildProvider> используются с объектами <xref:System.Web.Compilation.AssemblyBuilder> для создания одного или нескольких файлов в скомпилированной сборке.</span><span class="sxs-lookup"><span data-stu-id="26eb0-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="26eb0-108"><xref:System.Web.Compilation.BuildProvider> экземпляр создает исходный код на соответствующем языке для отдельных файлов, а объект <xref:System.Web.Compilation.AssemblyBuilder> объединяет источник, который используется каждым экземпляром <xref:System.Web.Compilation.BuildProvider>, в одну сборку.</span><span class="sxs-lookup"><span data-stu-id="26eb0-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="26eb0-109">Среда сборки ASP.NET использует экземпляры класса <xref:System.Web.Compilation.BuildProvider> для построения файлов в приложении.</span><span class="sxs-lookup"><span data-stu-id="26eb0-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="26eb0-110">Свойство <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> класса <xref:System.Web.Compilation.BuildProvider> указывает путь к файлу, который должен быть построен.</span><span class="sxs-lookup"><span data-stu-id="26eb0-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="26eb0-111">Расширение файла каждого файла в приложении сопоставляется с соответствующим поставщиком сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="26eb0-112">Среда сборки ASP.NET инициализирует экземпляр <xref:System.Web.Compilation.BuildProvider> для каждого файла на основе расширения файла и использует методы <xref:System.Web.Compilation.BuildProvider> для создания исходного кода для файла.</span><span class="sxs-lookup"><span data-stu-id="26eb0-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="26eb0-113">Среда сборки ASP.NET передает объект <xref:System.Web.Compilation.AssemblyBuilder> на основе предпочтительного языка компилятора и контекста файла в методы <xref:System.Web.Compilation.BuildProvider> при сборке сборки из одного или нескольких файлов, чтобы экземпляр <xref:System.Web.Compilation.BuildProvider> мог использовать исходный код для его файл в общую сборку.</span><span class="sxs-lookup"><span data-stu-id="26eb0-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="26eb0-114">Чтобы определить пользовательские действия сборки для типа файла в приложении ASP.NET, необходимо создать производный класс от <xref:System.Web.Compilation.BuildProvider>, реализовать члены в производном классе для создания типа файла и настроить поставщик сборки для соответствующего расширения файла в файл конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="26eb0-115">Определяет расширение файла для поддерживаемых файлов, а также указывает, поддерживает ли поставщик сборки файлы кода, веб-файлы, файлы ресурсов или все файлы.</span><span class="sxs-lookup"><span data-stu-id="26eb0-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="26eb0-116">Используйте атрибут `type`, чтобы указать полное имя типа для реализации поставщика сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="26eb0-117">Используйте класс <xref:System.Web.Compilation.BuildProviderAppliesToAttribute>, чтобы указать, применяется ли поставщик сборки к файлам в каталоге App_Code, к файлам в каталоге веб-содержимого, к глобальным или локальным ресурсам или ко всем файлам.</span><span class="sxs-lookup"><span data-stu-id="26eb0-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="26eb0-118">Используйте атрибут `extension`, чтобы указать расширение файла, используемое для определения файлов, поддерживаемых классом <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="26eb0-119">Используйте класс <xref:System.Web.Configuration.BuildProviderCollection> для проверки поставщиков сборки в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="26eb0-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="26eb0-120">Дополнительные сведения о настройке поставщика сборки см. в разделе [элемент BuildProvider для компиляции (схема параметров ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span><span class="sxs-lookup"><span data-stu-id="26eb0-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="26eb0-121">Чтобы реализовать поставщик сборки, создающий исходный код для пользовательского типа файлов, производные от класса <xref:System.Web.Compilation.BuildProvider>и переопределить метод <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>, чтобы создать исходный код для поддерживаемого типа файла.</span><span class="sxs-lookup"><span data-stu-id="26eb0-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="26eb0-122">Созданный источник добавляется в объект <xref:System.Web.Compilation.AssemblyBuilder> в форме графа CodeDOM или в виде содержимого, представляющего физический файл исходного кода.</span><span class="sxs-lookup"><span data-stu-id="26eb0-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="26eb0-123">Если поставщику сборки требуется определенный язык программирования, переопределите свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, чтобы оно возвращало <xref:System.Web.Compilation.CompilerType> объект для поддерживаемого языка программирования.</span><span class="sxs-lookup"><span data-stu-id="26eb0-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="26eb0-124">Если поставщику сборки не требуется определенный язык программирования, не следует переопределять свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>. Используйте реализацию базового класса, которая указывает, что поставщик сборки может использовать любой язык .NET Framework, например Visual Basic или C#.</span><span class="sxs-lookup"><span data-stu-id="26eb0-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="26eb0-125">Чтобы реализовать поставщик сборки, создающий исходный код для веб-содержимого, необходимо создать производный класс от <xref:System.Web.Compilation.BuildProvider> и переопределить метод <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, чтобы он возвращал <xref:System.Type> для класса, созданного <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="26eb0-126">Переопределите метод <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>, чтобы создать исходный код для типа, предоставленного поддерживаемым файлом.</span><span class="sxs-lookup"><span data-stu-id="26eb0-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26eb0-127">Добавление настраиваемого класса <xref:System.Web.Compilation.BuildProvider> в файл Web. config работает на веб-сайте ASP.NET, но не работает в проекте веб-приложения ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="26eb0-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="26eb0-128">В проекте веб-приложения код, созданный классом <xref:System.Web.Compilation.BuildProvider>, не может быть включен в приложение.</span><span class="sxs-lookup"><span data-stu-id="26eb0-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="26eb0-129">Дополнительные сведения см. в разделе [Обзор предварительной компиляции проекта веб-приложения ASP.NET](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span><span class="sxs-lookup"><span data-stu-id="26eb0-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26eb0-130">В следующем примере кода показана простая реализация поставщика сборки, наследуемая от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="26eb0-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="26eb0-131">Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> члены базового класса.</span><span class="sxs-lookup"><span data-stu-id="26eb0-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="26eb0-132">В примере не реализована реализация класса `SampleClassGenerator`.</span><span class="sxs-lookup"><span data-stu-id="26eb0-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="26eb0-133">Дополнительные сведения см. в статье Общие сведения о классе <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26eb0-134">Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.BuildProvider" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-135">Поскольку класс <xref:System.Web.Compilation.BuildProvider> является абстрактным, нельзя создать экземпляр <xref:System.Web.Compilation.BuildProvider> непосредственно с помощью конструктора.</span><span class="sxs-lookup"><span data-stu-id="26eb0-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="26eb0-136">При наследовании от класса <xref:System.Web.Compilation.BuildProvider> Переопределите конструктор, чтобы реализовать пользовательские действия инициализации для реализации поставщика сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26eb0-137">Представляет тип компилятора, используемый поставщиком построения для создания исходного кода для пользовательского типа файлов.</span><span class="sxs-lookup"><span data-stu-id="26eb0-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span></span></summary>
        <value><span data-ttu-id="26eb0-138">Доступный только для чтения объект <see cref="T:System.Web.Compilation.CompilerType" />, представляющий генератор кода, компилятор кода и параметры компилятора, с помощью которых осуществляется построение исходного кода для виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span></span> <span data-ttu-id="26eb0-139">Базовый класс возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-139">The base class returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-140">Используйте свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, чтобы указать параметры для компиляции исходного кода для реализации <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="26eb0-141">Свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> `null`, если поставщику сборки не требуется конкретный язык кода для создания и компиляции исходного кода.</span><span class="sxs-lookup"><span data-stu-id="26eb0-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="26eb0-142">Чтобы задать значение для объекта <xref:System.Web.Compilation.CompilerType> в реализации поставщика сборки, используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> или <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="26eb0-143">Свойство <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> указывает реализацию <xref:System.CodeDom.Compiler.CodeDomProvider>, которая используется для создания и компиляции исходного кода для поставщика сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="26eb0-144">Свойство <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> определяет параметры, используемые для компиляции исходного кода в сборку.</span><span class="sxs-lookup"><span data-stu-id="26eb0-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26eb0-145">В следующем примере кода показана простая реализация поставщика сборки, наследуемая от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="26eb0-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="26eb0-146">Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> члены базового класса.</span><span class="sxs-lookup"><span data-stu-id="26eb0-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder"><span data-ttu-id="26eb0-147">Построитель сборок, который ссылается на исходный код, созданный поставщиком компоновки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-147">The assembly builder that references the source code generated by the build provider.</span></span></param>
        <summary><span data-ttu-id="26eb0-148">Формирует исходный код для виртуального пути поставщика компоновки и добавляет исходный код в заданный построитель сборок.</span><span class="sxs-lookup"><span data-stu-id="26eb0-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-149">Чтобы реализовать поставщик сборки, создающий исходный код для пользовательского типа файлов, производные от класса <xref:System.Web.Compilation.BuildProvider> и переопределить метод <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>, чтобы создать исходный код для поддерживаемого типа файла.</span><span class="sxs-lookup"><span data-stu-id="26eb0-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="26eb0-150">Как правило, реализация <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> поставщика сборки считывает свойство <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>, анализирует содержимое и добавляет созданный исходный код в указанный объект <xref:System.Web.Compilation.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="26eb0-151">Вы можете участвовать в сборке исходного кода в форме объекта <xref:System.IO.TextWriter> или графа CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="26eb0-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="26eb0-152">Чтобы добавить исходный код в сборку через объект <xref:System.IO.TextWriter>, используйте метод <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="26eb0-153">Чтобы добавить исходный код в сборку графа CodeDOM, используйте метод <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="26eb0-154">Если поставщик построения создает исходный код на определенном языке программирования, необходимо переопределить свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, чтобы оно возвращало <xref:System.Web.Compilation.CompilerType> объект для поддерживаемого языка программирования.</span><span class="sxs-lookup"><span data-stu-id="26eb0-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26eb0-155">В следующем примере кода показана простая реализация поставщика сборки, наследуемая от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="26eb0-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="26eb0-156">Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> члены базового класса.</span><span class="sxs-lookup"><span data-stu-id="26eb0-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="26eb0-157">Динамическое создание и компиляция исходного кода</span><span class="sxs-lookup"><span data-stu-id="26eb0-157">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable"><span data-ttu-id="26eb0-158">При возвращении этого метода в нем содержится словарь, в котором перечислены все соответствующие номера и директивы pragma строк исходного кода.</span><span class="sxs-lookup"><span data-stu-id="26eb0-158">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span></span> <span data-ttu-id="26eb0-159">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="26eb0-159">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="26eb0-160">Представляет контейнер для созданного графа CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="26eb0-160">Represents the container for the generated CodeDOM graph.</span></span></summary>
        <returns><span data-ttu-id="26eb0-161">Контейнер для графа CodeDOM, созданного экземпляром <see cref="T:System.Web.Compilation.BuildProvider" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-161">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-162">Этот метод можно использовать с помощью класса <xref:System.Web.Compilation.ClientBuildManager> для выделения синтаксиса и поддержки конструктора в Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="26eb0-162">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="26eb0-163">Результат компиляции для виртуального пути поставщика компоновки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-163">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="26eb0-164">Создает строку, которая должна быть сохранена в скомпилированной сборке.</span><span class="sxs-lookup"><span data-stu-id="26eb0-164">Generates a string to be persisted in the compiled assembly.</span></span></summary>
        <returns><span data-ttu-id="26eb0-165">Строка, которую необходимо сохранить в среде построения, или значение <see langword="null" />, если в экземпляре <see cref="T:System.Web.Compilation.BuildProvider" /> не реализуется метод <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-165">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-166">Метод <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> объекта <xref:System.Web.Compilation.BuildManager> создает экземпляр поставщика сборки для входного виртуального пути и вызывает метод <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> для объекта <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-166">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="26eb0-167">Базовый класс <xref:System.Web.Compilation.BuildProvider> возвращает `null` для метода <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>, указывающего, что <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> не реализован.</span><span class="sxs-lookup"><span data-stu-id="26eb0-167">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="26eb0-168">Некоторые реализации поставщика сборки могут реализовать <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> вместо метода <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-168">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="26eb0-169">Объект <xref:System.Web.Compilation.BuildProvider> обычно использует <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> для возврата объекта <xref:System.Type> для виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-169">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="26eb0-170">Однако можно использовать метод <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>, чтобы указать, что объект <xref:System.Web.Compilation.BuildProvider> может создавать несколько типов из виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-170">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26eb0-171">Возвращает параметры компилятора для языка приложения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="26eb0-171">Returns the compiler settings for the default language in the application.</span></span></summary>
        <returns><span data-ttu-id="26eb0-172">Класс <see cref="T:System.Web.Compilation.CompilerType" />, который представляет параметры компилятора для языка приложения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="26eb0-172">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span></span> <span data-ttu-id="26eb0-173">Базовый класс возвращает компилятор по умолчанию, исходя из файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-173">The base class returns the default compiler based on the application configuration file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-174">Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>, чтобы проверить тип компилятора по умолчанию для поставщика сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="26eb0-175">Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> для проверки типа компилятора, настроенного в поставщике сборки, для конкретного имени языка.</span><span class="sxs-lookup"><span data-stu-id="26eb0-175">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="26eb0-176">Базовый класс <xref:System.Web.Compilation.BuildProvider> определяет тип компилятора по умолчанию, используя значение атрибута `defaultLanguage` в разделе файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-176">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="26eb0-177">Если в разделе компиляции не задан язык по умолчанию, то тип компилятора по умолчанию устанавливается с помощью поставщика языка <xref:Microsoft.VisualBasic.VBCodeProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-177">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="26eb0-178">При наследовании от класса <xref:System.Web.Compilation.BuildProvider> можно использовать <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>, чтобы задать свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> в реализации.</span><span class="sxs-lookup"><span data-stu-id="26eb0-178">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language"><span data-ttu-id="26eb0-179">Имя языка кода.</span><span class="sxs-lookup"><span data-stu-id="26eb0-179">A code language name.</span></span></param>
        <summary><span data-ttu-id="26eb0-180">Возвращает параметры компилятора для поставщика построения, исходя из заданного языка.</span><span class="sxs-lookup"><span data-stu-id="26eb0-180">Returns the compiler settings for the build provider based on the specified language.</span></span></summary>
        <returns><span data-ttu-id="26eb0-181">Класс <see cref="T:System.Web.Compilation.CompilerType" />, который представляет параметры компилятора для поставщика построения, исходя из заданного языка.</span><span class="sxs-lookup"><span data-stu-id="26eb0-181">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span></span> <span data-ttu-id="26eb0-182">Базовый класс возвращает для языка параметры компилятор по умолчанию, исходя из файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-182">The base class returns the default compiler settings for the language based on the application configuration file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-183">Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> для проверки типа компилятора, настроенного в поставщике сборки, для конкретного имени языка.</span><span class="sxs-lookup"><span data-stu-id="26eb0-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="26eb0-184">Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>, чтобы проверить тип компилятора по умолчанию для поставщика сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-184">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="26eb0-185">Базовый класс <xref:System.Web.Compilation.BuildProvider> определяет тип компилятора по умолчанию, используя элементы <xref:System.Web.Configuration.Compiler> в свойстве <xref:System.Web.Configuration.CompilationSection.Compilers%2A> объекта <xref:System.Web.Configuration.CompilationSection> для файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="26eb0-185">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="26eb0-186">Это эквивалентно проверке элементов в элементах и в разделах файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="26eb0-186">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="26eb0-187">Например, для `language` значения VB метод базового класса возвращает объект <xref:System.Web.Compilation.CompilerType>, соответствующий настроенным параметрам для экземпляра <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-187">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="26eb0-188">При наследовании от класса <xref:System.Web.Compilation.BuildProvider> можно использовать <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>, чтобы задать значение свойства <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> для языка, поддерживаемого вашей реализацией.</span><span class="sxs-lookup"><span data-stu-id="26eb0-188">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26eb0-189"><paramref name="language" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-189"><paramref name="language" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="26eb0-190">Параметр <paramref name="language" /> не соответствует компилятору, настроенному для данного поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-190"><paramref name="language" /> does not match a configured compiler for the build provider.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="26eb0-191">Результат компиляции для виртуального пути поставщика компоновки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-191">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="26eb0-192">Возвращает тип, созданный поставщиком построения из виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-192">Returns a type generated by the build provider from the virtual path.</span></span></summary>
        <returns><span data-ttu-id="26eb0-193">Тип, созданный поставщиком построения для виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-193">The type that is generated by the build provider for the virtual path.</span></span> <span data-ttu-id="26eb0-194">Базовый класс возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-194">The base class returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-195">Чтобы реализовать поставщик сборки, создающий исходный код для веб-содержимого, такого как файлы ASPX, производные от класса <xref:System.Web.Compilation.BuildProvider> и переопределите метод <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, чтобы он возвращал тип, созданный поставщиком сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-195">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="26eb0-196">Система сборки ASP.NET компилирует файлы для каждого поставщика сборки и создает объект <xref:System.CodeDom.Compiler.CompilerResults>, который передается методу <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-196">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="26eb0-197">Как правило, реализация <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> поставщика сборки использует метод <xref:System.Reflection.Assembly.GetType%2A> в свойстве <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> входного объекта `results` для возврата предоставленного типа.</span><span class="sxs-lookup"><span data-stu-id="26eb0-197">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="26eb0-198">Результат компиляции для виртуального пути поставщика компоновки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-198">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="26eb0-199">Возвращает значение, определяющее действия, которые необходимо выполнить после построения виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-199">Returns a value indicating actions required when a virtual path is built.</span></span></summary>
        <returns><span data-ttu-id="26eb0-200">Значение <see cref="T:System.Web.Compilation.BuildProviderResultFlags" />, указывающее, какие действия необходимо выполнить после построения виртуального пути в среде построения ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="26eb0-200">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-201">Метод <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> используется средой сборки ASP.NET при использовании экземпляров класса <xref:System.Web.Compilation.BuildProvider> для построения файлов и загрузки скомпилированных сборок.</span><span class="sxs-lookup"><span data-stu-id="26eb0-201">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="26eb0-202">Базовый метод класса <xref:System.Web.Compilation.BuildProvider> возвращает значение поля <xref:System.Web.Compilation.BuildProviderResultFlags.Default>, указывающее, что при построении виртуального пути специальные действия не требуются.</span><span class="sxs-lookup"><span data-stu-id="26eb0-202">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="26eb0-203">При наследовании от класса <xref:System.Web.Compilation.BuildProvider> можно реализовать метод <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> для возврата другого значения <xref:System.Web.Compilation.BuildProviderResultFlags> для пользовательского типа файла или виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-203">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="26eb0-204">Например, если для перестроения виртуального пути требуется перезагрузка содержащего <xref:System.AppDomain> объекта, можно вернуть значение перечисления <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> из метода <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-204">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26eb0-205">Открывает средство чтения текста для считывания данных из виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-205">Opens a text reader for reading from a virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26eb0-206">Открывает средство чтения текста для считывания данных из виртуального пути к текущему объекту поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-206">Opens a text reader for reading from the virtual path of the current build provider object.</span></span></summary>
        <returns><span data-ttu-id="26eb0-207">Открытый объект <see cref="T:System.IO.TextReader" />, с помощью которого можно считать содержимое свойства <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-207">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-208">Используйте метод <xref:System.IO.TextReader.Read%2A> для возвращенного <xref:System.IO.TextReader> объекта, чтобы прочитать содержимое свойства <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> для объекта <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-208">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="26eb0-209">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> необходимо использовать метод <xref:System.IO.TextReader.Close%2A>, чтобы закрыть объект <xref:System.IO.TextReader> и освободить связанные системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="26eb0-209">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="26eb0-210">Виртуальный путь для считывания.</span><span class="sxs-lookup"><span data-stu-id="26eb0-210">The virtual path to read.</span></span></param>
        <summary><span data-ttu-id="26eb0-211">Открывает средство чтения текста для считывания данных из заданного виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-211">Opens a text reader for reading from a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="26eb0-212">Открытый объект <see cref="T:System.IO.TextReader" />, который можно использовать для считывания содержимого заданного виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-212">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-213">Используйте метод <xref:System.IO.TextReader.Read%2A> для возвращенного <xref:System.IO.TextReader> объекта, чтобы прочитать содержимое виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-213">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="26eb0-214">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> необходимо использовать метод <xref:System.IO.TextReader.Close%2A>, чтобы закрыть объект <xref:System.IO.TextReader> и освободить связанные системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="26eb0-214">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26eb0-215">Открывает поток для считывания данных из виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-215">Opens a stream for reading from a virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26eb0-216">Открывает поток для считывания данных из виртуального пути к текущему объекту поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-216">Opens a stream for reading the virtual path of the current build provider object.</span></span></summary>
        <returns><span data-ttu-id="26eb0-217">Открытый объект <see cref="T:System.IO.Stream" />, с помощью которого можно считать содержимое свойства <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span><span class="sxs-lookup"><span data-stu-id="26eb0-217">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-218">Используйте метод <xref:System.IO.Stream.Read%2A> для возвращенного <xref:System.IO.Stream> объекта, чтобы прочитать содержимое виртуального пути для объекта <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-218">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="26eb0-219">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> необходимо использовать метод <xref:System.IO.Stream.Close%2A>, чтобы закрыть объект <xref:System.IO.Stream> и освободить связанные системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="26eb0-219">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="26eb0-220">Виртуальный путь для считывания.</span><span class="sxs-lookup"><span data-stu-id="26eb0-220">The virtual path to read.</span></span></param>
        <summary><span data-ttu-id="26eb0-221">Открывает поток для считывания данных из заданного виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-221">Opens a stream for reading from a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="26eb0-222">Открытый объект <see cref="T:System.IO.Stream" />, который можно использовать для считывания содержимого заданного виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-222">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-223">Используйте метод <xref:System.IO.Stream.Read%2A> для возвращенного <xref:System.IO.Stream> объекта, чтобы прочитать содержимое виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="26eb0-223">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="26eb0-224">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> необходимо использовать метод <xref:System.IO.Stream.Close%2A>, чтобы закрыть объект <xref:System.IO.Stream> и освободить связанные системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="26eb0-224">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="26eb0-225">Результаты компилятора.</span><span class="sxs-lookup"><span data-stu-id="26eb0-225">Compiler results.</span></span></param>
        <summary><span data-ttu-id="26eb0-226">При переопределении в производном классе позволяет просматривать сообщения об ошибках компилятора, чтобы их можно было изменить для предоставления более подробной информации.</span><span class="sxs-lookup"><span data-stu-id="26eb0-226">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-227">Обычно этот метод переопределяется, чтобы можно было изменить ошибки компилятора перед их отображением, чтобы сделать текст ошибки более удобным для пользователя.</span><span class="sxs-lookup"><span data-stu-id="26eb0-227">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="26eb0-228">Это полезно в сценариях, где вы узнаете о контексте определенных ошибок и можете предоставить пользователю сведения о том, как их исправить.</span><span class="sxs-lookup"><span data-stu-id="26eb0-228">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="26eb0-229">Первоначальное сообщение об ошибке компилятора обычно характерно для конкретной языковой конструкции и может не сделать реальную причину или решение очевидным для пользователя.</span><span class="sxs-lookup"><span data-stu-id="26eb0-229">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="26eb0-230">Доступ к ошибкам можно получить с помощью объекта <xref:System.CodeDom.Compiler.CompilerResults>, который передается в метод.</span><span class="sxs-lookup"><span data-stu-id="26eb0-230">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26eb0-231">Представляет сборки для компиляции с исходным кодом, созданным поставщиком построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-231">Represents the assemblies to compile with the source generated by the build provider.</span></span></summary>
        <value><span data-ttu-id="26eb0-232">Доступный только для чтения набор сборок, на которые может ссылаться исходный код, созданный с помощью поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-232">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-233">Среда сборки ASP.NET Инициализирует коллекцию сборок, доступных для ссылки поставщиком сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-233">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="26eb0-234">Исходный код, создаваемый поставщиком сборки, может использовать открытые типы в упоминаемых сборках.</span><span class="sxs-lookup"><span data-stu-id="26eb0-234">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="26eb0-235">Коллекция сборок, на которую указывает ссылка, состоит из других сборок, построенных в приложении ASP.NET, и сборок, перечисленных в элементе в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="26eb0-235">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="26eb0-236">Если поставщик сборки создает исходный код, который ссылается на дополнительные сборки, то поставщик сборки добавляет дополнительные сборки с помощью метода <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-236">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="26eb0-237">Среда сборки ASP.NET разрешает внешние типы во время компиляции сборки с помощью сборок, на которые имеются ссылки, добавленных поставщиками сборки, и коллекции сборок по умолчанию, доступной для ссылки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-237">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="26eb0-238">Коллекция <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> не включает сборки, которые добавляются для ссылки другими поставщиками сборок с помощью метода <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-238">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extension"><span data-ttu-id="26eb0-239">Расширение имени файла, для которого предназначен поставщик построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-239">The file-name extension that the build provider is for.</span></span></param>
        <param name="providerType"><span data-ttu-id="26eb0-240">Класс поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-240">The build provider class.</span></span></param>
        <summary><span data-ttu-id="26eb0-241">Регистрирует поставщик построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-241">Registers a build provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-242">Этот метод можно использовать для регистрации поставщиков сборки вместо определения их в файле Web. config.</span><span class="sxs-lookup"><span data-stu-id="26eb0-242">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="26eb0-243">Дополнительные сведения о поставщиках сборки см. в разделе класс <xref:System.Web.Compilation.BuildProvider> и [элемент BuildProvider для компиляции (схема параметров ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span><span class="sxs-lookup"><span data-stu-id="26eb0-243">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26eb0-244">Представляет файл, который необходимо построить с помощью данной реализации поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-244">Represents the file to be built by this build provider implementation.</span></span></summary>
        <value><span data-ttu-id="26eb0-245">Доступная только для чтения строка, в которой задан виртуальный путь к файлу, подлежащему компиляции с помощью данного поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-245">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-246">Виртуальный путь объекта <xref:System.Web.Compilation.BuildProvider> — это путь к файлу, компилируемому поставщиком сборки.</span><span class="sxs-lookup"><span data-stu-id="26eb0-246">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="26eb0-247">Например, если вы настроили пользовательский класс <xref:System.Web.Compilation.BuildProvider> для создания всех файлов на веб-сайте с пользовательским расширением. ABC, если веб-сайт имеет имя WebSite1, а веб-сайт содержит файл с именем example. ABC, свойство <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> содержит значение `/WebSite1/Example.abc`.</span><span class="sxs-lookup"><span data-stu-id="26eb0-247">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="26eb0-248">Расширение файла каждого файла в приложении определяет тип файла и соответствующий поставщик сборки для типа файла.</span><span class="sxs-lookup"><span data-stu-id="26eb0-248">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="26eb0-249">Среда сборки ASP.NET инициализирует объект <xref:System.Web.Compilation.BuildProvider> для каждого файла в зависимости от типа файла и использует методы <xref:System.Web.Compilation.BuildProvider> для создания источника для каждого файла.</span><span class="sxs-lookup"><span data-stu-id="26eb0-249">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="26eb0-250">Дополнительные сведения о настройке поставщика сборки см. в разделе [элемент BuildProvider для компиляции (схема параметров ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span><span class="sxs-lookup"><span data-stu-id="26eb0-250">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26eb0-251">Представляет коллекцию виртуальных путей, которые должны быть построены перед тем, как поставщик построения сможет создать код.</span><span class="sxs-lookup"><span data-stu-id="26eb0-251">Represents a collection of virtual paths that must be built before the build provider generates code.</span></span></summary>
        <value><span data-ttu-id="26eb0-252">Доступная только для чтения коллекция строк, представляющих виртуальные пути, от которых зависит данный экземпляр поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="26eb0-252">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26eb0-253">Свойство <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> — это коллекция виртуальных путей, которые должны быть скомпилированы перед тем, как экземпляр <xref:System.Web.Compilation.BuildProvider> создает исходный код.</span><span class="sxs-lookup"><span data-stu-id="26eb0-253">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="26eb0-254">Сборки из виртуальных путей в <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> добавляются в качестве ссылок на компиляцию для экземпляра <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="26eb0-254">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>
