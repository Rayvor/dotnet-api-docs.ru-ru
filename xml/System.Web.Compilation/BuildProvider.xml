<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aecf119aaebecbfbef513be0fbc8423b8bee592" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73395555" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет набор свойств и методов для создания исходного кода в среде построения ASP.NET. Это абстрактный класс.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Среда сборки ASP.NET использует объекты <xref:System.Web.Compilation.BuildProvider> для создания исходного кода для различных типов файлов в приложении. Классы, производные от <xref:System.Web.Compilation.BuildProvider>, в основном предоставляют исходный код для файлов, веб-страниц, ресурсов и других настраиваемых элементов.  
  
 Как правило, экземпляр класса <xref:System.Web.Compilation.BuildProvider> не создается напрямую. Вместо этого реализуется класс, производный от <xref:System.Web.Compilation.BuildProvider>, и настраивается реализация <xref:System.Web.Compilation.BuildProvider> для использования в среде сборки ASP.NET.  
  
 Экземпляры класса <xref:System.Web.Compilation.BuildProvider> используются с объектами <xref:System.Web.Compilation.AssemblyBuilder> для создания одного или нескольких файлов в скомпилированной сборке. <xref:System.Web.Compilation.BuildProvider> экземпляр создает исходный код на соответствующем языке для отдельных файлов, а объект <xref:System.Web.Compilation.AssemblyBuilder> объединяет источник, который используется каждым экземпляром <xref:System.Web.Compilation.BuildProvider>, в одну сборку.  
  
 Среда сборки ASP.NET использует экземпляры класса <xref:System.Web.Compilation.BuildProvider> для построения файлов в приложении. Свойство <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> класса <xref:System.Web.Compilation.BuildProvider> указывает путь к файлу, который должен быть построен. Расширение файла каждого файла в приложении сопоставляется с соответствующим поставщиком сборки. Среда сборки ASP.NET инициализирует экземпляр <xref:System.Web.Compilation.BuildProvider> для каждого файла на основе расширения файла и использует методы <xref:System.Web.Compilation.BuildProvider> для создания исходного кода для файла. Среда сборки ASP.NET передает объект <xref:System.Web.Compilation.AssemblyBuilder> на основе предпочтительного языка компилятора и контекста файла в методы <xref:System.Web.Compilation.BuildProvider> при сборке сборки из одного или нескольких файлов, чтобы экземпляр <xref:System.Web.Compilation.BuildProvider> мог использовать исходный код для его файл в общую сборку.  
  
 Чтобы определить пользовательские действия сборки для типа файла в приложении ASP.NET, необходимо создать производный класс от <xref:System.Web.Compilation.BuildProvider>, реализовать члены в производном классе для создания типа файла и настроить поставщик сборки для соответствующего расширения файла в файл конфигурации приложения.  
  
 Определяет расширение файла для поддерживаемых файлов, а также указывает, поддерживает ли поставщик сборки файлы кода, веб-файлы, файлы ресурсов или все файлы. Используйте атрибут `type`, чтобы указать полное имя типа для реализации поставщика сборки. Используйте класс <xref:System.Web.Compilation.BuildProviderAppliesToAttribute>, чтобы указать, применяется ли поставщик сборки к файлам в каталоге App_Code, к файлам в каталоге веб-содержимого, к глобальным или локальным ресурсам или ко всем файлам. Используйте атрибут `extension`, чтобы указать расширение файла, используемое для определения файлов, поддерживаемых классом <xref:System.Web.Compilation.BuildProvider>. Используйте класс <xref:System.Web.Configuration.BuildProviderCollection> для проверки поставщиков сборки в файле конфигурации. Дополнительные сведения о настройке поставщика сборки см. в разделе [элемент BuildProvider для компиляции (схема параметров ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Чтобы реализовать поставщик сборки, создающий исходный код для пользовательского типа файлов, производные от класса <xref:System.Web.Compilation.BuildProvider>и переопределить метод <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>, чтобы создать исходный код для поддерживаемого типа файла. Созданный источник добавляется в объект <xref:System.Web.Compilation.AssemblyBuilder> в форме графа CodeDOM или в виде содержимого, представляющего физический файл исходного кода. Если поставщику сборки требуется определенный язык программирования, переопределите свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, чтобы оно возвращало <xref:System.Web.Compilation.CompilerType> объект для поддерживаемого языка программирования. Если поставщику сборки не требуется определенный язык программирования, не следует переопределять свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>. Используйте реализацию базового класса, которая указывает, что поставщик сборки может использовать любой язык .NET Framework, например Visual Basic или C#.  
  
 Чтобы реализовать поставщик сборки, создающий исходный код для веб-содержимого, необходимо создать производный класс от <xref:System.Web.Compilation.BuildProvider> и переопределить метод <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, чтобы он возвращал <xref:System.Type> для класса, созданного <xref:System.Web.Compilation.BuildProvider>. Переопределите метод <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>, чтобы создать исходный код для типа, предоставленного поддерживаемым файлом.  
  
> [!NOTE]
>  Добавление настраиваемого класса <xref:System.Web.Compilation.BuildProvider> в файл Web. config работает на веб-сайте ASP.NET, но не работает в проекте веб-приложения ASP.NET. В проекте веб-приложения код, созданный классом <xref:System.Web.Compilation.BuildProvider>, не может быть включен в приложение. Дополнительные сведения см. в разделе [Обзор предварительной компиляции проекта веб-приложения ASP.NET](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 В следующем примере кода показана простая реализация поставщика сборки, наследуемая от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса. Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> члены базового класса. В примере не реализована реализация класса `SampleClassGenerator`. Дополнительные сведения см. в статье Общие сведения о классе <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.BuildProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку класс <xref:System.Web.Compilation.BuildProvider> является абстрактным, нельзя создать экземпляр <xref:System.Web.Compilation.BuildProvider> непосредственно с помощью конструктора.  
  
 При наследовании от класса <xref:System.Web.Compilation.BuildProvider> Переопределите конструктор, чтобы реализовать пользовательские действия инициализации для реализации поставщика сборки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет тип компилятора, используемый поставщиком построения для создания исходного кода для пользовательского типа файлов.</summary>
        <value>Доступный только для чтения объект <see cref="T:System.Web.Compilation.CompilerType" />, представляющий генератор кода, компилятор кода и параметры компилятора, с помощью которых осуществляется построение исходного кода для виртуального пути. Базовый класс возвращает значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, чтобы указать параметры для компиляции исходного кода для реализации <xref:System.Web.Compilation.BuildProvider>. Свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> `null`, если поставщику сборки не требуется конкретный язык кода для создания и компиляции исходного кода.  
  
 Чтобы задать значение для объекта <xref:System.Web.Compilation.CompilerType> в реализации поставщика сборки, используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> или <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>.  
  
 Свойство <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> указывает реализацию <xref:System.CodeDom.Compiler.CodeDomProvider>, которая используется для создания и компиляции исходного кода для поставщика сборки. Свойство <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> определяет параметры, используемые для компиляции исходного кода в сборку.  
  
   
  
## Examples  
 В следующем примере кода показана простая реализация поставщика сборки, наследуемая от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса. Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> члены базового класса.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Построитель сборок, который ссылается на исходный код, созданный поставщиком компоновки.</param>
        <summary>Формирует исходный код для виртуального пути поставщика компоновки и добавляет исходный код в заданный построитель сборок.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы реализовать поставщик сборки, создающий исходный код для пользовательского типа файлов, производные от класса <xref:System.Web.Compilation.BuildProvider> и переопределить метод <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>, чтобы создать исходный код для поддерживаемого типа файла.  
  
 Как правило, реализация <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> поставщика сборки считывает свойство <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>, анализирует содержимое и добавляет созданный исходный код в указанный объект <xref:System.Web.Compilation.AssemblyBuilder>. Вы можете участвовать в сборке исходного кода в форме объекта <xref:System.IO.TextWriter> или графа CodeDOM. Чтобы добавить исходный код в сборку через объект <xref:System.IO.TextWriter>, используйте метод <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>. Чтобы добавить исходный код в сборку графа CodeDOM, используйте метод <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>.  
  
 Если поставщик построения создает исходный код на определенном языке программирования, необходимо переопределить свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, чтобы оно возвращало <xref:System.Web.Compilation.CompilerType> объект для поддерживаемого языка программирования.  
  
   
  
## Examples  
 В следующем примере кода показана простая реализация поставщика сборки, наследуемая от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса. Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> члены базового класса.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Динамическое создание и компиляция исходного кода</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">При возвращении этого метода в нем содержится словарь, в котором перечислены все соответствующие номера и директивы pragma строк исходного кода. Этот параметр передается неинициализированным.</param>
        <summary>Представляет контейнер для созданного графа CodeDOM.</summary>
        <returns>Контейнер для графа CodeDOM, созданного экземпляром <see cref="T:System.Web.Compilation.BuildProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать с помощью класса <xref:System.Web.Compilation.ClientBuildManager> для выделения синтаксиса и поддержки конструктора в Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Результат компиляции для виртуального пути поставщика компоновки.</param>
        <summary>Создает строку, которая должна быть сохранена в скомпилированной сборке.</summary>
        <returns>Строка, которую необходимо сохранить в среде построения, или значение <see langword="null" />, если в экземпляре <see cref="T:System.Web.Compilation.BuildProvider" /> не реализуется метод <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> объекта <xref:System.Web.Compilation.BuildManager> создает экземпляр поставщика сборки для входного виртуального пути и вызывает метод <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> для объекта <xref:System.Web.Compilation.BuildProvider>.  
  
 Базовый класс <xref:System.Web.Compilation.BuildProvider> возвращает `null` для метода <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>, указывающего, что <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> не реализован.  
  
 Некоторые реализации поставщика сборки могут реализовать <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> вместо метода <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>. Объект <xref:System.Web.Compilation.BuildProvider> обычно использует <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> для возврата объекта <xref:System.Type> для виртуального пути. Однако можно использовать метод <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>, чтобы указать, что объект <xref:System.Web.Compilation.BuildProvider> может создавать несколько типов из виртуального пути.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает параметры компилятора для языка приложения по умолчанию.</summary>
        <returns>Класс <see cref="T:System.Web.Compilation.CompilerType" />, который представляет параметры компилятора для языка приложения по умолчанию. Базовый класс возвращает компилятор по умолчанию, исходя из файла конфигурации приложения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>, чтобы проверить тип компилятора по умолчанию для поставщика сборки. Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> для проверки типа компилятора, настроенного в поставщике сборки, для конкретного имени языка.  
  
 Базовый класс <xref:System.Web.Compilation.BuildProvider> определяет тип компилятора по умолчанию, используя значение атрибута `defaultLanguage` в разделе файла конфигурации приложения. Если в разделе компиляции не задан язык по умолчанию, то тип компилятора по умолчанию устанавливается с помощью поставщика языка <xref:Microsoft.VisualBasic.VBCodeProvider>.  
  
 При наследовании от класса <xref:System.Web.Compilation.BuildProvider> можно использовать <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>, чтобы задать свойство <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> в реализации.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Имя языка кода.</param>
        <summary>Возвращает параметры компилятора для поставщика построения, исходя из заданного языка.</summary>
        <returns>Класс <see cref="T:System.Web.Compilation.CompilerType" />, который представляет параметры компилятора для поставщика построения, исходя из заданного языка. Базовый класс возвращает для языка параметры компилятор по умолчанию, исходя из файла конфигурации приложения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> для проверки типа компилятора, настроенного в поставщике сборки, для конкретного имени языка. Используйте метод <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>, чтобы проверить тип компилятора по умолчанию для поставщика сборки.  
  
 Базовый класс <xref:System.Web.Compilation.BuildProvider> определяет тип компилятора по умолчанию, используя элементы <xref:System.Web.Configuration.Compiler> в свойстве <xref:System.Web.Configuration.CompilationSection.Compilers%2A> объекта <xref:System.Web.Configuration.CompilationSection> для файла конфигурации. Это эквивалентно проверке элементов в элементах и в разделах файла конфигурации. Например, для `language` значения VB метод базового класса возвращает объект <xref:System.Web.Compilation.CompilerType>, соответствующий настроенным параметрам для экземпляра <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 При наследовании от класса <xref:System.Web.Compilation.BuildProvider> можно использовать <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>, чтобы задать значение свойства <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> для языка, поддерживаемого вашей реализацией.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">Параметр <paramref name="language" /> не соответствует компилятору, настроенному для данного поставщика построения.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Результат компиляции для виртуального пути поставщика компоновки.</param>
        <summary>Возвращает тип, созданный поставщиком построения из виртуального пути.</summary>
        <returns>Тип, созданный поставщиком построения для виртуального пути. Базовый класс возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы реализовать поставщик сборки, создающий исходный код для веб-содержимого, такого как файлы ASPX, производные от класса <xref:System.Web.Compilation.BuildProvider> и переопределите метод <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, чтобы он возвращал тип, созданный поставщиком сборки.  
  
 Система сборки ASP.NET компилирует файлы для каждого поставщика сборки и создает объект <xref:System.CodeDom.Compiler.CompilerResults>, который передается методу <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>. Как правило, реализация <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> поставщика сборки использует метод <xref:System.Reflection.Assembly.GetType%2A> в свойстве <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> входного объекта `results` для возврата предоставленного типа.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Результат компиляции для виртуального пути поставщика компоновки.</param>
        <summary>Возвращает значение, определяющее действия, которые необходимо выполнить после построения виртуального пути.</summary>
        <returns>Значение <see cref="T:System.Web.Compilation.BuildProviderResultFlags" />, указывающее, какие действия необходимо выполнить после построения виртуального пути в среде построения ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> используется средой сборки ASP.NET при использовании экземпляров класса <xref:System.Web.Compilation.BuildProvider> для построения файлов и загрузки скомпилированных сборок.  
  
 Базовый метод класса <xref:System.Web.Compilation.BuildProvider> возвращает значение поля <xref:System.Web.Compilation.BuildProviderResultFlags.Default>, указывающее, что при построении виртуального пути специальные действия не требуются.  
  
 При наследовании от класса <xref:System.Web.Compilation.BuildProvider> можно реализовать метод <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> для возврата другого значения <xref:System.Web.Compilation.BuildProviderResultFlags> для пользовательского типа файла или виртуального пути. Например, если для перестроения виртуального пути требуется перезагрузка содержащего <xref:System.AppDomain> объекта, можно вернуть значение перечисления <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> из метода <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает средство чтения текста для считывания данных из виртуального пути.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает средство чтения текста для считывания данных из виртуального пути к текущему объекту поставщика построения.</summary>
        <returns>Открытый объект <see cref="T:System.IO.TextReader" />, с помощью которого можно считать содержимое свойства <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IO.TextReader.Read%2A> для возвращенного <xref:System.IO.TextReader> объекта, чтобы прочитать содержимое свойства <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> для объекта <xref:System.Web.Compilation.BuildProvider>.  
  
 После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> необходимо использовать метод <xref:System.IO.TextReader.Close%2A>, чтобы закрыть объект <xref:System.IO.TextReader> и освободить связанные системные ресурсы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для считывания.</param>
        <summary>Открывает средство чтения текста для считывания данных из заданного виртуального пути.</summary>
        <returns>Открытый объект <see cref="T:System.IO.TextReader" />, который можно использовать для считывания содержимого заданного виртуального пути.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IO.TextReader.Read%2A> для возвращенного <xref:System.IO.TextReader> объекта, чтобы прочитать содержимое виртуального пути.  
  
 После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> необходимо использовать метод <xref:System.IO.TextReader.Close%2A>, чтобы закрыть объект <xref:System.IO.TextReader> и освободить связанные системные ресурсы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает поток для считывания данных из виртуального пути.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает поток для считывания данных из виртуального пути к текущему объекту поставщика построения.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Stream" />, с помощью которого можно считать содержимое свойства <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IO.Stream.Read%2A> для возвращенного <xref:System.IO.Stream> объекта, чтобы прочитать содержимое виртуального пути для объекта <xref:System.Web.Compilation.BuildProvider>.  
  
 После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> необходимо использовать метод <xref:System.IO.Stream.Close%2A>, чтобы закрыть объект <xref:System.IO.Stream> и освободить связанные системные ресурсы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для считывания.</param>
        <summary>Открывает поток для считывания данных из заданного виртуального пути.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Stream" />, который можно использовать для считывания содержимого заданного виртуального пути.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.IO.Stream.Read%2A> для возвращенного <xref:System.IO.Stream> объекта, чтобы прочитать содержимое виртуального пути.  
  
 После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> необходимо использовать метод <xref:System.IO.Stream.Close%2A>, чтобы закрыть объект <xref:System.IO.Stream> и освободить связанные системные ресурсы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="results">Результаты компилятора.</param>
        <summary>При переопределении в производном классе позволяет просматривать сообщения об ошибках компилятора, чтобы их можно было изменить для предоставления более подробной информации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно этот метод переопределяется, чтобы можно было изменить ошибки компилятора перед их отображением, чтобы сделать текст ошибки более удобным для пользователя. Это полезно в сценариях, где вы узнаете о контексте определенных ошибок и можете предоставить пользователю сведения о том, как их исправить. Первоначальное сообщение об ошибке компилятора обычно характерно для конкретной языковой конструкции и может не сделать реальную причину или решение очевидным для пользователя.  
  
 Доступ к ошибкам можно получить с помощью объекта <xref:System.CodeDom.Compiler.CompilerResults>, который передается в метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет сборки для компиляции с исходным кодом, созданным поставщиком построения.</summary>
        <value>Доступный только для чтения набор сборок, на которые может ссылаться исходный код, созданный с помощью поставщика построения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Среда сборки ASP.NET Инициализирует коллекцию сборок, доступных для ссылки поставщиком сборки. Исходный код, создаваемый поставщиком сборки, может использовать открытые типы в упоминаемых сборках. Коллекция сборок, на которую указывает ссылка, состоит из других сборок, построенных в приложении ASP.NET, и сборок, перечисленных в элементе в файле конфигурации.  
  
 Если поставщик сборки создает исходный код, который ссылается на дополнительные сборки, то поставщик сборки добавляет дополнительные сборки с помощью метода <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>. Среда сборки ASP.NET разрешает внешние типы во время компиляции сборки с помощью сборок, на которые имеются ссылки, добавленных поставщиками сборки, и коллекции сборок по умолчанию, доступной для ссылки.  
  
 Коллекция <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> не включает сборки, которые добавляются для ссылки другими поставщиками сборок с помощью метода <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extension">Расширение имени файла, для которого предназначен поставщик построения.</param>
        <param name="providerType">Класс поставщика построения.</param>
        <summary>Регистрирует поставщик построения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для регистрации поставщиков сборки вместо определения их в файле Web. config. Дополнительные сведения о поставщиках сборки см. в разделе класс <xref:System.Web.Compilation.BuildProvider> и [элемент BuildProvider для компиляции (схема параметров ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет файл, который необходимо построить с помощью данной реализации поставщика построения.</summary>
        <value>Доступная только для чтения строка, в которой задан виртуальный путь к файлу, подлежащему компиляции с помощью данного поставщика построения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Виртуальный путь объекта <xref:System.Web.Compilation.BuildProvider> — это путь к файлу, компилируемому поставщиком сборки. Например, если вы настроили пользовательский класс <xref:System.Web.Compilation.BuildProvider> для создания всех файлов на веб-сайте с пользовательским расширением. ABC, если веб-сайт имеет имя WebSite1, а веб-сайт содержит файл с именем example. ABC, свойство <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> содержит значение `/WebSite1/Example.abc`.  
  
 Расширение файла каждого файла в приложении определяет тип файла и соответствующий поставщик сборки для типа файла. Среда сборки ASP.NET инициализирует объект <xref:System.Web.Compilation.BuildProvider> для каждого файла в зависимости от типа файла и использует методы <xref:System.Web.Compilation.BuildProvider> для создания источника для каждого файла.  
  
 Дополнительные сведения о настройке поставщика сборки см. в разделе [элемент BuildProvider для компиляции (схема параметров ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет коллекцию виртуальных путей, которые должны быть построены перед тем, как поставщик построения сможет создать код.</summary>
        <value>Доступная только для чтения коллекция строк, представляющих виртуальные пути, от которых зависит данный экземпляр поставщика построения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> — это коллекция виртуальных путей, которые должны быть скомпилированы перед тем, как экземпляр <xref:System.Web.Compilation.BuildProvider> создает исходный код. Сборки из виртуальных путей в <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> добавляются в качестве ссылок на компиляцию для экземпляра <xref:System.Web.Compilation.BuildProvider>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>
