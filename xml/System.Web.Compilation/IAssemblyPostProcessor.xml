<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad9a75c0e2153f517afbada4d570c0a97f64f859" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64148094" /></Metadata><TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAssemblyPostProcessor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="F#" Value="type IAssemblyPostProcessor = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c15e5-101">Задает методы, реализуемые классом для обработки сборки после ее построения.</span><span class="sxs-lookup"><span data-stu-id="c15e5-101">Defines the method a class implements to process an assembly after the assembly has been built.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c15e5-102">Класс, реализующий этот интерфейс можно получить доступ к сборке, после его компиляции.</span><span class="sxs-lookup"><span data-stu-id="c15e5-102">A class implementing this interface can access an assembly after it has been compiled.</span></span> <span data-ttu-id="c15e5-103"><xref:System.Web.Compilation.AssemblyBuilder> Класс компилирует сборки и затем проверяет ли <xref:System.Web.Compilation.IAssemblyPostProcessor> был зарегистрирован в файле конфигурации веб-интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c15e5-103">The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file.</span></span> <span data-ttu-id="c15e5-104">Если Да, <xref:System.Web.Compilation.AssemblyBuilder> экземпляра вызовы <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> метод <xref:System.Web.Compilation.IAssemblyPostProcessor> интерфейс, позволяющий выполнять любые действия, после компиляции и до загрузки сборки.</span><span class="sxs-lookup"><span data-stu-id="c15e5-104">If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly.</span></span> <span data-ttu-id="c15e5-105">Например профилировщик может реализовать этот интерфейс для установления пробы в сборке.</span><span class="sxs-lookup"><span data-stu-id="c15e5-105">For example, a profiler tool could implement this interface to establish probes in the assembly.</span></span>  
  
 <span data-ttu-id="c15e5-106">Когда <xref:System.Web.Compilation.IAssemblyPostProcessor> интерфейс зарегистрирован, приложения ASP.NET и его сборки для компиляции в режиме отладки.</span><span class="sxs-lookup"><span data-stu-id="c15e5-106">When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c15e5-107">В следующем примере кода демонстрируется реализация <xref:System.Web.Compilation.IAssemblyPostProcessor> интерфейс и зарегистрируйте его в файле Web.config веб-приложения.</span><span class="sxs-lookup"><span data-stu-id="c15e5-107">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="c15e5-108">В первой части в примере кода создается класс с именем `Samples.Process.postProcessTest` , реализующий <xref:System.Web.Compilation.IAssemblyPostProcessor> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="c15e5-108">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="c15e5-109">Этот класс выполняет простое действие записи в файл при <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="c15e5-109">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="c15e5-110">Скомпилировать класс в DLL-файл с помощью команды `csc /target:library postProcessTest.cs`.</span><span class="sxs-lookup"><span data-stu-id="c15e5-110">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="c15e5-111">Добавьте полученный DLL-файл в папку Bin приложения ASP.NET и зарегистрировать библиотеку DLL в файле Web.config, как показано в следующем коде.</span><span class="sxs-lookup"><span data-stu-id="c15e5-111">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="c15e5-112">При посещении веб-сайта, динамически компилируемом веб-приложения и файл MyTest.txt будет записываться C:\compile.</span><span class="sxs-lookup"><span data-stu-id="c15e5-112">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostProcessAssembly (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostProcessAssembly(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member PostProcessAssembly : string -&gt; unit" Usage="iAssemblyPostProcessor.PostProcessAssembly path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c15e5-113">Путь к сборке.</span><span class="sxs-lookup"><span data-stu-id="c15e5-113">The path to the assembly.</span></span></param>
        <summary><span data-ttu-id="c15e5-114">Вызывается перед загрузкой сборки, чтобы позволить реализующему классу вносить в нее изменения.</span><span class="sxs-lookup"><span data-stu-id="c15e5-114">Called before the assembly is loaded to allow the implementing class to modify the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c15e5-115"><xref:System.Web.Compilation.AssemblyBuilder> Класс вызывает этот метод после компиляции сборки.</span><span class="sxs-lookup"><span data-stu-id="c15e5-115">The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled.</span></span> <span data-ttu-id="c15e5-116">Все действия, которые необходимо выполнить перед загрузкой сборки должны быть включены в этот метод.</span><span class="sxs-lookup"><span data-stu-id="c15e5-116">Any actions to be taken before loading the assembly should be included in this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c15e5-117">В следующем примере кода демонстрируется реализация <xref:System.Web.Compilation.IAssemblyPostProcessor> интерфейс и зарегистрируйте его в файле Web.config веб-приложения.</span><span class="sxs-lookup"><span data-stu-id="c15e5-117">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="c15e5-118">В первой части в примере кода создается класс с именем `Samples.Process.postProcessTest` , реализующий <xref:System.Web.Compilation.IAssemblyPostProcessor> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="c15e5-118">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="c15e5-119">Этот класс выполняет простое действие записи в файл при <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="c15e5-119">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="c15e5-120">Скомпилировать класс в DLL-файл с помощью команды `csc /target:library postProcessTest.cs`.</span><span class="sxs-lookup"><span data-stu-id="c15e5-120">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="c15e5-121">Добавьте полученный DLL-файл в папку Bin приложения ASP.NET и зарегистрировать библиотеку DLL в файле Web.config, как показано в следующем коде.</span><span class="sxs-lookup"><span data-stu-id="c15e5-121">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="c15e5-122">При посещении веб-сайта, динамически компилируемом веб-приложения и файл MyTest.txt будет записываться C:\compile.</span><span class="sxs-lookup"><span data-stu-id="c15e5-122">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>