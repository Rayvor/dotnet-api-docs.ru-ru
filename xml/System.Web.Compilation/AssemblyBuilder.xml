<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e5df6f757a1107d98334dbb0bc65addce01baf6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69097255" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет контейнер для построения сборки из одного или нескольких виртуальных путей в проекте ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляры класса используются с <xref:System.Web.Compilation.BuildProvider> методами класса для создания одного или нескольких файлов в скомпилированной сборке. <xref:System.Web.Compilation.AssemblyBuilder>  
  
 Класс определяет функциональные возможности сборки для отдельных файлов, <xref:System.Web.Compilation.AssemblyBuilder> а класс объединяет исходный код, появляющийся каждым <xref:System.Web.Compilation.BuildProvider> экземпляром, в одну сборку. <xref:System.Web.Compilation.BuildProvider> Среда сборки ASP.NET передает <xref:System.Web.Compilation.AssemblyBuilder> объект <xref:System.Web.Compilation.BuildProvider> методам при сборке сборки из одного или нескольких файлов, чтобы каждый <xref:System.Web.Compilation.BuildProvider> экземпляр мог создать исходный код для своего файла в общей сборке.  
  
 Среда сборки ASP.NET определяет язык и компилятор, необходимые для файлов в проекте, на основе <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> свойства. Среда сборки группирует файлы на основе их параметров компилятора и создает сборку на основе файлов, для которых требуется один и тот же компилятор.  
  
 Свойство указывает реализацию, которую среда сборки ASP.NET использует для компиляции сборки из исходного кода, созданного каждой <xref:System.Web.Compilation.BuildProvider> реализацией. <xref:System.CodeDom.Compiler.CodeDomProvider> <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>  
  
 Объект вносит исходный код в форму графа CodeDOM <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> с помощью метода. <xref:System.Web.Compilation.BuildProvider> Объект вносит в исходный код, хранящийся в физическом файле, <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> с помощью метода. <xref:System.Web.Compilation.BuildProvider>  
  
 После того <xref:System.Web.Compilation.BuildProvider> как каждый объект вносит исходный код с помощью <xref:System.Web.Compilation.AssemblyBuilder> соответствующих методов, среда сборки <xref:System.Web.Compilation.AssemblyBuilder> ASP.NET использует класс для компиляции собранного исходного кода в сборку.  
  
   
  
## Examples  
 В следующем примере кода показана простая реализация поставщика сборки, производная от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса. Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>члены, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> базового класса.  
  
 В реализации <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метода поставщик сборки добавляет созданный код для компиляции сборки с помощью метода. <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Пример не включает реализацию `SampleClassGenerator` класса. Для получения дополнительной информации см. <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Сборка, на которую ссылается единица  компиляции кода или исходный файл, включенный в компиляцию сборки.</param>
        <summary>Добавляет сборку, на которую ссылается созданный для файла исходный код.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Реализация<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> использует метод при создании исходного кода, который ссылается на типы во входной сборке.  
  
 Среда сборки ASP.NET Инициализирует коллекцию сборок по умолчанию, доступную для ссылки через поставщика сборки в <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> свойстве. Если поставщик сборки создает исходный код, который ссылается на дополнительные сборки, то поставщик сборки добавляет дополнительные сборки с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> метода. Среда сборки ASP.NET разрешает внешние типы во время компиляции сборки с помощью сборок, на которые имеются ссылки, добавленных поставщиками сборки, и коллекции сборок по умолчанию, доступной для ссылки.  
  
 Как правило, <xref:System.Web.Compilation.BuildProvider> объект добавляет исходный код <xref:System.Web.Compilation.AssemblyBuilder> в объект в <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> методе. Если поставщик сборки создает исходный код, использующий внешний тип, поставщик сборки добавляет сборку типа с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> метода.  
  
 Используйте метод, чтобы добавить сборку, на которую указывает ссылка, в исходном коде <xref:System.Web.Compilation.BuildProvider> , созданном экземпляром для конкретного типа файлов. <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> Используйте элемент [assemblies для элемента конфигурации compilation (схема параметров ASP.NET)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) , чтобы настроить сборку для ссылки на несколько типов файлов в проекте.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Поставщик построения, создающий единицу <paramref name="compileUnit" />.</param>
        <param name="compileUnit">Единица компиляции кода, которую необходимо добавить в компиляцию сборки.</param>
        <summary>Добавляет исходный код для сборки в форме графа CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Реализация<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> вызывает метод при создании графа CodeDOM для виртуального пути. Исходный код, добавленный с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> , включен в компиляцию сборки.  
  
 Как правило, реализация <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> метода поставщика сборки <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> считывает свойство, анализирует содержимое, а затем добавляет созданный исходный код в указанный <xref:System.Web.Compilation.AssemblyBuilder> объект. Поставщик сборки использует <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> метод для добавления исходного кода в сборку в качестве графа CodeDOM. Кроме того, поставщик сборки может использовать <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метод для добавления исходного кода в сборку в качестве физического файла.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компилятор, используемый для построения исходного кода в сборке.</summary>
        <value>Доступная только для чтения реализация <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, используемая для компиляции исходного кода, который был добавлен в сборку каждым поставщиком построения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство указывает реализацию, которую среда сборки ASP.NET использует для компиляции сборки из исходного кода, созданного каждой <xref:System.Web.Compilation.BuildProvider> реализацией. <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>  
  
 Среда сборки ASP.NET определяет язык и компилятор, необходимые для файлов в проекте, на основе <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> свойства. Среда сборки группирует файлы на основе их параметров компилятора и создает сборку на основе файлов, для которых требуется один и тот же компилятор.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Поставщик построения, создающий файл исходного кода.</param>
        <summary>Позволяет поставщику построения создать временный исходный файл и включить этот файл в компиляцию сборки.</summary>
        <returns>Открытый объект <see cref="T:System.IO.TextWriter" />, который можно использовать для записи исходного файла во временный файл.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Реализация<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> вызывает метод при создании исходного файла для виртуального пути. Исходный код, добавленный с помощью <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> , включен в компиляцию сборки.  
  
 Как правило, реализация метода <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> поставщика сборки <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> считывает свойство, анализирует содержимое, а затем добавляет созданный исходный код в указанный <xref:System.Web.Compilation.AssemblyBuilder> объект. Поставщик сборки использует <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метод для добавления исходного кода в сборку в качестве физического файла. Кроме того, поставщик сборки может использовать <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> метод для добавления исходного кода в сборку в качестве графа CodeDOM.  
  
 После вызова <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>поставщик сборки записывает содержимое исходного файла, используя возвращенный <xref:System.IO.TextWriter> объект. После записи исходного файла <xref:System.Web.Compilation.BuildProvider> объект должен <xref:System.IO.TextWriter.Close%2A> использовать метод, чтобы закрыть <xref:System.IO.TextWriter> объект и освободить связанные системные ресурсы.  
  
   
  
## Examples  
 В следующем примере кода показана простая реализация поставщика сборки, производная от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса. Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>члены, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> базового класса.  
  
 В реализации <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метода поставщик сборки добавляет созданный код для компиляции сборки с помощью метода. <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Пример не включает реализацию `SampleClassGenerator` класса. Для получения дополнительной информации см. <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Поставщик построения, создающий ресурс.</param>
        <param name="name">Имя создаваемого файла ресурсов.</param>
        <summary>Позволяет поставщику построения создать файл ресурсов, который необходимо включить в компиляцию сборки.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Stream" /> который можно использовать для записи ресурсов, включенных в компиляцию сборки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> метода <xref:System.Web.Compilation.BuildProvider> объект записывает содержимое файла ресурсов с помощью возвращенного <xref:System.IO.Stream> объекта. Например, поставщик сборки может записывать ресурсы с помощью <xref:System.Resources.ResourceWriter> объекта. После записи файла ресурсов поставщик сборки должен использовать <xref:System.IO.Stream.Close%2A> метод, чтобы <xref:System.IO.Stream> закрыть объект и освободить связанные системные ресурсы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> не является допустимым именем файла.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя создаваемого типа.</param>
        <summary>Вставляет в скомпилированную сборку шаблон быстрого производства объекта для определенного типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация вызывает метод, <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> чтобы оптимизировать производительность для частого создания экземпляров типа. <xref:System.Web.Compilation.BuildProvider>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Расширение файла, используемое для временного файла.</param>
        <summary>Создает путь к временному файлу.</summary>
        <returns>Путь к временному файлу с заданным расширением.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Реализация<xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> вызывает метод, чтобы получить путь к временному файлу, который автоматически удаляется после компиляции сборки.  
  
 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> Метод создает уникальный путь к временному файлу, но не создает файл.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
