<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e5df6f757a1107d98334dbb0bc65addce01baf6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70725969" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="78dbc-101">Предоставляет контейнер для построения сборки из одного или нескольких виртуальных путей в проекте ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="78dbc-101">Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-102">Экземпляры класса используются с <xref:System.Web.Compilation.BuildProvider> методами класса для создания одного или нескольких файлов в скомпилированной сборке. <xref:System.Web.Compilation.AssemblyBuilder></span><span class="sxs-lookup"><span data-stu-id="78dbc-102">Instances of the <xref:System.Web.Compilation.AssemblyBuilder> class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly.</span></span>  
  
 <span data-ttu-id="78dbc-103">Класс определяет функциональные возможности сборки для отдельных файлов, <xref:System.Web.Compilation.AssemblyBuilder> а класс объединяет исходный код, появляющийся каждым <xref:System.Web.Compilation.BuildProvider> экземпляром, в одну сборку. <xref:System.Web.Compilation.BuildProvider></span><span class="sxs-lookup"><span data-stu-id="78dbc-103">The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span> <span data-ttu-id="78dbc-104">Среда сборки ASP.NET передает <xref:System.Web.Compilation.AssemblyBuilder> объект <xref:System.Web.Compilation.BuildProvider> методам при сборке сборки из одного или нескольких файлов, чтобы каждый <xref:System.Web.Compilation.BuildProvider> экземпляр мог создать исходный код для своего файла в общей сборке.</span><span class="sxs-lookup"><span data-stu-id="78dbc-104">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="78dbc-105">Среда сборки ASP.NET определяет язык и компилятор, необходимые для файлов в проекте, на основе <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="78dbc-105">The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="78dbc-106">Среда сборки группирует файлы на основе их параметров компилятора и создает сборку на основе файлов, для которых требуется один и тот же компилятор.</span><span class="sxs-lookup"><span data-stu-id="78dbc-106">The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</span></span>  
  
 <span data-ttu-id="78dbc-107">Свойство указывает реализацию, которую среда сборки ASP.NET использует для компиляции сборки из исходного кода, созданного каждой <xref:System.Web.Compilation.BuildProvider> реализацией. <xref:System.CodeDom.Compiler.CodeDomProvider> <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A></span><span class="sxs-lookup"><span data-stu-id="78dbc-107">The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.</span></span>  
  
 <span data-ttu-id="78dbc-108">Объект вносит исходный код в форму графа CodeDOM <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> с помощью метода. <xref:System.Web.Compilation.BuildProvider></span><span class="sxs-lookup"><span data-stu-id="78dbc-108">A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span> <span data-ttu-id="78dbc-109">Объект вносит в исходный код, хранящийся в физическом файле, <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> с помощью метода. <xref:System.Web.Compilation.BuildProvider></span><span class="sxs-lookup"><span data-stu-id="78dbc-109">A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span>  
  
 <span data-ttu-id="78dbc-110">После того <xref:System.Web.Compilation.BuildProvider> как каждый объект вносит исходный код с помощью <xref:System.Web.Compilation.AssemblyBuilder> соответствующих методов, среда сборки <xref:System.Web.Compilation.AssemblyBuilder> ASP.NET использует класс для компиляции собранного исходного кода в сборку.</span><span class="sxs-lookup"><span data-stu-id="78dbc-110">After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate <xref:System.Web.Compilation.AssemblyBuilder> methods, the ASP.NET build environment uses the <xref:System.Web.Compilation.AssemblyBuilder> class to compile the collected source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78dbc-111">В следующем примере кода показана простая реализация поставщика сборки, производная от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="78dbc-111">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="78dbc-112">Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>члены, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> базового класса.</span><span class="sxs-lookup"><span data-stu-id="78dbc-112">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 <span data-ttu-id="78dbc-113">В реализации <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метода поставщик сборки добавляет созданный код для компиляции сборки с помощью метода. <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A></span><span class="sxs-lookup"><span data-stu-id="78dbc-113">In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="78dbc-114">Пример не включает реализацию `SampleClassGenerator` класса.</span><span class="sxs-lookup"><span data-stu-id="78dbc-114">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="78dbc-115">Для получения дополнительной информации см. <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="78dbc-115">For more information, see <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="78dbc-116">Сборка, на которую ссылается единица  компиляции кода или исходный файл, включенный в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-116">An assembly referenced by a code compile unit or source file included in the assembly compilation.</span></span></param>
        <summary><span data-ttu-id="78dbc-117">Добавляет сборку, на которую ссылается созданный для файла исходный код.</span><span class="sxs-lookup"><span data-stu-id="78dbc-117">Adds an assembly that is referenced by source code generated for a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-118"><xref:System.Web.Compilation.BuildProvider> Реализация <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>  использует метод при создании исходного кода, который ссылается на типы во входной сборке.</span><span class="sxs-lookup"><span data-stu-id="78dbc-118">A <xref:System.Web.Compilation.BuildProvider> implementation uses the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method when generating source code that references types within the input assembly.</span></span>  
  
 <span data-ttu-id="78dbc-119">Среда сборки ASP.NET Инициализирует коллекцию сборок по умолчанию, доступную для ссылки через поставщика сборки в <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> свойстве.</span><span class="sxs-lookup"><span data-stu-id="78dbc-119">The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="78dbc-120">Если поставщик сборки создает исходный код, который ссылается на дополнительные сборки, то поставщик сборки добавляет дополнительные сборки с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="78dbc-120">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="78dbc-121">Среда сборки ASP.NET разрешает внешние типы во время компиляции сборки с помощью сборок, на которые имеются ссылки, добавленных поставщиками сборки, и коллекции сборок по умолчанию, доступной для ссылки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-121">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="78dbc-122">Как правило, <xref:System.Web.Compilation.BuildProvider> объект добавляет исходный код <xref:System.Web.Compilation.AssemblyBuilder> в объект в <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> методе.</span><span class="sxs-lookup"><span data-stu-id="78dbc-122">Typically, a <xref:System.Web.Compilation.BuildProvider> object adds source code to the <xref:System.Web.Compilation.AssemblyBuilder> object in the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method.</span></span> <span data-ttu-id="78dbc-123">Если поставщик сборки создает исходный код, использующий внешний тип, поставщик сборки добавляет сборку типа с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="78dbc-123">If a build provider generates source code that uses an external type, the build provider adds the type's assembly using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="78dbc-124">Используйте метод, чтобы добавить сборку, на которую указывает ссылка, в исходном коде <xref:System.Web.Compilation.BuildProvider> , созданном экземпляром для конкретного типа файлов. <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A></span><span class="sxs-lookup"><span data-stu-id="78dbc-124">Use the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method to add a referenced assembly required in source code generated by a <xref:System.Web.Compilation.BuildProvider> instance for a specific file type.</span></span> <span data-ttu-id="78dbc-125">Используйте элемент [assemblies для элемента конфигурации compilation (схема параметров ASP.NET)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) , чтобы настроить сборку для ссылки на несколько типов файлов в проекте.</span><span class="sxs-lookup"><span data-stu-id="78dbc-125">Use the [assemblies Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) configuration element to configure an assembly for reference across multiple file types in a project.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="78dbc-126">Поставщик построения, создающий единицу <paramref name="compileUnit" />.</span><span class="sxs-lookup"><span data-stu-id="78dbc-126">The build provider generating <paramref name="compileUnit" />.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="78dbc-127">Единица компиляции кода, которую необходимо добавить в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-127">The code compile unit to include in the assembly compilation.</span></span></param>
        <summary><span data-ttu-id="78dbc-128">Добавляет исходный код для сборки в форме графа CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="78dbc-128">Adds source code for the assembly in the form of a CodeDOM graph.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-129"><xref:System.Web.Compilation.BuildProvider> Реализация <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>  вызывает метод при создании графа CodeDOM для виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="78dbc-129">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method when generating a CodeDOM graph for a virtual path.</span></span> <span data-ttu-id="78dbc-130">Исходный код, добавленный с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> , включен в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-130">Source code added with <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> is included in the assembly compilation.</span></span>  
  
 <span data-ttu-id="78dbc-131">Как правило, реализация <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> метода поставщика сборки <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> считывает свойство, анализирует содержимое, а затем добавляет созданный исходный код в указанный <xref:System.Web.Compilation.AssemblyBuilder> объект.</span><span class="sxs-lookup"><span data-stu-id="78dbc-131">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="78dbc-132">Поставщик сборки использует <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> метод для добавления исходного кода в сборку в качестве графа CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="78dbc-132">The build provider uses the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.</span></span> <span data-ttu-id="78dbc-133">Кроме того, поставщик сборки может использовать <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метод для добавления исходного кода в сборку в качестве физического файла.</span><span class="sxs-lookup"><span data-stu-id="78dbc-133">Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78dbc-134">Возвращает компилятор, используемый для построения исходного кода в сборке.</span><span class="sxs-lookup"><span data-stu-id="78dbc-134">Gets the compiler used to build source code into an assembly.</span></span></summary>
        <value><span data-ttu-id="78dbc-135">Доступная только для чтения реализация <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, используемая для компиляции исходного кода, который был добавлен в сборку каждым поставщиком построения.</span><span class="sxs-lookup"><span data-stu-id="78dbc-135">A read-only <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation used for compiling source code contributed by each build provider into an assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-136">Свойство указывает реализацию, которую среда сборки ASP.NET использует для компиляции сборки из исходного кода, созданного каждой <xref:System.Web.Compilation.BuildProvider> реализацией. <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A></span><span class="sxs-lookup"><span data-stu-id="78dbc-136">The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.</span></span>  
  
 <span data-ttu-id="78dbc-137">Среда сборки ASP.NET определяет язык и компилятор, необходимые для файлов в проекте, на основе <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="78dbc-137">The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="78dbc-138">Среда сборки группирует файлы на основе их параметров компилятора и создает сборку на основе файлов, для которых требуется один и тот же компилятор.</span><span class="sxs-lookup"><span data-stu-id="78dbc-138">The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="78dbc-139">Поставщик построения, создающий файл исходного кода.</span><span class="sxs-lookup"><span data-stu-id="78dbc-139">The build provider generating the code source file.</span></span></param>
        <summary><span data-ttu-id="78dbc-140">Позволяет поставщику построения создать временный исходный файл и включить этот файл в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-140">Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.</span></span></summary>
        <returns><span data-ttu-id="78dbc-141">Открытый объект <see cref="T:System.IO.TextWriter" />, который можно использовать для записи исходного файла во временный файл.</span><span class="sxs-lookup"><span data-stu-id="78dbc-141">An open <see cref="T:System.IO.TextWriter" /> that can be used to write source code to a temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-142"><xref:System.Web.Compilation.BuildProvider> Реализация <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>  вызывает метод при создании исходного файла для виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="78dbc-142">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method when generating a source file for a virtual path.</span></span> <span data-ttu-id="78dbc-143">Исходный код, добавленный с помощью <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> , включен в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-143">Source code added with <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> is included in the assembly compilation.</span></span>  
  
 <span data-ttu-id="78dbc-144">Как правило, реализация метода <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> поставщика сборки <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> считывает свойство, анализирует содержимое, а затем добавляет созданный исходный код в указанный <xref:System.Web.Compilation.AssemblyBuilder> объект.</span><span class="sxs-lookup"><span data-stu-id="78dbc-144">Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="78dbc-145">Поставщик сборки использует <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метод для добавления исходного кода в сборку в качестве физического файла.</span><span class="sxs-lookup"><span data-stu-id="78dbc-145">The build provider uses the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.</span></span> <span data-ttu-id="78dbc-146">Кроме того, поставщик сборки может использовать <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> метод для добавления исходного кода в сборку в качестве графа CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="78dbc-146">Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.</span></span>  
  
 <span data-ttu-id="78dbc-147">После вызова <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>поставщик сборки записывает содержимое исходного файла, используя возвращенный <xref:System.IO.TextWriter> объект.</span><span class="sxs-lookup"><span data-stu-id="78dbc-147">After calling <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object.</span></span> <span data-ttu-id="78dbc-148">После записи исходного файла <xref:System.Web.Compilation.BuildProvider> объект должен <xref:System.IO.TextWriter.Close%2A> использовать метод, чтобы закрыть <xref:System.IO.TextWriter> объект и освободить связанные системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="78dbc-148">After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78dbc-149">В следующем примере кода показана простая реализация поставщика сборки, производная от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="78dbc-149">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="78dbc-150">Поставщик сборки переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>члены, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> базового класса.</span><span class="sxs-lookup"><span data-stu-id="78dbc-150">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 <span data-ttu-id="78dbc-151">В реализации <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метода поставщик сборки добавляет созданный код для компиляции сборки с помощью метода. <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A></span><span class="sxs-lookup"><span data-stu-id="78dbc-151">In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="78dbc-152">Пример не включает реализацию `SampleClassGenerator` класса.</span><span class="sxs-lookup"><span data-stu-id="78dbc-152">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="78dbc-153">Для получения дополнительной информации см. <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="78dbc-153">For more information, see <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="78dbc-154">Поставщик построения, создающий ресурс.</span><span class="sxs-lookup"><span data-stu-id="78dbc-154">The build provider generating the resource.</span></span></param>
        <param name="name"><span data-ttu-id="78dbc-155">Имя создаваемого файла ресурсов.</span><span class="sxs-lookup"><span data-stu-id="78dbc-155">The name of the resource file to be created.</span></span></param>
        <summary><span data-ttu-id="78dbc-156">Позволяет поставщику построения создать файл ресурсов, который необходимо включить в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-156">Allows a build provider to create a resource file to include in the assembly compilation.</span></span></summary>
        <returns><span data-ttu-id="78dbc-157">Открытый объект <see cref="T:System.IO.Stream" /> который можно использовать для записи ресурсов, включенных в компиляцию сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-157">An open <see cref="T:System.IO.Stream" /> that can be used to write resources, which are included in the assembly compilation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-158">После вызова <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> метода <xref:System.Web.Compilation.BuildProvider> объект записывает содержимое файла ресурсов с помощью возвращенного <xref:System.IO.Stream> объекта.</span><span class="sxs-lookup"><span data-stu-id="78dbc-158">After calling the <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="78dbc-159">Например, поставщик сборки может записывать ресурсы с помощью <xref:System.Resources.ResourceWriter> объекта.</span><span class="sxs-lookup"><span data-stu-id="78dbc-159">For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object.</span></span> <span data-ttu-id="78dbc-160">После записи файла ресурсов поставщик сборки должен использовать <xref:System.IO.Stream.Close%2A> метод, чтобы <xref:System.IO.Stream> закрыть объект и освободить связанные системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="78dbc-160">After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="78dbc-161"><paramref name="name" /> не является допустимым именем файла.</span><span class="sxs-lookup"><span data-stu-id="78dbc-161"><paramref name="name" /> is not a valid file name.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="78dbc-162">Имя создаваемого типа.</span><span class="sxs-lookup"><span data-stu-id="78dbc-162">The name of the type to generate.</span></span></param>
        <summary><span data-ttu-id="78dbc-163">Вставляет в скомпилированную сборку шаблон быстрого производства объекта для определенного типа.</span><span class="sxs-lookup"><span data-stu-id="78dbc-163">Inserts a fast object factory template for a type into the compiled assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-164">Реализация вызывает метод, <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> чтобы оптимизировать производительность для частого создания экземпляров типа. <xref:System.Web.Compilation.BuildProvider></span><span class="sxs-lookup"><span data-stu-id="78dbc-164">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> method to optimize performance for frequent creations of type instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension"><span data-ttu-id="78dbc-165">Расширение файла, используемое для временного файла.</span><span class="sxs-lookup"><span data-stu-id="78dbc-165">The file extension to use for the temporary file.</span></span></param>
        <summary><span data-ttu-id="78dbc-166">Создает путь к временному файлу.</span><span class="sxs-lookup"><span data-stu-id="78dbc-166">Generates a temporary file path.</span></span></summary>
        <returns><span data-ttu-id="78dbc-167">Путь к временному файлу с заданным расширением.</span><span class="sxs-lookup"><span data-stu-id="78dbc-167">A path to a temporary file, with the specified file extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78dbc-168"><xref:System.Web.Compilation.BuildProvider> Реализация <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A>  вызывает метод, чтобы получить путь к временному файлу, который автоматически удаляется после компиляции сборки.</span><span class="sxs-lookup"><span data-stu-id="78dbc-168">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> method to get a temporary file path that is deleted automatically after the assembly is compiled.</span></span>  
  
 <span data-ttu-id="78dbc-169"><xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> Метод создает уникальный путь к временному файлу, но не создает файл.</span><span class="sxs-lookup"><span data-stu-id="78dbc-169">The <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> method generates a unique temporary file path, but does not create the file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
