<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d73892d14df1e5f7c75dc17365973724e89fdc4a" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898881" /></Metadata><TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <TypeSignature Language="F#" Value="type IMenuCommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет методы для управления общими командами конструктора и командами меню, доступными в режиме конструктора, а также методы для отображения некоторых типов контекстных меню.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс предоставляет методы для:  
  
-   Найти, вызов, добавление и удаление общих команд конструктора.  
  
-   Найти, вызов, добавление и удаление стандартных команд меню.  
  
-   Изменение обработчиков событий, связанных с стандартными командами меню.  
  
-   Отобразить контекстное меню стандартных команд, которая связана с меню <xref:System.ComponentModel.Design.CommandID>.  
  
 Команды конструктора представляют команды, определенные пользователем, которые перечислены в контекстном меню в режиме конструктора. Команды конструктора можно предоставить указанную текстовую метку. Каждой команде конструктора автоматически назначается уникальный <xref:System.ComponentModel.Design.CommandID>. Конструктор может предоставлять команды конструктора через его <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> свойство, но они доступен, только когда выбран компонент конструктора. Общих команд конструктора являются команд конструктора, доступных с помощью контекстного меню режим конструктора, независимо от выбранного компонента. Этот интерфейс позволяет управлять набором общих команд конструктора, доступных в режиме конструктора.  
  
 Можно добавить в общую команду конструктора с помощью <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> метод и вы можете удалить общую команду конструктора с помощью <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> метод. Можно вызвать с помощью <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> метод, если вы знаете <xref:System.ComponentModel.Design.CommandID> команды. <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> Свойство этот интерфейс содержит текущий набор команд конструктора для отображения в контекстном меню. Этот набор команд конструктора состоит из всех общих команд конструктора, а также все команды предложенных конструктором любого выбранного компонента. Этот набор команд обновляется каждый раз, компонент с конструктором, предоставляющим команды конструктора является выделением или отменой выделения.  
  
 Команды меню ограничены набор встроенных стандартных команд. Большинство встроенных стандартных команд определены в <xref:System.ComponentModel.Design.StandardCommands> и <xref:System.Windows.Forms.Design.MenuCommands> перечисления. Можно добавить, удалить и вызывать команды меню и поиск команд меню, которые были добавлены в меню, используя методы этого интерфейса.  
  
 Можно добавлять стандартные меню команды с помощью <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> метод, а также удалить стандартное меню команды с помощью <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> метод. Можно присоединить обработчик событий для стандартных стандартной команды меню, выполнив процедуры, описанные в документации по <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> метод. Вы можете получить команды меню с <xref:System.ComponentModel.Design.CommandID> если она была добавлена в меню с помощью <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> метод. Можно вызвать команду меню или команду конструктора, <xref:System.ComponentModel.Design.CommandID> с помощью <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> метод.  
  
> [!NOTE]
>  Попытка добавить команды меню с уже существующим <xref:System.ComponentModel.Design.CommandID> вызовет <xref:System.InvalidOperationException>. При добавлении команды меню, не забудьте проверить, что он еще не меню с помощью <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> метода или разумно использовать обработку исключений.  
  
> [!NOTE]
>  Команды меню могут добавляться в меню и у его <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> или <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> значение свойства `false`. Если вы не можете найти визуально команды меню, добавленного в меню, одно из этих свойств настроены `false`.  
  
 Вы можете отобразить некоторые стандартные контекстные меню, содержащих команды меню в указанном расположении с помощью <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> метод. Документация для этого метода содержит таблицу со списком идентификаторы команд, которые указывают на допустимые для отображения меню.  
  
   
  
## Examples  
 В этом примере показано использование <xref:System.ComponentModel.Design.IMenuCommandService> добавление <xref:System.ComponentModel.Design.MenuCommand>.  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">Добавляемый объект <see cref="T:System.ComponentModel.Design.MenuCommand" />.</param>
        <summary>Добавляет в меню указанную стандартную команду меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.MenuCommands> И <xref:System.ComponentModel.Design.StandardCommands> перечисления содержат <xref:System.ComponentModel.Design.CommandID> идентификаторы для предварительно заданные стандартных команд и команд меню, которые уже сопоставленные с местоположением в конкретном меню.  
  
> [!NOTE]
>  Попытка добавить команды меню с уже существующим <xref:System.ComponentModel.Design.CommandID> вызовет <xref:System.InvalidOperationException>. При добавлении команды меню, не забудьте проверить, что он еще не меню с помощью <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> метода или разумно использовать обработку исключений.  
  
 Можно присоединить обработчик событий к встроенной команде меню с помощью следующей процедуры:  
  
1.  Если команды меню, чтобы связать с обработчиком событий была добавлена в меню или с <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> метод, учитывать ли вы хотите восстановить более поздней версии этой команды меню, и необходимость вызова текущего обработчика событий из нового обработчика событий. Если ваш код может восстановить команду меню или связывать вызов обработчиков событий, не забудьте сохранить ссылку на команду меню где-то.  
  
2.  Убедитесь, что все ранее существующие команды меню с тем же <xref:System.ComponentModel.Design.CommandID> был удален из меню с помощью <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> метод.  
  
3.  Создайте новый <xref:System.ComponentModel.Design.MenuCommand> и укажите Ваш обработчик событий в конструкторе, вместе с <xref:System.ComponentModel.Design.CommandID> представляющий команду, чтобы добавить. Каждой стандартной команды меню, связанный с стандартных меню расположение, где он добавляется. Идентификаторы команд, поддерживаемых определяются в <xref:System.ComponentModel.Design.StandardCommands> и <xref:System.Windows.Forms.Design.MenuCommands> перечисления.  
  
4.  Если вы хотите вызвать любой существующий обработчик событий для команды меню, вызвать <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> метод команды меню, после замены меню из обработчика событий, который обрабатывает событие вызова команды меню.  
  
5.  Если вы заинтересованы в обработчике событий существующей команды меню, которая была заменена восстановления, добавьте хранимую, существующую команду меню, после удаления у созданной команды меню замены. Вы можете добавить это поведение, чтобы `Dispose` метод для вашего типа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Идентификатор <see cref="T:System.ComponentModel.Design.CommandID" /> указанной команды <see cref="T:System.ComponentModel.Design.MenuCommand" /> уже представлен в меню.</exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Добавляемый объект <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
        <summary>Добавляет указанную команду конструктора в набор общих команд конструктора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разработчикам компонентов, предоставляющих команды конструктора следует использовать <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> свойство их конструктора, а не вызов этого метода. Этот метод добавляет общую команду конструктора, доступный в контекстном меню щелкните правой кнопкой мыши в режиме конструктора, независимо от выбранного компонента.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="iMenuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">Объект <see cref="T:System.ComponentModel.Design.CommandID" />, который требуется найти.</param>
        <summary>Осуществляет поиск указанного идентификатора команды и возвращает связанную с ним команду меню.</summary>
        <returns>Команда <see cref="T:System.ComponentModel.Design.MenuCommand" />, связанная с идентификатором команды, или значение <see langword="null" />, если команда не найдена.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="iMenuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">Идентификатор <see cref="T:System.ComponentModel.Design.CommandID" /> команды, которую необходимо найти и выполнить.</param>
        <summary>Вызывает команду меню или команду конструктора, соответствующую указанному идентификатору команды.</summary>
        <returns>Значение <see langword="true" />, если команда найдена и вызвана успешно; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод осуществляет поиск команды меню или команды конструктора с <xref:System.ComponentModel.Design.CommandID> совпадающий с указанным ключом <xref:System.ComponentModel.Design.CommandID>. Этот метод сначала выполняет поиск в коллекции команд конструктора, содержащей общие и активные команды, предоставленные конструктором продолжает поиск, при необходимости, через службу команд глобальной среде. Если соответствующая команда меню или команду конструктора будет найдено, вызывается команда.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">Объект <see cref="T:System.ComponentModel.Design.MenuCommand" /> для удаления.</param>
        <summary>Удаляет из меню указанную стандартную команду меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод удаляет указанный <xref:System.ComponentModel.Design.MenuCommand> если он найден. Этот метод вызывает исключение или не возвращают значение, если указанный <xref:System.ComponentModel.Design.MenuCommand> не найден. Используйте <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> метод для определения ли <xref:System.ComponentModel.Design.MenuCommand> соответствующая указанному идентификатору <xref:System.ComponentModel.Design.CommandID> находится в меню.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Объект <see cref="T:System.ComponentModel.Design.DesignerVerb" /> для удаления.</param>
        <summary>Удаляет указанную команду конструктора из коллекции глобальных команд конструктора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод удаляет указанную общую команду конструктора, если он присутствует в коллекции глобальных команд конструктора. Команды конструктора можно добавить в коллекцию общих команд конструктора с помощью <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="iMenuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">Идентификатор <see cref="T:System.ComponentModel.Design.CommandID" /> отображаемого контекстного меню.</param>
        <param name="x">Координата по оси X, в которой отображается меню (в экранных координатах).</param>
        <param name="y">Координата по оси Y, в которой отображается меню (в экранных координатах).</param>
        <summary>Отображает указанное контекстное меню в заданном месте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> Метод может отображать любой из следующих контекстных меню Visual Studio, содержащий команды меню в заданной точке:  
  
|Меню|Идентификатор команды|  
|----------|---------------|  
|В контекстном меню, отображаемое для контейнера.|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|В контекстном меню, отображаемого для области компонентов|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|В контекстном меню, отображаемое для выделения|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|Контекстное меню, отображаемое для выбранной области.|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 Этот метод может также отображать другие зарегистрированные контекстные меню.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию команд конструктора, доступных в настоящий момент.</summary>
        <value>Коллекция <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />, содержащая доступные в текущий момент команды конструктора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Набор доступных команд конструктора состоит из всех общих команд конструктора, которые добавляются с <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> метода для данного интерфейса, а также отдельные команды конструктора, предоставленные <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> свойства отдельных конструкторов. Если имя общей команды конфликтует с именем команды конструктора, команда конструктора имеет приоритет.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>