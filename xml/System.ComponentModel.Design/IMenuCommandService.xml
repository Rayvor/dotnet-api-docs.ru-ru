<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e337708f502faa5369afc8edacaa0bd7bb062a30" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75148446" /></Metadata><TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <TypeSignature Language="F#" Value="type IMenuCommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет методы для управления общими командами конструктора и командами меню, доступными в режиме конструктора, а также методы для отображения некоторых типов контекстных меню.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс предоставляет методы для:  
  
-   Команды поиска, вызова, добавления и удаления глобальных команд конструктора.  
  
-   Поиск, вызов, Добавление и удаление стандартных команд меню.  
  
-   Изменение обработчиков событий, связанных со стандартными командами меню.  
  
-   Отображение контекстного меню стандартных команд, связанных с <xref:System.ComponentModel.Design.CommandID>меню.  
  
 Команды конструктора представляют определенные пользователем команды, которые перечислены в контекстном меню в режиме конструктора. Команда конструктора может предоставить указанную текстовую метку. Каждой команде конструктора автоматически назначается уникальный <xref:System.ComponentModel.Design.CommandID>. Конструктор может предоставлять команды конструктора через свойство <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>, но они доступны только в том случае, если в данный момент выбран компонент конструктора. Глобальные команды конструктора — это команды команд конструктора, доступ к которым можно получить из контекстного меню режима разработки независимо от выбранного компонента. Этот интерфейс позволяет управлять набором глобальных команд конструктора, доступных в режиме конструктора.  
  
 Можно добавить глобальную команду конструктора с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>, а также можно удалить глобальную команду конструктора с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>. Можно вызвать команду конструктора с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>, если известно <xref:System.ComponentModel.Design.CommandID> команды. Свойство <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> этого интерфейса содержит текущий набор команд конструктора, отображаемых в контекстном меню. Этот набор команд конструктора состоит из всех глобальных команд конструктора и команд конструктора, предлагаемых конструктором любого выбранного компонента. Этот набор команд обновляется каждый раз при выборе или отключении компонента с командами конструктора с предложением конструктора.  
  
 Команды меню ограничены набором предопределенных стандартных команд. Большинство предопределенных стандартных команд определяются в перечислениях <xref:System.ComponentModel.Design.StandardCommands> и <xref:System.Windows.Forms.Design.MenuCommands>. Можно добавлять, удалять и вызывать команды меню, а также выполнять поиск команд меню, добавленных в меню с помощью методов этого интерфейса.  
  
 Вы можете добавить стандартную команду меню с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> и удалить стандартную команду меню с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>. Обработчик событий можно подключить к предопределенной команде стандартного меню, выполнив процедуру, описанную в документации по методу <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>. Команду меню можно получить, <xref:System.ComponentModel.Design.CommandID> если она была добавлена в меню с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>. Команду меню или команду конструктора можно вызвать, <xref:System.ComponentModel.Design.CommandID> помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>.  
  
> [!NOTE]
>  Попытка добавить команду меню с уже существующим <xref:System.ComponentModel.Design.CommandID> приведет к созданию <xref:System.InvalidOperationException>. При добавлении команды меню убедитесь, что она еще не находится в меню, использующем метод <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>, или используйте обработку исключений в разумном виде.  
  
> [!NOTE]
>  Команду меню можно добавить в меню и задать для свойств <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> или <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> значение `false`. Если не удается визуально определить команду меню, которая была добавлена в меню, то одно из этих свойств могло быть установлено в `false`.  
  
 С помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> можно отобразить определенные стандартные контекстные меню, содержащие команды меню в указанном расположении. Документация по этому методу содержит таблицу, в которой перечислены идентификаторы команд, указывающие допустимые меню для отображения.  
  
   
  
## Examples  
 В этом примере демонстрируется использование <xref:System.ComponentModel.Design.IMenuCommandService> для добавления <xref:System.ComponentModel.Design.MenuCommand>.  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">Добавляемый объект <see cref="T:System.ComponentModel.Design.MenuCommand" />.</param>
        <summary>Добавляет в меню указанную стандартную команду меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перечисления <xref:System.Windows.Forms.Design.MenuCommands> и <xref:System.ComponentModel.Design.StandardCommands> содержат <xref:System.ComponentModel.Design.CommandID> идентификаторы для стандартных стандартных команд и команд меню, которые уже связаны с расположением в определенном меню.  
  
> [!NOTE]
>  Попытка добавить команду меню с уже существующим <xref:System.ComponentModel.Design.CommandID> приведет к созданию <xref:System.InvalidOperationException>. При добавлении команды меню убедитесь, что она еще не находится в меню, использующем метод <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>, или используйте обработку исключений в разумном виде.  
  
 Обработчик событий можно подключить к предопределенной команде меню с помощью следующей процедуры:  
  
1.  Если команда меню для связывания с обработчиком событий была добавлена в меню или находится в методе <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>, рассмотрите возможность повторного восстановления этой команды меню и необходимости вызова текущего обработчика событий из нового обработчика событий. Если код может восстановить команду меню или создать цепочку вызовов обработчиков событий, обязательно сохраните ссылку на команду меню в любом месте.  
  
2.  Убедитесь, что все ранее существующие команды меню с тем же <xref:System.ComponentModel.Design.CommandID> удалены из меню с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>.  
  
3.  Создайте новый <xref:System.ComponentModel.Design.MenuCommand> и укажите обработчик событий в конструкторе вместе с <xref:System.ComponentModel.Design.CommandID>, представляющим команду для добавления. Каждая стандартная команда меню связана с предварительно определенным расположением меню, в которое добавляется. Поддерживаемые идентификаторы команд определены в перечислениях <xref:System.ComponentModel.Design.StandardCommands> и <xref:System.Windows.Forms.Design.MenuCommands>.  
  
4.  Если вы хотите вызвать любой существующий обработчик событий для команды меню, вызовите метод <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> команды меню, которую вы заменили в меню, из обработчика событий, который обрабатывает событие вызова команды меню.  
  
5.  Если вы заинтересованы в восстановлении обработчика событий уже существующей команды меню, которая была заменена, добавьте сохраненную существующую команду меню после удаления созданной команды меню "заменить". Может потребоваться добавить это поведение в метод `Dispose` для вашего типа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Идентификатор <see cref="T:System.ComponentModel.Design.CommandID" /> указанной команды <see cref="T:System.ComponentModel.Design.MenuCommand" /> уже представлен в меню.</exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Добавляемый объект <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
        <summary>Добавляет указанную команду конструктора в набор общих команд конструктора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструкторы компонентов, предоставляющих команды конструктора, должны использовать свойство <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> своего конструктора, а не вызывать этот метод. Этот метод добавляет глобальную команду конструктора, доступ к которой можно получить из контекстного меню правой кнопки мыши в режиме конструктора, независимо от текущего выбранного компонента.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="iMenuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">Объект <see cref="T:System.ComponentModel.Design.CommandID" />, который требуется найти.</param>
        <summary>Осуществляет поиск указанного идентификатора команды и возвращает связанную с ним команду меню.</summary>
        <returns>Команда <see cref="T:System.ComponentModel.Design.MenuCommand" />, связанная с идентификатором команды, или значение <see langword="null" />, если команда не найдена.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="iMenuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">Идентификатор <see cref="T:System.ComponentModel.Design.CommandID" /> команды, которую необходимо найти и выполнить.</param>
        <summary>Вызывает команду меню или команду конструктора, соответствующую указанному идентификатору команды.</summary>
        <returns>Значение <see langword="true" />, если команда найдена и вызвана успешно; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод выполняет поиск команды меню или конструктора с <xref:System.ComponentModel.Design.CommandID>, соответствующей указанному <xref:System.ComponentModel.Design.CommandID>. Этот метод сначала выполняет поиск в коллекции команд конструктора, состоящей из глобальных и активных команд, предоставленных конструктором, прежде чем продолжить поиск (при необходимости) с помощью службы команд глобальной среды. Если найдена соответствующая команда меню или команд конструктора, вызывается команда.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">Удаляемый объект <see cref="T:System.ComponentModel.Design.MenuCommand" />.</param>
        <summary>Удаляет из меню указанную стандартную команду меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод удаляет указанный <xref:System.ComponentModel.Design.MenuCommand>, если он найден. Этот метод не вызывает исключение или не возвращает значение, если указанный <xref:System.ComponentModel.Design.MenuCommand> не найден. Используйте метод <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>, чтобы определить, находится ли <xref:System.ComponentModel.Design.MenuCommand>, соответствующий заданному <xref:System.ComponentModel.Design.CommandID>, в меню.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Удаляемый объект <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
        <summary>Удаляет указанную команду конструктора из коллекции глобальных команд конструктора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод удаляет указанную глобальную команду конструктора, если она находится в коллекции глобальных команд конструктора. Команду конструктора можно добавить в коллекцию глобальных команд конструктора с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="iMenuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">Идентификатор <see cref="T:System.ComponentModel.Design.CommandID" /> отображаемого контекстного меню.</param>
        <param name="x">Координата по оси X, в которой отображается меню (в экранных координатах).</param>
        <param name="y">Координата по оси Y, в которой отображается меню (в экранных координатах).</param>
        <summary>Отображает указанное контекстное меню в заданном месте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> может отображать любое из следующих контекстных меню Visual Studio, содержащих команды меню в указанной точке:  
  
|Меню|CommandID|  
|----------|---------------|  
|Контекстное меню, отображаемое для контейнера|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|Контекстное меню, отображаемое для области компонентов|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|Контекстное меню, отображаемое для выделения|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|Контекстное меню, отображаемое для выбора области|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 Этот метод также может отображать другие зарегистрированные контекстные меню.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию команд конструктора, доступных в настоящий момент.</summary>
        <value>Коллекция <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />, содержащая доступные в текущий момент команды конструктора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Набор доступных в настоящее время команд конструктора состоит из всех глобальных команд конструктора, которые добавляются с помощью метода <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> для этого интерфейса, и отдельных команд конструктора, которые предлагаются свойством <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> отдельных конструкторов. Если имя глобальной команды конфликтует с именем команды конструктора, приоритет имеет команда конструктора, предоставленная конструктором.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>
