<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5dbdfdefcbd4f231e7cdeecf42333017ea9d14e4" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63902809" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurfaceManager = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет коллекцией объектов <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager> Класс предназначен для являться контейнером для <xref:System.ComponentModel.Design.DesignSurface> объектов. Он предоставляет общие службы маршрутизации событий, дескриптор между конструкторами, окон свойств и другие глобальные объекты. С помощью <xref:System.ComponentModel.Design.DesignSurfaceManager> не является обязательным, но рекомендуется, если хотите иметь несколько окна конструктора.  
  
 <xref:System.ComponentModel.Design.DesignSurfaceManager> Класс предоставляет несколько служб времени разработки, автоматически. Каждая из этих служб можно переопределить, заменив их в защищенном <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> свойство. Чтобы заменить службы, переопределить конструктор, вызовите базовый и вносить изменения посредством защищенного <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> свойство. Все службы, которые добавлены в контейнер службы, которые реализуют <xref:System.IDisposable> интерфейс удаляются при удалении диспетчера областей разработки. <xref:System.ComponentModel.Design.DesignSurfaceManager> Класс предоставляет <xref:System.ComponentModel.Design.IDesignerEventService> интерфейс как службу по умолчанию. <xref:System.ComponentModel.Design.IDesignerEventService> Механизм глобального событий для события конструктора. С помощью этого механизма приложение получает, когда конструктор становится активным. Эта служба содержит коллекцию конструкторов и в одном месте, где глобальные объекты, такие как в окне «Свойства» можно отслеживать Выбор события изменения.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">для полного доступа к системным ресурсам. Требовать значения: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Связанное состояние:</permission>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurfaceManager : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurfaceManager" Usage="new System.ComponentModel.Design.DesignSurfaceManager parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">Родительский поставщик службы. Запросы на обслуживание направляются этому поставщику в том случае, если они не могут быть разрешены диспетчером области разработки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurface : System.ComponentModel.Design.DesignSurface with get, set" Usage="System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает активный конструктор.</summary>
        <value>Активный конструктор.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> Свойство должно задаваться в пользовательский интерфейс конструктора, каждый раз, когда конструктор становится активным окном. Реализация по умолчанию это свойство работает с используемой по умолчанию реализации <xref:System.ComponentModel.Design.IDesignerEventService> интерфейс для уведомления заинтересованных лиц о том, что новый конструктор теперь активен. Если предоставить собственную реализацию <xref:System.ComponentModel.Design.IDesignerEventService>, следует переопределить это свойство, чтобы соответствующим образом уведомить службу. Это свойство может быть присвоено `null`, указывающий, что конструктор не активен.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " Usage="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении активного в текущий момент конструктора.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает экземпляр области разработки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : unit -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр области разработки.</summary>
        <returns>Новый экземпляр области разработки.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">Родительский поставщик службы. Будет создан путем слияния новый поставщик службы, который сначала запросит службу у данного поставщика, а затем делегирует сбои в объект диспетчера областей разработки. Объединенный поставщик будет передан в метод <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.</param>
        <summary>Создает экземпляр области разработки.</summary>
        <returns>Новый экземпляр области разработки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вы хотите удобное добавление дополнительных служб, используйте `parentProvider` параметр, чтобы предоставить поставщик службы для этой рабочей области конструктора. <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> Метод создает поставщика объединенные службы, которая способна удовлетворить запросы на обслуживание от поставщика данной службы, а также <xref:System.ComponentModel.Design.DesignSurfaceManager> сам. <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> Метод затем передает этот поставщик услуг в <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> метод.  
  
 После <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> возвращает рабочей области конструирования, <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> метод пытается получить права <xref:System.ComponentModel.Design.IDesignerEventService>. Если он имеется, и в том случае, если он является экземпляром службы, <xref:System.ComponentModel.Design.DesignSurfaceManager> предоставляется по умолчанию, <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> вызывает метод <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parentProvider" /> — <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Если внешней реализацией службы была предоставлена, отвечает, производный от класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> классу генерировать <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> событий.</para></block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface&#xA;override this.CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurfaceCore parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">Поставщик службы, который должен быть передан в область разработки. Этот объект является экземпляром класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> или объектом, который реализует класс <see cref="T:System.IServiceProvider" /> и отражает слияние поставщика службы класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> и переданного извне поставщика.</param>
        <summary>Реализация, которая создает область разработки.</summary>
        <returns>Новый экземпляр области разработки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> Метод вызывается как <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> методы. Это реализация, которая фактически создает в область конструктора. Реализация по умолчанию просто возвращает новый <xref:System.ComponentModel.Design.DesignSurface>. Можно переопределить этот метод для предоставления пользовательского объекта, который является производным от <xref:System.ComponentModel.Design.DesignSurface> класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при создании конструктора.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении конструктора.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaces : System.ComponentModel.Design.DesignSurfaceCollection" Usage="System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию областей разработки.</summary>
        <value>Коллекция областей разработки, которые в текущий момент содержатся в диспетчере областей разработки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> Свойство реализуется непосредственно на основе <xref:System.ComponentModel.Design.IDesignerEventService>, поэтому если предоставить собственную реализацию этой службы, это свойство использует вашей реализации.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurfaceManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Открытый <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> метод соответствует стандарту <xref:System.IDisposable> шаблон. Вызов этого метода приводит к удалению диспетчера областей разработки. Он также удаляет контейнер службы, в результате чего все службы, которые реализуют <xref:System.IDisposable> также непосредственно перед удалением. Защищенная версия этого метода является `virtual` и проверяет, соответствует обычной <xref:System.IDisposable> шаблон.  
  
> [!NOTE]
>  Так как <xref:System.ComponentModel.Design.DesignSurfaceManager> имеет любой машинный код для очистки, он не имеет метода завершения, вызовы <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. Если необходимо вызвать <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, ее необходимо добавить в метод завершения самостоятельно.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurfaceManager.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Открытый <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> метод соответствует стандарту <xref:System.IDisposable> шаблон. Вызов этого метода приводит к удалению диспетчера областей разработки. Он также удаляет контейнер службы, в результате чего все службы, которые реализуют <xref:System.IDisposable> также непосредственно перед удалением. Защищенная версия этого метода является `virtual` и проверяет, соответствует обычной <xref:System.IDisposable> шаблон.  
  
> [!NOTE]
>  Так как <xref:System.ComponentModel.Design.DesignSurfaceManager> имеет любой машинный код для очистки, он не имеет метода завершения, вызовы <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. Если необходимо вызвать <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, ее необходимо добавить в метод завершения самостоятельно.  
  
 Этот метод вызывается открытым `Dispose()` метод и <xref:System.Object.Finalize%2A> метод. `Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` параметру присвоить `true`. <xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` присвоено `false`.  
  
 Когда `disposing` параметр имеет значение true, этот метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.ComponentModel.Design.DesignSurfaceManager> ссылки. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see langword="Dispose" />. Дополнительные сведения о том, как реализовать <see langword="Dispose(Boolean)" />, см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurfaceManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Тип службы для извлечения.</param>
        <summary>Возвращает службу, находящуюся в контейнере служб диспетчера области конструктора.</summary>
        <returns>Объект, который реализует заданный тип службы или является его производным классом; в обратном случае значение <see langword="null" />, если служба отсутствует в контейнере служб.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> Метод передает поставщику услуг, указанному для диспетчера областей разработки во время создания.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при изменении глобального выделения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает при активном конструкторе выбранного набора компонентов изменения. Это сопоставляется с помощью <xref:System.ComponentModel.Design.IDesignerEventService> интерфейс.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает свойство <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> диспетчера областей разработки.</summary>
        <value>Свойство <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> диспетчера областей разработки.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Классы, наследующие от <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> класс может использовать это свойство для добавления и удаления служб.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>