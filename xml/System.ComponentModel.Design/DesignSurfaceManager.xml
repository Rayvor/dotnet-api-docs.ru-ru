<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0affe8cca4ee342c33146259b5fe448addb5958a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70510125" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurfaceManager = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f852-101">Управляет коллекцией объектов <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-101">Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-102">Класс предназначен для использования в качестве <xref:System.ComponentModel.Design.DesignSurface> контейнера объектов. <xref:System.ComponentModel.Design.DesignSurfaceManager></span><span class="sxs-lookup"><span data-stu-id="2f852-102">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="2f852-103">Он предоставляет общие службы, которые обрабатывали маршрутизацию событий между конструкторами, окнами свойств и другими глобальными объектами.</span><span class="sxs-lookup"><span data-stu-id="2f852-103">It provides common services that handle event routing between designers, property windows, and other global objects.</span></span> <span data-ttu-id="2f852-104">Использование <xref:System.ComponentModel.Design.DesignSurfaceManager> является необязательным, но рекомендуется, если предполагается иметь несколько окон конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-104">Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.</span></span>  
  
 <span data-ttu-id="2f852-105"><xref:System.ComponentModel.Design.DesignSurfaceManager> Класс автоматически предоставляет несколько служб времени разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-105">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically.</span></span> <span data-ttu-id="2f852-106">Вы можете переопределить каждую из этих служб, заменив их в защищенном <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> свойстве.</span><span class="sxs-lookup"><span data-stu-id="2f852-106">You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="2f852-107">Чтобы заменить службу, переопределите конструктор, вызовите base и внесите любые изменения с помощью защищенного <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2f852-107">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="2f852-108">Все службы, добавленные в контейнер службы, реализующие <xref:System.IDisposable> интерфейс, удаляются при удалении диспетчера области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-108">All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed.</span></span> <span data-ttu-id="2f852-109"><xref:System.ComponentModel.Design.DesignSurfaceManager> Класс <xref:System.ComponentModel.Design.IDesignerEventService>  предоставляет интерфейс в качестве службы по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2f852-109">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service.</span></span> <span data-ttu-id="2f852-110"><xref:System.ComponentModel.Design.IDesignerEventService>предоставляет Глобальный механизм событий для событий конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-110"><xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events.</span></span> <span data-ttu-id="2f852-111">При использовании этого механизма приложение уведомляется о том, что конструктор становится активным.</span><span class="sxs-lookup"><span data-stu-id="2f852-111">With this mechanism, an application is informed when a designer becomes active.</span></span> <span data-ttu-id="2f852-112">Служба предоставляет коллекцию конструкторов и одно место, где глобальные объекты, такие как окно свойств, могут отслеживать события изменения выбора.</span><span class="sxs-lookup"><span data-stu-id="2f852-112">The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="2f852-113">для полного доступа к системным ресурсам.</span><span class="sxs-lookup"><span data-stu-id="2f852-113">for full access to system resources.</span></span> <span data-ttu-id="2f852-114">Значения спроса: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-114">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="2f852-115">Связанное состояние:</span><span class="sxs-lookup"><span data-stu-id="2f852-115">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f852-116">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f852-117">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurfaceManager : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurfaceManager" Usage="new System.ComponentModel.Design.DesignSurfaceManager parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="2f852-118">Родительский поставщик службы.</span><span class="sxs-lookup"><span data-stu-id="2f852-118">A parent service provider.</span></span> <span data-ttu-id="2f852-119">Запросы на обслуживание направляются этому поставщику в том случае, если они не могут быть разрешены диспетчером области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-119">Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</span></span></param>
        <summary><span data-ttu-id="2f852-120">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurface : System.ComponentModel.Design.DesignSurface with get, set" Usage="System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-121">Получает или задает активный конструктор.</span><span class="sxs-lookup"><span data-stu-id="2f852-121">Gets or sets the active designer.</span></span></summary>
        <value><span data-ttu-id="2f852-122">Активный конструктор.</span><span class="sxs-lookup"><span data-stu-id="2f852-122">The active designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-123"><xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> Свойство должно быть задано пользовательским интерфейсом конструктора всякий раз, когда конструктор превращается в активное окно.</span><span class="sxs-lookup"><span data-stu-id="2f852-123">The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window.</span></span> <span data-ttu-id="2f852-124">Реализация этого свойства по умолчанию работает с реализацией <xref:System.ComponentModel.Design.IDesignerEventService> интерфейса по умолчанию, чтобы уведомить заинтересованных сторон о том, что теперь активен новый конструктор.</span><span class="sxs-lookup"><span data-stu-id="2f852-124">The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active.</span></span> <span data-ttu-id="2f852-125">Если вы предоставляете собственную реализацию <xref:System.ComponentModel.Design.IDesignerEventService>, следует переопределить это свойство, чтобы уведомить службу соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="2f852-125">If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately.</span></span> <span data-ttu-id="2f852-126">Этому свойству можно присвоить значение `null`, указывающее, что конструктор не активен.</span><span class="sxs-lookup"><span data-stu-id="2f852-126">This property can be set to `null`, indicating that no designer is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " Usage="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-127">Происходит при изменении активного в текущий момент конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-127">Occurs when the currently active designer changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f852-128">Создает экземпляр области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-128">Creates an instance of a design surface.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : unit -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f852-129">Создает экземпляр области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-129">Creates an instance of a design surface.</span></span></summary>
        <returns><span data-ttu-id="2f852-130">Новый экземпляр области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-130">A new design surface instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="2f852-131">Родительский поставщик службы.</span><span class="sxs-lookup"><span data-stu-id="2f852-131">A parent service provider.</span></span> <span data-ttu-id="2f852-132">Будет создан путем слияния новый поставщик службы, который сначала запросит службу у данного поставщика, а затем делегирует сбои в объект диспетчера областей разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-132">A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</span></span> <span data-ttu-id="2f852-133">Объединенный поставщик будет передан в метод <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-133">This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</span></span></param>
        <summary><span data-ttu-id="2f852-134">Создает экземпляр области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-134">Creates an instance of a design surface.</span></span></summary>
        <returns><span data-ttu-id="2f852-135">Новый экземпляр области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-135">A new design surface instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-136">Если вы хотите добавить дополнительные службы для каждого конструктора, используйте `parentProvider` параметр, чтобы предоставить поставщик услуг для этой области конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-136">If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface.</span></span> <span data-ttu-id="2f852-137">Метод создает Объединенный поставщик услуг, который может отвечать на запросы на обслуживание как от заданного поставщика услуг, так и <xref:System.ComponentModel.Design.DesignSurfaceManager> от самого. <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A></span><span class="sxs-lookup"><span data-stu-id="2f852-137">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself.</span></span> <span data-ttu-id="2f852-138">Затем метод передает этот поставщик <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> услуг в метод. <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A></span><span class="sxs-lookup"><span data-stu-id="2f852-138">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.</span></span>  
  
 <span data-ttu-id="2f852-139">После <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> возврата области <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> конструктора метод пытается получить объект <xref:System.ComponentModel.Design.IDesignerEventService>.</span><span class="sxs-lookup"><span data-stu-id="2f852-139">After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>.</span></span> <span data-ttu-id="2f852-140">Если он имеется и является экземпляром службы, <xref:System.ComponentModel.Design.DesignSurfaceManager> предоставляемой по умолчанию <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> , метод вызывает <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> событие.</span><span class="sxs-lookup"><span data-stu-id="2f852-140">If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f852-141">Свойство <paramref name="parentProvider" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-141"><paramref name="parentProvider" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f852-142">Если была предоставлена внешняя реализация службы, то для <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> вызова события отвечает класс, производный от класса.</span><span class="sxs-lookup"><span data-stu-id="2f852-142">If an external implementation of the service was provided, it is the responsibility of the class that derives from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class to raise the <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> event.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface&#xA;override this.CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurfaceCore parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="2f852-143">Поставщик службы, который должен быть передан в область разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-143">A service provider to pass to the design surface.</span></span> <span data-ttu-id="2f852-144">Этот объект является экземпляром класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> или объектом, который реализует класс <see cref="T:System.IServiceProvider" /> и отражает слияние поставщика службы класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> и переданного извне поставщика.</span><span class="sxs-lookup"><span data-stu-id="2f852-144">This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</span></span></param>
        <summary><span data-ttu-id="2f852-145">Реализация, которая создает область разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-145">Implementation that creates the design surface.</span></span></summary>
        <returns><span data-ttu-id="2f852-146">Новый экземпляр области разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-146">A new design surface instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-147">Метод вызывается обоими  <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> методами. <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A></span><span class="sxs-lookup"><span data-stu-id="2f852-147">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods.</span></span> <span data-ttu-id="2f852-148">Это реализация, которая фактически создает область конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-148">It is the implementation that actually creates the design surface.</span></span> <span data-ttu-id="2f852-149">Реализация по умолчанию просто возвращает новый <xref:System.ComponentModel.Design.DesignSurface>объект.</span><span class="sxs-lookup"><span data-stu-id="2f852-149">The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="2f852-150">Этот метод можно переопределить для предоставления пользовательского объекта, производного от <xref:System.ComponentModel.Design.DesignSurface> класса.</span><span class="sxs-lookup"><span data-stu-id="2f852-150">You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-151">Происходит при создании конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-151">Occurs when a designer is created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-152">Происходит при завершении конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-152">Occurs when a designer is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaces : System.ComponentModel.Design.DesignSurfaceCollection" Usage="System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-153">Возвращает коллекцию областей разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-153">Gets a collection of design surfaces.</span></span></summary>
        <value><span data-ttu-id="2f852-154">Коллекция областей разработки, которые в текущий момент содержатся в диспетчере областей разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-154">A collection of design surfaces that are currently hosted by the design surface manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-155">Свойство реализуется непосредственно поверх <xref:System.ComponentModel.Design.IDesignerEventService>, поэтому, если вы предоставляете собственную реализацию этой службы, это свойство использует вашу реализацию. <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A></span><span class="sxs-lookup"><span data-stu-id="2f852-155">The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f852-156">Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-156">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurfaceManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f852-157">Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2f852-157">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-158">Открытый <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> метод соответствует стандартному <xref:System.IDisposable> шаблону.</span><span class="sxs-lookup"><span data-stu-id="2f852-158">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="2f852-159">При вызове этого метода диспетчер рабочей области конструирования уничтожается.</span><span class="sxs-lookup"><span data-stu-id="2f852-159">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="2f852-160">Он также удаляет контейнер службы, в результате чего удаляются все службы, реализующие <xref:System.IDisposable> .</span><span class="sxs-lookup"><span data-stu-id="2f852-160">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="2f852-161">Защищенная версия этого метода `virtual` соответствует стандартному <xref:System.IDisposable> шаблону.</span><span class="sxs-lookup"><span data-stu-id="2f852-161">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f852-162">Поскольку <xref:System.ComponentModel.Design.DesignSurfaceManager> не имеет машинного кода для очистки, он не имеет метода завершения, который вызывает <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f852-162">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="2f852-163">Если необходимо вызвать <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, метод завершения необходимо добавить самостоятельно.</span><span class="sxs-lookup"><span data-stu-id="2f852-163">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurfaceManager.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2f852-164">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="2f852-164"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2f852-165">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="2f852-165">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-166">Открытый <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> метод соответствует стандартному <xref:System.IDisposable> шаблону.</span><span class="sxs-lookup"><span data-stu-id="2f852-166">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="2f852-167">При вызове этого метода диспетчер рабочей области конструирования уничтожается.</span><span class="sxs-lookup"><span data-stu-id="2f852-167">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="2f852-168">Он также удаляет контейнер службы, в результате чего удаляются все службы, реализующие <xref:System.IDisposable> .</span><span class="sxs-lookup"><span data-stu-id="2f852-168">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="2f852-169">Защищенная версия этого метода `virtual` соответствует стандартному <xref:System.IDisposable> шаблону.</span><span class="sxs-lookup"><span data-stu-id="2f852-169">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f852-170">Поскольку <xref:System.ComponentModel.Design.DesignSurfaceManager> не имеет машинного кода для очистки, он не имеет метода завершения, который вызывает <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f852-170">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="2f852-171">Если необходимо вызвать <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, метод завершения необходимо добавить самостоятельно.</span><span class="sxs-lookup"><span data-stu-id="2f852-171">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="2f852-172">Этот метод вызывается открытым `Dispose()` методом <xref:System.Object.Finalize%2A> и методом.</span><span class="sxs-lookup"><span data-stu-id="2f852-172">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2f852-173">`Dispose()`вызывает защищенный `Dispose(Boolean)` метод с параметром `disposing` , для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="2f852-173">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2f852-174"><xref:System.Object.Finalize%2A>вызывает метод `disposing` `false`с параметром, равным. `Dispose`</span><span class="sxs-lookup"><span data-stu-id="2f852-174"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2f852-175">Если параметр имеет значение true, этот метод освобождает все ресурсы, удерживаемые всеми управляемыми объектами <xref:System.ComponentModel.Design.DesignSurfaceManager> , на которые ссылается эта ссылка. `disposing`</span><span class="sxs-lookup"><span data-stu-id="2f852-175">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references.</span></span> <span data-ttu-id="2f852-176">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="2f852-176">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f852-177">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="2f852-177">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2f852-178">При переопределении <see langword="Dispose(Boolean)" /> следует избегать ссылок на объекты, которые были удалены ранее при предыдущем <see langword="Dispose" />вызове метода.</span><span class="sxs-lookup"><span data-stu-id="2f852-178">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="2f852-179">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2f852-179">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="2f852-180"><see langword="Dispose" /> Дополнительные сведения о <see cref="M:System.Object.Finalize" />и см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2f852-180">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurfaceManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="2f852-181">Тип службы для извлечения.</span><span class="sxs-lookup"><span data-stu-id="2f852-181">The service type to retrieve.</span></span></param>
        <summary><span data-ttu-id="2f852-182">Возвращает службу, находящуюся в контейнере служб диспетчера области конструктора.</span><span class="sxs-lookup"><span data-stu-id="2f852-182">Gets a service in the design surface manager's service container.</span></span></summary>
        <returns><span data-ttu-id="2f852-183">Объект, который реализует заданный тип службы или является его производным классом; в обратном случае значение <see langword="null" />, если служба отсутствует в контейнере служб.</span><span class="sxs-lookup"><span data-stu-id="2f852-183">An object that implements, or is a derived class of, the given service type; otherwise, <see langword="null" /> if the service does not exist in the service container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-184"><xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> Метод пересылается любому поставщику услуг, который был передан диспетчеру области разработки во время создания.</span><span class="sxs-lookup"><span data-stu-id="2f852-184">The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-185">Возникает при изменении глобального выделения.</span><span class="sxs-lookup"><span data-stu-id="2f852-185">Occurs when the global selection changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f852-186">Это событие возникает при изменении выбора набора компонентов активным конструктором.</span><span class="sxs-lookup"><span data-stu-id="2f852-186">This event is raised when the active designer's selection of component set changes.</span></span> <span data-ttu-id="2f852-187">Это сопоставление осуществляется через <xref:System.ComponentModel.Design.IDesignerEventService> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2f852-187">This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f852-188">Возвращает свойство <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> диспетчера областей разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-188">Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span></span></summary>
        <value><span data-ttu-id="2f852-189">Свойство <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> диспетчера областей разработки.</span><span class="sxs-lookup"><span data-stu-id="2f852-189">The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f852-190">Классы, наследующие от <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> класса, могут использовать это свойство для добавления и удаления служб.</span><span class="sxs-lookup"><span data-stu-id="2f852-190">Classes inheriting from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class can use this property to add and remove services.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
