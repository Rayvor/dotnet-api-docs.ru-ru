<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19f185dc54e30b22d5d6351c4fced703878dc52a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70662796" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет интерфейс для изменения набора дескрипторов элементов для компонента в режиме разработки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Интерфейс предоставляет интерфейс, позволяющий изменять свойства, события и атрибуты уровня класса компонента во время разработки. Это изменение выполняется с помощью набора дескрипторов, предоставляемых компонентом через <xref:System.ComponentModel.TypeDescriptor>. Дескриптор типа будет запрашивать сайт компонента для <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> службы и, если он существует, дескриптор типа будет передавать все метаданные, собранные в эту службу. Затем служба может изменить метаданные, добавляя, удаляя и изменяя существующие характеристики компонента.  
  
 Например, свойства компонента можно изменить с помощью вызова <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> метода. Служба фильтрации получает словарь, содержащий имена свойств и их дескрипторы свойств типа <xref:System.ComponentModel.PropertyDescriptor>. Изменения реализуются с помощью следующей логики.  
  
|Изменение|Реализация|  
|------------------|--------------------|  
|Удален|Удалите соответствующую запись в словаре.|  
|Сложение|Добавьте соответствующую запись в словарь.|  
|Изменения|Вызывайте существующие методы дескриптора свойства, замените запись дескриптора связанного свойства или замените всю пару ключ/значение свойства в словаре.|  
  
 Возвращаемое значение <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> определяет, является ли этот набор свойств фиксированным. Если этот метод возвращает `true`значение <xref:System.ComponentModel.TypeDescriptor> , компонент для этого компонента может кэшировать результаты. Этот кэш сохраняется до тех пор, пока компонент не будет собран сборщиком мусора или <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> не будет вызван метод дескриптора типа.  
  
   
  
## Examples  
 В следующем примере кода показан конструктор, использующий <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> для фильтрации коллекции Attributes любых новых или существующих <xref:System.Windows.Forms.Button> элементов, чтобы добавить атрибут конструктора для нового конструктора перед загрузкой или перезагрузкой конструктора для кнопки.  
  
 Чтобы использовать этот пример, добавьте код в проект Windows Forms и загрузите компоненты из библиотеки классов в область элементов.  
  
 См. также раздел [Пошаговое руководство. Автоматическое заполнение панели элементов пользовательскими компонентами](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Добавьте в форму несколько кнопок. `ButtonDesignerFilterComponent` Добавьте в форму и отобразится в области компонентов. Добавляет, который реализует <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> , как поставщик служб в режиме конструктора. `ButtonDesignerFilterService` `ButtonDesignerFilterComponent` Существующие или новые <xref:System.Windows.Forms.Button> объекты в форме начнут перезапускаться цветом после того `ButtonDesignerFilterService` , как заменит конструктор для каждой существующей `ColorCycleButtonDesigner`и новой кнопки на. Кнопки будут относиться к цветовому циклу при наведении на них указателя мыши, а также при необходимости возможной перезагрузки `MouseLeave` или сбросе цветов фона и переднего плана для событий. Новым <xref:System.Windows.Forms.Button> объектам будет `ColorCycleButtonDesigner` предоставлен <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> метод `ButtonDesignerFilterComponent` <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, который был загружен, пока не будет удален и заменен исходным. `ButtonDesignerFilterService` Класс в этом примере <xref:System.Windows.Forms.Button> связан с  `ColorCycleButtonDesigner` .  `ColorCycleButton`  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Для фильтрации дескрипторов элементов <see cref="T:System.ComponentModel.TypeDescriptor" />, предоставляемых, реализуйте этот интерфейс в компоненте и <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />Переопределите методы, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />или <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> этого класса, чтобы отфильтровать атрибуты, события или свойства соответственно.</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, атрибуты которого необходимо отфильтровать.</param>
        <param name="attributes">Словарь атрибутов, которые можно изменить.</param>
        <summary>Фильтрует атрибуты, предоставляемые компонентом через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>Значение <see langword="true" />, если набор отфильтрованных атрибутов должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда пользователь запрашивает набор атрибутов для компонента. Атрибуты добавляются в словарь с атрибутом <xref:System.Attribute.TypeId%2A> в качестве ключей и фактическим атрибутом в качестве значения. Разработчики этой службы могут добавлять, удалять или изменять существующие записи атрибутов в словаре.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Возвращать <see langword="false" /> только при необходимости, поскольку повторяющиеся запросы к службе фильтрации дескрипторов типов могут снизить производительность.</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, для которого необходимо отфильтровать события.</param>
        <param name="events">Словарь событий, которые можно изменить.</param>
        <summary>Фильтрует события, предоставляемые компонентом через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>Значение <see langword="true" />, если набор отфильтрованных событий должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда пользователь запрашивает набор событий для компонента. События добавляются в словарь с именами событий в качестве ключей, а соответствующие <xref:System.ComponentModel.EventDescriptor> объекты — в качестве значений. Разработчики этой службы могут добавлять, удалять или изменять записи событий в словаре.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Возвращать <see langword="false" /> только при необходимости, поскольку повторяющиеся запросы к службе фильтрации дескрипторов типов могут снизить производительность.</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, для которого необходимо отфильтровать свойства.</param>
        <param name="properties">Словарь свойств, которые можно изменить.</param>
        <summary>Фильтрует свойства, предоставляемые компонентом через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>Значение <see langword="true" />, если набор отфильтрованных свойств должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда пользователь запрашивает набор свойств для компонента. Свойства добавляются в словарь с именами свойств в качестве ключей и соответствующих <xref:System.ComponentModel.PropertyDescriptor> объектов в качестве значений. Разработчики этой службы могут добавлять, удалять или изменять записи свойств в словаре.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Возвращать <see langword="false" /> только при необходимости, поскольку повторяющиеся запросы к службе фильтрации дескрипторов типов могут снизить производительность.</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>
