<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e411eb6d34201fa159165ad00bc73640600ec87" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75148563" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b44d-101">Предоставляет интерфейс, позволяющий конструктору получать доступ и фильтровать словари класса <see cref="T:System.ComponentModel.TypeDescriptor" />, в которых хранятся дескрипторы свойств, атрибутов и событий, предоставляемые конструктором компонентов в среде режима разработки.</span><span class="sxs-lookup"><span data-stu-id="8b44d-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-102"><xref:System.ComponentModel.Design.IDesignerFilter> позволяет конструктору фильтровать набор свойств, атрибутов и дескрипторов событий, которые связанный компонент предоставляет через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="8b44d-103">Методы этого интерфейса, имена которых начинаются с `Pre`, вызываются непосредственно перед методами, имена которых начинаются с `Post`.</span><span class="sxs-lookup"><span data-stu-id="8b44d-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="8b44d-104">Если необходимо добавить дескрипторы атрибутов, событий или свойств, используйте метод <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>или <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="8b44d-105">Если необходимо изменить или удалить дескрипторы атрибутов, событий или свойств, используйте метод <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>или <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b44d-106">В следующем примере демонстрируется переопределение <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>, которое добавляет свойство конструктора в окно свойств при выборе элемента управления конструктора во время разработки.</span><span class="sxs-lookup"><span data-stu-id="8b44d-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="8b44d-107">Полный пример конструктора, в котором используется интерфейс <xref:System.ComponentModel.Design.IDesignerFilter>, см. в примере для класса <xref:System.Windows.Forms.Design.ControlDesigner>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8b44d-108">Объекты <see cref="T:System.Attribute" /> класса компонента.</span><span class="sxs-lookup"><span data-stu-id="8b44d-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="8b44d-109">Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</span><span class="sxs-lookup"><span data-stu-id="8b44d-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="8b44d-110">При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора атрибутов, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8b44d-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-111">Этот метод предоставляет способ изменения или удаления элементов в словаре атрибутов, которые связанный компонент конструктора, реализующий этот интерфейс, предоставляет через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8b44d-112">Ключи в словаре атрибутов являются идентификаторами типов атрибутов.</span><span class="sxs-lookup"><span data-stu-id="8b44d-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="8b44d-113">Объекты имеют тип <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="8b44d-114">Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="8b44d-115">ИДЕНТИФИКАТОРом типа атрибута может быть любой объект.</span><span class="sxs-lookup"><span data-stu-id="8b44d-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="8b44d-116">По умолчанию <xref:System.Attribute> возвращает <xref:System.Type> в качестве значения свойства <xref:System.Attribute.TypeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="8b44d-117">Можно проверить <xref:System.Attribute.TypeId%2A> атрибута в словаре на предмет эквивалентности с известным <xref:System.Attribute.TypeId%2A> для атрибута, чтобы определить его, или использовать <xref:System.Reflection> для идентификации самого объекта атрибута.</span><span class="sxs-lookup"><span data-stu-id="8b44d-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="8b44d-118">Если атрибут, имеющий тот же <xref:System.Attribute.TypeId%2A>, что и существующий или наследуемый атрибут, добавляется в компонент, новый атрибут заменяет старый.</span><span class="sxs-lookup"><span data-stu-id="8b44d-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="8b44d-119">Для многих атрибутов новый атрибут того же типа заменит все предыдущие атрибуты типа.</span><span class="sxs-lookup"><span data-stu-id="8b44d-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="8b44d-120">Однако некоторые типы атрибутов возвращают <xref:System.Attribute.TypeId%2A>, который выборочно различает атрибут.</span><span class="sxs-lookup"><span data-stu-id="8b44d-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="8b44d-121">Например, чтобы предоставить различные типы одновременно активных конструкторов для типа, например <xref:System.ComponentModel.Design.IRootDesigner> и <xref:System.ComponentModel.Design.IDesigner>, класс <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A>, который однозначно определяет как атрибут, так и базовый тип конструктора.</span><span class="sxs-lookup"><span data-stu-id="8b44d-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="8b44d-122">Конструктор <xref:System.ComponentModel.DesignerAttribute> позволяет указать базовый тип конструктора в дополнение к конкретному типу, а <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A>, отражающее это.</span><span class="sxs-lookup"><span data-stu-id="8b44d-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="8b44d-123">Поэтому при добавлении нового <xref:System.ComponentModel.DesignerAttribute> с базовым типом конструктора того же типа, что и базовый тип конструктора существующего <xref:System.ComponentModel.DesignerAttribute>, старый атрибут заменяется новым атрибутом.</span><span class="sxs-lookup"><span data-stu-id="8b44d-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b44d-124">Можно напрямую отфильтровать словарь, доступный через параметр <paramref name="attributes" />, или оставить его без изменений.</span><span class="sxs-lookup"><span data-stu-id="8b44d-124">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8b44d-125">Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</span><span class="sxs-lookup"><span data-stu-id="8b44d-125">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="8b44d-126">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента.</span><span class="sxs-lookup"><span data-stu-id="8b44d-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="8b44d-127">Ключи в словаре событий являются именами событий.</span><span class="sxs-lookup"><span data-stu-id="8b44d-127">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="8b44d-128">При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора событий, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8b44d-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-129">Этот метод предоставляет способ изменения или удаления элементов в словаре событий, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-129">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8b44d-130">Ключи в словаре событий представляют собой имена событий.</span><span class="sxs-lookup"><span data-stu-id="8b44d-130">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="8b44d-131">Объекты имеют тип <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-131">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="8b44d-132">Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-132">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b44d-133">Можно напрямую отфильтровать словарь, доступный через параметр <paramref name="events" />, или оставить его без изменений.</span><span class="sxs-lookup"><span data-stu-id="8b44d-133">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8b44d-134">Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</span><span class="sxs-lookup"><span data-stu-id="8b44d-134">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="8b44d-135">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента.</span><span class="sxs-lookup"><span data-stu-id="8b44d-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="8b44d-136">Ключи в словаре свойств являются именами свойств.</span><span class="sxs-lookup"><span data-stu-id="8b44d-136">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="8b44d-137">При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора свойств, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8b44d-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-138">Этот метод предоставляет способ изменения или удаления элементов в словаре свойств, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-138">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8b44d-139">Ключи в словаре свойств являются именами свойств.</span><span class="sxs-lookup"><span data-stu-id="8b44d-139">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="8b44d-140">Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-140">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8b44d-141">Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-141">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b44d-142">Можно напрямую отфильтровать словарь, доступный через параметр <paramref name="properties" />, или оставить его без изменений.</span><span class="sxs-lookup"><span data-stu-id="8b44d-142">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8b44d-143">Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</span><span class="sxs-lookup"><span data-stu-id="8b44d-143">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8b44d-144">Объекты <see cref="T:System.Attribute" /> класса компонента.</span><span class="sxs-lookup"><span data-stu-id="8b44d-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="8b44d-145">Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</span><span class="sxs-lookup"><span data-stu-id="8b44d-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="8b44d-146">При переопределении в производном классе позволяет конструктору добавлять элементы в набор атрибутов, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8b44d-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-147">Этот метод предоставляет способ добавления элементов в словарь атрибутов, предоставляемых связанным компонентом конструктора, реализующим этот интерфейс, через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-147">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8b44d-148">Ключи в словаре атрибутов являются идентификаторами типов атрибутов.</span><span class="sxs-lookup"><span data-stu-id="8b44d-148">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="8b44d-149">Объекты имеют тип <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-149">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="8b44d-150">Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-150">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="8b44d-151">ИДЕНТИФИКАТОРом типа атрибута может быть любой объект.</span><span class="sxs-lookup"><span data-stu-id="8b44d-151">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="8b44d-152">По умолчанию <xref:System.Attribute> возвращает <xref:System.Type> в качестве значения свойства <xref:System.Attribute.TypeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-152">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="8b44d-153">Можно проверить <xref:System.Attribute.TypeId%2A> атрибута в словаре на предмет эквивалентности с известным <xref:System.Attribute.TypeId%2A> для атрибута, чтобы определить его, или использовать <xref:System.Reflection> для идентификации самого объекта атрибута.</span><span class="sxs-lookup"><span data-stu-id="8b44d-153">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="8b44d-154">Если атрибут, имеющий тот же <xref:System.Attribute.TypeId%2A>, что и существующий или наследуемый атрибут, добавляется в компонент, новый атрибут заменяет старый.</span><span class="sxs-lookup"><span data-stu-id="8b44d-154">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="8b44d-155">Для многих атрибутов новый атрибут того же типа заменит все предыдущие атрибуты типа.</span><span class="sxs-lookup"><span data-stu-id="8b44d-155">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="8b44d-156">Однако некоторые типы атрибутов возвращают <xref:System.Attribute.TypeId%2A>, который выборочно различает атрибут.</span><span class="sxs-lookup"><span data-stu-id="8b44d-156">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="8b44d-157">Например, чтобы предоставить различные типы одновременно активных конструкторов для типа, например <xref:System.ComponentModel.Design.IRootDesigner> и <xref:System.ComponentModel.Design.IDesigner>, класс <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A>, который однозначно определяет как атрибут, так и базовый тип конструктора.</span><span class="sxs-lookup"><span data-stu-id="8b44d-157">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="8b44d-158">Конструктор <xref:System.ComponentModel.DesignerAttribute> позволяет указать базовый тип конструктора в дополнение к конкретному типу, а <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A>, отражающее это.</span><span class="sxs-lookup"><span data-stu-id="8b44d-158">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="8b44d-159">Поэтому при добавлении нового <xref:System.ComponentModel.DesignerAttribute> с базовым типом конструктора того же типа, что и базовый тип конструктора существующего <xref:System.ComponentModel.DesignerAttribute>, старый атрибут заменяется новым атрибутом.</span><span class="sxs-lookup"><span data-stu-id="8b44d-159">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b44d-160">Можно напрямую отфильтровать словарь, доступный через параметр <paramref name="attributes" />, или оставить его без изменений.</span><span class="sxs-lookup"><span data-stu-id="8b44d-160">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8b44d-161">Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</span><span class="sxs-lookup"><span data-stu-id="8b44d-161">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="8b44d-162">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента.</span><span class="sxs-lookup"><span data-stu-id="8b44d-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="8b44d-163">Ключи в словаре событий являются именами событий.</span><span class="sxs-lookup"><span data-stu-id="8b44d-163">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="8b44d-164">При переопределении в производном классе позволяет конструктору добавлять элементы в набор событий, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8b44d-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-165">Этот метод предоставляет способ добавления элементов в словарь событий, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-165">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8b44d-166">Ключи в словаре событий представляют собой имена событий.</span><span class="sxs-lookup"><span data-stu-id="8b44d-166">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="8b44d-167">Объекты имеют тип <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-167">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="8b44d-168">Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-168">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b44d-169">Можно напрямую изменить словарь, доступный с помощью параметра <paramref name="events" />, или оставить его без изменений.</span><span class="sxs-lookup"><span data-stu-id="8b44d-169">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8b44d-170">Если вы переопределяете этот метод, вызовите базовую реализацию перед выполнением собственной фильтрации.</span><span class="sxs-lookup"><span data-stu-id="8b44d-170">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="8b44d-171">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента.</span><span class="sxs-lookup"><span data-stu-id="8b44d-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="8b44d-172">Ключи в словаре свойств являются именами свойств.</span><span class="sxs-lookup"><span data-stu-id="8b44d-172">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="8b44d-173">При переопределении в производном классе позволяет конструктору добавлять элементы в набор свойств, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8b44d-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b44d-174">Этот метод предоставляет способ добавления элементов в словарь свойств, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-174">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8b44d-175">Ключи в словаре свойств являются именами свойств.</span><span class="sxs-lookup"><span data-stu-id="8b44d-175">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="8b44d-176">Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-176">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8b44d-177">Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b44d-177">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8b44d-178">Можно напрямую изменить словарь, доступный с помощью параметра <paramref name="properties" />, или оставить его без изменений.</span><span class="sxs-lookup"><span data-stu-id="8b44d-178">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8b44d-179">Если вы переопределяете этот метод, вызовите базовую реализацию перед выполнением собственной фильтрации.</span><span class="sxs-lookup"><span data-stu-id="8b44d-179">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
