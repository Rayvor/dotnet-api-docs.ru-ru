<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37922b851425bf4cdf3e90c34d8602cbe6265dfc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348892" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет интерфейс, позволяющий конструктору получать доступ и фильтровать словари класса <see cref="T:System.ComponentModel.TypeDescriptor" />, в которых хранятся дескрипторы свойств, атрибутов и событий, предоставляемые конструктором компонентов в среде режима разработки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter>позволяет конструктору фильтровать набор свойств, атрибутов и дескрипторов событий, которые связанный компонент предоставляет через <xref:System.ComponentModel.TypeDescriptor>. Методы этого интерфейса, имена которых начинаются с `Pre` , вызываются непосредственно перед методами, имена которых начинаются с. `Post`  
  
 Если необходимо добавить дескрипторы атрибутов, событий или свойств, используйте <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>метод, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>или <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> .  
  
 Если необходимо изменить или удалить дескрипторы атрибута, события или свойства, используйте <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>метод, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>или <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> .  
  
   
  
## Examples  
 В следующем примере демонстрируется переопределение <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> , которое добавляет свойство конструктора в окно свойств при выборе элемента управления конструктора во время разработки. Полный пример конструктора, в <xref:System.Windows.Forms.Design.ControlDesigner> <xref:System.ComponentModel.Design.IDesignerFilter> котором используется интерфейс, см. в примере для класса.  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
        <summary>При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора атрибутов, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ изменения или удаления элементов в словаре атрибутов, которые связанный компонент конструктора, реализующий этот интерфейс, предоставляет через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре атрибутов являются идентификаторами типов атрибутов. Объекты имеют тип <xref:System.Attribute>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  
  
 ИДЕНТИФИКАТОРом типа атрибута может быть любой объект. По умолчанию <xref:System.Attribute> <xref:System.Type> возвращает свойство в качестве значения его <xref:System.Attribute.TypeId%2A> свойства. Можно проверить <xref:System.Attribute.TypeId%2A> атрибут в словаре на равенство с известным <xref:System.Attribute.TypeId%2A> атрибутом для его идентификации или использовать <xref:System.Reflection> для идентификации самого объекта атрибута.  
  
 Если атрибут, имеющий то же <xref:System.Attribute.TypeId%2A> значение, что и существующий или наследуемый атрибут, добавляется в компонент, новый атрибут заменяет старый. Для многих атрибутов новый атрибут того же типа заменит все предыдущие атрибуты типа. Однако некоторые типы атрибутов возвращают <xref:System.Attribute.TypeId%2A> , что позволяет выборочно отличать атрибут. Например, чтобы предоставить различные типы одновременно активных конструкторов для типа, например <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.Design.IDesigner>и, <xref:System.ComponentModel.DesignerAttribute> класс возвращает объект <xref:System.Attribute.TypeId%2A> , который однозначно определяет как атрибут, так и базовый конструктор. Тип. Конструктор позволяет указать базовый тип конструктора в дополнение к его конкретному типу и <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A> , который отражает это. <xref:System.ComponentModel.DesignerAttribute> Поэтому при добавлении нового <xref:System.ComponentModel.DesignerAttribute> с базовым типом конструктора того же типа, что и базовый тип конструктора существующего <xref:System.ComponentModel.DesignerAttribute>, старый атрибут заменяется новым атрибутом.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую отфильтровать словарь, доступный через <paramref name="attributes" /> параметр, или оставить его без изменений. Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
        <summary>При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора событий, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ изменения или удаления элементов в словаре событий, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре событий представляют собой имена событий. Объекты имеют тип <xref:System.ComponentModel.EventDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую отфильтровать словарь, доступный через <paramref name="events" /> параметр, или оставить его без изменений. Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
        <summary>При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора свойств, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ изменения или удаления элементов в словаре свойств, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую отфильтровать словарь, доступный через <paramref name="properties" /> параметр, или оставить его без изменений. Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
        <summary>При переопределении в производном классе позволяет конструктору добавлять элементы в набор атрибутов, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ добавления элементов в словарь атрибутов, предоставляемых связанным компонентом конструктора, реализующим этот интерфейс, <xref:System.ComponentModel.TypeDescriptor>через.  
  
 Ключи в словаре атрибутов являются идентификаторами типов атрибутов. Объекты имеют тип <xref:System.Attribute>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  
  
 ИДЕНТИФИКАТОРом типа атрибута может быть любой объект. По умолчанию <xref:System.Attribute> <xref:System.Type> возвращает свойство в качестве значения его <xref:System.Attribute.TypeId%2A> свойства. Можно проверить <xref:System.Attribute.TypeId%2A> атрибут в словаре на равенство с известным <xref:System.Attribute.TypeId%2A> атрибутом для его идентификации или использовать <xref:System.Reflection> для идентификации самого объекта атрибута.  
  
 Если атрибут, имеющий то же <xref:System.Attribute.TypeId%2A> значение, что и существующий или наследуемый атрибут, добавляется в компонент, новый атрибут заменяет старый. Для многих атрибутов новый атрибут того же типа заменит все предыдущие атрибуты типа. Однако некоторые типы атрибутов возвращают <xref:System.Attribute.TypeId%2A> , что позволяет выборочно отличать атрибут. Например, чтобы предоставить различные типы одновременно активных конструкторов для типа, например <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.Design.IDesigner>и, <xref:System.ComponentModel.DesignerAttribute> класс возвращает объект <xref:System.Attribute.TypeId%2A> , который однозначно определяет как атрибут, так и базовый конструктор. Тип. Конструктор позволяет указать базовый тип конструктора в дополнение к его конкретному типу и <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A> , который отражает это. <xref:System.ComponentModel.DesignerAttribute> Поэтому при добавлении нового <xref:System.ComponentModel.DesignerAttribute> с базовым типом конструктора того же типа, что и базовый тип конструктора существующего <xref:System.ComponentModel.DesignerAttribute>, старый атрибут заменяется новым атрибутом.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую отфильтровать словарь, доступный через <paramref name="attributes" /> параметр, или оставить его без изменений. Если вы переопределяете этот метод, вызовите базовую реализацию после выполнения собственной фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
        <summary>При переопределении в производном классе позволяет конструктору добавлять элементы в набор событий, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ добавления элементов в словарь событий, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре событий представляют собой имена событий. Объекты имеют тип <xref:System.ComponentModel.EventDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую изменить словарь, доступный через <paramref name="events" /> параметр, или оставить его без изменений. Если вы переопределяете этот метод, вызовите базовую реализацию перед выполнением собственной фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
        <summary>При переопределении в производном классе позволяет конструктору добавлять элементы в набор свойств, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ добавления элементов в словарь свойств, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую изменить словарь, доступный через <paramref name="properties" /> параметр, или оставить его без изменений. Если вы переопределяете этот метод, вызовите базовую реализацию перед выполнением собственной фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
