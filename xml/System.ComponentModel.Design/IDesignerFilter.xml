<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="240f72dd2638187f7f384e3fa7c4053213d1ff96" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63899081" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет интерфейс, позволяющий конструктору получать доступ и фильтровать словари класса <see cref="T:System.ComponentModel.TypeDescriptor" />, в которых хранятся дескрипторы свойств, атрибутов и событий, предоставляемые конструктором компонентов в среде режима разработки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> позволяет конструктору фильтровать набор дескрипторов свойств, атрибутов и событий, предоставляемых его сопоставленного компонента, используя <xref:System.ComponentModel.TypeDescriptor>. Методы этого интерфейса, имена которых начинаются с `Pre` вызываются непосредственно перед методами, имена которых начинаются с `Post`.  
  
 Если вы хотите добавить атрибут, события или дескрипторов свойств, используйте <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, или <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> метод.  
  
 Если вы хотите изменить или удалить атрибут, события или дескрипторов свойств, используйте <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, или <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> метод.  
  
   
  
## Examples  
 В следующем примере показано переопределение <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> , добавляет свойство конструктора в окне «Свойства» при выборе элемента управления конструктора во время разработки. См. в примере <xref:System.Windows.Forms.Design.ControlDesigner> класс полный пример конструктора, использующего <xref:System.ComponentModel.Design.IDesignerFilter> интерфейс.  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
        <summary>При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора атрибутов, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет изменять или удалять элементы в словаре атрибутов, предоставляемых через связанный компонент конструктора, реализующего этот интерфейс <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре атрибутов являются идентификаторов типов атрибутов. Объекты имеют тип <xref:System.Attribute>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  
  
 Идентификатор типа атрибута может быть любым объектом. По умолчанию <xref:System.Attribute> возвращает его <xref:System.Type> как значение его <xref:System.Attribute.TypeId%2A> свойство. Вы можете проверить <xref:System.Attribute.TypeId%2A> атрибута в словаре, который требуется сравнить с известная <xref:System.Attribute.TypeId%2A> для атрибута для его идентификации, или <xref:System.Reflection> для идентификации объекта атрибута.  
  
 Если атрибут, который имеет те же <xref:System.Attribute.TypeId%2A> как существующий или унаследованный атрибут добавляется к компоненту, новый атрибут заменяет старый атрибут. Для большинства атрибутов новый атрибут того же типа будет заменять любой предыдущий атрибут типа. Тем не менее, некоторые типы атрибутов возвращают <xref:System.Attribute.TypeId%2A> , выборочно различает атрибут. Например, чтобы предоставить различные типы одновременно активных конструкторов для типа, таких как <xref:System.ComponentModel.Design.IRootDesigner> и <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A> , однозначно определяет атрибут и базового конструктора тип. <xref:System.ComponentModel.DesignerAttribute> Конструктор позволяет задавать базовый тип конструктора в конструкторе, кроме специального типа, и <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A> , которое отражает это. Поэтому при добавлении нового <xref:System.ComponentModel.DesignerAttribute> с типом базового конструктора совпадает с типом базового типа конструктора в существующем <xref:System.ComponentModel.DesignerAttribute>, старый атрибут заменяется на новый атрибут.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую выполнить фильтрацию словаре, доступном через <paramref name="attributes" /> параметра, или оставить его без изменений. При переопределении этого метода, после выполнения фильтрации необходимо вызовите базовую реализацию.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
        <summary>При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора событий, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет изменять или удалять элементы в словаре событий, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре событий являются именами событий. Объекты имеют тип <xref:System.ComponentModel.EventDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую выполнить фильтрацию словаре, доступном через <paramref name="events" /> параметра, или оставить его без изменений. При переопределении этого метода, после выполнения фильтрации необходимо вызовите базовую реализацию.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
        <summary>При переопределении в производном классе позволяет конструктору изменять или удалять элементы из набора свойств, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет изменять или удалять элементы в словарь свойств, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую выполнить фильтрацию словаре, доступном через <paramref name="properties" /> параметра, или оставить его без изменений. При переопределении этого метода, после выполнения фильтрации необходимо вызовите базовую реализацию.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
        <summary>При переопределении в производном классе позволяет конструктору добавлять элементы в набор атрибутов, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ для добавления элементов в словарь атрибутов, предоставляемых через связанный компонент конструктора, реализующего этот интерфейс <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре атрибутов являются идентификаторов типов атрибутов. Объекты имеют тип <xref:System.Attribute>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  
  
 Идентификатор типа атрибута может быть любым объектом. По умолчанию <xref:System.Attribute> возвращает его <xref:System.Type> как значение его <xref:System.Attribute.TypeId%2A> свойство. Вы можете проверить <xref:System.Attribute.TypeId%2A> атрибута в словаре, который требуется сравнить с известная <xref:System.Attribute.TypeId%2A> для атрибута для его идентификации, или <xref:System.Reflection> для идентификации объекта атрибута.  
  
 Если атрибут, который имеет те же <xref:System.Attribute.TypeId%2A> как существующий или унаследованный атрибут добавляется к компоненту, новый атрибут заменяет старый атрибут. Для большинства атрибутов новый атрибут того же типа будет заменять любой предыдущий атрибут типа. Тем не менее, некоторые типы атрибутов возвращают <xref:System.Attribute.TypeId%2A> , выборочно различает атрибут. Например, чтобы предоставить различные типы одновременно активных конструкторов для типа, таких как <xref:System.ComponentModel.Design.IRootDesigner> и <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A> , однозначно определяет атрибут и базового конструктора тип. <xref:System.ComponentModel.DesignerAttribute> Конструктор позволяет задавать базовый тип конструктора в конструкторе, кроме специального типа, и <xref:System.ComponentModel.DesignerAttribute> возвращает <xref:System.Attribute.TypeId%2A> , которое отражает это. Поэтому при добавлении нового <xref:System.ComponentModel.DesignerAttribute> с типом базового конструктора совпадает с типом базового типа конструктора в существующем <xref:System.ComponentModel.DesignerAttribute>, старый атрибут заменяется на новый атрибут.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно напрямую выполнить фильтрацию словаре, доступном через <paramref name="attributes" /> параметра, или оставить его без изменений. При переопределении этого метода, после выполнения фильтрации необходимо вызовите базовую реализацию.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
        <summary>При переопределении в производном классе позволяет конструктору добавлять элементы в набор событий, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ для добавления элементов в словарь событий, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре событий являются именами событий. Объекты имеют тип <xref:System.ComponentModel.EventDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно непосредственно изменить словарь, который можно получить с помощью <paramref name="events" /> параметра, или оставить его без изменений. При переопределении этого метода, вызовите базовую реализацию, прежде чем выполнять фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
        <summary>При переопределении в производном классе позволяет конструктору добавлять элементы в набор свойств, предоставляемых через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ для добавления элементов в словарь свойств, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно непосредственно изменить словарь, который можно получить с помощью <paramref name="properties" /> параметра, или оставить его без изменений. При переопределении этого метода, вызовите базовую реализацию, прежде чем выполнять фильтрации.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>