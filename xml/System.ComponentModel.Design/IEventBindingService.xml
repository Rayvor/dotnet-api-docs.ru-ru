<Type Name="IEventBindingService" FullName="System.ComponentModel.Design.IEventBindingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36f4cf1760ee47c6479ee238b1573bcc4727d273" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70573555" /></Metadata><TypeSignature Language="C#" Value="public interface IEventBindingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventBindingService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IEventBindingService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventBindingService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEventBindingService" />
  <TypeSignature Language="F#" Value="type IEventBindingService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="96a53-101">Предоставляет службу регистрации обработчиков событий для событий в компонентах.</span><span class="sxs-lookup"><span data-stu-id="96a53-101">Provides a service for registering event handlers for component events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-102">Служба привязки событий предоставляет способ связи обработчика событий с событием компонента из кода конструктора.</span><span class="sxs-lookup"><span data-stu-id="96a53-102">The event binding service provides a way to link an event handler with a component event from designer code.</span></span>  
  
 <span data-ttu-id="96a53-103">Чтобы связать обработчик событий с событием компонента с помощью <xref:System.ComponentModel.Design.IEventBindingService>, необходимо сначала <xref:System.ComponentModel.EventDescriptor> получить для события компонента, связь с которым требуется связать.</span><span class="sxs-lookup"><span data-stu-id="96a53-103">To link an event handler with a component event using the <xref:System.ComponentModel.Design.IEventBindingService>, you must first obtain an <xref:System.ComponentModel.EventDescriptor> for the event of the component you intend to link.</span></span> <span data-ttu-id="96a53-104">Предоставляет методы, которые могут <xref:System.ComponentModel.EventDescriptor> преобразовать в <xref:System.ComponentModel.PropertyDescriptor> , который можно использовать для настройки события с помощью имени метода обработчика событий. <xref:System.ComponentModel.Design.IEventBindingService></span><span class="sxs-lookup"><span data-stu-id="96a53-104">The <xref:System.ComponentModel.Design.IEventBindingService> provides methods that can convert an <xref:System.ComponentModel.EventDescriptor> to a <xref:System.ComponentModel.PropertyDescriptor> which you can use to configure the event with an event handler method name.</span></span>  
  
 <span data-ttu-id="96a53-105">Объект предоставляет метод, который <xref:System.ComponentModel.EventDescriptorCollection> можно использовать для получения объектов, содержащихся <xref:System.ComponentModel.EventDescriptor> в каждом событии компонента. <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> <xref:System.ComponentModel.TypeDescriptor></span><span class="sxs-lookup"><span data-stu-id="96a53-105">The <xref:System.ComponentModel.TypeDescriptor> object provides a <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that you can use to obtain an <xref:System.ComponentModel.EventDescriptorCollection> containing <xref:System.ComponentModel.EventDescriptor> objects for each event of a component.</span></span> <span data-ttu-id="96a53-106"><xref:System.ComponentModel.EventDescriptor> Методы <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> и <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> возвращают , <xref:System.ComponentModel.PropertyDescriptor>  для каждого из которых передаются оба метода. <xref:System.ComponentModel.Design.IEventBindingService></span><span class="sxs-lookup"><span data-stu-id="96a53-106">The <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> and <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> methods of the <xref:System.ComponentModel.Design.IEventBindingService> return a <xref:System.ComponentModel.PropertyDescriptor> for each <xref:System.ComponentModel.EventDescriptor> passed to either method.</span></span> <span data-ttu-id="96a53-107">Каждый <xref:System.ComponentModel.PropertyDescriptor> объект, <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> возвращаемый методом или <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> , имеет тип свойства String.</span><span class="sxs-lookup"><span data-stu-id="96a53-107">Each <xref:System.ComponentModel.PropertyDescriptor> returned from <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> or <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> has a property type of string.</span></span> <span data-ttu-id="96a53-108">Для этой строки можно задать значение, указывающее имя метода обработчика событий, связывающего событие с помощью <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> метода. <xref:System.ComponentModel.PropertyDescriptor></span><span class="sxs-lookup"><span data-stu-id="96a53-108">You can set this string to a value that indicates the name of the event-handler method to link the event with using the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96a53-109">В следующем примере демонстрируется конструктор, который использует <xref:System.ComponentModel.Design.IEventBindingService> для связывания события компонента с обработчиком событий во время разработки, когда вызывается Настраиваемая команда контекстного меню, добавляемая конструктором для компонента.</span><span class="sxs-lookup"><span data-stu-id="96a53-109">The following example demonstrates a designer that uses the <xref:System.ComponentModel.Design.IEventBindingService> to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked.</span></span> <span data-ttu-id="96a53-110">Чтобы использовать пример, скомпилируйте его в библиотеку классов, добавьте ссылку из проекта Windows Forms, добавьте компонент в библиотеку классов на панель элементов, щелкнув правой кнопкой мыши **область** элементов и выбрав пункт **Настройка панели элементов**, а затем выбрав библиотеку классов. и нажмите кнопку **ОК**и добавьте экземпляр Евентконтрол в форму.</span><span class="sxs-lookup"><span data-stu-id="96a53-110">To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the **Toolbox** and selecting **Customize Toolbox**, then choosing the class library and clicking **OK**, and add an instance of the EventControl to a Form.</span></span> <span data-ttu-id="96a53-111">Затем щелкните правой кнопкой мыши Евентконтрол и выберите команду контекстного меню Connect Тестевент.</span><span class="sxs-lookup"><span data-stu-id="96a53-111">Then right-click the EventControl and click the Connect testEvent shortcut menu command.</span></span> <span data-ttu-id="96a53-112">Создается пустой метод обработчика событий, и метод Евентконтрол Тестевент инициализируется с этим обработчиком событий в коде инициализации для формы.</span><span class="sxs-lookup"><span data-stu-id="96a53-112">An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.</span></span>  
  
 [!code-cpp[IEventBindingServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IEventBindingServiceExample/CPP/source.cpp#1)]
 [!code-csharp[IEventBindingServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IEventBindingServiceExample/CS/source.cs#1)]
 [!code-vb[IEventBindingServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IEventBindingServiceExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName="CreateUniqueMethodName">
      <MemberSignature Language="C#" Value="public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUniqueMethodName (component As IComponent, e As EventDescriptor) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateUniqueMethodName(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member CreateUniqueMethodName : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; string" Usage="iEventBindingService.CreateUniqueMethodName (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="96a53-113">Экземпляр компонента, с которым связано событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-113">The component instance the event is connected to.</span></span></param>
        <param name="e"><span data-ttu-id="96a53-114">Событие, для которого должно быть создано имя.</span><span class="sxs-lookup"><span data-stu-id="96a53-114">The event to create a name for.</span></span></param>
        <summary><span data-ttu-id="96a53-115">Создает уникальное имя для метода обработчика событий заданного компонента и события.</span><span class="sxs-lookup"><span data-stu-id="96a53-115">Creates a unique name for an event-handler method for the specified component and event.</span></span></summary>
        <returns><span data-ttu-id="96a53-116">Рекомендованное имя метода обработчика событий для данного события.</span><span class="sxs-lookup"><span data-stu-id="96a53-116">The recommended name for the event-handler method for this event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-117">Этот метод возвращает имя, которое является уникальным для любого другого имени метода в исходном коде пользователя.</span><span class="sxs-lookup"><span data-stu-id="96a53-117">This method returns a name that is unique from any other method name in the user's source code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompatibleMethods (e As EventDescriptor) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetCompatibleMethods(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetCompatibleMethods : System.ComponentModel.EventDescriptor -&gt; System.Collections.ICollection" Usage="iEventBindingService.GetCompatibleMethods e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="96a53-118">Событие, для которого необходимо получить совместимые методы обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="96a53-118">The event to get the compatible event-handler methods for.</span></span></param>
        <summary><span data-ttu-id="96a53-119">Возвращает коллекцию методов обработчика событий, обладающих сигнатурой метода, совместимой с заданным событием.</span><span class="sxs-lookup"><span data-stu-id="96a53-119">Gets a collection of event-handler methods that have a method signature compatible with the specified event.</span></span></summary>
        <returns><span data-ttu-id="96a53-120">Коллекция строк.</span><span class="sxs-lookup"><span data-stu-id="96a53-120">A collection of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-121">Каждая строка в коллекции является именем метода, который имеет сигнатуру метода, совместимую с указанным событием.</span><span class="sxs-lookup"><span data-stu-id="96a53-121">Each string in the collection is the name of a method that has a method signature compatible with the specified event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (property As PropertyDescriptor) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetEvent(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : System.ComponentModel.PropertyDescriptor -&gt; System.ComponentModel.EventDescriptor" Usage="iEventBindingService.GetEvent property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="96a53-122">Свойство, представляющее событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-122">The property that represents an event.</span></span></param>
        <summary><span data-ttu-id="96a53-123">Возвращает дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для события, которое представлено заданным дескриптором свойств, если он отражает событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-123">Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</span></span></summary>
        <returns><span data-ttu-id="96a53-124">Дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для события, представляемого свойством, или значение <see langword="null" />, если свойство не представляет событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-124">An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperties (events As EventDescriptorCollection) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetEventProperties(System::ComponentModel::EventDescriptorCollection ^ events);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperties : System.ComponentModel.EventDescriptorCollection -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iEventBindingService.GetEventProperties events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="96a53-125">События для преобразования в свойства.</span><span class="sxs-lookup"><span data-stu-id="96a53-125">The events to convert to properties.</span></span></param>
        <summary><span data-ttu-id="96a53-126">Преобразует набор дескрипторов событий в набор дескрипторов свойств.</span><span class="sxs-lookup"><span data-stu-id="96a53-126">Converts a set of event descriptors to a set of property descriptors.</span></span></summary>
        <returns><span data-ttu-id="96a53-127">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, описывающих набор событий.</span><span class="sxs-lookup"><span data-stu-id="96a53-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-128">Каждый возвращаемый <xref:System.ComponentModel.PropertyDescriptor> объект <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> имеет строку.</span><span class="sxs-lookup"><span data-stu-id="96a53-128">Each returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperty (e As EventDescriptor) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetEventProperty(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperty : System.ComponentModel.EventDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="iEventBindingService.GetEventProperty e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="96a53-129">Преобразуемое событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-129">The event to convert.</span></span></param>
        <summary><span data-ttu-id="96a53-130">Преобразует один дескриптор событий в дескриптор свойств.</span><span class="sxs-lookup"><span data-stu-id="96a53-130">Converts a single event descriptor to a property descriptor.</span></span></summary>
        <returns><span data-ttu-id="96a53-131">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, описывающий событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-131">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-132">Возвращаемое <xref:System.ComponentModel.PropertyDescriptor> значение <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> содержит строку.</span><span class="sxs-lookup"><span data-stu-id="96a53-132">The returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96a53-133">Отображает код пользователя для конструктора.</span><span class="sxs-lookup"><span data-stu-id="96a53-133">Displays the user code for the designer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; bool" Usage="iEventBindingService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96a53-134">Отображает код пользователя для конструктора.</span><span class="sxs-lookup"><span data-stu-id="96a53-134">Displays the user code for the designer.</span></span></summary>
        <returns><span data-ttu-id="96a53-135">Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96a53-135"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-136">Этот метод отображает редактор кода.</span><span class="sxs-lookup"><span data-stu-id="96a53-136">This method displays the code editor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (lineNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(int lineNumber);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : int -&gt; bool" Usage="iEventBindingService.ShowCode lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="96a53-137">Номер строки для размещения курсора.</span><span class="sxs-lookup"><span data-stu-id="96a53-137">The line number to place the caret on.</span></span></param>
        <summary><span data-ttu-id="96a53-138">Отображает код пользователя для конструктора в заданной строке.</span><span class="sxs-lookup"><span data-stu-id="96a53-138">Displays the user code for the designer at the specified line.</span></span></summary>
        <returns><span data-ttu-id="96a53-139">Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96a53-139"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-140">Этот метод отображает редактор кода и позиционирует курсор на указанную строку.</span><span class="sxs-lookup"><span data-stu-id="96a53-140">This method displays the code editor and positions the cursor on the specified line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (component As IComponent, e As EventDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; bool" Usage="iEventBindingService.ShowCode (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="96a53-141">Компонент, с которым связано событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-141">The component that the event is connected to.</span></span></param>
        <param name="e"><span data-ttu-id="96a53-142">Отображаемое событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-142">The event to display.</span></span></param>
        <summary><span data-ttu-id="96a53-143">Отображает код пользователя для заданного события.</span><span class="sxs-lookup"><span data-stu-id="96a53-143">Displays the user code for the specified event.</span></span></summary>
        <returns><span data-ttu-id="96a53-144">Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96a53-144"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96a53-145">Этот метод отображает редактор кода и позиционирует курсор в строке, в которой объявлено указанное событие.</span><span class="sxs-lookup"><span data-stu-id="96a53-145">This method displays the code editor and positions the cursor on the line that the specified event is declared on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
