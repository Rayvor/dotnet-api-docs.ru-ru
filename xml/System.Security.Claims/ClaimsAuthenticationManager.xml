<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a180b05db991abf95954dec907506a207deaa8d6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70475350" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет базовую реализацию диспетчера аутентификации утверждений. Диспетчер аутентификации утверждений предоставляет место в конвейере обработки утверждений для применения логики обработки (фильтрации, проверки, расширения) коллекции утверждений во входящем субъекте до того, как очередность выполнения достигает кода приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер проверки подлинности утверждений предоставляет точку расширения в конвейере обработки утверждений приложения, которую можно использовать для проверки, фильтрации, изменения, входящих утверждений или вставки новых утверждений в набор утверждений <xref:System.Security.Claims.ClaimsPrincipal> , представленных перед RP. выполняется код приложения. Вы даже можете вернуть пользовательскую реализацию, <xref:System.Security.Claims.ClaimsPrincipal> если это требуется приложению RP. <xref:System.Security.Claims.ClaimsAuthenticationManager> Реализация по умолчанию, предоставляемая классом, возвращает утверждения <xref:System.Security.Claims.ClaimsPrincipal> в неизмененном виде, однако можно создать производный от <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> этого класса и переопределить метод для изменения утверждений в <xref:System.Security.Claims.ClaimsPrincipal> (или для возврата пользовательского <xref:System.Security.Claims.ClaimsPrincipal>).  
  
 Типичная причина создания настраиваемого диспетчера проверки подлинности утверждений заключается в добавлении, удалении или преобразовании утверждений на основе сведений, которые известны или являются, возможно, лучше обслуживаются приложением RP. Например, журнал покупок клиентов в приложении покупательской корзины может храниться в базе данных, поддерживаемой приложением RP, а затем добавляться в субъект утверждений, возвращенный диспетчером проверки подлинности утверждений на основе значения утверждения имени, найденного в входящий субъект.  
  
 Можно настроить приложение `ClaimsAuthenticationManager` так, чтобы оно использовалось программно с <xref:System.IdentityModel.Configuration.IdentityConfiguration> помощью класса [ &lt;или в конфигурации с помощью элемента claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) (который является дочерним элементом элемента элемент identityConfiguration). [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) Можно переопределить <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> метод, чтобы обеспечить обработку пользовательских дочерних элементов `<claimsAuthenticationManager>` элемента, с помощью которого можно настроить настраиваемый диспетчер. Базовая реализация <xref:System.Security.Claims.ClaimsAuthenticationManager> не обрабатывает никакие дочерние элементы.  
  
 Настройка приложения для использования диспетчера проверки подлинности утверждений гарантирует, что он будет вызываться Windows Identity Foundation (WIF) из конвейера запросов.  
  
   
  
## Examples  
 В следующем коде показан простой диспетчер проверки подлинности утверждений, который добавляет утверждение роли для входящего участника без выполнения проверки входящих утверждений. 
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 В следующем коде XML показан `<claimsAuthenticationManager>` элемент.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">Адрес запрашиваемого ресурса.</param>
        <param name="incomingPrincipal">Субъект утверждений, который представляет аутентифицированного пользователя, который пытается получить доступ к ресурсу.</param>
        <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Security.Claims.ClaimsPrincipal" />, совместимый с требованиями приложения RP. Реализация по умолчанию не изменяет входящий объект <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</summary>
        <returns>Субъект требований, который содержит все изменения, необходимые для приложения RP. Реализация по умолчанию возвращает входящий субъект утверждений неизмененным.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> Метод вызывается из конвейера обработки запросов. Этот метод можно переопределить в производном классе для фильтрации, изменения или внедрения утверждений в субъект утверждений в соответствии с политикой приложения RP. В зависимости от требований приложения RP можно даже вернуть пользовательскую реализацию <xref:System.Security.Claims.ClaimsPrincipal>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Пользовательские элементы конфигурации. Каждый узел в списке имеет тип <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> Метод вызывается инфраструктурой конфигурации. При вызове этого метода объект `nodelist` будет содержать дочерние элементы [ &lt;верхнего уровня элемента claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) из файла конфигурации. Каждый из этих элементов, в свою очередь, может содержать атрибуты или дочерние элементы в зависимости от схемы конфигурации, определяемой для производного класса. Если в `<claimsAuthenticationManager>` элементе файла конфигурации не отображаются дочерние элементы, этот метод не вызывается.  
  
 Реализация по умолчанию создает <xref:System.NotImplementedException>исключение. Переопределите этот метод в производном классе, чтобы включить инициализацию диспетчера проверки подлинности утверждений из файла конфигурации. Например, элементы конфигурации могут описывать политику, которую следует выполнить при проверке подлинности субъекта утверждений. или они могут использоваться для указания на хранилище атрибутов, из которого дополнительные утверждения добавляются к участнику.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
