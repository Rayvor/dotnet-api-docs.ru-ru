<Type Name="PEHeaders" FullName="System.Reflection.PortableExecutable.PEHeaders">
  <Metadata><Meta Name="ms.openlocfilehash" Value="139854bdd53499e435e0d8957cf641eab5b78e18" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72406224" /></Metadata><TypeSignature Language="C#" Value="public sealed class PEHeaders" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PEHeaders extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PortableExecutable.PEHeaders" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PEHeaders" />
  <TypeSignature Language="C++ CLI" Value="public ref class PEHeaders sealed" />
  <TypeSignature Language="F#" Value="type PEHeaders = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет тип, который считывает заголовки PE и COFF из потока.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PEHeaders (System.IO.Stream peStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream peStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (peStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PEHeaders(System::IO::Stream ^ peStream);" />
      <MemberSignature Language="F#" Value="new System.Reflection.PortableExecutable.PEHeaders : System.IO.Stream -&gt; System.Reflection.PortableExecutable.PEHeaders" Usage="new System.Reflection.PortableExecutable.PEHeaders peStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="peStream">Поток, содержащий образ PE начиная с текущей позиции потока и заканчивая его концом.</param>
        <summary>Создает экземпляр класса <see cref="T:System.Reflection.PortableExecutable.PEHeaders" />, который считывает заголовки PE из текущего расположения в указанном потоке.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">Данные, считанные из потока, имеют недопустимый формат.</exception>
        <exception cref="T:System.IO.IOException">Ошибка при чтении из потока.</exception>
        <exception cref="T:System.ArgumentException">Поток не поддерживает операции поиска.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="peStream" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PEHeaders (System.IO.Stream peStream, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream peStream, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (peStream As Stream, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PEHeaders(System::IO::Stream ^ peStream, int size);" />
      <MemberSignature Language="F#" Value="new System.Reflection.PortableExecutable.PEHeaders : System.IO.Stream * int -&gt; System.Reflection.PortableExecutable.PEHeaders" Usage="new System.Reflection.PortableExecutable.PEHeaders (peStream, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peStream" Type="System.IO.Stream" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peStream">Поток, содержащий образ PE указанного размера начиная с текущей позиции.</param>
        <param name="size">Размер образа PE.</param>
        <summary>Создает экземпляр класса <see cref="T:System.Reflection.PortableExecutable.PEHeaders" />, который считывает заголовки PE из потока, представляющего образ PE указанного размера.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">Данные, считанные из потока, имеют недопустимый формат.</exception>
        <exception cref="T:System.IO.IOException">Ошибка при чтении из потока.</exception>
        <exception cref="T:System.ArgumentException">Поток не поддерживает операции поиска.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="peStream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="size" /> является отрицательным или превышает длину потока.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PEHeaders (System.IO.Stream peStream, int size, bool isLoadedImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream peStream, int32 size, bool isLoadedImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (peStream As Stream, size As Integer, isLoadedImage As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PEHeaders(System::IO::Stream ^ peStream, int size, bool isLoadedImage);" />
      <MemberSignature Language="F#" Value="new System.Reflection.PortableExecutable.PEHeaders : System.IO.Stream * int * bool -&gt; System.Reflection.PortableExecutable.PEHeaders" Usage="new System.Reflection.PortableExecutable.PEHeaders (peStream, size, isLoadedImage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="size" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="isLoadedImage" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="peStream">Поток, содержащий образ PE указанного размера начиная с текущей позиции.</param>
        <param name="size">Размер образа PE.</param>
        <param name="isLoadedImage">Значение <see langword="true" />, если образ PE был загружен в память загрузчиком ОС; в противном случае значение <see langword="false" />.</param>
        <summary>Создает экземпляр класса <see cref="T:System.Reflection.PortableExecutable.PEHeaders" />, который считывает заголовки PE из потока, представляющего образ PE заданного размера, и указывает, загружен ли образ PE в память.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">Данные, считанные из потока, имеют недопустимый формат.</exception>
        <exception cref="T:System.IO.IOException">Ошибка при чтении из потока.</exception>
        <exception cref="T:System.ArgumentException">Поток не поддерживает операции поиска.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="peStream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="size" /> является отрицательным или превышает длину потока.</exception>
      </Docs>
    </Member>
    <Member MemberName="CoffHeader">
      <MemberSignature Language="C#" Value="public System.Reflection.PortableExecutable.CoffHeader CoffHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PortableExecutable.CoffHeader CoffHeader" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.CoffHeader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CoffHeader As CoffHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PortableExecutable::CoffHeader ^ CoffHeader { System::Reflection::PortableExecutable::CoffHeader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CoffHeader : System.Reflection.PortableExecutable.CoffHeader" Usage="System.Reflection.PortableExecutable.PEHeaders.CoffHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.CoffHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает заголовок COFF образа.</summary>
        <value>Заголовок COFF изображения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CoffHeaderStartOffset">
      <MemberSignature Language="C#" Value="public int CoffHeaderStartOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CoffHeaderStartOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CoffHeaderStartOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CoffHeaderStartOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CoffHeaderStartOffset : int" Usage="System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение в байтах от начала образа PE до начала заголовка COFF.</summary>
        <value>Смещение в байтах от начала образа PE до начала заголовка COFF.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorHeader">
      <MemberSignature Language="C#" Value="public System.Reflection.PortableExecutable.CorHeader CorHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PortableExecutable.CorHeader CorHeader" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.CorHeader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CorHeader As CorHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PortableExecutable::CorHeader ^ CorHeader { System::Reflection::PortableExecutable::CorHeader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorHeader : System.Reflection.PortableExecutable.CorHeader" Usage="System.Reflection.PortableExecutable.PEHeaders.CorHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.CorHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает заголовок COR.</summary>
        <value>Заголовок COR или значение <see langword="null" />, если образ не имеет такого изображения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorHeaderStartOffset">
      <MemberSignature Language="C#" Value="public int CorHeaderStartOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CorHeaderStartOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CorHeaderStartOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CorHeaderStartOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CorHeaderStartOffset : int" Usage="System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение в байтах от начала образа до заголовка COR.</summary>
        <value>Смещение в байтах от начала изображения до заголовка COR или-1, если у изображения нет заголовка COR.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingSectionIndex">
      <MemberSignature Language="C#" Value="public int GetContainingSectionIndex (int relativeVirtualAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetContainingSectionIndex(int32 relativeVirtualAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContainingSectionIndex (relativeVirtualAddress As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetContainingSectionIndex(int relativeVirtualAddress);" />
      <MemberSignature Language="F#" Value="member this.GetContainingSectionIndex : int -&gt; int" Usage="pEHeaders.GetContainingSectionIndex relativeVirtualAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeVirtualAddress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="relativeVirtualAddress">Искомый относительный виртуальный адрес.</param>
        <summary>Ищет среди разделов образа PE раздел, содержащий указанный относительный виртуальный адрес.</summary>
        <returns>Индекс раздела, содержащего <paramref name="relativeVirtualAddress" />, или значение –1, если поиск не дал результатов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCoffOnly">
      <MemberSignature Language="C#" Value="public bool IsCoffOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCoffOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCoffOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCoffOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCoffOnly : bool" Usage="System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли образ исключительно образом COFF.</summary>
        <value><see langword="true" />, если образ является только COFF; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConsoleApplication">
      <MemberSignature Language="C#" Value="public bool IsConsoleApplication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConsoleApplication" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConsoleApplication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConsoleApplication { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConsoleApplication : bool" Usage="System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли образ консольное приложение Windows.</summary>
        <value><see langword="true" />, если образ является консольным приложением Windows; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDll">
      <MemberSignature Language="C#" Value="public bool IsDll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDll" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.IsDll" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDll { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDll : bool" Usage="System.Reflection.PortableExecutable.PEHeaders.IsDll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли образ библиотеку динамической компоновки.</summary>
        <value><see langword="true" />, если образ является библиотекой DLL; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExe">
      <MemberSignature Language="C#" Value="public bool IsExe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExe" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.IsExe" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExe : bool" Usage="System.Reflection.PortableExecutable.PEHeaders.IsExe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли образ исполняемый файл.</summary>
        <value><see langword="true" />, если образ является исполняемым файлом; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataSize">
      <MemberSignature Language="C#" Value="public int MetadataSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataSize" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.MetadataSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataSize : int" Usage="System.Reflection.PortableExecutable.PEHeaders.MetadataSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает размер метаданных CLI.</summary>
        <value>размер метаданных CLI или значение 0, если образ не содержит метаданных.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataStartOffset">
      <MemberSignature Language="C#" Value="public int MetadataStartOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataStartOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataStartOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataStartOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataStartOffset : int" Usage="System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение (в байтах) от начала образа PE до начала метаданных CLI.</summary>
        <value>Смещение (в байтах) от начала образа PE до начала работы с метаданными CLI или значение-1, если образ не содержит метаданных.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PEHeader">
      <MemberSignature Language="C#" Value="public System.Reflection.PortableExecutable.PEHeader PEHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PortableExecutable.PEHeader PEHeader" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.PEHeader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PEHeader As PEHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PortableExecutable::PEHeader ^ PEHeader { System::Reflection::PortableExecutable::PEHeader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PEHeader : System.Reflection.PortableExecutable.PEHeader" Usage="System.Reflection.PortableExecutable.PEHeaders.PEHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.PEHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает заголовок PE образа.</summary>
        <value>Заголовок PE изображения или значение <see langword="null" />, если изображение имеет только COFF.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PEHeaderStartOffset">
      <MemberSignature Language="C#" Value="public int PEHeaderStartOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PEHeaderStartOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PEHeaderStartOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PEHeaderStartOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PEHeaderStartOffset : int" Usage="System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение заголовка в байтах от начала образа.</summary>
        <value>Смещение в байтах заголовка от начала изображения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;System.Reflection.PortableExecutable.SectionHeader&gt; SectionHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype System.Reflection.PortableExecutable.SectionHeader&gt; SectionHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PortableExecutable.PEHeaders.SectionHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionHeaders As ImmutableArray(Of SectionHeader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;System::Reflection::PortableExecutable::SectionHeader&gt; SectionHeaders { System::Collections::Immutable::ImmutableArray&lt;System::Reflection::PortableExecutable::SectionHeader&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionHeaders : System.Collections.Immutable.ImmutableArray&lt;System.Reflection.PortableExecutable.SectionHeader&gt;" Usage="System.Reflection.PortableExecutable.PEHeaders.SectionHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Reflection.PortableExecutable.SectionHeader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает заголовки раздела PE.</summary>
        <value>Массив, содержащий заголовки разделов PE.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetDirectoryOffset">
      <MemberSignature Language="C#" Value="public bool TryGetDirectoryOffset (System.Reflection.PortableExecutable.DirectoryEntry directory, out int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDirectoryOffset(valuetype System.Reflection.PortableExecutable.DirectoryEntry directory, [out] int32&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDirectoryOffset (directory As DirectoryEntry, ByRef offset As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDirectoryOffset(System::Reflection::PortableExecutable::DirectoryEntry directory, [Runtime::InteropServices::Out] int % offset);" />
      <MemberSignature Language="F#" Value="member this.TryGetDirectoryOffset : System.Reflection.PortableExecutable.DirectoryEntry * int -&gt; bool" Usage="pEHeaders.TryGetDirectoryOffset (directory, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.Reflection.PortableExecutable.DirectoryEntry" />
        <Parameter Name="offset" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="directory">Запись каталога PE.</param>
        <param name="offset">Когда метод возвращает управление, содержит смещение от начала образа до указанных данных каталога.</param>
        <summary>Возвращает смещение (в байтах) от начала образа до указанных данных каталога.</summary>
        <returns>Значение <see langword="true" />, если данные каталога найдены; в противном случае значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
