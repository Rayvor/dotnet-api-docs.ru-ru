<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bca6857aa4f4b8e3ab29035dd94c632d5797c018" /><Meta Name="ms.sourcegitcommit" Value="9058026d5788c19bed0a767fc52b40a1eac8ebfe" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/24/2019" /><Meta Name="ms.locfileid" Value="72849984" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет служебные методы для составления и анализа объектов URI пакета.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">Первый URI типа pack.</param>
        <param name="secondPackUri">Второй URI типа pack.</param>
        <summary>Возвращает значение, указывающее, являются ли два URI типа pack эквивалентными.</summary>
        <returns>Целое число со знаком, указывающее на соотношение <paramref name="firstPackUri" /> и <paramref name="secondPackUri" />.  
  
 <list type="table"><listheader><term> Значение 
 </term><description> Значение 
 </description></listheader><item><term> Меньше 0 
 </term><description>Значение <paramref name="firstPackUri" /> меньше <paramref name="secondPackUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> равно <paramref name="secondPackUri" />.  
  
 </description></item><item><term> Больше 0 
 </term><description>Значение <paramref name="firstPackUri" /> больше значения <paramref name="secondPackUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если оба `firstPackUri` и `secondPackUri` `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> возвращает 0. При сравнении URI типа "Pack" URI-код NULL всегда меньше, чем URI, отличный от NULL.    В случаях, когда `firstPackUri` и `secondPackUri` являются абсолютными URI типа "Pack", <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> выполняет сравнение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> или <paramref name="secondPackUri" /> не является абсолютным URI.  
  
- или - 
<paramref name="firstPackUri" /> или <paramref name="secondPackUri" /> не начинается со схемы "pack://".</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">URI первого объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <param name="secondPartUri">URI второго объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Возвращает значение, указывающее, равны ли URI двух частей пакета.</summary>
        <returns>Значение, указывающее на соотношение <paramref name="firstPartUri" /> и <paramref name="secondPartUri" />.  
  
 <list type="table"><listheader><term> Значение 
 </term><description> Значение 
 </description></listheader><item><term> Меньше 0 
 </term><description>Значение <paramref name="firstPartUri" /> меньше <paramref name="secondPartUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> равно <paramref name="secondPartUri" />.  
  
 </description></item><item><term> Больше 0 
 </term><description>Значение <paramref name="firstPartUri" /> больше значения <paramref name="secondPartUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если оба `firstPartUri` и `secondPartUri` `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> возвращает 0. При сравнении <xref:System.IO.Packaging.PackagePart> URI значение NULL всегда меньше, чем универсальный код ресурса (URI), отличный от NULL. Для случаев, когда `firstPartUri` и `secondPartUri` являются относительными <xref:System.IO.Packaging.PackagePart> URI, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> выполняет сравнение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> или <paramref name="secondPartUri" /> не является допустимым синтаксисом URI части.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новый URI типа pack.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны примеры вариантов для метода <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|`partUri`|`fragment`|Возвращенный URI типа Pack|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|Pack://хттп:,, www. proseware. com, myPackage. pkg/"основной. ксамл#интро"|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/Page2. XAML|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/a/Page4. XAML|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/A/a. XML|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/%2 5 XY. XML|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|Pack://хттп:,, www. proseware. com, myPackage. pkg/a/page5. ксамл#суммари|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|Pack://хттп:,, www. proseware. com, Packages. aspx %3 f pkg04/1-3. ксамл#интро|  
|`http://www.proseware.com/mypackage.pkg`|**null**|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/а/мидок.ксамл|**null**|Pack://ФТП:,, FTP. proseware. com, Packages, mypackage1. ABC/a/мидок. XAML|  
|`file:///d:/packages/mypackage2.pkg`|/а/бар.ксамл|#xref|pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML # XREF|  
  
 Создание URI типа "Pack" — это многоэтапный процесс.  Например, одним из шагов формирования URI типа "Pack" является замена символов косой черты (/) `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и о том, как формируются URI типа "Pack", см. в приложении A. 4 "примеры преобразования строк" и приложении б. 3 "составление URI типа" Pack "в спецификации Open Packaging Conventions, доступной для загрузки в [спецификациях и лицензиях. Файлы для загрузки](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">URI связанного <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Создает новый пакет URI, указывающий на пакет.</summary>
        <returns>Пакет URI для <see cref="T:System.IO.Packaging.Package" />, на который ссылается данный <paramref name="packageUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` не может быть указано как `null` или пустым.  
  
 В следующей таблице приведены примеры вариантов для <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|Возвращенный URI типа Pack|  
|------------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|Pack://хттп:,, www. proseware. com, myPackage. pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|Pack://ФТП:,, FTP. proseware. com, Packages, mypackage1. ABC|  
|file:///d:/packages/mypackage2.pkg|pack://file:,,, d:, пакеты, mypackage2. pkg|  
  
 Создание URI типа "Pack" — это многоэтапный процесс.  Например, одним из шагов формирования URI типа "Pack" является замена символов косой черты (/) `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и о том, как формируются URI типа "Pack", см. в приложении A. 4 "примеры преобразования строк" и приложении б. 3 "составление URI типа" Pack "в спецификации Open Packaging Conventions, доступной для загрузки в [спецификациях и лицензиях. Файлы для загрузки](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackUriHelper.Create%2A> для определения URI типа Pack, ссылающегося на пакет.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> не является абсолютным URI.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">URI объекта <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">URI части <see cref="T:System.IO.Packaging.PackagePart" /> в пакете.</param>
        <summary>Создает URI пакета на основе URI <see cref="T:System.IO.Packaging.Package" /> и URI части пакета.</summary>
        <returns>URI типа pack заданного объекта <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` нельзя указывать как null или Empty.  
  
 Если `partUri` `null`, возвращаемый URI типа Pack указывает на пакет.  
  
 В следующей таблице показаны примеры вариантов для метода <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|`partUri`|Возвращенный URI типа Pack|  
|------------------|---------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|Pack://хттп:,, www. proseware. com, myPackage. pkg/Page2. XAML|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|Pack://хттп:,, www. proseware. com, myPackage. pkg/a/Page4. XAML|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|Pack://хттп:,, www. proseware. com, myPackage. pkg/A/a. XML|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|Pack://хттп:,, www. proseware. com, myPackage. pkg/%2 5 XY. XML|  
|`http://www.proseware.com/mypackage.pkg`|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/а/мидок.ксамл|Pack://ФТП:,, FTP. proseware. com, Packages, mypackage1. ABC/a/мидок. XAML|  
|file:///d:/packages/mypackage2.pkg|/а/бар.ксамл|pack://file:,,, d:, Packages, mypackage2. pkg/a/линейчатое. XAML|  
  
 Создание URI типа "Pack" — это многоэтапный процесс.  Например, одним из шагов формирования URI типа "Pack" является замена символов косой черты (/) `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и о том, как формируются URI типа "Pack", см. в приложении A. 4 "примеры преобразования строк" и приложении б. 3 "составление URI типа" Pack "в спецификации Open Packaging Conventions, доступной для загрузки в [спецификациях и лицензиях. Файлы для загрузки](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> для определения URI типа Pack, ссылающегося на пакет.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> не является абсолютным URI.  
  
- или - 
 <paramref name="partUri" /> не является допустимым синтаксисом URI части.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">URI объекта <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">URI части <see cref="T:System.IO.Packaging.PackagePart" /> в пакете.</param>
        <param name="fragment">Ссылка "#", идентифицирующая элемент в части пакета.</param>
        <summary>Создает URI пакета на основе заданного URI <see cref="T:System.IO.Packaging.Package" />, URI части пакета и добавляемого фрагмента "#".</summary>
        <returns>URI типа pack, определяющий заданный пакет, часть пакета и фрагмент.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` не может быть указано как `null` или пустым.  
  
 Если `partUri` `null`, возвращаемый URI типа Pack указывает на пакет.  
  
 `fragment` не может быть пустой строкой, но может быть указана как `null`.  Если параметр не указан как `null`, строка `fragment` должна начинаться с символа "#".  Дополнительные сведения о синтаксисе `fragment` ссылок см. в разделе 3,5 "фрагмент" статьи [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 В следующей таблице показаны примеры вариантов для метода <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|`partUri`|`fragment`|Возвращенный URI типа Pack|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|Pack://хттп:,, www. proseware. com, myPackage. pkg/"основной. ксамл#интро"|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/Page2. XAML|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/a/Page4. XAML|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/A/a. XML|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg/%2 5 XY. XML|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|Pack://хттп:,, www. proseware. com, myPackage. pkg/a/page5. ксамл#суммари|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|Pack://хттп:,, www. proseware. com, Packages. aspx %3 f pkg04/1-3. ксамл#интро|  
|`http://www.proseware.com/mypackage.pkg`|**null**|**null**|Pack://хттп:,, www. proseware. com, myPackage. pkg|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/а/мидок.ксамл|**null**|Pack://ФТП:,, FTP. proseware. com, Packages, mypackage1. ABC/a/мидок. XAML|  
|`file:///d:/packages/mypackage2.pkg`|/а/бар.ксамл|#xref|pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML # XREF|  
  
 Создание URI типа "Pack" — это многоэтапный процесс.  Например, одним из шагов формирования URI типа "Pack" является замена символов косой черты (/) `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и о том, как формируются URI типа "Pack", см. в приложении A. 4 "примеры преобразования строк" и приложении б. 3 "составление URI типа" Pack "в спецификации Open Packaging Conventions, доступной для загрузки в [спецификациях и лицензиях. Файлы для загрузки](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> для определения URI типа Pack, ссылающегося на пакет.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> не является абсолютным URI.  
  
- или - 
 <paramref name="partUri" /> не является допустимым синтаксисом URI части.  
  
- или - 
 <paramref name="fragment" /> является пустым или начинается с символа "#".</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> пакета.</param>
        <summary>Создает форматированный URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
        <returns>Форматированный URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 На универсальный код ресурса (URI) <xref:System.IO.Packaging.PackagePart> всегда ссылается корневой <xref:System.IO.Packaging.Package>.  
  
 Возвращенный <xref:System.IO.Packaging.PackagePart> URI — это абсолютный путь, который всегда начинается с "/" и соответствует синтаксису, определенному в [спецификации Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 В следующей таблице приведены примеры вариантов для <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>.  
  
|`partUri`|Возвращенный URI части|  
|---------------|-----------------------|  
|picture1. jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/мидок. XAML|/а/мидок.ксамл|  
|/б/бар.ксамл|/б/бар.ксамл|  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> для определения относительных URI для <xref:System.IO.Packaging.PackagePart> элементов.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">Пример написания пакета</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> не является абсолютным <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Подлежащий нормализации URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Возвращает нормализованную форму заданного URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
        <returns>Нормализованная форма заданного <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> нормализует `partUri` путем свертывания регистра в верхний регистр (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) и возвращает результат.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentException">В <paramref name="partUri" /> отсутствует допустимый синтаксис <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri">URI типа pack, из которого следует получить код URI пакета <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Возвращает внутренний универсальный код ресурса (URI), указывающий на весь пакет указанного кода URI типа pack.</summary>
        <returns>Код URI пакета <see cref="T:System.IO.Packaging.Package" /> из указанного <paramref name="packUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице приведены примеры вариантов для <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>.  
  
|`packUri`|Возвращенный URI пакета|  
|---------------|--------------------------|  
|Pack://хттп:,, www. proseware. com, myPackage. XYZ/a/мидок. XAML|`http://www.proseware.com/mypackage.xyz`|  
|Pack://хттп:,, www. proseware. com, Packages. aspx %3 f mypackage/a/линейчатое. XAML|`http://www.proseware.com/packages.aspx?mypackage`|  
|Pack://хттп:,, www. proseware. com, myPackage. pkg|`http://www.proseware.com/mypackage.pkg`|  
|Pack://ФТП:,, FTP. proseware. com, Packages, mypackage1. ABC/a/Picture. jpg|`ftp://ftp.proseware.com/packages/mypackage1.abc`|  
|pack://file:,,, d:, Packages, mypackage2. pkg/a/линейчатое. XAML|`file:///d:/packages/mypackage2.pkg`|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="packUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> не является абсолютным <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri">URI типа pack, из которого следует получить URI <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Возвращает URI <see cref="T:System.IO.Packaging.PackagePart" /> в указанном URI типа pack.</summary>
        <returns>URI <see cref="T:System.IO.Packaging.PackagePart" /> в указанном <paramref name="packUri" /> или значение <see langword="null" />, если <paramref name="packUri" /> указывает на пакет вместо <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращенный <xref:System.IO.Packaging.PackagePart> URI задается относительно корня пакета и является абсолютным путем, который всегда начинается с "/" и соответствует синтаксису, определенному в [спецификации Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 В следующей таблице приведены примеры вариантов для <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>.  
  
|`packUri`|Возвращенный URI части|  
|---------------|-----------------------|  
|Pack://хттп:,, www. proseware. com, myPackage. XYZ/a/мидок. XAML|/а/мидок.ксамл|  
|Pack://хттп:,, www. proseware. com, Packages. aspx %3 f mypackage/a/линейчатое. XAML|/а/бар.ксамл|  
|Pack://хттп:,, www. proseware. com, myPackage. pkg|null|  
|Pack://ФТП:,, FTP. proseware. com, Packages, mypackage1. ABC/a/Picture. jpg|/а/пиктуре.жпг|  
|pack://file:,,, d:, Packages, mypackage2. pkg/a/линейчатое. XAML|/а/бар.ксамл|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="packUri" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Если <paramref name="packUri" /> не является абсолютным <see cref="T:System.Uri" />.

- или -

<paramref name="packUri" /> не имеет схемы "pack://".
          
- или - 
Формат partUri, извлеченный из <paramref name="packUri" />, не соответствует допустимому синтаксису partUri.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="P:System.IO.Packaging.PackagePart.Uri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" /> для возврата URI связанного с ним объекта <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
        <summary>Возвращает URI части связи, связанной с заданным объектом <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
        <returns>URI части <see cref="T:System.IO.Packaging.PackageRelationship" />, связанной с объектом <see cref="T:System.IO.Packaging.PackagePart" />, идентифицируемым <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` должен распознать <xref:System.IO.Packaging.Package> ("/") или <xref:System.IO.Packaging.PackagePart>, не являющийся <xref:System.IO.Packaging.PackageRelationship> частью.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship> частях см. в разделе 9,3 "связи" в спецификации Open Packaging Conventions, доступной для загрузки в [спецификациях и загрузках лицензий](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 [URI типа "pack" в WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Спецификация Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом URI части пакета.  
  
- или - 
 <paramref name="partUri" /> является абсолютным URI.  
  
- или - 
 <paramref name="partUri" /> указывает на часть связи.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">URI исходной части.</param>
        <param name="targetPartUri">URI целевой части.</param>
        <summary>Возвращает относительный URI между двумя заданными URI объектов <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
        <returns>Относительный URI от <paramref name="sourcePartUri" /> к <paramref name="targetPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице приведены примеры вариантов для <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>.  
  
|`sourcePartUri`|`targetPartUri`|Возвращен относительный URI|  
|---------------------|---------------------|---------------------------|  
|/мидок/маркуп/паже.ксмл|/мидок/маркуп/пиктуре.жпг|Рисунок. jpg|  
|/мидок/маркуп/паже.ксмл|/мидок/пиктуре.жпг|.. /пиктуре.жпг|  
|/мидок/маркуп/паже.ксмл|/мидок/имажес/пиктуре.жпг|.. /имажес/пиктуре.жпг|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourcePartUri" /> или <paramref name="targetPartUri" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentException">В <paramref name="sourcePartUri" /> либо <paramref name="targetPartUri" /> отсутствует допустимый синтаксис <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">URI части связи, из которой следует вернуть <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
        <summary>Возвращает <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> из <see cref="T:System.IO.Packaging.PackageRelationship" /> с заданным URI.</summary>
        <returns><see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" /> из связи с заданным <paramref name="relationshipPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> части связи должно обозначать <xref:System.IO.Packaging.PackagePart.Package%2A> ("/") или <xref:System.IO.Packaging.PackagePart>, не являющиеся <xref:System.IO.Packaging.PackageRelationship>.  
  
 Например, если часть пакета "/Филес/документ.ксамл" является владельцем источника части связи "/Files/_rels/Document.XAML.rels", вызов <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> с параметром `relationshipPartUri` "/Files/_rels/Document.XAML.rels" возвращает <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> "/Филес/ Document. XAML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> является абсолютным URI.  
  
- или - 
 Синтаксис <paramref name="relationshipPartUri" /> не является допустимым для <see cref="T:System.IO.Packaging.PackagePart" />.  
  
- или - 
 <paramref name="relationshipPartUri" /> не указывает на часть связи.  
  
- или - 
<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> части связи указывает на другую часть связи (недопустимо).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI, проверяемый для части <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
        <summary>Возвращает значение, указывающее, является ли заданный URI идентификатором URI части <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
        <returns><see langword="true" />, если <paramref name="partUri" /> идентифицирует часть <see cref="T:System.IO.Packaging.PackageRelationship" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
Этот метод не проверяет содержимое части. Он основан только на имени.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> является абсолютным URI.  
  
- или - 
 Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">URI исходной части или символ "/", обозначающий корень объекта <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="targetUri">Относительный URI целевой части.</param>
        <summary>Возвращает URI части по заданному URI исходной части и URI с относительным путем к целевой части.</summary>
        <returns>URI целевой части, разрешенный на основе исходного и относительного URI, заданных в параметрах <paramref name="SourcePartUri" /> и <paramref name="targetUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице приведены примеры вариантов для <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  
  
|`sourcePartUri`|`targetUri`|Возвращенный URI|  
|---------------------|-----------------|------------------|  
|/мидок/маркуп/паже.ксмл|Рисунок. jpg|/мидок/маркуп/пиктуре.жпг|  
|/мидок/маркуп/паже.ксмл|Images/Picture. jpg|/мидок/маркуп/имажес/пиктуре.жпг|  
|/мидок/маркуп/паже.ксмл|./пиктуре.ЖПГ|/мидок/маркуп/пиктуре.жпг|  
|/мидок/маркуп/паже.ксмл|.. /пиктуре.жпг|/мидок/пиктуре.жпг|  
|/мидок/маркуп/паже.ксмл|.. /имажес/пиктуре.жпг|/мидок/имажес/пиктуре.жпг|  
|/|Images/Picture. jpg|/имажес/пиктуре.жпг|  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  Полный пример см. в разделе [Чтение примера пакета](https://go.microsoft.com/fwlink/?LinkID=160034).  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourcePartUri" /> или <paramref name="targetUri" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="sourcePartUri" /> не содержит допустимый URI части.  
  
- или - 
 Параметр <paramref name="targetUri" /> не содержит допустимый относительный URI.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Спецификация Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет имя pack схемы URI типа pack.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
