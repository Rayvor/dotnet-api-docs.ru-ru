<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d362527f9621b16916bb1ab74a805ef37e761d0c" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75132911" /></Metadata><TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет ассоциацию между исходным объектом <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом, которым может быть <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship> определяет связь между *исходным* <xref:System.IO.Packaging.Package> или <xref:System.IO.Packaging.PackagePart> с *целевым* <xref:System.IO.Packaging.PackagePart> или внешним ресурсом.  Исходный объект считается "владельцем" связи.  
  
 Класс <xref:System.IO.Packaging.PackageRelationship> не имеет открытого конструктора; Вместо этого используются два метода Create:  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|Создает связь уровня пакета — от пакета к указанной части или внешнему ресурсу.|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|Создает связь "на уровне части" — от одной части к другой части или к внешнему ресурсу.|  
  
 Исходный пакет или часть определяется свойством <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> связи.  Целевая часть или внешний ресурс определяются свойством <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> связи.  
  
 Создание или удаление связи не влияет на исходные или целевые объекты каким-либо образом.  
  
 Если исходный объект удален, все связи, принадлежащие объекту, также удаляются.  
  
 Связи обеспечивают навигацию как в документе, так и между документами.  Связи также поддерживают службы объектной модели документов, такие как связывание <xref:System.Printing.PrintTicket> с конкретными элементами документа при печати.  
  
 Дополнительные сведения об элементах <xref:System.IO.Packaging.PackageRelationship> см. в разделе 1,3 "связи" в спецификации *Open Packaging Conventions* , доступной для загрузки по адресу <https://go.microsoft.com/fwlink/?LinkID=71255>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку идентификатора связи.</summary>
        <value>Строка идентификатора связи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка свойства <xref:System.IO.Packaging.PackageRelationship.Id%2A> является уникальной для всех связей, принадлежащих пакету <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> или части.  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод, который создал связь.  После создания связи <xref:System.IO.Packaging.PackageRelationship.Id%2A> изменить нельзя.  
  
 Строка свойства <xref:System.IO.Packaging.PackageRelationship.Id%2A> является допустимым идентификатором XML. Тип <xref:System.IO.Packaging.PackageRelationship.Id%2A> — XSD: ID. он должен соответствовать соглашениям об именовании, указанным в спецификации *XML-схемы часть 2: типы типов* (см. [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.IO.Packaging.Package" />, содержащий данную связь.</summary>
        <value>Пакет, содержащий данную связь.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об элементах <xref:System.IO.Packaging.Package> см. в разделе *соглашения об открытых пакетах* по адресу <https://docs.microsoft.com/previous-versions/windows/hardware/design/dn614032(v=vs.85)#open-packaging-conventions-and-open-xml-markup-compatibility>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает уточненное имя типа связи.</summary>
        <value>Уточненное имя типа связи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод, который создал связь.  После создания связи <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> изменить нельзя.  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> определяется в синтаксисе, похожем на URI, и определяет роль связи. Например, `"http://schemas.microsoft.com/xps/2005/06/required-resource"` определяет связь с целевой частью, которая является "требуемым ресурсом".  
  
 **Типы отношений для всего пакета**  
  
|Описание|Тип связи|  
|-----------------|-----------------------|  
|Основные свойства|`http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties`|  
|Цифровая подпись|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature`|  
|Сертификат цифровой подписи|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate`|  
|Источник цифровой подписи|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin`|  
|Эскиз|`http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail`|  
  
 Дополнительные сведения о типах отношений пакетов см. в главе 3 и приложении I из спецификации *Open Packaging Conventions* , доступной для загрузки по адресу <https://go.microsoft.com/fwlink/?LinkID=71255>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает URI пакета или части, которым принадлежит связь.</summary>
        <value>Универсальный код ресурса (URI) <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" />, которому принадлежит связь.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если отношение принадлежит <xref:System.IO.Packaging.Package>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> Возвращает URI "/".  
  
 Если отношение принадлежит <xref:System.IO.Packaging.PackagePart>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> Возвращает URI части.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, является ли целевой объект отношения <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> для <see cref="T:System.IO.Packaging.Package" />.</summary>
        <value>Значение перечисления, показывающее, на какой ресурс ссылается <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />: <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> по отношению к <see cref="T:System.IO.Packaging.Package" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод, который создал связь. После создания связи <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> изменить нельзя.  
  
 Если <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> <xref:System.IO.Packaging.TargetMode.Internal>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> должен быть относительной ссылкой.  Для связи уровня пакета относительная ссылка <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешается относительно URI типа "Pack" исходного пакета, который владеет и содержит связь.  (Пример URI исходного пакета пакетов: "Pack://хттп:,, www. adatum. com, Files, датапак. Package/".)  Для связи уровня части <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешается относительно исходной части, которой принадлежит связь (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> интерпретируется относительно <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Если <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> <xref:System.IO.Packaging.TargetMode.External>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> может быть либо относительной ссылкой, либо полным URI.  Если <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> является относительной ссылкой, ссылка интерпретируется как относительно расположения <xref:System.IO.Packaging.Package>, содержащего эту связь.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> см. в разделе 1.3.3 "разметка связей" спецификации *Open Packaging Conventions* , доступной для загрузки по адресу <https://go.microsoft.com/fwlink/?LinkID=71255>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает URI целевого ресурса связи.</summary>
        <value>URI целевого ресурса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод, который создал связь. После создания связи <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> изменить нельзя.  
  
 Если <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> <xref:System.IO.Packaging.TargetMode.Internal>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> должен быть относительной ссылкой.  Для связи уровня пакета относительная ссылка <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешается относительно URI типа "Pack" исходного пакета, который владеет и содержит связь.  (Пример URI исходного пакета пакетов: "Pack://хттп:,, www. adatum. com, Files, датапак. Package/".)  Для связи уровня части <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешается относительно исходной части, которой принадлежит связь (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> интерпретируется относительно <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Если <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> <xref:System.IO.Packaging.TargetMode.External>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> может быть либо относительной ссылкой, либо полным URI.  Если <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> является относительной ссылкой, ссылка интерпретируется как относительно расположения <xref:System.IO.Packaging.Package>, содержащего эту связь.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> см. в разделе 1.3.3 "разметка связей" спецификации *Open Packaging Conventions* , доступной для загрузки по адресу <https://go.microsoft.com/fwlink/?LinkID=71255>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>
