<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75cf1b44d326ea67b9029645d07be67fed159fb1" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67247374" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что тип определяет или реализует контракт данных и может быть сериализован сериализатором, таким как <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. Чтобы сделать тип сериализуемым, авторы типа должны определить для него контракт данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Применяйте атрибут <xref:System.Runtime.Serialization.DataContractAttribute> к типам (классам, структурам или перечислениям), используемым в операциях сериализации и десериализации средством <xref:System.Runtime.Serialization.DataContractSerializer>. Если отправка и получение сообщений с помощью инфраструктуры Windows Communication Foundation (WCF), необходимо также применить <xref:System.Runtime.Serialization.DataContractAttribute> ко всем классам, которые хранят и управляют содержащимися в сообщениях данными. Дополнительные сведения о контрактах данных см. в разделе [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Также необходимо применить атрибут <xref:System.Runtime.Serialization.DataMemberAttribute> ко всем полям, свойствам или событиям, содержащим сериализуемые значения. Применение атрибута <xref:System.Runtime.Serialization.DataContractAttribute> явно разрешает <xref:System.Runtime.Serialization.DataContractSerializer> выполнять сериализацию и десериализацию данных.  
  
> [!CAUTION]
>  Атрибут <xref:System.Runtime.Serialization.DataMemberAttribute> можно применять к закрытым полям. Необходимо помнить, что возвращаемые полем данные (даже если поле закрытое) сериализуются и десериализуются, и, следовательно, могут быть просмотрены или перехвачены злоумышленником или процессом.  
  
 Дополнительные сведения о контрактах данных см. в разделах, перечисленных в [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
## <a name="data-contracts"></a>Контракты данных  
 Объект *контракт данных* — это абстрактное описание набора полей с именем и типом данных для каждого поля. Контракт данных существует вне любых реализаций, что делает возможным взаимодействие служб на разных платформах. Поскольку данные, передаваемые между службами, соответствуют одному и тому же контракту, все службы могут обработать данные. Такая обработка также называется *слабо связанная система*. Контракт данных похож на интерфейс в том, что контракт указывает, каким образом должны подаваться данные, чтобы они могли быть обработаны приложением. Например, контракт данных может вызвать тип данных "Person", имеющий два текстовых поля "FirstName" и "LastName". Чтобы создать контракт данных, примените атрибут <xref:System.Runtime.Serialization.DataContractAttribute> к классу и атрибут <xref:System.Runtime.Serialization.DataMemberAttribute> ко всем полям или свойствам, которые требуется сериализовать. После сериализации данные соответствуют контракту данных, неявно встроенному в этот тип.  
  
> [!NOTE]
>  Поведение контракта данных при наследовании существенно отличается от поведения реального интерфейса. Интерфейсы наследуются любыми производными типами. Если применить атрибут <xref:System.Runtime.Serialization.DataContractAttribute> к базовому классу, производные типы не будут наследовать атрибут или поведение. Но если у производного типа есть контракт данных, элементы данных базового класса сериализуются. Однако необходимо применить атрибут <xref:System.Runtime.Serialization.DataMemberAttribute> к новым членам производного класса, чтобы сделать их сериализуемыми.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>Документы схемы XML и средство SvcUtil  
 При обмене данными с другими службами необходимо описать контракт данных. Чтобы определить контракты данных для текущей версии <xref:System.Runtime.Serialization.DataContractSerializer>, можно использовать схему XML. (Для этой же цели могут использоваться другие формы описания/метаданных.) Чтобы создать схему XML из приложения, используйте [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) с **/dconly** параметр командной строки. Если на вход средства передана сборка, по умолчанию средство создает набор схем XML, определяющий все типы контрактов данных этой сборки. И наоборот, можно использовать средство Svcutil.exe для создания определений классов Visual Basic или C#, соответствующих требованиям схем XML, использующих конструкторы, которые могут быть выражены посредством контрактов данных. В этом случае **/dconly** параметр командной строки не требуется.  
  
 Если на вход средства Svcutil.exe передана схема XML, по умолчанию средство создает набор классов. При рассмотрении этих классов можно заметить, что был применен атрибут <xref:System.Runtime.Serialization.DataContractAttribute>. Эти классы можно использовать для создания нового приложения обработки данных, которыми требуется обмениваться с другими службами.  
  
 Кроме того, можно запустить средство от конечной точки, которая возвращает документ языка описания служб (WSDL) для автоматического создания кода и конфигурации для создания клиента Windows Communication Foundation (WCF). Созданный код включает типы, отмеченные атрибутом <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="reusing-existing-types"></a>Повторное использование существующих типов  
 Существует два основных требования контракта данных: наличие постоянного имени и наличие списка элементов. Постоянное имя состоит из универсального кода ресурса (URI) пространства имен и локального имени контракта. По умолчанию, при применении <xref:System.Runtime.Serialization.DataContractAttribute> к классу, он использует имя класса, как локальное имя и пространство имен класса (с префиксом "http://schemas.datacontract.org/2004/07/«) как URI пространства имен. Значения по умолчанию можно переопределить, задав свойства <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> и <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A>. Можно также изменить пространство имен, применив атрибут <xref:System.Runtime.Serialization.ContractNamespaceAttribute> к пространству имен. Используйте эту возможность, когда существует тип, обрабатывающий данные необходимым образом, но его пространство имен и имя класса отличаются от контракта данных. Переопределив значения по умолчанию, можно повторно использовать этот существующий тип и обеспечить соответствие сериализованных данных контракту данных.  
  
> [!NOTE]
>  В любом коде можно использовать слово `DataContract` вместо длинного <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="versioning"></a>Управление версиями  
 Контракт данных также может размещать свои более поздние версии. То есть в случае, когда более поздняя версия контракта включает дополнительные данные, эти данные хранятся и возвращаются отправителю без изменений. Для этого реализуйте интерфейс <xref:System.Runtime.Serialization.IExtensibleDataObject>.  
  
 Дополнительные сведения об управлении версиями см. в разделе [управление версиями контракта данных](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 В приведенном ниже примере выполняется сериализация и десериализация класса `Person`, к которому был применен атрибут <xref:System.Runtime.Serialization.DataContractAttribute>. Обратите внимание, что свойствам <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> и <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> были заданы значения, переопределяющие параметры по умолчанию.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">Использование контрактов данных</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, был ли объект <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> задан явно.</summary>
        <value><see langword="true" /> Если имя было задано явно; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, был ли объект <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> задан явно.</summary>
        <value><see langword="true" /> Если пространство имен было явно задано; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли сохранять данные ссылки на объект.</summary>
        <value>Значение <see langword="true" />, если требуется сохранить данные ссылки на объект с помощью стандартного XML; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство `IsReference`, чтобы задать <xref:System.Runtime.Serialization.DataContractSerializer> вставлять конструкции XML, сохраняющие сведения о ссылках на объект.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, был ли объект <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> задан явно.</summary>
        <value>Значение <see langword="true" />, если эта ссылка была задана явно; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя для контракта данных типа.</summary>
        <value>Локальное имя контракта данных. Значение по умолчанию — это имя класса, к которому применяется атрибут.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> используется для задания имени контракту данных, которое является именем типа в схеме XML. Дополнительные сведения см. в разделе [имена контрактов данных](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 По умолчанию имя контракта данных — это имя типа, к которому применяется атрибут <xref:System.Runtime.Serialization.DataContractAttribute>. Однако могут существовать причины изменить это имя по умолчанию. Одной из них может быть необходимость разрешить существующему типу обрабатывать данные, которые должны соответствовать существующему контракту данных. Например, существует тип `Person`, но для контракта данных, встроенного в схему XML, требуется, чтобы имя было `Customer`. Контракт можно выполнить, задав значению свойства значение `Customer`.  
  
 Другой причиной может быть необходимость разрешить создание имен, которые недопустимы в качестве имени типа. Например, если для контракта данных требуется имя, не разрешенное в качестве имени типа, задайте значению свойства это запрещенное имя. Например, строку "$value" нельзя использовать в качестве имени типа, но можно использовать как значение свойства <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пространство имен для контракта данных типа.</summary>
        <value>Пространство имен контракта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это свойство, чтобы задать определенное пространство имен, если тип должен возвращать данные, соответствующие определенному контракту данных.  
  
> [!TIP]
>  Для успешной передачи данных имя данных в контракте данных должно быть одинаковым и на клиенте, и на сервере. Проекты Visual Basic, по умолчанию, добавьте префикс пространства имен, определенные в каждом файле (называется «корневое пространство имен,» с именем проекта). После добавления префикса пространства имен клиента и сервера для одного и того же типа становятся различными. Решением является установка <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> значение «», или явно задать пространство имен контракта данных в этом свойстве.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>