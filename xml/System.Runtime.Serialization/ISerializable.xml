<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ee75ecf7b1938e5642e874d12f4cf3685c2b87b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75083329" /></Metadata><TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <TypeSignature Language="F#" Value="type ISerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aff2f-101">Позволяет объекту управлять его собственной сериализацией и десериализацией.</span><span class="sxs-lookup"><span data-stu-id="aff2f-101">Allows an object to control its own serialization and deserialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff2f-102">Любой класс, который может быть сериализован, должен быть помечен <xref:System.SerializableAttribute>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-102">Any class that might be serialized must be marked with the <xref:System.SerializableAttribute>.</span></span> <span data-ttu-id="aff2f-103">Если классу требуется управлять процессом сериализации, он может реализовать интерфейс <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-103">If a class needs to control its serialization process, it can implement the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span> <span data-ttu-id="aff2f-104"><xref:System.Runtime.Serialization.Formatter> вызывает <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> во время сериализации и заполняет переданный <xref:System.Runtime.Serialization.SerializationInfo> всеми данными, необходимыми для представления объекта.</span><span class="sxs-lookup"><span data-stu-id="aff2f-104">The <xref:System.Runtime.Serialization.Formatter> calls the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> at serialization time and populates the supplied <xref:System.Runtime.Serialization.SerializationInfo> with all the data required to represent the object.</span></span> <span data-ttu-id="aff2f-105"><xref:System.Runtime.Serialization.Formatter> создает <xref:System.Runtime.Serialization.SerializationInfo> с типом объекта в графе.</span><span class="sxs-lookup"><span data-stu-id="aff2f-105">The <xref:System.Runtime.Serialization.Formatter> creates a <xref:System.Runtime.Serialization.SerializationInfo> with the type of the object in the graph.</span></span> <span data-ttu-id="aff2f-106">Объекты, которым необходимо отправлять собственные прокси-серверы, могут использовать методы <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> и <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> в <xref:System.Runtime.Serialization.SerializationInfo> для изменения передаваемых данных.</span><span class="sxs-lookup"><span data-stu-id="aff2f-106">Objects that need to send proxies for themselves can use the <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> and <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> methods on <xref:System.Runtime.Serialization.SerializationInfo> to change the transmitted information.</span></span>  
  
 <span data-ttu-id="aff2f-107">В случае наследования класса можно сериализовать класс, производный от базового класса, реализующего <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-107">In the case of class inheritance, it is possible to serialize a class that derives from a base class that implements <xref:System.Runtime.Serialization.ISerializable>.</span></span> <span data-ttu-id="aff2f-108">В этом случае производный класс должен вызвать реализацию базового класса <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> в своей реализации <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-108">In this case, the derived class should call the base class implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> inside its implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</span></span> <span data-ttu-id="aff2f-109">В противном случае данные из базового класса не будут сериализованы.</span><span class="sxs-lookup"><span data-stu-id="aff2f-109">Otherwise, the data from the base class will not be serialized.</span></span>  
  
 <span data-ttu-id="aff2f-110">Интерфейс <xref:System.Runtime.Serialization.ISerializable> подразумевает конструктор с конструктором сигнатуры (<xref:System.Runtime.Serialization.SerializationInfo> сведения, <xref:System.Runtime.Serialization.StreamingContext> контекст).</span><span class="sxs-lookup"><span data-stu-id="aff2f-110">The <xref:System.Runtime.Serialization.ISerializable> interface implies a constructor with the signature constructor (<xref:System.Runtime.Serialization.SerializationInfo> information, <xref:System.Runtime.Serialization.StreamingContext> context).</span></span> <span data-ttu-id="aff2f-111">Во время десериализации текущий конструктор вызывается только после того, как данные в <xref:System.Runtime.Serialization.SerializationInfo> десериализованы модулем форматирования.</span><span class="sxs-lookup"><span data-stu-id="aff2f-111">At deserialization time, the current constructor is called only after the data in the <xref:System.Runtime.Serialization.SerializationInfo> has been deserialized by the formatter.</span></span> <span data-ttu-id="aff2f-112">В общем случае этот конструктор должен быть защищен, если класс не запечатан.</span><span class="sxs-lookup"><span data-stu-id="aff2f-112">In general, this constructor should be protected if the class is not sealed.</span></span>  
  
 <span data-ttu-id="aff2f-113">Порядок, в котором выполняется десериализация объектов, не может быть гарантирован.</span><span class="sxs-lookup"><span data-stu-id="aff2f-113">The order in which objects are deserialized cannot be guaranteed.</span></span> <span data-ttu-id="aff2f-114">Например, если один тип ссылается на тип, который еще не был десериализован, возникнет исключение.</span><span class="sxs-lookup"><span data-stu-id="aff2f-114">For example, if one type references a type that has not been deserialized yet, an exception will occur.</span></span> <span data-ttu-id="aff2f-115">При создании типов с такими зависимостями можно обойти эту проблему, реализовав интерфейс `IDeserializationCallback` и метод `OnDeserialization`.</span><span class="sxs-lookup"><span data-stu-id="aff2f-115">If you are creating types that have such dependencies, you can work around the problem by implementing the `IDeserializationCallback` interface and the `OnDeserialization` method.</span></span>  
  
 <span data-ttu-id="aff2f-116">Архитектура сериализации обрабатывает типы объектов, которые расширяются <xref:System.MarshalByRefObject> такими же, как типы, расширяющие <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-116">The serialization architecture handles object types that extend <xref:System.MarshalByRefObject> the same as types that extend <xref:System.Object>.</span></span> <span data-ttu-id="aff2f-117">Эти типы можно пометить <xref:System.SerializableAttribute> и реализовать интерфейс <xref:System.Runtime.Serialization.ISerializable> как любой другой тип объекта.</span><span class="sxs-lookup"><span data-stu-id="aff2f-117">These types can be marked with the <xref:System.SerializableAttribute> and implement the <xref:System.Runtime.Serialization.ISerializable> interface as any other object type.</span></span> <span data-ttu-id="aff2f-118">Их состояние объекта будет захвачено и сохранено в потоке.</span><span class="sxs-lookup"><span data-stu-id="aff2f-118">Their object state will be captured and persisted onto the stream.</span></span>  
  
 <span data-ttu-id="aff2f-119">Если эти типы используются в <xref:System.Runtime.Remoting>, инфраструктура удаленного взаимодействия предоставляет суррогат, который загружает обычную сериализацию, а вместо этого сериализует прокси-сервер в <xref:System.MarshalByRefObject>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-119">When these types are being used through <xref:System.Runtime.Remoting>, the remoting infrastructure provides a surrogate that preempts typical serialization and instead serializes a proxy to the <xref:System.MarshalByRefObject>.</span></span> <span data-ttu-id="aff2f-120">Суррогат — это вспомогательный метод, который знает, как сериализовать и десериализовать объекты определенного типа.</span><span class="sxs-lookup"><span data-stu-id="aff2f-120">A surrogate is a helper that knows how to serialize and deserialize objects of a particular type.</span></span> <span data-ttu-id="aff2f-121">Прокси-сервер, невидимый для пользователя в большинстве случаев, будет иметь тип <xref:System.Runtime.Remoting.ObjRef>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-121">The proxy, invisible to the user in most cases, will be of type <xref:System.Runtime.Remoting.ObjRef>.</span></span>  
  
 <span data-ttu-id="aff2f-122">Как общий шаблон разработки, класс должен быть нередко помечен атрибутом Serializable и расширять <xref:System.MarshalByRefObject>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-122">As a general design pattern, it would be unusual for a class to be both marked with the serializable attribute and extend <xref:System.MarshalByRefObject>.</span></span> <span data-ttu-id="aff2f-123">Разработчикам следует внимательно думать о возможных сценариях сериализации и удаленного взаимодействия при объединении этих двух характеристик.</span><span class="sxs-lookup"><span data-stu-id="aff2f-123">Developers should think carefully about the possible serialization and remoting scenarios when combining these two characteristics.</span></span> <span data-ttu-id="aff2f-124">Один из примеров, где это может быть применимо, — это <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-124">One example where this might be applicable is with a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="aff2f-125">В то время как базовый класс <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) расширяется <xref:System.MarshalByRefObject>, можно записать состояние <xref:System.IO.MemoryStream> и восстановить его.</span><span class="sxs-lookup"><span data-stu-id="aff2f-125">While the base class of <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) extends from <xref:System.MarshalByRefObject>, it is possible to capture the state of a <xref:System.IO.MemoryStream> and restore it at will.</span></span> <span data-ttu-id="aff2f-126">Таким образом, это может быть полезно для сериализации состояния этого потока в базу данных и его восстановления в более поздней момент времени.</span><span class="sxs-lookup"><span data-stu-id="aff2f-126">It might, therefore, be meaningful to serialize the state of this stream into a database and restore it at some later point in time.</span></span> <span data-ttu-id="aff2f-127">Однако при использовании через удаленное взаимодействие объект этого типа будет прокси-сервером.</span><span class="sxs-lookup"><span data-stu-id="aff2f-127">However, when used through remoting, an object of this type would be proxied.</span></span>  
  
 <span data-ttu-id="aff2f-128">Дополнительные сведения о сериализации классов, расширяющих <xref:System.MarshalByRefObject>, см. в разделе <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-128">For more information about serialization of classes that extend <xref:System.MarshalByRefObject>, see <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>.</span></span> <span data-ttu-id="aff2f-129">Дополнительные сведения о реализации <xref:System.Runtime.Serialization.ISerializable>см. в разделе [настраиваемая сериализация](~/docs/standard/serialization/custom-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="aff2f-129">For more information about implementing <xref:System.Runtime.Serialization.ISerializable>, see [Custom Serialization](~/docs/standard/serialization/custom-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aff2f-130">В следующем примере кода показано использование интерфейса <xref:System.Runtime.Serialization.ISerializable> для определения пользовательского поведения сериализации для класса.</span><span class="sxs-lookup"><span data-stu-id="aff2f-130">The following code example demonstrates the use of the <xref:System.Runtime.Serialization.ISerializable> interface to define custom serialization behavior for a class.</span></span>  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="aff2f-131">Реализуйте этот интерфейс, чтобы разрешить объекту принимать участие в собственной сериализации и десериализации.</span><span class="sxs-lookup"><span data-stu-id="aff2f-131">Implement this interface to allow an object to take part in its own serialization and deserialization.</span></span></para></block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="aff2f-132">Сериализация XML и SOAP</span><span class="sxs-lookup"><span data-stu-id="aff2f-132">XML and SOAP Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/custom-serialization.md"><span data-ttu-id="aff2f-133">Пользовательская сериализация</span><span class="sxs-lookup"><span data-stu-id="aff2f-133">Custom serialization</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="iSerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="aff2f-134">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</span><span class="sxs-lookup"><span data-stu-id="aff2f-134">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="aff2f-135">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</span><span class="sxs-lookup"><span data-stu-id="aff2f-135">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span></span></param>
        <summary><span data-ttu-id="aff2f-136">Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="aff2f-136">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff2f-137">Все объекты, которые включены в <xref:System.Runtime.Serialization.SerializationInfo>, автоматически отправляются и сериализуются модулем форматирования.</span><span class="sxs-lookup"><span data-stu-id="aff2f-137">Any objects that are included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 <span data-ttu-id="aff2f-138">Код, вызывающий <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>, требует <xref:System.Security.Permissions.SecurityPermission> для предоставления служб сериализации.</span><span class="sxs-lookup"><span data-stu-id="aff2f-138">Code that calls <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> requires the <xref:System.Security.Permissions.SecurityPermission> for providing serialization services.</span></span> <span data-ttu-id="aff2f-139">Связанное перечисление: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="aff2f-139">Associated enumeration: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aff2f-140">Не гарантируется, что этот метод будет вызываться только один раз для каждого экземпляра объекта во время сериализации.</span><span class="sxs-lookup"><span data-stu-id="aff2f-140">It is not guaranteed that this method will be called only once per object instance during serialization.</span></span> <span data-ttu-id="aff2f-141">Поэтому метод должен быть реализован таким образом, что его поведение будет одинаковым, независимо от числа вызовов.</span><span class="sxs-lookup"><span data-stu-id="aff2f-141">Therefore, the method should be implemented in such a way that its behavior will be the same regardless of the number of times it is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aff2f-142">В следующем примере метод <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> используется для задания альтернативных значений для сериализованного объекта.</span><span class="sxs-lookup"><span data-stu-id="aff2f-142">The following example uses the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method to set alternate values for a serialized object.</span></span> <span data-ttu-id="aff2f-143">В коде используется метод <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> класса <xref:System.Runtime.Serialization.SerializationInfo> для хранения альтернативных значений при сериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="aff2f-143">The code uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method of the <xref:System.Runtime.Serialization.SerializationInfo> class to store the alternate values when the object is serialized.</span></span> <span data-ttu-id="aff2f-144">И наоборот, когда конструктор класса `Person` вызывается во время десериализации, значения алтернатве извлекаются с помощью метода <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> и переназначаются в поля объекта.</span><span class="sxs-lookup"><span data-stu-id="aff2f-144">Conversely, when the constructor of the `Person` class is called during deserialization, the alternatve values are retrieved using the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method and reassigned to the object's fields.</span></span>  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="aff2f-145">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="aff2f-145">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/custom-serialization.md"><span data-ttu-id="aff2f-146">Пользовательская сериализация</span><span class="sxs-lookup"><span data-stu-id="aff2f-146">Custom serialization</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
