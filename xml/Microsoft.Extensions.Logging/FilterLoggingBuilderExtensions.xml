<Type Name="FilterLoggingBuilderExtensions" FullName="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bddc07b079f02cb04ccb6d1557ef23f12172e27a" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72411806" /></Metadata><TypeSignature Language="C#" Value="public static class FilterLoggingBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FilterLoggingBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FilterLoggingBuilderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterLoggingBuilderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type FilterLoggingBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c0cd4-101">Методы расширения для настройки служб ведения журнала в <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-101">Extension methods for setting up logging services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-102"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-102">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-103">Добавляемый фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-103">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="c0cd4-104">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-104">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-105"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-105">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-106"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-106">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="c0cd4-107">Добавляемый фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-107">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="c0cd4-108">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-108">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-109"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-109">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`4&lt;string, string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, filter As Func(Of String, String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-110"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-110">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="filter"><span data-ttu-id="c0cd4-111">Добавляемый фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-111">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="c0cd4-112">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-112">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-113"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-113">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-114"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-114">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-115">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-115">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-116">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-116">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-117"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-117">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-118"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-118">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="c0cd4-119">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-119">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-120">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-120">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-121"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-121">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`4&lt;string, string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, filter As Func(Of String, String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-122"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-122">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="filter"><span data-ttu-id="c0cd4-123">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-123">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-124">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-124">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-125"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-125">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, category As String, level As LogLevel) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-126"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-126">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-127">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-127">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="c0cd4-128">Уровень фильтрации.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-128">The level to filter.</span></span></param>
        <summary><span data-ttu-id="c0cd4-129">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-129">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-130"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-130">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, category As String, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-131"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-131">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-132">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-132">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-133">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-133">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-134">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-134">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-135"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-135">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, category As String, level As LogLevel) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-136"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-136">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-137">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-137">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="c0cd4-138">Уровень фильтрации.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-138">The level to filter.</span></span></param>
        <summary><span data-ttu-id="c0cd4-139">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-139">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-140"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-140">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, category As String, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="c0cd4-141"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-141">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-142">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-142">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-143">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-143">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-144">Добавляет фильтр журнала к фабрике.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-144">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-145"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-145">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-146">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-146">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-147"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-147">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-148">Добавляемый фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-148">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="c0cd4-149">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-149">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-150"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-150">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-151">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-151">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-152"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-152">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="c0cd4-153">Добавляемый фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-153">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="c0cd4-154">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-154">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-155"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-155">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-156">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-156">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-157"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-157">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-158">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-158">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-159">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-159">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-160"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-160">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-161">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-161">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-162"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-162">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="c0cd4-163">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-163">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-164">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-164">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-165"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-165">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Microsoft.Extensions.Logging.LogLevel level) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, category As String, level As LogLevel) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-166">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-166">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-167"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-167">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-168">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-168">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="c0cd4-169">Уровень фильтрации.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-169">The level to filter.</span></span></param>
        <summary><span data-ttu-id="c0cd4-170">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-170">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-171"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-171">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, category As String, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-172">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-172">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-173"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-173">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-174">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-174">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-175">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-175">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-176">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-176">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-177"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-177">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Microsoft.Extensions.Logging.LogLevel level) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, category As String, level As LogLevel) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-178">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-178">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-179"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-179">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-180">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-180">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="c0cd4-181">Уровень фильтрации.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-181">The level to filter.</span></span></param>
        <summary><span data-ttu-id="c0cd4-182">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-182">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-183"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-183">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, category As String, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c0cd4-184">@No__t-0, для которого будет добавлен фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-184">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="c0cd4-185"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />, к которому необходимо добавить фильтр.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-185">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="c0cd4-186">Категория, по которой необходимо выполнить фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-186">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="c0cd4-187">Применяемая функция фильтра.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-187">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="c0cd4-188">Добавляет фильтр журнала для указанного поставщика <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-188">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="c0cd4-189"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> для объединения дополнительных вызовов в цепочку.</span><span class="sxs-lookup"><span data-stu-id="c0cd4-189">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
