<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbab7ee55b318c1d60f8405afbe0f12f069e9b03" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69446256" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type VisualCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="01b60-101">Представляет упорядоченную коллекцию объектов <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-102">Объект <xref:System.Windows.Media.VisualCollection> имеет подразумеваемое сходство контекста.</span><span class="sxs-lookup"><span data-stu-id="01b60-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="01b60-103">Если процедура пытается получить доступ <xref:System.Windows.Media.VisualCollection> к другому контексту, отличному от контекста владельца <xref:System.Windows.Media.ContainerVisual>, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="01b60-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b60-104">В следующем примере показано, как создать <xref:System.Windows.Media.VisualCollection> и добавить в него элементы.</span><span class="sxs-lookup"><span data-stu-id="01b60-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="01b60-105">Полный пример см. в разделе [Проверка попадания с помощью примера DrawingVisuals](https://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="01b60-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](https://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualCollection : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualCollection" Usage="new System.Windows.Media.VisualCollection parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="01b60-106">Родительский визуальный объект, <see cref="T:System.Windows.Media.VisualCollection" /> которого возвращается.</span><span class="sxs-lookup"><span data-stu-id="01b60-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span></span></param>
        <summary><span data-ttu-id="01b60-107">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.Add visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="01b60-108">Объект <see cref="T:System.Windows.Media.Visual" />, добавляемый в коллекцию <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="01b60-109">Добавляет объект <see cref="T:System.Windows.Media.Visual" /> в конец <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="01b60-110">Индекс в коллекции, по которому был добавлен параметр <paramref name="visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-110">The index in the collection at which <paramref name="visual" /> was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-111">Добавление, <xref:System.Windows.Media.Visual> `null` значение которого разрешено и не вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="01b60-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="01b60-112">Метод также настраивает связь типа «родители-потомки» между родительским визуальным элементом, который является <xref:System.Windows.Media.VisualCollection>владельцем и дочерним `visual`элементом. <xref:System.Windows.Media.VisualCollection.Add%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="01b60-113">Если требуется более низкий уровень контроля над реализацией базового хранилища визуальных дочерних объектов пользовательского класса, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A> методов и. <xref:System.Windows.Media.Visual.RemoveVisualChild%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="01b60-114">При использовании этих методов необходимо определить собственную реализацию хранилища и не использовать <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b60-115">В следующем примере показано, как создать <xref:System.Windows.Media.VisualCollection> и добавить в него элементы.</span><span class="sxs-lookup"><span data-stu-id="01b60-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="01b60-116">Полный пример см. в разделе [Проверка попадания с помощью примера DrawingVisuals](https://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="01b60-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](https://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01b60-117">Исключение <see cref="T:System.ArgumentException" /> выбрасывается, если <see cref="T:System.Windows.Media.Visual" /> является корневым элементом.</span><span class="sxs-lookup"><span data-stu-id="01b60-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Windows.Media.VisualCollection.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b60-118">Возвращает или задает число элементов, которое может содержать список <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></summary>
        <value><span data-ttu-id="01b60-119">Количество элементов, которое может содержать коллекция <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-120">Значение <xref:System.Windows.Media.VisualCollection.Capacity%2A> — это количество элементов, которое может храниться <xref:System.Windows.Media.VisualCollection> в.</span><span class="sxs-lookup"><span data-stu-id="01b60-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="01b60-121"><xref:System.Windows.Media.VisualCollection.Count%2A>число визуальных элементов, которые фактически находятся в <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="01b60-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A>всегда больше или равно <xref:System.Windows.Media.VisualCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="01b60-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="01b60-123">Если <xref:System.Windows.Media.VisualCollection.Count%2A> при <xref:System.Windows.Media.VisualCollection.Capacity%2A> добавлении элементов превышено <xref:System.Windows.Media.VisualCollection> , емкость увеличивается.</span><span class="sxs-lookup"><span data-stu-id="01b60-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="01b60-124">По умолчанию <xref:System.Windows.Media.VisualCollection.Capacity%2A> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="01b60-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01b60-125">Для <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> установлено значение, которое меньше <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-125"><see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="visualCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01b60-126">Удаляет из коллекции <see cref="T:System.Windows.Media.VisualCollection" /> все элементы.</span><span class="sxs-lookup"><span data-stu-id="01b60-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-127"><xref:System.Windows.Media.VisualCollection.Count%2A> Сбрасывается в ноль.</span><span class="sxs-lookup"><span data-stu-id="01b60-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="01b60-128">Значение параметра <xref:System.Windows.Media.VisualCollection.Capacity%2A> остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="01b60-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="01b60-129">Чтобы сбросить емкость <xref:System.Windows.Media.VisualCollection>, <xref:System.Windows.Media.VisualCollection.Capacity%2A> присвойте свойству требуемый размер.</span><span class="sxs-lookup"><span data-stu-id="01b60-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Media.Visual -&gt; bool" Usage="visualCollection.Contains visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="01b60-130">Объект <see cref="T:System.Windows.Media.Visual" /> для поиска в коллекции.</span><span class="sxs-lookup"><span data-stu-id="01b60-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="01b60-131">Возвращает значение <see cref="T:System.Boolean" />, которое указывает, содержится ли в коллекции указанный <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="01b60-132">Значение <see langword="true" />, если объект <paramref name="visual" /> входит в коллекцию; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-132"><see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-133">В худшем случае среда выполнения этой функции — `O(n)`, где `n` — <xref:System.Windows.Media.VisualCollection>число элементов в.</span><span class="sxs-lookup"><span data-stu-id="01b60-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01b60-134">Копирует текущую коллекцию в переданный массив.</span><span class="sxs-lookup"><span data-stu-id="01b60-134">Copies the current collection into the passed array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="01b60-135">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="01b60-136">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="01b60-136">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="01b60-137">Копирует элементы коллекции в массив, начиная с заданного индекса в массиве.</span><span class="sxs-lookup"><span data-stu-id="01b60-137">Copies the items in the collection to an array, starting at a specific array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Media.Visual[] * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="01b60-138">Массив объектов <see cref="T:System.Windows.Media.Visual" /> (должен индексироваться с нуля).</span><span class="sxs-lookup"><span data-stu-id="01b60-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span></span></param>
        <param name="index"><span data-ttu-id="01b60-139">Индекс в массиве <paramref name="array" />, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="01b60-139">The index to start copying from within <paramref name="array" />.</span></span></param>
        <summary><span data-ttu-id="01b60-140">Копирует текущую коллекцию в переданный массив <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.VisualCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b60-141">Возвращает количество элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="01b60-141">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="01b60-142">Количество элементов, содержащихся в <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-143"><xref:System.Windows.Media.VisualCollection.Count%2A>число элементов, которые фактически находятся в <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="01b60-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A>число элементов, которое может храниться <xref:System.Windows.Media.VisualCollection> в.</span><span class="sxs-lookup"><span data-stu-id="01b60-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="01b60-145"><xref:System.Windows.Media.VisualCollection.Count%2A>всегда меньше или равно <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="01b60-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="01b60-146">Если <xref:System.Windows.Media.VisualCollection.Count%2A> при <xref:System.Windows.Media.VisualCollection.Capacity%2A> добавлении элементов превышено, емкость списка удваивается путем автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="01b60-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.VisualCollection.Enumerator" Usage="visualCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01b60-147">Извлекает перечислитель, который используется для итерации по <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="01b60-148">Перечислитель, который можно использовать для итерации по коллекции.</span><span class="sxs-lookup"><span data-stu-id="01b60-148">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.IndexOf visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="01b60-149">Объект <see cref="T:System.Windows.Media.Visual" />, который требуется найти в коллекции <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="01b60-150">Возвращает индекс (с нуля) объекта <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="01b60-151">Индекс объекта <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-152">Если параметр <xref:System.Windows.Media.Visual> не находится <xref:System.Windows.Media.VisualCollection>в, возвращается значение-1.</span><span class="sxs-lookup"><span data-stu-id="01b60-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="01b60-153">Если `null` параметр передается в метод, возвращается индекс первой записи `null` , которая возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="01b60-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="01b60-154">Если пустая запись отсутствует, возвращается значение-1.</span><span class="sxs-lookup"><span data-stu-id="01b60-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Insert (index, visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01b60-155">Индекс (с нуля), по которому следует вставить значение.</span><span class="sxs-lookup"><span data-stu-id="01b60-155">The zero-based index at which the value should be inserted.</span></span></param>
        <param name="visual"><span data-ttu-id="01b60-156">Объект <see cref="T:System.Windows.Media.Visual" />, вставляемый в <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="01b60-157">Вставляет элемент в коллекцию <see cref="T:System.Windows.Media.VisualCollection" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="01b60-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-158">Если <xref:System.Windows.Media.VisualCollection.Count%2A> значение уже <xref:System.Windows.Media.VisualCollection.Capacity%2A>равно ,емкость<xref:System.Windows.Media.Visual> объекта увеличивается<xref:System.Windows.Media.VisualCollection> до вставки нового.</span><span class="sxs-lookup"><span data-stu-id="01b60-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="01b60-159">Если `index` параметр <xref:System.Windows.Media.VisualCollection>равен, то`visual` добавляется в конец. <xref:System.Windows.Media.VisualCollection.Count%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="01b60-160">Все существующие визуальные объекты, которые равны или больше `index` , сдвигаются в соответствии с новым <xref:System.Windows.Media.Visual>, а значения их индексов обновляются.</span><span class="sxs-lookup"><span data-stu-id="01b60-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="01b60-161">Метод также настраивает связь типа «родители-потомки» между родительским визуальным элементом, который является <xref:System.Windows.Media.VisualCollection>владельцем и дочерним `visual`элементом. <xref:System.Windows.Media.VisualCollection.Insert%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="01b60-162">Если вам требуется более низкий уровень контроля над реализацией базового хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A> методов <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> и.</span><span class="sxs-lookup"><span data-stu-id="01b60-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="01b60-163">При использовании этих методов вы определяете собственную реализацию хранилища и не используете <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01b60-164"><paramref name="index" /> меньше нуля или больше <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-164"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b60-165">Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Windows.Media.VisualCollection" /> доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="01b60-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="01b60-166">Значение, указывающее, доступен ли объект <see cref="T:System.Windows.Media.VisualCollection" /> только для чтения.</span><span class="sxs-lookup"><span data-stu-id="01b60-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-167">Это свойство всегда `false` применяется ко всем <xref:System.Windows.Media.VisualCollection> объектам.</span><span class="sxs-lookup"><span data-stu-id="01b60-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b60-168">Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Windows.Media.VisualCollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="01b60-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="01b60-169">Значение, определяющее, является ли данная коллекция <see cref="T:System.Windows.Media.VisualCollection" /> синхронизированной (потокобезопасной).</span><span class="sxs-lookup"><span data-stu-id="01b60-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-170">Это свойство всегда `false` применяется ко всем <xref:System.Windows.Media.VisualCollection> объектам.</span><span class="sxs-lookup"><span data-stu-id="01b60-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01b60-171">Индекс (с нуля) в <see cref="T:System.Windows.Media.VisualCollection" />, по которому следует задать или получить <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="01b60-172">Получает или задает <see cref="T:System.Windows.Media.Visual" />, хранящийся по заданному (от нуля) индексу в коллекции <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="01b60-173">Объект <see cref="T:System.Windows.Media.Visual" />, сохраненный по индексу <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-174">Это свойство предоставляет возможность доступа к конкретному <xref:System.Windows.Media.Visual> элементу <xref:System.Windows.Media.VisualCollection> в с помощью индекса.</span><span class="sxs-lookup"><span data-stu-id="01b60-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01b60-175"><paramref name="index" /> меньше нуля либо <paramref name="index" /> равен нулю или больше <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-175"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01b60-176">Новый дочерний элемент уже имеет родительский элемент, или значение по заданному индексу не равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Remove visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="01b60-177">Элемент <see cref="T:System.Windows.Media.Visual" />, который требуется удалить из <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="01b60-178">Удаляет указанный объект <see cref="T:System.Windows.Media.Visual" /> из объекта <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-179">Визуальные объекты, следующие за удаленным объектом, сдвигаются, чтобы занимать освободившееся позицию, и значения их индексов обновляются.</span><span class="sxs-lookup"><span data-stu-id="01b60-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="01b60-180">Если `visual` имеет `null`значение, первая `null` запись удаляется.</span><span class="sxs-lookup"><span data-stu-id="01b60-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="01b60-181">Обратите внимание, `null` что удаление записи является линейной в размере коллекции.</span><span class="sxs-lookup"><span data-stu-id="01b60-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="01b60-182">Метод также удаляет связь типа «родители-потомки» между родительским визуальным элементом, который является <xref:System.Windows.Media.VisualCollection>владельцем и дочерним `visual`элементом. <xref:System.Windows.Media.VisualCollection.Remove%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="01b60-183">Если вам требуется более низкий уровень контроля над реализацией базового хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A> методов <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> и.</span><span class="sxs-lookup"><span data-stu-id="01b60-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="01b60-184">При использовании этих методов вы определяете собственную реализацию хранилища и не используете <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="visualCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01b60-185">Индекс (с нуля) визуального объекта, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="01b60-185">The zero-based index of the visual to remove.</span></span></param>
        <summary><span data-ttu-id="01b60-186">Удаляет визуальный объект с указанным индексом из объекта <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-187">Визуальные объекты, следующие за удаленным объектом, сдвигаются, чтобы занимать освободившееся позицию, и значения их индексов обновляются.</span><span class="sxs-lookup"><span data-stu-id="01b60-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="01b60-188">Метод также удаляет связь типа «родители-потомки» между родительским визуальным элементом, который является <xref:System.Windows.Media.VisualCollection>владельцем и дочерним `visual`элементом. <xref:System.Windows.Media.VisualCollection.RemoveAt%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="01b60-189">Если вам требуется более низкий уровень контроля над реализацией базового хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A> методов <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> и.</span><span class="sxs-lookup"><span data-stu-id="01b60-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="01b60-190">При использовании этих методов вы определяете собственную реализацию хранилища и не используете <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01b60-191"><paramref name="index" /> меньше нуля либо <paramref name="index" /> равен нулю или больше <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-191"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="visualCollection.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01b60-192">Отсчитываемый от нуля индекс начала диапазона элементов, которые требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="01b60-192">The zero-based index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="01b60-193">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="01b60-193">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="01b60-194">Удаляет диапазон визуальных объектов из <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b60-195">Визуальные объекты, которые следуют за удаленными объектами, сдвигаются, чтобы занимать освобождаемые позиции, а их индексные значения обновляются.</span><span class="sxs-lookup"><span data-stu-id="01b60-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="01b60-196">Метод также удаляет связи типа «родители-потомки» между родительским визуальным элементом, который является <xref:System.Windows.Media.VisualCollection>владельцем, и диапазоном дочерних визуальных элементов. <xref:System.Windows.Media.VisualCollection.RemoveRange%2A></span><span class="sxs-lookup"><span data-stu-id="01b60-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="01b60-197">Если вам требуется более низкий уровень контроля над реализацией базового хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A> методов <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> и.</span><span class="sxs-lookup"><span data-stu-id="01b60-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="01b60-198">При использовании этих методов вы определяете собственную реализацию хранилища и не используете <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="01b60-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01b60-199"><paramref name="index" /> меньше нуля или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="01b60-199"><paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01b60-200"><paramref name="index" /> и <paramref name="count" /> не указывают на допустимый диапазон элементов в <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-200"><paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b60-201">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="01b60-202">Значение типа <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-202">A value of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01b60-203">Этот член поддерживает инфраструктуру [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] и не предназначен для непосредственного использования из кода.</span><span class="sxs-lookup"><span data-stu-id="01b60-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="01b60-204">Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="01b60-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="01b60-205">Объект, который можно использовать для перечисления элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="01b60-205">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
