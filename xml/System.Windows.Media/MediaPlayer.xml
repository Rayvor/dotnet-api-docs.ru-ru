<Type Name="MediaPlayer" FullName="System.Windows.Media.MediaPlayer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e131b6c577c08b7adbdb9b7acc2120e546b2dbfd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70456350" /></Metadata><TypeSignature Language="C#" Value="public class MediaPlayer : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaPlayer extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.MediaPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaPlayer&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaPlayer : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type MediaPlayer = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет воспроизведение мультимедиа для рисунков.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несмотря на то, что экземпляр этого класса можно объявить в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], вы не сможете загружать и воспроизводить его мультимедиа без использования кода. Чтобы воспроизвести мультимедиа только [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] в, <xref:System.Windows.Controls.MediaElement>используйте. Кроме того, если экземпляр объявляется в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], единственное практичное использование заключается в заполнении синтаксиса элемента свойства <xref:System.Windows.Media.VideoDrawing.Player%2A> для свойства.  
  
 При распространении мультимедиа вместе с приложением файл мультимедиа нельзя использовать как ресурс проекта. Вместо этого в файле проекта необходимо выбрать тип мультимедиа `Content` и задать для `CopyToOutputDirectory` значение `PreserveNewest` или `Always`.  
  
 <xref:System.Windows.Media.MediaPlayer>можно использовать в двух разных режимах, в зависимости от того, что влияет на проигрыватель: независимого режима или часового режима. В независимом режиме <xref:System.Windows.Media.MediaPlayer> платформа является аналогом изображения и носителя, открытого с помощью <xref:System.Windows.Media.MediaPlayer.Open%2A> метода, который используется для воспроизведения. В режиме <xref:System.Windows.Media.MediaPlayer> часов объект можно рассматривать как цель для анимации, и поэтому он будет иметь соответствующие <xref:System.Windows.Media.Animation.Timeline> записи и <xref:System.Windows.Media.Animation.Clock> в дереве времени, которое управляет воспроизведением. Дополнительные сведения о режимах мультимедиа см. в [обзоре мультимедиа](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).  
  
 <xref:System.Windows.Media.MediaPlayer>отличается от <xref:System.Windows.Controls.MediaElement> в, что не является элементом управления, который можно добавить непосредственно [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] в приложение. Чтобы отобразить носитель <xref:System.Windows.Media.MediaPlayer> <xref:System.Windows.Media.VideoDrawing> , загруженный с помощью <xref:System.Windows.Media.DrawingContext> , необходимо использовать или.  
  
   
  
## Examples  
 [Инструкции. воспроизведение мультимедиа с помощью VideoDrawing](~/docs/framework/wpf/graphics-multimedia/how-to-play-media-using-a-videodrawing.md)  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Drawing" />
    <altmember cref="T:System.Windows.Media.VideoDrawing" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.MediaPlayer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Balance">
      <MemberSignature Language="C#" Value="public double Balance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Balance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Balance" />
      <MemberSignature Language="VB.NET" Value="Public Property Balance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Balance { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Balance : double with get, set" Usage="System.Windows.Media.MediaPlayer.Balance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает баланс громкости между левыми и правыми динамиками.</summary>
        <value>Баланс громкости левых и правых динамиков в диапазоне от -1 до 1. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение-1 представляет 100% от левого докладчика, а 1 — 100% от правого докладчика.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingEnded">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingEnded;" />
      <MemberSignature Language="F#" Value="member this.BufferingEnded : EventHandler " Usage="member this.BufferingEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит по завершении буферизации.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingProgress">
      <MemberSignature Language="C#" Value="public double BufferingProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BufferingProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferingProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BufferingProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferingProgress : double" Usage="System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает процент буферизации потокового содержимого.</summary>
        <value>Процент буферизации потокового содержимого, представленный значением от 0 до 1.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStarted">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingStarted;" />
      <MemberSignature Language="F#" Value="member this.BufferingStarted : EventHandler " Usage="member this.BufferingStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда буферизация началась.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPause">
      <MemberSignature Language="C#" Value="public bool CanPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.CanPause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPause { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPause : bool" Usage="System.Windows.Media.MediaPlayer.CanPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, можно ли приостановить воспроизведение файла мультимедиа.</summary>
        <value>true, если воспроизведение мультимедиа можно приостановить; в противном случае — false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.MediaClock Clock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.MediaClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public Property Clock As MediaClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::MediaClock ^ Clock { System::Windows::Media::MediaClock ^ get(); void set(System::Windows::Media::MediaClock ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.MediaClock with get, set" Usage="System.Windows.Media.MediaPlayer.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.MediaClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Media.MediaClock" />, связанный с подлежащим воспроизведению <see cref="T:System.Windows.Media.MediaTimeline" />.</summary>
        <value>Часы, связанные с воспроизводимым объектом <see cref="T:System.Windows.Media.MediaTimeline" />. Значение по умолчанию — null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задание этого свойства указывает, <xref:System.Windows.Media.MediaPlayer> что следует использовать таймер, и будет использовать ядро времени, поместив проигрыватель в режим часов. Все воспроизводимые медиа-файлы останавливаются <xref:System.Uri> , и открывается связанный с новыми часами.  
  
 Когда проигрыватель находится в режиме часов, поиск с помощью <xref:System.Windows.Media.MediaPlayer.Position%2A> или <xref:System.Windows.Media.MediaPlayer.Play%2A>вызова методов, <xref:System.Windows.Media.MediaPlayer.Pause%2A>или <xref:System.Windows.Media.MediaPlayer.Stop%2A> вызывает исключение <xref:System.InvalidOperationException>. Эти операции доступны, только если проигрыватель <xref:System.Windows.Media.MediaPlayer.Clock%2A> имеет значение null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Копируемый объект <see cref="T:System.Windows.Media.MediaPlayer" />.</param>
        <summary>Делает этот экземпляр глубокой копией указанного объекта <see cref="T:System.Windows.Media.MediaPlayer" />. При копировании свойств зависимостей этот метод копирует ссылки на ресурсы и привязки данных (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается <xref:System.Windows.Freezable.Clone%2A> методом и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода. Чтобы создать изменяемую копию текущего объекта, вызовите <xref:System.Windows.Freezable.Clone%2A> метод вместо вызова этого метода напрямую.  
  
 Для получения дополнительной информации см. <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Копируемый объект <see cref="T:System.Windows.Media.MediaPlayer" />.</param>
        <summary>Делает этот экземпляр изменяемой глубокой копией указанной коллекции <see cref="T:System.Windows.Media.MediaPlayer" /> с использованием текущих значений свойств. Ссылки на ресурсы, привязки данных и анимации не копируются, но копируются их текущие значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается <xref:System.Windows.Freezable.CloneCurrentValue%2A> методом и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода. Чтобы создать изменяемую копию текущего объекта, вызовите <xref:System.Windows.Freezable.CloneCurrentValue%2A> метод вместо вызова этого метода напрямую.  
  
 Для получения дополнительной информации см. <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="mediaPlayer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает мультимедиа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно открыть снова, <xref:System.Windows.Media.MediaPlayer.Open%2A> вызвав метод. <xref:System.Windows.Media.MediaPlayer>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="mediaPlayer.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр <see cref="T:System.Windows.Media.MediaPlayer" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.Windows.Media.MediaPlayer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgress">
      <MemberSignature Language="C#" Value="public double DownloadProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DownloadProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DownloadProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DownloadProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DownloadProgress : double" Usage="System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает процентное значение, показывающее процент загрузки содержимого, расположенного на удаленном сервере.</summary>
        <value>Процент загрузки содержимого, расположенного на удаленном сервере, представлен значением между 0 и 1. Значение по умолчанию — 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Объект <see cref="T:System.Windows.Media.MediaPlayer" />, который нужно клонировать и зафиксировать.</param>
        <summary>Делает этот экземпляр клоном указанного объекта <see cref="T:System.Windows.Media.MediaPlayer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При копировании свойств зависимостей этот метод копирует ссылки на ресурсы и привязки данных (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения. Обратите внимание, что если эти свойства содержат ссылки на ресурсы или <xref:System.Windows.Freezable.GetAsFrozen%2A> привязки данных, произойдет сбой при попытке заморозить объект <xref:System.InvalidOperationException>и вызовет исключение.  
  
 Этот метод вызывается <xref:System.Windows.Freezable.GetAsFrozen%2A> методом и не должен вызываться непосредственно из кода, за исключением случаев вызова базовой реализации при переопределении этого метода. Чтобы создать замороженную копию текущего объекта, вызовите <xref:System.Windows.Freezable.GetAsFrozen%2A> метод вместо вызова этого метода напрямую.  
  
 Для получения дополнительной информации см. <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAudio">
      <MemberSignature Language="C#" Value="public bool HasAudio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAudio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAudio { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAudio : bool" Usage="System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, содержит ли мультимедиа звуковые выходные данные.</summary>
        <value>true, если мультимедиа содержит звуковые выходные данные; в противном случае — false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVideo">
      <MemberSignature Language="C#" Value="public bool HasVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVideo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVideo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVideo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasVideo : bool" Usage="System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, содержит ли мультимедиа выходные видеоданные.</summary>
        <value>true, если мультимедиа содержит выходные видеоданные; в противном случае — false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBuffering : bool" Usage="System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, выполняется ли буферизация мультимедиа.</summary>
        <value>true, если буферизация мультимедиа выполняется; в противном случае — false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public bool IsMuted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMuted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMuted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMuted : bool with get, set" Usage="System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, отключен ли звук мультимедиа.</summary>
        <value>true, если звук мультимедиа отключен; в противном случае — false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEnded">
      <MemberSignature Language="C#" Value="public event EventHandler MediaEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaEnded;" />
      <MemberSignature Language="F#" Value="member this.MediaEnded : EventHandler " Usage="member this.MediaEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении воспроизведения мультимедиа.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; MediaFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.ExceptionEventArgs&gt; MediaFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaFailed As EventHandler(Of ExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::ExceptionEventArgs ^&gt; ^ MediaFailed;" />
      <MemberSignature Language="F#" Value="member this.MediaFailed : EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " Usage="member this.MediaFailed : System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при ошибке</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MediaFailed"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object MediaFailed="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpened">
      <MemberSignature Language="C#" Value="public event EventHandler MediaOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaOpened;" />
      <MemberSignature Language="F#" Value="member this.MediaOpened : EventHandler " Usage="member this.MediaOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при открытии мультимедиа.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalDuration : System.Windows.Duration" Usage="System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает естественную продолжительность мультимедиа.</summary>
        <value>Естественная продолжительность мультимедиа. Значение по умолчанию — <see cref="P:System.Windows.Duration.Automatic" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A>не может быть определен до <xref:System.Windows.Media.MediaPlayer.MediaOpened> возникновения ошибки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoHeight">
      <MemberSignature Language="C#" Value="public int NaturalVideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoHeight : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает высоту видео в пикселях.</summary>
        <value>Высоту видео в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если тип мультимедиа — Audio, возвращается значение null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoWidth">
      <MemberSignature Language="C#" Value="public int NaturalVideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoWidth : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ширину видео в пикселях.</summary>
        <value>Ширина видео в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если тип мультимедиа — Audio, возвращается значение null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Open(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Open : Uri -&gt; unit" Usage="mediaPlayer.Open source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Uri" /> источника мультимедиа.</param>
        <summary>Открывает заданный<see cref="T:System.Uri" /> для воспроизведения мультимедиа.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="mediaPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Приостанавливает воспроизведения мультимедиа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Windows.Media.MediaPlayer.Pause%2A> , когда у игрока есть связанный <xref:System.Windows.Media.MediaPlayer.Clock%2A> <xref:System.InvalidOperationException>объект, вызывает исключение. <xref:System.Windows.Media.MediaPlayer.Pause%2A>не может быть вызван, пока модуль синхронизации дисков выполняет воспроизведение мультимедиа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="mediaPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Воспроизводит мультимедиа с текущего <see cref="P:System.Windows.Media.MediaPlayer.Position" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Windows.Media.MediaPlayer.Play%2A> , когда у игрока есть связанный <xref:System.Windows.Media.MediaPlayer.Clock%2A> <xref:System.InvalidOperationException>объект, вызывает исключение. <xref:System.Windows.Media.MediaPlayer.Play%2A>не может быть вызван, пока модуль синхронизации дисков выполняет воспроизведение мультимедиа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public TimeSpan Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Position { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Position : TimeSpan with get, set" Usage="System.Windows.Media.MediaPlayer.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текущую позицию мультимедиа.</summary>
        <value>Текущая позиция мультимедиа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если у игрока есть связанный <xref:System.Windows.Media.MediaPlayer.Clock%2A>объект, параметр <xref:System.Windows.Media.MediaPlayer.Position%2A> создает <xref:System.InvalidOperationException>исключение. <xref:System.Windows.Media.MediaPlayer.Position%2A>не может быть задан, пока модуль синхронизации дисков выполняет воспроизведение мультимедиа.  
  
<a name="xamlTextUsage_Position"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
 Обычно не используется в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="override this.ReadPreamble : unit -&gt; unit" Usage="mediaPlayer.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Гарантирует, что доступ к MediaPlayer осуществляется из допустимого потока.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.ScriptCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScriptCommand As EventHandler(Of MediaScriptCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::MediaScriptCommandEventArgs ^&gt; ^ ScriptCommand;" />
      <MemberSignature Language="F#" Value="member this.ScriptCommand : EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " Usage="member this.ScriptCommand : System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда в мультимедиа встречается команда скрипта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScriptCommand"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object ScriptCommand="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?linkid=57417">ивмпевентсскрипткомманд</related>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabled">
      <MemberSignature Language="C#" Value="public bool ScrubbingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrubbingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrubbingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrubbingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrubbingEnabled : bool with get, set" Usage="System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, включена ли очистка.</summary>
        <value><see langword="true" />, если очистка включена; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Media.MediaPlayer.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Uri" /> мультимедиа.</summary>
        <value>Текущий <see cref="T:System.Uri" /> мультимедиа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Media.MediaPlayer.Source%2A> доступен только для чтения. Это свойство получает объект <xref:System.Uri> , Открытый с <xref:System.Windows.Media.MediaPlayer.Open%2A> помощью метода <xref:System.Windows.Media.MediaPlayer.Clock%2A>или <xref:System.Uri> связанного с.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает коэффициент скорости воспроизведения мультимедиа.</summary>
        <value>Коэффициент скорости воспроизведения мультимедиа, представленный значением от 0 до максимального значения двойной точности. Значение по умолчанию — 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения, меньшие, чем один доход, медленнее обычного воспроизведения, а значения больше одного выдаются быстрее обычного воспроизведения.  
  
 Если у игрока есть связанный <xref:System.Windows.Media.MediaPlayer.Clock%2A>, параметр <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> не разрешен. <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>не может быть задан, пока модуль синхронизации дисков выполняет воспроизведение мультимедиа.  
  
 Воспроизведение звука не гарантируется, <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> если не `1`имеет.  
  
<a name="xamlTextUsage_SpeedRatio"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
 Обычно не используется в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает воспроизведения мультимедиа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Windows.Media.MediaPlayer.Stop%2A> , когда у игрока есть связанный <xref:System.Windows.Media.MediaPlayer.Clock%2A> <xref:System.InvalidOperationException>объект, вызывает исключение. <xref:System.Windows.Media.MediaPlayer.Stop%2A>не может быть вызван, пока модуль синхронизации дисков выполняет воспроизведение мультимедиа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public double Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Volume { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : double with get, set" Usage="System.Windows.Media.MediaPlayer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает громкость мультимедиа.</summary>
        <value>Громкость мультимедиа отображается на линейной шкале от 0 до 1. Значение по умолчанию — 0,5.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Volume"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
 Обычно не используется в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="override this.WritePreamble : unit -&gt; unit" Usage="mediaPlayer.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Проверяет, что MediaPlayer не заморожен и доступ к нему осуществляется из допустимого контекста потока.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
