<Type Name="StringEnumerator" FullName="System.Collections.Specialized.StringEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd58cc162e458384b1cd82710561ae9ce64e1a85" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63907616" /></Metadata><TypeSignature Language="C#" Value="public class StringEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringEnumerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringEnumerator" />
  <TypeSignature Language="F#" Value="type StringEnumerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Поддерживает простую итерацию по коллекции <see cref="T:System.Collections.Specialized.StringCollection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.  Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.  
  
 Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.  
  
 Изначально перечислитель располагается перед первым элементом коллекции. Метод <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> также переводит перечислитель в эту позицию. В этой позиции вызов <xref:System.Collections.Specialized.StringEnumerator.Current%2A> возникло исключение. Поэтому необходимо вызвать метод <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.  
  
 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> или <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>. <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> задает <xref:System.Collections.Specialized.StringEnumerator.Current%2A> в качестве значения для следующего элемента.  
  
 Если <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> возвращает `false`. Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> также возвращать `false`. Если последний вызов <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> возвращается `false`, вызов <xref:System.Collections.Specialized.StringEnumerator.Current%2A> возникло исключение. Чтобы снова задать в качестве значения свойства <xref:System.Collections.Specialized.StringEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> и<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.  
  
 Перечислитель остается действительным, пока коллекция не изменяется. При внесении изменений в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> или <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>. Если коллекция изменяется между <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> и <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> возвращает элемент, он имеет значение, даже если перечислитель уже недействителен.  
  
 У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой. Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение. Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.  
  
   
  
## Examples  
 В следующем примере кода показано, некоторые свойства и методы <xref:System.Collections.Specialized.StringEnumerator>.  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными. Потокобезопасность членов экземпляров не гарантируется.  
  
Перечисление коллекции не является потокобезопасной процедурой. Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение. Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</threadsafe>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Specialized.StringCollection" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public string Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Current { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : string" Usage="System.Collections.Specialized.StringEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущий элемент в коллекции.</summary>
        <value>Текущий элемент в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После создания перечислителя или после <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> вызове <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> необходимо вызвать, чтобы переместить перечислитель на первый элемент коллекции до считывания значения свойства <xref:System.Collections.Specialized.StringEnumerator.Current%2A>; в противном случае <xref:System.Collections.Specialized.StringEnumerator.Current%2A> не определено.  
  
 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> также создает исключение, если последний вызов <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> возвращается `false`, который указывает конец коллекции.  
  
 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> не перемещает позицию перечислителя и последовательных вызовов <xref:System.Collections.Specialized.StringEnumerator.Current%2A> возвращает тот же объект, пока не будет <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> или <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> вызывается.  
  
 Перечислитель остается действительным, пока коллекция не изменяется. При внесении изменений в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>. Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> возвращает элемент, он имеет значение, даже если перечислитель уже недействителен.  
  
   
  
## Examples  
 В следующем примере кода показано, некоторые свойства и методы <xref:System.Collections.Specialized.StringEnumerator>.  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Перечислитель размещается перед первым элементом семейства или после его последнего элемента.</exception>
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="stringEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает перечислитель к следующему элементу коллекции.</summary>
        <returns>Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После создания перечислителя или после <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> является именем, перечислитель располагается перед первым элементом коллекции, и первый вызов <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> перемещает перечислитель на первый элемент коллекции.  
  
 Если <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> возвращает `false`. Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> также возвращать `false` пока <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> вызывается.  
  
 Перечислитель остается действительным, пока коллекция не изменяется. При внесении изменений в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>. Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> возвращает элемент, он имеет значение, даже если перечислитель уже недействителен.  
  
   
  
## Examples  
 В следующем примере кода показано, некоторые свойства и методы <xref:System.Collections.Specialized.StringEnumerator>.  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">После создания перечислителя семейство было изменено.</exception>
        <altmember cref="P:System.Collections.Specialized.StringEnumerator.Current" />
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stringEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> Перемещает перечислитель в начало коллекции, перед первым элементом. После <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> необходимо вызвать, чтобы переместить перечислитель на первый элемент коллекции до считывания значения свойства <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, некоторые свойства и методы <xref:System.Collections.Specialized.StringEnumerator>.  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">После создания перечислителя семейство было изменено.</exception>
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.Specialized.StringEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>