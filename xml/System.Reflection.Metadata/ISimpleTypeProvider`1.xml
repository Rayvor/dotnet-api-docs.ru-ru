<Type Name="ISimpleTypeProvider&lt;TType&gt;" FullName="System.Reflection.Metadata.ISimpleTypeProvider&lt;TType&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="979b0ae80d8d9a8970643766ed5a04c97a200ebf" /><Meta Name="ms.sourcegitcommit" Value="0de246131f8a87c71d008d055adec7bf72470c4f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/29/2019" /><Meta Name="ms.locfileid" Value="66301938" /></Metadata><TypeSignature Language="C#" Value="public interface ISimpleTypeProvider&lt;TType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISimpleTypeProvider`1&lt;TType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.ISimpleTypeProvider`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISimpleTypeProvider(Of TType)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TType&gt;&#xA;public interface class ISimpleTypeProvider" />
  <TypeSignature Language="F#" Value="type ISimpleTypeProvider&lt;'ype&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TType" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimitiveType">
      <MemberSignature Language="C#" Value="public TType GetPrimitiveType (System.Reflection.Metadata.PrimitiveTypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetPrimitiveType(valuetype System.Reflection.Metadata.PrimitiveTypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimitiveType (typeCode As PrimitiveTypeCode) As TType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetPrimitiveType(System::Reflection::Metadata::PrimitiveTypeCode typeCode);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimitiveType : System.Reflection.Metadata.PrimitiveTypeCode -&gt; 'ype" Usage="iSimpleTypeProvider.GetPrimitiveType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.Reflection.Metadata.PrimitiveTypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">To be added.</param>
        <summary><span data-ttu-id="4f298-101">Получает символ типа для типа-примитива.</span><span class="sxs-lookup"><span data-stu-id="4f298-101">Gets the type symbol for a primitive type.</span></span></summary>
        <returns><span data-ttu-id="4f298-102">Символ типа для</span><span class="sxs-lookup"><span data-stu-id="4f298-102">The type symbol for</span></span> <param name="typeCode" /><span data-ttu-id="4f298-103">.</span><span class="sxs-lookup"><span data-stu-id="4f298-103">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromDefinition">
      <MemberSignature Language="C#" Value="public TType GetTypeFromDefinition (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeDefinitionHandle handle, byte rawTypeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetTypeFromDefinition(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.TypeDefinitionHandle handle, unsigned int8 rawTypeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeFromDefinition (reader As MetadataReader, handle As TypeDefinitionHandle, rawTypeKind As Byte) As TType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetTypeFromDefinition(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::TypeDefinitionHandle handle, System::Byte rawTypeKind);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeFromDefinition : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.TypeDefinitionHandle * byte -&gt; 'ype" Usage="iSimpleTypeProvider.GetTypeFromDefinition (reader, handle, rawTypeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="rawTypeKind" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4f298-104">Средство чтения метаданных, переданное декодеру подписи.</span><span class="sxs-lookup"><span data-stu-id="4f298-104">The metadata reader that was passed to the signature decoder.</span></span> <span data-ttu-id="4f298-105">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4f298-105">It may be <see langword="null" />.</span></span></param>
        <param name="handle"><span data-ttu-id="4f298-106">Дескриптор определения типа.</span><span class="sxs-lookup"><span data-stu-id="4f298-106">The type definition handle.</span></span></param>
        <param name="rawTypeKind"><span data-ttu-id="4f298-107">Вид типа, как указано в подписи.</span><span class="sxs-lookup"><span data-stu-id="4f298-107">The kind of the type, as specified in the signature.</span></span> <span data-ttu-id="4f298-108">Для интерпретации этого значения следует использовать <see cref="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)" />.</span><span class="sxs-lookup"><span data-stu-id="4f298-108">To interpret this value use <see cref="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)" />.</span></span></param>
        <summary><span data-ttu-id="4f298-109">Получает символ типа для определения типа.</span><span class="sxs-lookup"><span data-stu-id="4f298-109">Gets the type symbol for a type definition.</span></span></summary>
        <returns><span data-ttu-id="4f298-110">Символ типа.</span><span class="sxs-lookup"><span data-stu-id="4f298-110">The type symbol.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
<span data-ttu-id="4f298-111">При подписи поступают из файла WinMD, дополнительной обработки необходимо, чтобы определить, является ли тип объекта, типом значения или ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="4f298-111">When the signature comes from a WinMD file, additional processing is needed to determine whether the target type is a value type or a reference type.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromReference">
      <MemberSignature Language="C#" Value="public TType GetTypeFromReference (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeReferenceHandle handle, byte rawTypeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TType GetTypeFromReference(class System.Reflection.Metadata.MetadataReader reader, valuetype System.Reflection.Metadata.TypeReferenceHandle handle, unsigned int8 rawTypeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeFromReference (reader As MetadataReader, handle As TypeReferenceHandle, rawTypeKind As Byte) As TType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TType GetTypeFromReference(System::Reflection::Metadata::MetadataReader ^ reader, System::Reflection::Metadata::TypeReferenceHandle handle, System::Byte rawTypeKind);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeFromReference : System.Reflection.Metadata.MetadataReader * System.Reflection.Metadata.TypeReferenceHandle * byte -&gt; 'ype" Usage="iSimpleTypeProvider.GetTypeFromReference (reader, handle, rawTypeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Reflection.Metadata.MetadataReader" />
        <Parameter Name="handle" Type="System.Reflection.Metadata.TypeReferenceHandle" />
        <Parameter Name="rawTypeKind" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4f298-112">Средство чтения метаданных, переданное декодеру подписи.</span><span class="sxs-lookup"><span data-stu-id="4f298-112">The metadata reader that was passed to the signature decoder.</span></span> <span data-ttu-id="4f298-113">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4f298-113">It may be <see langword="null" />.</span></span></param>
        <param name="handle"><span data-ttu-id="4f298-114">Дескриптор определения типа.</span><span class="sxs-lookup"><span data-stu-id="4f298-114">The type definition handle.</span></span></param>
        <param name="rawTypeKind"><span data-ttu-id="4f298-115">Вид типа, как указано в подписи.</span><span class="sxs-lookup"><span data-stu-id="4f298-115">The kind of the type as specified in the signature.</span></span> <span data-ttu-id="4f298-116">Для интерпретации этого значения следует использовать <see cref="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)" />.</span><span class="sxs-lookup"><span data-stu-id="4f298-116">To interpret this value, use <see cref="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)" />.</span></span></param>
        <summary><span data-ttu-id="4f298-117">Получает символ типа для ссылочного типа.</span><span class="sxs-lookup"><span data-stu-id="4f298-117">Gets the type symbol for a type reference.</span></span></summary>
        <returns><span data-ttu-id="4f298-118">Символ типа.</span><span class="sxs-lookup"><span data-stu-id="4f298-118">The type symbol.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
<span data-ttu-id="4f298-119">При подписи поступают из файла WinMD, дополнительной обработки необходимо, чтобы определить, является ли тип объекта, типом значения или ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="4f298-119">When the signature comes from a WinMD file, additional processing is needed to determine whether the target type is a value type or a reference type.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
