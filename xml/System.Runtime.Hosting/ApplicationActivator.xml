<Type Name="ApplicationActivator" FullName="System.Runtime.Hosting.ApplicationActivator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9663fe80db8e01c1b37c486df84d988524775e9a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70547475" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationActivator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationActivator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ApplicationActivator" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationActivator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationActivator" />
  <TypeSignature Language="F#" Value="type ApplicationActivator = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2e7b2-101">Предоставляет базовый класс для активации сборок на основе манифестов.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-101">Provides the base class for the activation of manifest-based assemblies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e7b2-102">Существует один назначенный экземпляр <xref:System.Runtime.Hosting.ApplicationActivator> класса в каждом <xref:System.AppDomain> , на который направляются все вызовы активации.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-102">There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed.</span></span> <span data-ttu-id="2e7b2-103">Для <xref:System.AppDomainManager> текущей <xref:System.AppDomain> цели может предоставляться собственный пользовательский <xref:System.Runtime.Hosting.ApplicationActivator> объект.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-103">The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose.</span></span> <span data-ttu-id="2e7b2-104">Если пользователь <xref:System.Runtime.Hosting.ApplicationActivator> не указан, создается экземпляр по умолчанию <xref:System.Runtime.Hosting.ApplicationActivator> .</span><span class="sxs-lookup"><span data-stu-id="2e7b2-104">If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.</span></span>  
  
 <span data-ttu-id="2e7b2-105">Следующие шаги описывают поведение реализации метода по умолчанию <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> :</span><span class="sxs-lookup"><span data-stu-id="2e7b2-105">The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:</span></span>  
  
1.  <span data-ttu-id="2e7b2-106">Проверяет, <xref:System.ActivationContext> <xref:System.ActivationContext> соответствует ли активируемая надстройка текущему домену. в противном случае переходит к шагу 2.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-106">Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2.</span></span> <span data-ttu-id="2e7b2-107">В противном случае выполняет сборку и возвращает результат, заключенный в маркер объекта.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-107">Otherwise, executes the assembly and returns the result wrapped in an object handle.</span></span>  
  
2.  <span data-ttu-id="2e7b2-108">Активирует надстройку в новом <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-108">Activates the add-in in a new <xref:System.AppDomain>.</span></span> <span data-ttu-id="2e7b2-109">Чтобы инициализировать новый <xref:System.AppDomain> объект <xref:System.Runtime.Hosting.ActivationArguments> с помощью для надстройки, выполняются следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-109">The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.</span></span>  
  
    1.  <span data-ttu-id="2e7b2-110">Создает новый <xref:System.AppDomainSetup> объект, <xref:System.Runtime.Hosting.ActivationArguments> используя объект, содержащий контекст активации для надстройки.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-110">Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.</span></span>  
  
    2.  <span data-ttu-id="2e7b2-111">Вызывает метод для создания нового домена <xref:System.AppDomainSetup> с помощью объекта. <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A></span><span class="sxs-lookup"><span data-stu-id="2e7b2-111">Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.</span></span>  
  
    3.  <span data-ttu-id="2e7b2-112">Метод вызывает метод, чтобы получить <xref:System.Security.Policy.ApplicationTrust> объект для надстройки. <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A></span><span class="sxs-lookup"><span data-stu-id="2e7b2-112">The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in.</span></span> <span data-ttu-id="2e7b2-113">Если свойство возвращает `true`значение, выполняется надстройка. <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A></span><span class="sxs-lookup"><span data-stu-id="2e7b2-113">If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed.</span></span> <span data-ttu-id="2e7b2-114">В противном <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> случае выдает исключение, указывающее, что не удалось получить разрешение на <xref:System.Security.Policy.PolicyException> выполнение.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-114">If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.</span></span>  
  
    4.  <span data-ttu-id="2e7b2-115">Если надстройка является доверенной для выполнения, то создается и настраивается <xref:System.AppDomain> <xref:System.ActivationContext> новая версия надстройки, а надстройка загружается и выполняется.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-115">If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.</span></span>  
  
    5.  <span data-ttu-id="2e7b2-116">Результат активации надстройки возвращается в виде, заключенном в маркер объекта.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-116">The result of the activation of the add-in is returned, wrapped in an object handle.</span></span>  
  
 <span data-ttu-id="2e7b2-117">Пользовательский активатор может адаптировать активацию надстройки к определенному набору обстоятельств.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-117">A custom activator can tailor the activation of an add-in to a particular set of circumstances.</span></span> <span data-ttu-id="2e7b2-118">Например, Пользовательский активатор может найти существующий <xref:System.AppDomain> объект для активации этой надстройки вместо того, чтобы создавать новый домен каждый раз.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-118">For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.</span></span>  
  
 <span data-ttu-id="2e7b2-119">Следующие шаги описывают поведение пользовательского <xref:System.Runtime.Hosting.ApplicationActivator> объекта, который активирует надстройку в существующем: <xref:System.AppDomain></span><span class="sxs-lookup"><span data-stu-id="2e7b2-119">The following steps describe the behavior of a custom <xref:System.Runtime.Hosting.ApplicationActivator> that activates an add-in in an existing <xref:System.AppDomain>:</span></span>  
  
1.  <span data-ttu-id="2e7b2-120">Пользовательский активатор находит домен, который совпадает <xref:System.ActivationContext> с активируемой надстройкой.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-120">The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.</span></span>  
  
2.  <span data-ttu-id="2e7b2-121">Если объект <xref:System.ActivationContext> ранее не встречался в процессе, Пользовательский активатор создает новый <xref:System.AppDomain.CreateDomain%2A> <xref:System.AppDomain> для этого <xref:System.ActivationContext> , вызывая метод напрямую или делегируя это действие <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> в базовом классе.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-121">If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.</span></span>  
  
3.  <span data-ttu-id="2e7b2-122">Если существует домен с таким же <xref:System.ActivationContext>доменом, активатор может <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> делегировать вызов <xref:System.Runtime.Hosting.ApplicationActivator> метода в в целевом домене.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-122">If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain.</span></span> <span data-ttu-id="2e7b2-123">Обратите внимание, что это может быть междоменным вызовом <xref:System.Runtime.Hosting.ApplicationActivator> , который находится в целевом объекте. <xref:System.AppDomain></span><span class="sxs-lookup"><span data-stu-id="2e7b2-123">Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e7b2-124">В следующем примере кода показано, как получить <xref:System.Runtime.Hosting.ApplicationActivator> объект из текущего <xref:System.AppDomain.DomainManager%2A> объекта для приложения на основе манифеста.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-124">The following code example shows how to obtain an <xref:System.Runtime.Hosting.ApplicationActivator> object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.</span></span>  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationActivator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationActivator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e7b2-125">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Hosting.ApplicationActivator" />.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-125">Initializes a new instance of the <see cref="T:System.Runtime.Hosting.ApplicationActivator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e7b2-126">Создает экземпляр приложения, которое необходимо активировать, используя контекст активации, определяющий приложение.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-126">Creates an instance of the application to be activated, using an activation context that identifies the application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="2e7b2-127">Контекст активации <see cref="T:System.ActivationContext" />, определяющий активируемое приложение.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-127">An <see cref="T:System.ActivationContext" /> that identifies the application to activate.</span></span></param>
        <summary><span data-ttu-id="2e7b2-128">Создает экземпляр приложения, которое должно быть активировано, используя указанный контекст активации.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-128">Creates an instance of the application to be activated, using the specified activation context.</span></span></summary>
        <returns><span data-ttu-id="2e7b2-129">Дескриптор <see cref="T:System.Runtime.Remoting.ObjectHandle" />, являющийся оболочкой для возвращаемого при выполнении приложения значения.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-129">An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> that is a wrapper for the return value of the application execution.</span></span> <span data-ttu-id="2e7b2-130">Необходимо развернуть возвращенное значение, чтобы получить доступ к истинному объекту.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-130">The return value must be unwrapped to access the real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e7b2-131">Этот метод предназначен для активации приложений на основе манифеста.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-131">This method is intended for the manifest-based activation of applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e7b2-132"><paramref name="activationContext" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-132"><paramref name="activationContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="2e7b2-133">Контекст активации <see cref="T:System.ActivationContext" />, определяющий активируемое приложение.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-133">An <see cref="T:System.ActivationContext" /> that identifies the application to activate.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="2e7b2-134">Пользовательские данные активации.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-134">Custom activation data.</span></span></param>
        <summary><span data-ttu-id="2e7b2-135">Создает экземпляр приложения, которое необходимо активировать, используя заданный контекст активации и пользовательские данные активации.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-135">Creates an instance of the application to be activated, using the specified activation context  and custom activation data.</span></span></summary>
        <returns><span data-ttu-id="2e7b2-136">Дескриптор <see cref="T:System.Runtime.Remoting.ObjectHandle" />, являющийся оболочкой для возвращаемого при выполнении приложения значения.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-136">An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> that is a wrapper for the return value of the application execution.</span></span> <span data-ttu-id="2e7b2-137">Необходимо развернуть возвращенное значение, чтобы получить доступ к истинному объекту.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-137">The return value must be unwrapped to access the real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e7b2-138">Этот метод предназначен для активации приложений на основе манифеста.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-138">This method is intended for the manifest-based activation of applications.</span></span> <span data-ttu-id="2e7b2-139">Данные активации состоят из информации, такой как часть строки запроса URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-139">The activation data consists of information such as the query string portion of a URL.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e7b2-140"><paramref name="activationContext" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-140"><paramref name="activationContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHelper">
      <MemberSignature Language="C#" Value="protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceHelper(class System.AppDomainSetup adSetup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateInstanceHelper (adSetup As AppDomainSetup) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceHelper(AppDomainSetup ^ adSetup);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceHelper : AppDomainSetup -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper adSetup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adSetup" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="adSetup"><span data-ttu-id="2e7b2-141">Объект <see cref="T:System.AppDomainSetup" />, свойство <see cref="P:System.AppDomainSetup.ActivationArguments" /> которого определяет активируемое приложение.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-141">An <see cref="T:System.AppDomainSetup" /> object whose <see cref="P:System.AppDomainSetup.ActivationArguments" /> property identifies the application to activate.</span></span></param>
        <summary><span data-ttu-id="2e7b2-142">Создает экземпляр приложения с помощью указанного объекта <see cref="T:System.AppDomainSetup" />.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-142">Creates an instance of an application using the specified <see cref="T:System.AppDomainSetup" /> object.</span></span></summary>
        <returns><span data-ttu-id="2e7b2-143">Дескриптор <see cref="T:System.Runtime.Remoting.ObjectHandle" />, являющийся оболочкой для возвращаемого при выполнении приложения значения.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-143">An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> that is a wrapper for the return value of the application execution.</span></span> <span data-ttu-id="2e7b2-144">Необходимо развернуть возвращенное значение, чтобы получить доступ к истинному объекту.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-144">The return value must be unwrapped to access the real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e7b2-145">Этот метод предназначен для активации приложений на основе манифеста.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-145">This method is intended for the manifest-based activation of applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2e7b2-146">Свойству <see cref="P:System.AppDomainSetup.ActivationArguments" /> объекта <paramref name="adSetup" /> присвоено значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-146">The <see cref="P:System.AppDomainSetup.ActivationArguments" /> property of <paramref name="adSetup" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Policy.PolicyException"><span data-ttu-id="2e7b2-147">Выполнение экземпляра приложения не удалось, поскольку настройки политики в текущем домене приложения не разрешают выполнение приложения.</span><span class="sxs-lookup"><span data-stu-id="2e7b2-147">The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
