<Type Name="WebScriptEnablingBehavior" FullName="System.ServiceModel.Description.WebScriptEnablingBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0db166dabb2076a544dc222592dc008284511ccb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69151317" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebScriptEnablingBehavior : System.ServiceModel.Description.WebHttpBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebScriptEnablingBehavior extends System.ServiceModel.Description.WebHttpBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebScriptEnablingBehavior&#xA;Inherits WebHttpBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptEnablingBehavior sealed : System::ServiceModel::Description::WebHttpBehavior" />
  <TypeSignature Language="F#" Value="type WebScriptEnablingBehavior = class&#xA;    inherit WebHttpBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.WebHttpBehavior</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает поддержку поведения, позволяющего конечным точкам Windows Communication Foundation (WCF) получать HTTP-запросы от клиента ASP.NET AJAX на основе браузера. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При применении к конечной точке <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> поведение обеспечивает интеграцию WCF и ASP.NET AJAX, за исключением поддержки, необходимой для кодирования нотация объектов JavaScript (JSON). Различные типы кодирования, включая JSON, включены с помощью <xref:System.ServiceModel.Configuration.WebMessageEncodingElement> или с помощью соответственно настроенного <xref:System.ServiceModel.WebHttpBinding>. Поведение реализует класс <xref:System.ServiceModel.Description.WebHttpBehavior>и наследует от, что позволяет реализовать более общую модель веб-программирования для служб WCF, предоставляя конечные точки, не относящиеся к SOAP. <xref:System.ServiceModel.Description.IEndpointBehavior> <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>  
  
 В частности, <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>:  
  
-   Включает модель программирования HTTP, включая диспетчер для операций на основе суффикса URL-адреса, поддержку для выбора HTTP-команды (POST или GET) и элемент управления длительности кэширования HTTP. Дополнительные сведения о модели программирования HTTP см. в разделе [Общие сведения о модели программирования WCF Web HTTP](~/docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md). Обратите внимание, что HTTP-командой по умолчанию при использовании этого поведения является POST.  
  
-   Включает правильное средство форматирования для сообщений запросов и ответов каждой операции — например, поддержку для параметров URL-адреса.  
  
-   Включает конечную точку прокси JavaScript.  
  
 Чтобы вызвать службу WCF из клиента ASP.NET AJAX, необходимо настроить службу с <xref:System.ServiceModel.WebHttpBinding> привязкой и добавить ее <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> в коллекцию поведения конечной точки. Это можно сделать в конфигурации, добавив <xref:System.ServiceModel.Configuration.WebScriptEnablingElement> или без использования конфигурации, активируя конечную точку AJAX <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> с помощью вместо фабрики по умолчанию в [@ServiceHost](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) директиве в файле SVC.  
  
 Дополнительные сведения о различных способах включения службы WCF для реагирования на клиентов ASP.NET AJAX см. в разделе [Создание служб WCF для ASP.NET AJAX](~/docs/framework/wcf/feature-details/creating-wcf-services-for-aspnet-ajax.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptEnablingBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptEnablingBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задает для свойства <xref:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle%2A> значение <xref:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest>.  
  
 Задает для свойства <xref:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat%2A> и <xref:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat%2A> значение <xref:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClientErrorInspector">
      <MemberSignature Language="C#" Value="protected override void AddClientErrorInspector (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddClientErrorInspector(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddClientErrorInspector(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="override this.AddClientErrorInspector : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="webScriptEnablingBehavior.AddClientErrorInspector (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="clientRuntime">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServerErrorHandlers">
      <MemberSignature Language="C#" Value="protected override void AddServerErrorHandlers (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddServerErrorHandlers(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddServerErrorHandlers(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="override this.AddServerErrorHandlers : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="webScriptEnablingBehavior.AddServerErrorHandlers (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="endpointDispatcher">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public override void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="override this.ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="webScriptEnablingBehavior.ApplyClientBehavior (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который предоставляет контракт.</param>
        <param name="clientRuntime">Объект <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, для которого применимо пользовательское поведение.</param>
        <summary>Применяет поведение к клиенту на протяжении всей конечной точки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализует метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%28System.ServiceModel.Description.ServiceEndpoint%2CSystem.ServiceModel.Dispatcher.ClientRuntime%29> для просмотра, изменения или добавления пользовательских оснасток расширения в клиентскую среду выполнения для всех сообщений, используемых с конечной точкой, или для конкретных операций.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public override void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="override this.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="webScriptEnablingBehavior.ApplyDispatchBehavior (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который предоставляет контракт.</param>
        <param name="endpointDispatcher">Объект <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />, для которого применимо пользовательское поведение.</param>
        <summary>Применяет поведение к конечной точке службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно этот метод вызывается Windows Communication Foundation (WCF) автоматически при применении поведения к конечной точке. Таким образом, нет необходимости вызывать этот метод вручную.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticFormatSelectionEnabled">
      <MemberSignature Language="C#" Value="public override bool AutomaticFormatSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutomaticFormatSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutomaticFormatSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticFormatSelectionEnabled : bool with get, set" Usage="System.ServiceModel.Description.WebScriptEnablingBehavior.AutomaticFormatSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, включен ли автоматический выбор формата.</summary>
        <value>Значение <see langword="true" />, если автоматическое выделение формата включено; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об автоматическом выборе формата см. в разделе [веб-форматирование WCF](~/docs/framework/wcf/feature-details/wcf-web-http-formatting.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBodyStyle">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultBodyStyle As WebMessageBodyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageBodyStyle DefaultBodyStyle { System::ServiceModel::Web::WebMessageBodyStyle get(); void set(System::ServiceModel::Web::WebMessageBodyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBodyStyle : System.ServiceModel.Web.WebMessageBodyStyle with get, set" Usage="System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageBodyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает основной стиль сообщения по умолчанию.</summary>
        <value>Значение <see cref="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest" />. Единственным допустимым значением является значение по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest> является единственным значением <xref:System.ServiceModel.Web.WebMessageBodyStyle>, которое поддерживается, и задание любого другого значения повлечет за собой возникновение <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Основной заданный стиль не поддерживается.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingRequestFormat">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Web.WebMessageFormat DefaultOutgoingRequestFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingRequestFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultOutgoingRequestFormat As WebMessageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageFormat DefaultOutgoingRequestFormat { System::ServiceModel::Web::WebMessageFormat get(); void set(System::ServiceModel::Web::WebMessageFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOutgoingRequestFormat : System.ServiceModel.Web.WebMessageFormat with get, set" Usage="System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает исходящий формат сообщения по умолчанию.</summary>
        <value><see cref="T:System.ServiceModel.Web.WebMessageFormat" /> используется исходящими сообщениями запросов. Значение по умолчанию — <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданный формат сообщения не является допустимым значением <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingResponseFormat">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultOutgoingResponseFormat As WebMessageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageFormat DefaultOutgoingResponseFormat { System::ServiceModel::Web::WebMessageFormat get(); void set(System::ServiceModel::Web::WebMessageFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOutgoingResponseFormat : System.ServiceModel.Web.WebMessageFormat with get, set" Usage="System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает формат исходящего сообщения ответа по умолчанию.</summary>
        <value><see cref="T:System.ServiceModel.Web.WebMessageFormat" /> используется исходящими сообщениями ответов. Значение по умолчанию — <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданный формат сообщения не является допустимым значением <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FaultExceptionEnabled">
      <MemberSignature Language="C#" Value="public override bool FaultExceptionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FaultExceptionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.FaultExceptionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property FaultExceptionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool FaultExceptionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FaultExceptionEnabled : bool with get, set" Usage="System.ServiceModel.Description.WebScriptEnablingBehavior.FaultExceptionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, будет ли создаваться исключение FaultException при возникновении внутренней ошибки сервера (код состояния HTTP: 500).</summary>
        <value>Возвращает значение <see langword="true" />, если флаг установлен; в противном случае возвращает значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryStringConverter">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Dispatcher.QueryStringConverter GetQueryStringConverter (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Dispatcher.QueryStringConverter GetQueryStringConverter(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Dispatcher::QueryStringConverter ^ GetQueryStringConverter(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberSignature Language="F#" Value="override this.GetQueryStringConverter : System.ServiceModel.Description.OperationDescription -&gt; System.ServiceModel.Dispatcher.QueryStringConverter" Usage="webScriptEnablingBehavior.GetQueryStringConverter operationDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.QueryStringConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpEnabled">
      <MemberSignature Language="C#" Value="public override bool HelpEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.HelpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HelpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HelpEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HelpEnabled : bool with get, set" Usage="System.ServiceModel.Description.WebScriptEnablingBehavior.HelpEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, будет ли включена страница справки REST WCF.</summary>
        <value><see langword="true" />значение, если включена страница справки WCF (Справка). в <see langword="false" />противном случае — значение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о странице справки WCF RESTFUL см. на [странице справки веб-службы HTTP WCF](~/docs/framework/wcf/feature-details/wcf-web-http-service-help-page.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="override this.Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="webScriptEnablingBehavior.Validate endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, который предоставляет контракт.</param>
        <summary>Подтверждает, что конечная точка отвечает требованиям, позволяющим ей функционировать как конечной точке ASP.NET AJAX.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Проверяет, что конечная точка не является `null`, использует схемы HTTP или HTTPS, не использует <xref:System.Xml.Serialization.XmlSerializer>, использует команду HTTP GET или POST, для объекта <xref:System.ServiceModel.Channels.MessageVersion> привязки которой задано значение <xref:System.ServiceModel.Channels.MessageVersion.None%2A>, и что привязка содержит <xref:System.ServiceModel.Channels.TransportBindingElement>, где <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> задано значение `true`. Этот метод также выполняет проверку, чтобы заголовки SOAP или имена программы-оболочки в методах или другие не поддерживаемые аспекты операций отсутствовали.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Конечная точка не отвечает одному из требований, чтобы быть конечной точкой ASP.NET AJAX.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
