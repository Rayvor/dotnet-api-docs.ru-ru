<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="083da8de48c1aa2a763b2001ac874136da75d1b8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69152002" /></Metadata><TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Задает режим проверки авторизации при использовании <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> для управления доступом к методу.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При применении <xref:System.Security.Permissions.PrincipalPermissionAttribute> к методу, с помощью этого режима можно указать, какой набор ролей следует использовать при авторизации доступа. По умолчанию атрибут использует группы Windows (например, `Administrator` или `Users`) для указания роли, к которой должен принадлежать пользователь.  
  
 Чтобы задать режим программно, необходимо создать экземпляр класса `ServiceHost`, найти <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> в его коллекции расширений функциональности и задать <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> для соответствующего перечисления. В следующем примере свойству присваивается значение UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 Вы также можете задать поведение в конфигурации, добавив [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) [ &lt;ServiceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) в serviceBehaviors файла конфигурации, как показано в следующем коде.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 Перечисление влияет на способ авторизации пользователя атрибутом <xref:System.Security.Permissions.PrincipalPermissionAttribute> при применении этого атрибута к методу. В следующем примере показано, как применить атрибут к методу. Для этого необходимо, чтобы пользователь принадлежал к группе «Пользователи» на компьютере. Данный код работает только в том случае, если <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> имеет значение `UseWindowsGroup` (по умолчанию).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 Значение UseAspNetRoles используется для всех типов учетных данных. Этот режим позволяет Windows Communication Foundation (WCF) использовать поставщик ролей ASP.NET для принятия решений об авторизации.  
  
 Если для службы в качестве учетных данных используется сертификат X.509, можно присвоить свойству `Name` для <xref:System.Security.Permissions.PrincipalPermissionAttribute> строковое значение, которое включает составные значение полей «Тема» и «Отпечаток пальца», как показано в следующем примере кода.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 Составное строковое значение состоит из значений темы и отпечатка пальца, разделенных точкой с запятой и пробелом.  
  
 Возможно также использовать пустую строку в поле «Тема» в сертификате. В этом случае можно задать свойство `Name` как точку с запятой, за которой следует пробел, а затем значение отпечатка пальца, как показано в следующем примере кода.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Если используется поставщик ролей ASP.NET, можно также назначить для свойства <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> роль в базе данных. По умолчанию база данных представлена <xref:System.Web.Security.SqlRoleProvider>. Также можно задать настраиваемый поставщик ролей с помощью свойства <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> класса <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>. В следующем примере кода показано, как присвоить роли значение `Administrators`. Следует учесть, что поставщик ролей должен сопоставлять учетную запись пользователя с данной ролью.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Дополнительные сведения о поставщике роли ASP.NET см. в [разделе как Используйте диспетчер ролей в ASP.NET 2,0](https://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Дополнительные сведения об использовании WCF и поставщика ролей см. в разделе [как Использование поставщика роли ASP.NET со службой](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Другой  
 Если свойство имеет значение Custom, необходимо также предоставить пользовательский класс, реализующий <xref:System.IdentityModel.Policy.IAuthorizationPolicy> класс. Этот класс обеспечивает представление вызывающего оператора `IPrincipal` в коллекции <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A>. Экземпляр `IPrincipal` должен сохраняться в коллекции свойств с помощью строкового ключа «Главный», как показано в следующем примере.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Фон  
 Безопасность на основе ролей в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] разрешает приложениям задавать авторизацию посредством кода. Если задано требование <xref:System.Security.Permissions.PrincipalPermission>, <xref:System.Threading.Thread.CurrentPrincipal%2A> должен соответствовать требованиям `PrincipalPermission`. Например, пользователь должен принадлежать к определенной роли или группе. В противном случае поток не будет авторизован для выполнения кода и возникнет исключение. WCF предоставляет набор <xref:System.ServiceModel.Description.PrincipalPermissionMode> вариантов выбора для <xref:System.Threading.Thread.CurrentPrincipal%2A> указания на основе <xref:System.Security.SecurityContext> соответственно.  
  
   
  
## Examples  
 В следующем примере показано, как указать UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 В следующем примере показано, как указать Custom.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Всегда позволяет пользователю указать класс <see cref="T:System.Security.Principal.IPrincipal" /> для <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Позволяет пользователю указать настраиваемый класс <see cref="T:System.Security.Principal.IPrincipal" /> для <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" /> не задано.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" /> задан на основе поставщика ролей [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" /> задан на основе Windows <see cref="T:System.Security.Principal.WindowsPrincipal" /> (). Если идентификация пользователя не связана с учетной записью Windows, используется анонимный вход Windows.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
