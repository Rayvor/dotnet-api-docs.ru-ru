<Type Name="IServiceContractGenerationExtension" FullName="System.ServiceModel.Description.IServiceContractGenerationExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ca8f8430982ba8d4a4e0b96543bf55e64592d31" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70652446" /></Metadata><TypeSignature Language="C#" Value="public interface IServiceContractGenerationExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceContractGenerationExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IServiceContractGenerationExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceContractGenerationExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceContractGenerationExtension" />
  <TypeSignature Language="F#" Value="type IServiceContractGenerationExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет методы, вызываемые при создании контракта, которые могут использоваться, чтобы изменить создаваемый для контракта службы код.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте интерфейс <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> в поведении контракта (тип <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>), чтобы обеспечить возможность изменять создаваемый код при компиляции контракта или конечной точки в код.  
  
 Как правило пользователь <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> вставляет пользовательское поведение контракта в коллекцию <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A?displayProperty=nameWithType> при вызове <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> или <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A>.  
  
   
  
## Examples  
 В следующем примере показано, как добавлять элемент <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> к свойству <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A?displayProperty=nameWithType> во время вызова <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A>.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 В следующем примере кода показана реализация <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%2A>, где добавляются примечания к коду, созданному для контракта службы.  
  
 [!code-csharp[C_CustomWSDLExtensions#12](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#12)]  
  
 В следующем примере кода показаны созданные примечания к контракту службы.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateContract">
      <MemberSignature Language="C#" Value="public void GenerateContract (System.ServiceModel.Description.ServiceContractGenerationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateContract(class System.ServiceModel.Description.ServiceContractGenerationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract(System.ServiceModel.Description.ServiceContractGenerationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateContract (context As ServiceContractGenerationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateContract(System::ServiceModel::Description::ServiceContractGenerationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GenerateContract : System.ServiceModel.Description.ServiceContractGenerationContext -&gt; unit" Usage="iServiceContractGenerationExtension.GenerateContract context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.ServiceContractGenerationContext" />
      </Parameters>
      <Docs>
        <param name="context">Код создал контекст для использования для изменения документа кода до создания.</param>
        <summary>Рекомендуется реализовать, чтобы изменить Code Document Object Model до процесса создания контракта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.ServiceModel.Description.ServiceContractGenerationContext?displayProperty=nameWithType>, чтобы изменить контракт, операции или <xref:System.ServiceModel.Description.ServiceContractGenerator?displayProperty=nameWithType> до создания кода.  
  
   
  
## Examples  
 В следующем примере показано, как добавлять элемент <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> к свойству <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A?displayProperty=nameWithType> во время вызова <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A>.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 В следующем примере кода показана реализация <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%2A>, где добавляются примечания к коду, созданному для контракта службы.  
  
 [!code-csharp[C_CustomWSDLExtensions#12](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#12)]  
  
 В следующем примере кода показаны созданные примечания к контракту службы.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
