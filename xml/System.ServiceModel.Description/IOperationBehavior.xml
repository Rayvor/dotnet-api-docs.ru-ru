<Type Name="IOperationBehavior" FullName="System.ServiceModel.Description.IOperationBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e75151f9157f01afe34e2b54b67822ca0971ae7e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75063868" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationBehavior" />
  <TypeSignature Language="F#" Value="type IOperationBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f55c0-101">Реализует методы, которые могут использоваться для поведения во время выполнения для операции в службе или клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="f55c0-101">Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f55c0-102">Реализуйте интерфейс <xref:System.ServiceModel.Description.IOperationBehavior> для изменения, проверки или расширения некоторого аспекта выполнения для всей операции на уровне клиентских приложений или служб.</span><span class="sxs-lookup"><span data-stu-id="f55c0-102">Implement the <xref:System.ServiceModel.Description.IOperationBehavior> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="f55c0-103">Метод <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> используется для предоставления элементов привязки с пользовательскими данными в среде выполнения для разрешения привязок для поддержки настраиваемых поведений.</span><span class="sxs-lookup"><span data-stu-id="f55c0-103">Use the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="f55c0-104">Метод <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> используется для изменения, проверки или вставки расширений в диспетчер клиента в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="f55c0-104">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a client dispatcher in a client application.</span></span>  
  
-   <span data-ttu-id="f55c0-105">Метод <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> используется для изменения, проверки или вставки расширений в выполнение всей операции в службе.</span><span class="sxs-lookup"><span data-stu-id="f55c0-105">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to operation-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="f55c0-106">Можно использовать метод <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A>, чтобы подтвердить соответствие <xref:System.ServiceModel.Description.OperationDescription> конкретным требованиям.</span><span class="sxs-lookup"><span data-stu-id="f55c0-106">Use the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.OperationDescription> meets specific requirements.</span></span> <span data-ttu-id="f55c0-107">Метод может использоваться для проверки включения определенных параметров конфигурации для операции, поддержки конкретных возможностей и соответствия другим требованиям.</span><span class="sxs-lookup"><span data-stu-id="f55c0-107">This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="f55c0-108"><xref:System.ServiceModel.Description.IOperationBehavior> объекты могут использовать любой из этих методов, но часто имеет смысл только один из них. в таких случаях неиспользуемые методы могут возвращать, не выполняя никаких действий.</span><span class="sxs-lookup"><span data-stu-id="f55c0-108"><xref:System.ServiceModel.Description.IOperationBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f55c0-109">Все методы <xref:System.ServiceModel.Description.IOperationBehavior> передают в качестве параметра объект <xref:System.ServiceModel.Description.OperationDescription>.</span><span class="sxs-lookup"><span data-stu-id="f55c0-109">All of the <xref:System.ServiceModel.Description.IOperationBehavior> methods pass an <xref:System.ServiceModel.Description.OperationDescription> object as a parameter.</span></span> <span data-ttu-id="f55c0-110">Данный параметр используется только для изучения; при изменении объекта <xref:System.ServiceModel.Description.OperationDescription> поведение выполнения не определено.</span><span class="sxs-lookup"><span data-stu-id="f55c0-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.OperationDescription> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="f55c0-111">Объекты <xref:System.ServiceModel.Description.IOperationBehavior> обычно используются для доступа к различным свойствам объекта <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> в службе и свойствам объекта <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> в приложении клиента.</span><span class="sxs-lookup"><span data-stu-id="f55c0-111"><xref:System.ServiceModel.Description.IOperationBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> object in a service application and the <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> object in a client application.</span></span>  
  
 <span data-ttu-id="f55c0-112">Обычно разработчик сначала проверяет точки расширения, чтобы определить какая настройка подходит для приложения, а затем реализует эту настройку в соответствующей области.</span><span class="sxs-lookup"><span data-stu-id="f55c0-112">Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</span></span> <span data-ttu-id="f55c0-113">Например, объекты <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> могут выполнять настройки для всех сообщений во всей службе, а объекты <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> могут выполнять настройки для всех сообщений определенного контракта и т. д.</span><span class="sxs-lookup"><span data-stu-id="f55c0-113">For example, <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> objects can insert customizations for all messages in an entire service and <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> objects can insert customizations for all messages across a specific contract, and so on.</span></span> <span data-ttu-id="f55c0-114">Описание различных доступных свойств и настроек см. в разделе [Расширение ServiceHost и уровня модели службы](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span><span class="sxs-lookup"><span data-stu-id="f55c0-114">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
 <span data-ttu-id="f55c0-115">После принятия решения по настройке (а также интерфейса настройки, реализованного при необходимости), если <xref:System.ServiceModel.Description.IOperationBehavior> является соответствующей областью настройки, то настройка должна быть вставлена в среду выполнения Windows Communication Foundation (WCF) путем реализации <xref:System.ServiceModel.Description.IOperationBehavior> и добавления поведения операции в среду выполнения.</span><span class="sxs-lookup"><span data-stu-id="f55c0-115">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IOperationBehavior> is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IOperationBehavior> and adding the operation behavior to the runtime.</span></span>  
  
 <span data-ttu-id="f55c0-116">Существует два способа добавления <xref:System.ServiceModel.Description.IOperationBehavior> в среду выполнения:</span><span class="sxs-lookup"><span data-stu-id="f55c0-116">There are two ways to add the <xref:System.ServiceModel.Description.IOperationBehavior> to the runtime:</span></span>  
  
-   <span data-ttu-id="f55c0-117">Программно добавить пользовательское поведение операции в свойство <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> перед открытием узла службы (в службе) или фабрики канала (в клиентском приложении).</span><span class="sxs-lookup"><span data-stu-id="f55c0-117">Programmatically add the custom operation behavior to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="f55c0-118">Добавить поведение с помощью пользовательского атрибута.</span><span class="sxs-lookup"><span data-stu-id="f55c0-118">Add the behavior using a custom attribute.</span></span>  
  
 <span data-ttu-id="f55c0-119">Чтобы выполнить задачу настройки службы, для которой она предназначена, необходимо добавить объект <xref:System.ServiceModel.Description.IOperationBehavior> в свойство <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> перед построением службы среды выполнения, что происходит, когда метод <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> вызывается на объекте <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f55c0-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f55c0-120">Чтобы выполнить задачу настройки клиента, следует добавить объект <xref:System.ServiceModel.Description.IOperationBehavior> в свойство <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> перед вызовом метода <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> или метода <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> на <xref:System.ServiceModel.ChannelFactory%601>.</span><span class="sxs-lookup"><span data-stu-id="f55c0-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
 <span data-ttu-id="f55c0-121">Хотя поведение операции предназначено для обеспечения простого доступа к среде выполнения в области отдельной операции, можно получить доступ к среде выполнения в большей области, обратившись к родительскому объекту среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="f55c0-121">Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f55c0-122">В следующем примере кода показана реализация интерфейса <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType>, который осуществляет запись в консоль при вызове инспектора в операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-122">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="f55c0-123">Эта настройка может быть присоединена только к объекту <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> или объекту <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>, и поэтому обычно вставляется поведением операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-123">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="f55c0-124">В следующем примере показано, как поведение операции присоединяет инспектор параметров к среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="f55c0-124">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iOperationBehavior.AddBindingParameters (operationDescription, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="f55c0-125">Проверяемая операция.</span><span class="sxs-lookup"><span data-stu-id="f55c0-125">The operation being examined.</span></span> <span data-ttu-id="f55c0-126">Использовать только для проверки.</span><span class="sxs-lookup"><span data-stu-id="f55c0-126">Use for examination only.</span></span> <span data-ttu-id="f55c0-127">Если изменяется описание операции, то результаты будут не определены.</span><span class="sxs-lookup"><span data-stu-id="f55c0-127">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="f55c0-128">Коллекция объектов, необходимых элементам привязки для поддержки поведения.</span><span class="sxs-lookup"><span data-stu-id="f55c0-128">The collection of objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="f55c0-129">Реализуйте для передачи данных привязкам во время выполнения в целях поддержки пользовательских режимов.</span><span class="sxs-lookup"><span data-stu-id="f55c0-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f55c0-130">Реализуйте метод <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A>, чтобы предоставить элементам привязки дополнительные объекты, которые им необходимы для поддержки поведения операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-130">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the operation behavior.</span></span> <span data-ttu-id="f55c0-131">При добавлении параметров привязки привязка может размещать и обрабатывать данные объекты во время создания прослушивателя канала или фабрики канала.</span><span class="sxs-lookup"><span data-stu-id="f55c0-131">When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="f55c0-132">Как правило, метод <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> реализуется для передачи сведений об операции в пользовательский элемент привязки для правильного построения вспомогательного канала.</span><span class="sxs-lookup"><span data-stu-id="f55c0-132">Typically, you implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="f55c0-133">Не возвращает значение, если изменения не требуются.</span><span class="sxs-lookup"><span data-stu-id="f55c0-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.ClientOperation clientOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.ClientOperation clientOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::ClientOperation ^ clientOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="iOperationBehavior.ApplyClientBehavior (operationDescription, clientOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="clientOperation" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="f55c0-134">Проверяемая операция.</span><span class="sxs-lookup"><span data-stu-id="f55c0-134">The operation being examined.</span></span> <span data-ttu-id="f55c0-135">Использовать только для проверки.</span><span class="sxs-lookup"><span data-stu-id="f55c0-135">Use for examination only.</span></span> <span data-ttu-id="f55c0-136">Если изменяется описание операции, то результаты будут не определены.</span><span class="sxs-lookup"><span data-stu-id="f55c0-136">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="clientOperation"><span data-ttu-id="f55c0-137">Объект времени выполнения, предоставляющий свойства настройки для операции, описываемой объектом <paramref name="operationDescription" />.</span><span class="sxs-lookup"><span data-stu-id="f55c0-137">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="f55c0-138">Реализует изменение или расширение клиента во всей операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-138">Implements a modification or extension of the client across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f55c0-139">Метод <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> реализуется для просмотра, изменения или добавления пользовательского расширения в клиентскую среду выполнения для всех сообщений, используемых с конкретной операцией.</span><span class="sxs-lookup"><span data-stu-id="f55c0-139">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</span></span> <span data-ttu-id="f55c0-140">Сведения о том, какие настройки можно выполнить с объектом клиентской среды выполнения, см. в разделах <xref:System.ServiceModel.Dispatcher.ClientRuntime> и <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="f55c0-140">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="f55c0-141">Рекомендуется, чтобы метод <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> вызвал исключение <xref:System.NotImplementedException>, если поведение предназначено для использования только в приложении службы.</span><span class="sxs-lookup"><span data-stu-id="f55c0-141">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f55c0-142">В следующем примере кода показана реализация интерфейса <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType>, который осуществляет запись в консоль при вызове инспектора в операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-142">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="f55c0-143">Эта настройка может быть присоединена только к объекту <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> или объекту <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>, и поэтому обычно вставляется поведением операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-143">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="f55c0-144">В следующем примере показано, как поведение операции присоединяет инспектор параметров к среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="f55c0-144">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatchOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="iOperationBehavior.ApplyDispatchBehavior (operationDescription, dispatchOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatchOperation" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="f55c0-145">Проверяемая операция.</span><span class="sxs-lookup"><span data-stu-id="f55c0-145">The operation being examined.</span></span> <span data-ttu-id="f55c0-146">Использовать только для проверки.</span><span class="sxs-lookup"><span data-stu-id="f55c0-146">Use for examination only.</span></span> <span data-ttu-id="f55c0-147">Если изменяется описание операции, то результаты будут не определены.</span><span class="sxs-lookup"><span data-stu-id="f55c0-147">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="dispatchOperation"><span data-ttu-id="f55c0-148">Объект времени выполнения, предоставляющий свойства настройки для операции, описываемой объектом <paramref name="operationDescription" />.</span><span class="sxs-lookup"><span data-stu-id="f55c0-148">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="f55c0-149">Реализует изменение или расширение службы во всей операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-149">Implements a modification or extension of the service across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f55c0-150">Метод <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> реализуется для просмотра, изменения или расширения среды выполнения службы для всех сообщений или для конкретной операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-150">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for a specific operation.</span></span> <span data-ttu-id="f55c0-151">Сведения о том, какие настройки можно выполнить в приложении службы, см. в разделах <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> и <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f55c0-151">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f55c0-152">Рекомендуется, чтобы метод <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> вызвал исключение <xref:System.NotImplementedException>, если поведение предназначено для использования только в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="f55c0-152">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f55c0-153">В следующем примере кода показана реализация интерфейса <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType>, который осуществляет запись в консоль при вызове инспектора в операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-153">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="f55c0-154">Эта настройка может быть присоединена только к объекту <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> или объекту <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>, и поэтому обычно вставляется поведением операции.</span><span class="sxs-lookup"><span data-stu-id="f55c0-154">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="f55c0-155">В следующем примере показано, как поведение операции присоединяет инспектор параметров к среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="f55c0-155">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="iOperationBehavior.Validate operationDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="f55c0-156">Проверяемая операция.</span><span class="sxs-lookup"><span data-stu-id="f55c0-156">The operation being examined.</span></span> <span data-ttu-id="f55c0-157">Использовать только для проверки.</span><span class="sxs-lookup"><span data-stu-id="f55c0-157">Use for examination only.</span></span> <span data-ttu-id="f55c0-158">Если изменяется описание операции, то результаты будут не определены.</span><span class="sxs-lookup"><span data-stu-id="f55c0-158">If the operation description is modified, the results are undefined.</span></span></param>
        <summary><span data-ttu-id="f55c0-159">Реализуйте, чтобы подтвердить соответствие операции определенным критериям.</span><span class="sxs-lookup"><span data-stu-id="f55c0-159">Implement to confirm that the operation meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f55c0-160">Рекомендуется реализовать метод <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A>, чтобы изучить структуру для подтверждения любого набора критериев.</span><span class="sxs-lookup"><span data-stu-id="f55c0-160">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="f55c0-161">Для использования этого метода необязательно выполнять какие-либо настройки в <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> или <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A>.</span><span class="sxs-lookup"><span data-stu-id="f55c0-161">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="f55c0-162">Если операция прошла проверку, выполняется возврат; в противном случае вызывается исключение.</span><span class="sxs-lookup"><span data-stu-id="f55c0-162">If the operation passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="f55c0-163">Например, метод <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> можно использовать, чтобы гарантировать что операция авторизована.</span><span class="sxs-lookup"><span data-stu-id="f55c0-163">For example, the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method can be use to ensure that an operation is authorized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
