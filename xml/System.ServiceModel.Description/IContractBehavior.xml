<Type Name="IContractBehavior" FullName="System.ServiceModel.Description.IContractBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee1ce96eb3670550d52d98057544bd923680f6e7" /><Meta Name="ms.sourcegitcommit" Value="2b78f05b0c6fa92adaf5e1dfe5a50388f952efe7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/02/2019" /><Meta Name="ms.locfileid" Value="71808933" /></Metadata><TypeSignature Language="C#" Value="public interface IContractBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContractBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IContractBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContractBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContractBehavior" />
  <TypeSignature Language="F#" Value="type IContractBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="484fc-101">Реализует методы, которые могут использоваться для расширения поведения времени выполнения для контракта приложения службы или клиентского приложения.</span><span class="sxs-lookup"><span data-stu-id="484fc-101">Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="484fc-102">Реализует интерфейс <xref:System.ServiceModel.Description.IContractBehavior> для изменения, проверки или расширения некоторых аспектов выполнения для всего контракта на уровне приложения.</span><span class="sxs-lookup"><span data-stu-id="484fc-102">Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.</span></span> <span data-ttu-id="484fc-103">В отличие от объектов <xref:System.ServiceModel.Description.IServiceBehavior> и <xref:System.ServiceModel.Description.IEndpointBehavior>, объекты <xref:System.ServiceModel.Description.IContractBehavior> не могут добавляться в среду выполнения с помощью файла конфигурации приложения; они могут добавляться только программным способом или с использованием атрибута.</span><span class="sxs-lookup"><span data-stu-id="484fc-103">Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.</span></span>  
  
 <span data-ttu-id="484fc-104">Дополнительные сведения о выборе между службами, конечной точкой и поведением контрактов см. [в разделе Настройка и расширение среды выполнения с помощью поведений](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="484fc-104">For more information about choosing between service, endpoint, and contract behaviors, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
-   <span data-ttu-id="484fc-105">Метод <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> используется для предоставления элементов привязки с пользовательскими данными для поддержки поведения.</span><span class="sxs-lookup"><span data-stu-id="484fc-105">Use the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with custom data to support the behavior.</span></span>  
  
-   <span data-ttu-id="484fc-106">Метод <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> используется для изменения, проверки или вставки расширений в контракт в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="484fc-106">Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a contract in a client application.</span></span>  
  
-   <span data-ttu-id="484fc-107">Метод <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> используется для изменения, проверки или вставки расширений в контракт в приложении службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-107">Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to a contract in a service application.</span></span>  
  
-   <span data-ttu-id="484fc-108">Метод <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> используется для обеспечения поддержки определенных возможностей контрактом.</span><span class="sxs-lookup"><span data-stu-id="484fc-108">Use the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to ensure that a contract can support a particular feature.</span></span>  
  
 <span data-ttu-id="484fc-109">Объекты <xref:System.ServiceModel.Description.IContractBehavior> могут использовать любые из этих методов, но часто важен только один; в таких случаях неиспользуемые методы могут не возвращать какого-либо значения.</span><span class="sxs-lookup"><span data-stu-id="484fc-109"><xref:System.ServiceModel.Description.IContractBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="484fc-110">Все методы <xref:System.ServiceModel.Description.IContractBehavior> в качестве параметров передают <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> и <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-110">All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> as parameters.</span></span> <span data-ttu-id="484fc-111">Эти параметры нужны для проверки; если производится изменение объектов, поведение выполнения является неопределенным.</span><span class="sxs-lookup"><span data-stu-id="484fc-111">These parameters are for examination; if you modify the objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="484fc-112">Типы <xref:System.ServiceModel.Description.IContractBehavior> могут использоваться в службе или в клиенте, либо в них обоих.</span><span class="sxs-lookup"><span data-stu-id="484fc-112"><xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both.</span></span> <span data-ttu-id="484fc-113">Чтобы выполнить задачу настройки для службы, объект <xref:System.ServiceModel.Description.IContractBehavior> должен быть добавлен к свойству <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> до построения среды выполнения службы, которое происходит, когда вызывается метод <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> в объекте <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-113">To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="484fc-114">Это можно сделать двумя способами.</span><span class="sxs-lookup"><span data-stu-id="484fc-114">There are two ways to do this.</span></span>  
  
 <span data-ttu-id="484fc-115">Первым способом является программное добавление пользовательского поведения контракта в свойство <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> перед вызовом метода <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> в объекте <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-115">The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="484fc-116">В этом случае поведение применяется для всех сообщений, проходящих по этому контракту в любой конечной точке.</span><span class="sxs-lookup"><span data-stu-id="484fc-116">When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="484fc-117">Поведение применяется ко всем контрактам одинакового типа.</span><span class="sxs-lookup"><span data-stu-id="484fc-117">The behavior is applied to all contracts of the same type.</span></span> <span data-ttu-id="484fc-118">Например, если программно добавить один тип контракта к нескольким конечным точкам, поведение изменит все конечные точки, относящиеся к одному объекту контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-118">For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.</span></span>  
  
 <span data-ttu-id="484fc-119">Вторым методом является создание пользовательского атрибута, который реализует <xref:System.ServiceModel.Description.IContractBehavior>, и применение его к следующим объектам:</span><span class="sxs-lookup"><span data-stu-id="484fc-119">The second method is to create a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> and apply that to:</span></span>  
  
-   <span data-ttu-id="484fc-120">Интерфейс контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-120">A contract interface.</span></span> <span data-ttu-id="484fc-121">В этом случае поведение применяется ко всем контрактам этого типа в любой конечной точке.</span><span class="sxs-lookup"><span data-stu-id="484fc-121">In this case, the behavior is applied to all contracts of that type in any endpoint.</span></span>  
  
-   <span data-ttu-id="484fc-122">Класс службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-122">A service class.</span></span>  <span data-ttu-id="484fc-123">В этом случае поведение применяется ко всем конечным точкам, независимо от контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-123">In this case, the behavior is applied to all endpoints regardless of contract.</span></span>  
  
-   <span data-ttu-id="484fc-124">Класс обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="484fc-124">A callback class.</span></span>  <span data-ttu-id="484fc-125">В этом случае поведение применяется к конечной точке дуплексного клиента.</span><span class="sxs-lookup"><span data-stu-id="484fc-125">In this case, the behavior is applied to the duplex client's endpoint.</span></span>  
  
 <span data-ttu-id="484fc-126">Поведение во втором подходе немного отличается, если пользовательский атрибут также реализует <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-126">The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="484fc-127">В этом случае поведение выглядит следующим образом.</span><span class="sxs-lookup"><span data-stu-id="484fc-127">In this case, the behavior is as follows:</span></span>  
  
-   <span data-ttu-id="484fc-128">Интерфейс контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-128">A contract interface.</span></span> <span data-ttu-id="484fc-129">В этом случае поведение применяется ко всем контрактам этого типа в любой конечной точке, а Windows Communication Foundation (WCF) игнорирует значение свойства <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-129">In this case, the behavior is applied to all contracts of that type in any endpoint and Windows Communication Foundation (WCF) ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="484fc-130">Класс службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-130">A service class.</span></span>  <span data-ttu-id="484fc-131">В этом случае поведение применяется только к конечным точкам, контракт которых имеет значение, равное значению свойства <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-131">In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="484fc-132">Класс обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="484fc-132">A callback class.</span></span>  <span data-ttu-id="484fc-133">В этом случае поведение применяется к конечной точке дуплексного клиента, а WCF игнорирует значение свойства <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-133">In this case, the behavior is applied to the duplex client's endpoint and WCF ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="484fc-134">Чтобы выполнить задачу настройки на клиенте, для которого она предназначена, объект <xref:System.ServiceModel.Description.IContractBehavior> должен быть добавлен к свойству <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> до построения клиентской среды выполнения, которое происходит при вызове <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-134">To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> is called.</span></span> <span data-ttu-id="484fc-135">Это можно сделать двумя способами.</span><span class="sxs-lookup"><span data-stu-id="484fc-135">There are two ways to do this:</span></span>  
  
-   <span data-ttu-id="484fc-136">Программным способом добавить пользовательское поведение контракта в свойство <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> до вызова <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="484fc-136">Programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> is called.</span></span>  
  
-   <span data-ttu-id="484fc-137">Создать пользовательский атрибут, который также реализует <xref:System.ServiceModel.Description.IContractBehavior>.</span><span class="sxs-lookup"><span data-stu-id="484fc-137">Create a custom attribute that also implements <xref:System.ServiceModel.Description.IContractBehavior>.</span></span>  
  
 <span data-ttu-id="484fc-138">Дополнительные сведения о программном добавлении типов <xref:System.ServiceModel.Description.IContractBehavior> в клиент или приложение службы см. в разделе [Настройка и расширение среды выполнения с помощью поведений](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="484fc-138">For more information on programmatically adding <xref:System.ServiceModel.Description.IContractBehavior> types to either the client or service application, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="484fc-139">В следующем примере кода предполагается наличие пользовательской реализации <xref:System.ServiceModel.Dispatcher.IInstanceProvider> с именем `ObjectProviderBehavior`, которая обеспечивает «одноэлементное» поведение; метод всегда возвращает один и тот же экземпляр службы и не использует его повторно.</span><span class="sxs-lookup"><span data-stu-id="484fc-139">The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 <span data-ttu-id="484fc-140">Чтобы вставить настройку поставщика экземпляров, в этом примере показано, как реализовать пользовательский атрибут (`SingletonBehaviorAttribute`), который реализует <xref:System.ServiceModel.Description.IContractBehavior> для вставки пользовательского поставщика экземпляров службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-140">To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="484fc-141">В нем также реализуется интерфейс <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, который связывает его использование с контрактом `ISampleService`.</span><span class="sxs-lookup"><span data-stu-id="484fc-141">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iContractBehavior.AddBindingParameters (contractDescription, endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="484fc-142">Изменяемое описание контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-142">The contract description to modify.</span></span></param>
        <param name="endpoint"><span data-ttu-id="484fc-143">Изменяемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="484fc-143">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="484fc-144">Объекты, необходимые элементам привязки для поддержки этого режима.</span><span class="sxs-lookup"><span data-stu-id="484fc-144">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="484fc-145">Настраивает элементы привязки для поддержки поведения контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-145">Configures any binding elements to support the contract behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="484fc-146">Реализует метод <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> для предоставления элементам привязки дополнительных объектов, которые им необходимы для поддержки поведения контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-146">Implement the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the contract behavior.</span></span>  
  
 <span data-ttu-id="484fc-147">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-147">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="iContractBehavior.ApplyClientBehavior (contractDescription, endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="484fc-148">Описание контракта, для которого предназначено расширение.</span><span class="sxs-lookup"><span data-stu-id="484fc-148">The contract description for which the extension is intended.</span></span></param>
        <param name="endpoint"><span data-ttu-id="484fc-149">Конечная точка.</span><span class="sxs-lookup"><span data-stu-id="484fc-149">The endpoint.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="484fc-150">Среда выполнения клиента.</span><span class="sxs-lookup"><span data-stu-id="484fc-150">The client runtime.</span></span></param>
        <summary><span data-ttu-id="484fc-151">Реализует изменение или расширение клиента для всего контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-151">Implements a modification or extension of the client across a contract.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="484fc-152">Метод <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> реализуется для просмотра, изменения или добавления пользовательских расширений в клиентскую среду выполнения для всех сообщений или для одной конкретной операции.</span><span class="sxs-lookup"><span data-stu-id="484fc-152">Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.</span></span> <span data-ttu-id="484fc-153">Сведения о том, какие настройки можно выполнить с объектом клиентской среды выполнения, см. в разделах <xref:System.ServiceModel.Dispatcher.ClientRuntime> и <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="484fc-153">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="484fc-154">Метод <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> может вызывать исключение <xref:System.NotImplementedException>, если поведение предназначено для использования только в приложении службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-154">The <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a service application.</span></span>  
  
 <span data-ttu-id="484fc-155">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-155">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 <span data-ttu-id="484fc-156">Обратите внимание, что в описании могут быть две операции с одинаковым именем (одна в каждом направлении), поэтому если нужно выполнить перебор операций, в которых контракт является дуплексным, необходимо сопоставить направление сообщений между средой <xref:System.ServiceModel.Dispatcher.ClientRuntime> конечной точки и средой выполнения, возвращаемой свойством <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="484fc-156">Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.ClientRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property.</span></span>  
  
 <span data-ttu-id="484fc-157">Поскольку другие поведения, возможно, уже добавили или удалили некоторые операции из среды выполнения, нет никакой гарантии, что в описании имеется такое же количество операций, что и количество объектов <xref:System.ServiceModel.Dispatcher.ClientOperation> в свойстве <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>.</span><span class="sxs-lookup"><span data-stu-id="484fc-157">Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.ClientOperation> objects in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="484fc-158">В следующем примере кода предполагается наличие пользовательской реализации <xref:System.ServiceModel.Dispatcher.IInstanceProvider> с именем `ObjectProviderBehavior`, которая обеспечивает «одноэлементное» поведение; метод всегда возвращает один и тот же экземпляр службы и не использует его повторно.</span><span class="sxs-lookup"><span data-stu-id="484fc-158">The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 <span data-ttu-id="484fc-159">Чтобы вставить настройку поставщика экземпляров, в этом примере показано, как реализовать пользовательский атрибут (`SingletonBehaviorAttribute`), который реализует <xref:System.ServiceModel.Description.IContractBehavior> для вставки пользовательского поставщика экземпляров службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-159">To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="484fc-160">В нем также реализуется интерфейс <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, который связывает его использование с контрактом `ISampleService`.</span><span class="sxs-lookup"><span data-stu-id="484fc-160">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::DispatchRuntime ^ dispatchRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.DispatchRuntime -&gt; unit" Usage="iContractBehavior.ApplyDispatchBehavior (contractDescription, endpoint, dispatchRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="dispatchRuntime" Type="System.ServiceModel.Dispatcher.DispatchRuntime" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="484fc-161">Изменяемое описание контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-161">The contract description to be modified.</span></span></param>
        <param name="endpoint"><span data-ttu-id="484fc-162">Конечная точка, предоставляющая контракт.</span><span class="sxs-lookup"><span data-stu-id="484fc-162">The endpoint that exposes the contract.</span></span></param>
        <param name="dispatchRuntime"><span data-ttu-id="484fc-163">Среда выполнения распределения, которая контролирует выполнение службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-163">The dispatch runtime that controls service execution.</span></span></param>
        <summary><span data-ttu-id="484fc-164">Реализует изменение или расширение клиента для всего контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-164">Implements a modification or extension of the client across a contract.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="484fc-165">Метод <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> реализуется для просмотра, изменения или добавления пользовательских расширений в среду выполнения служб для всех сообщений в конкретном контракте или для одной конкретной операции в этом контракте.</span><span class="sxs-lookup"><span data-stu-id="484fc-165">Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.</span></span> <span data-ttu-id="484fc-166">Сведения о том, какие настройки можно выполнить в приложении службы, см. в разделах <xref:System.ServiceModel.Dispatcher.DispatchRuntime> и <xref:System.ServiceModel.Dispatcher.DispatchOperation>.</span><span class="sxs-lookup"><span data-stu-id="484fc-166">For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>.</span></span>  
  
 <span data-ttu-id="484fc-167">Метод <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> может вызывать исключение <xref:System.NotImplementedException>, если поведение предназначено для использования только в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="484fc-167">The <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
 <span data-ttu-id="484fc-168">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-168">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 <span data-ttu-id="484fc-169">Обратите внимание, что в описании могут быть две операции с одинаковым именем (одна в каждом направлении), поэтому если нужно выполнить перебор операций, в которых контракт является дуплексным, необходимо сопоставить направление сообщений между средой <xref:System.ServiceModel.Dispatcher.DispatchRuntime> конечной точки и средой выполнения, возвращаемой свойством <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="484fc-169">Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> property.</span></span>  
  
 <span data-ttu-id="484fc-170">Кроме того, поскольку другие поведения, возможно, уже добавили или удалили некоторые операции из среды выполнения, нет никакой гарантии, что в описании имеется такое же количество операций, что и количество объектов <xref:System.ServiceModel.Dispatcher.DispatchOperation> в свойстве <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A>.</span><span class="sxs-lookup"><span data-stu-id="484fc-170">In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="484fc-171">В следующем примере кода предполагается наличие пользовательской реализации <xref:System.ServiceModel.Dispatcher.IInstanceProvider> с именем `ObjectProviderBehavior`, которая обеспечивает «одноэлементное» поведение; метод всегда возвращает один и тот же экземпляр службы и не использует его повторно.</span><span class="sxs-lookup"><span data-stu-id="484fc-171">The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 <span data-ttu-id="484fc-172">Чтобы вставить настройку поставщика экземпляров, в этом примере показано, как реализовать пользовательский атрибут (`SingletonBehaviorAttribute`), который реализует <xref:System.ServiceModel.Description.IContractBehavior> для вставки пользовательского поставщика экземпляров службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-172">To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="484fc-173">В нем также реализуется интерфейс <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, который связывает его использование с контрактом `ISampleService`.</span><span class="sxs-lookup"><span data-stu-id="484fc-173">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="iContractBehavior.Validate (contractDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="484fc-174">Контракт, который необходимо проверить.</span><span class="sxs-lookup"><span data-stu-id="484fc-174">The contract to validate.</span></span></param>
        <param name="endpoint"><span data-ttu-id="484fc-175">Проверяемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="484fc-175">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="484fc-176">Реализуется для подтверждения того, что контракт и конечная точка могут поддерживать поведение контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-176">Implement to confirm that the contract and endpoint can support the contract behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="484fc-177">Метод <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> реализуется для подтверждения того, что описание контракта достаточно для поддержки пользовательского поведения контракта.</span><span class="sxs-lookup"><span data-stu-id="484fc-177">Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior.</span></span> <span data-ttu-id="484fc-178">Реализации могут проверять описание и либо создать значение, либо не возвратить никакого значения.</span><span class="sxs-lookup"><span data-stu-id="484fc-178">Implementations can inspect the description and either throw or return no value.</span></span>  
  
 <span data-ttu-id="484fc-179">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</span><span class="sxs-lookup"><span data-stu-id="484fc-179">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
