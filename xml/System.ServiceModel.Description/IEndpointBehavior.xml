<Type Name="IEndpointBehavior" FullName="System.ServiceModel.Description.IEndpointBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27ddbb56d79419428abfb7efa275855acbbb7722" /><Meta Name="ms.sourcegitcommit" Value="2b78f05b0c6fa92adaf5e1dfe5a50388f952efe7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/02/2019" /><Meta Name="ms.locfileid" Value="71808927" /></Metadata><TypeSignature Language="C#" Value="public interface IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type IEndpointBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1d0b9-101">Реализует методы, которые могут использоваться для расширения поведения времени выполнения для конечной точки службы или клиентского приложения.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-101">Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d0b9-102">Реализует интерфейс <xref:System.ServiceModel.Description.IEndpointBehavior> для изменения, проверки или расширения некоторого аспекта выполнения для всей конечной точки на уровне клиентских приложений или приложений службы.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-102">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to modify, examine, or extend some aspect of endpoint-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="1d0b9-103">Метод <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> используется для предоставления элементов привязки с пользовательскими данными в среде выполнения для разрешения привязок для поддержки настраиваемых поведений.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-103">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="1d0b9-104">Метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> используется для изменения, проверки или вставки оснасток расширения в конечную точку в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-104">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to an endpoint in a client application.</span></span>  
  
-   <span data-ttu-id="1d0b9-105">Метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> используется для изменения, проверки или вставки оснасток расширения в выполнение всей конечной точки в приложении службы.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-105">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to endpoint-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="1d0b9-106">Можно использовать метод <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A>, чтобы подтвердить соответствие <xref:System.ServiceModel.Description.ServiceEndpoint> конкретным требованиям.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-106">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.ServiceEndpoint> meets specific requirements.</span></span> <span data-ttu-id="1d0b9-107">Метод может использоваться для проверки включения определенных настроек конфигурации конечной точки, поддержки конкретных функциональных возможностей и соответствия другим требованиям.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-107">This can be used to ensure that an endpoint has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="1d0b9-108">Объекты <xref:System.ServiceModel.Description.IEndpointBehavior> могут использовать любые из этих методов, но часто важен только один; в таких случаях неиспользуемые методы могут возвращаться, не выполняя никаких действий.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-108"><xref:System.ServiceModel.Description.IEndpointBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d0b9-109">Все методы <xref:System.ServiceModel.Description.IEndpointBehavior> передают объект <xref:System.ServiceModel.Description.ServiceEndpoint> как параметр.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-109">All of the <xref:System.ServiceModel.Description.IEndpointBehavior> methods pass a <xref:System.ServiceModel.Description.ServiceEndpoint> object as a parameter.</span></span> <span data-ttu-id="1d0b9-110">Данный параметр используется только для изучения; при изменении объекта <xref:System.ServiceModel.Description.ServiceEndpoint> поведение выполнения не определено.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.ServiceEndpoint> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="1d0b9-111">Объекты <xref:System.ServiceModel.Description.IEndpointBehavior> обычно используются для доступа к различным свойствам объектов <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType> и <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> в приложении службы и  <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> и <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-111"><xref:System.ServiceModel.Description.IEndpointBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>, and <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> objects in a service application and the <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> in a client application.</span></span> <span data-ttu-id="1d0b9-112">Кроме того, можно получить доступ к свойствам дуплексных клиентов и служб с помощью свойств <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> и <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> соответственно.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-112">In addition, you can access the properties of duplex clients and services using the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> properties, respectively.</span></span>  
  
 <span data-ttu-id="1d0b9-113">Описание различных доступных свойств и настроек см. в разделе [Расширение ServiceHost и уровня модели службы](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span><span class="sxs-lookup"><span data-stu-id="1d0b9-113">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
 <span data-ttu-id="1d0b9-114">После принятия решения по настройке (и интерфейса настройки, реализованного при необходимости) и <xref:System.ServiceModel.Description.IEndpointBehavior> является соответствующей областью настройки, настройка должна быть вставлена в Windows Communication Foundation (WCF). среда выполнения путем реализации <xref:System.ServiceModel.Description.IEndpointBehavior> и добавления поведения конечной точки в среду выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-114">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IEndpointBehavior> has been decided is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IEndpointBehavior> and adding the endpoint behavior to the runtime.</span></span>  
  
 <span data-ttu-id="1d0b9-115">Существует два способа добавления поведений в среду выполнения:</span><span class="sxs-lookup"><span data-stu-id="1d0b9-115">There are two ways to add the behavior to the runtime:</span></span>  
  
-   <span data-ttu-id="1d0b9-116">Программно добавить настраиваемые поведения конечной точки в свойство <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> перед открытием узла службы (в приложении службы) или заводской настройки канала (в клиентском приложении).</span><span class="sxs-lookup"><span data-stu-id="1d0b9-116">Programmatically add the custom endpoint behavior to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="1d0b9-117">Настроить поведение с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-117">Configure the behavior using an application configuration file.</span></span> <span data-ttu-id="1d0b9-118">Дополнительные сведения см. в разделе [&lt;behaviorExtensions @ no__t-2](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md).</span><span class="sxs-lookup"><span data-stu-id="1d0b9-118">For details, see [&lt;behaviorExtensions&gt;](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md).</span></span>  
  
 <span data-ttu-id="1d0b9-119">Чтобы выполнить задачу настройки службы, для которой она предназначена, необходимо добавить объект <xref:System.ServiceModel.Description.IEndpointBehavior> в свойство <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> перед построением службы среды выполнения, что происходит, когда метод <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> вызывается на объекте <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1d0b9-120">Чтобы выполнить задачу настройки клиента, следует добавить объект <xref:System.ServiceModel.Description.IEndpointBehavior> в свойство <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> перед вызовом метода <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> или метода <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> на <xref:System.ServiceModel.ChannelFactory%601>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d0b9-121">В следующем примере кода показана реализация поведения конечной точки, которая добавляет объект <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> в приложение службы.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-121">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="1d0b9-122">В данном случае класс `EndpointBehaviorMessageInspector` реализует <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType>, чтобы проверить входящие и исходящие сообщения, интерфейс<xref:System.ServiceModel.Description.IEndpointBehavior> для вставки класса инспектора в систему проверки всех конечных точек, к которым применимы поведения, а также <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, чтобы включить поддержку поведений инспектора сообщений, используя файл конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-122">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="1d0b9-123">Сначала необходимо реализовать инспектор сообщений.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-123">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="1d0b9-124">В следующем примере кода показано использование метода <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> для добавления инспектора сообщений в свойство <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-124">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="1d0b9-125">В следующем примере кода показана реализация <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, чтобы разрешить использование поведения инспектора сообщений из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-125">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="1d0b9-126">Наконец, в следующем файле конфигурации показано, как можно использовать предыдущий пример из конфигурации.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-126">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (endpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iEndpointBehavior.AddBindingParameters (endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1d0b9-127">Изменяемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-127">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="1d0b9-128">Объекты, необходимые элементам привязки для поддержки этого режима.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-128">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="1d0b9-129">Реализуйте для передачи данных привязкам во время выполнения в целях поддержки пользовательских режимов.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d0b9-130">Реализует метод <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> для предоставления элементов привязки с дополнительными объектами, которые им необходимы для поддержки поведения конечной точки.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-130">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the endpoint behavior.</span></span> <span data-ttu-id="1d0b9-131">При добавлении параметров привязки привязка может размещать данные объекты во время создания прослушивателя канала или заводских настроек канала.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-131">When binding parameters are added here the binding can locate these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="1d0b9-132">Как правило, метод <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> реализуется для передачи сведений о конечной точке в настраиваемый элемент привязки для правильного построения вспомогательного канала.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-132">Typically, you implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass information about the endpoint to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="1d0b9-133">Не возвращает значение, если изменения не требуются.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="iEndpointBehavior.ApplyClientBehavior (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1d0b9-134">Настраиваемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-134">The endpoint that is to be customized.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="1d0b9-135">Настраиваемая клиентская среда выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-135">The client runtime to be customized.</span></span></param>
        <summary><span data-ttu-id="1d0b9-136">Реализует изменение или расширение клиента по всей конечной точке.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-136">Implements a modification or extension of the client across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d0b9-137">Метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> реализуется для просмотра, изменения или добавления пользовательских оснасток расширения в клиентскую среду выполнения для всех сообщений, используемых с конечной точкой, или для конкретных операций.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-137">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extension to the client runtime across all messages used with an endpoint or for specific operations.</span></span> <span data-ttu-id="1d0b9-138">Сведения о том, какие настройки можно выполнить с объектом клиентской среды выполнения, см. в разделах <xref:System.ServiceModel.Dispatcher.ClientRuntime> и <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-138">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="1d0b9-139">Рекомендуется, чтобы метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> вызвал исключение <xref:System.NotImplementedException>, если поведение предназначено для использования только в приложении службы.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-139">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
 <span data-ttu-id="1d0b9-140">Поскольку другие поведения, возможно, уже добавили или удалили некоторые операции из среды выполнения, нет никакой гарантии, что в описании имеется такое же количество операций, что и количество объектов <xref:System.ServiceModel.Dispatcher.DispatchOperation> в свойстве <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-140">Because other behaviors may have already added or removed some operations from the runtime there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="iEndpointBehavior.ApplyDispatchBehavior (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1d0b9-141">Конечная точка, предоставляющая контракт.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-141">The endpoint that exposes the contract.</span></span></param>
        <param name="endpointDispatcher"><span data-ttu-id="1d0b9-142">Изменяемый или расширяемый диспетчер конечной точки.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-142">The endpoint dispatcher to be modified or extended.</span></span></param>
        <summary><span data-ttu-id="1d0b9-143">Реализует изменение или расширение службы по всей конечной точке.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-143">Implements a modification or extension of the service across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d0b9-144">Метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> реализуется для просмотра, изменения или расширения среды выполнения службы для всех сообщений или для конкретных операций в конечной точке.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-144">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for specific operations in an endpoint.</span></span> <span data-ttu-id="1d0b9-145">Сведения о том, какие настройки можно выполнить в приложении службы, см. в разделах <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> и <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-145">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1d0b9-146">Рекомендуется, чтобы метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> вызвал исключение <xref:System.NotImplementedException>, если поведение предназначено для использования только в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-146">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
 <span data-ttu-id="1d0b9-147">Следует учесть, что при использовании контракта обратного вызова (один оператор на каждом направлениИ) в описании могут существовать две операции с одним именем.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-147">Note that there can be two operations with the same name in the description when using a callback contract (one operation in each direction).</span></span> <span data-ttu-id="1d0b9-148">При выполнении итерации по операциям необходимо скоординировать направление сообщения между конечной точкой <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> и тем, что возвращает свойство <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-148">If you are iterating through operations, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and what is returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1d0b9-149">Кроме того, поскольку другие поведения, возможно, уже добавили или удалили некоторые операции из среды выполнения, нет никакой гарантии, что в описании имеется такое же количество операций, что и количество объектов <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> в свойстве <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-149">In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d0b9-150">В следующем примере кода показана реализация поведения конечной точки, которая добавляет объект <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> в приложение службы.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-150">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="1d0b9-151">В данном случае класс `EndpointBehaviorMessageInspector` реализует <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType>, чтобы проверить входящие и исходящие сообщения, интерфейс<xref:System.ServiceModel.Description.IEndpointBehavior> для вставки класса инспектора в систему проверки всех конечных точек, к которым применимы поведения, а также <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, чтобы включить поддержку поведений инспектора сообщений, используя файл конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-151">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="1d0b9-152">Сначала необходимо реализовать инспектор сообщений.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-152">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="1d0b9-153">В следующем примере кода показано использование метода <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> для добавления инспектора сообщений в свойство <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-153">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="1d0b9-154">В следующем примере кода показана реализация <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, чтобы разрешить использование поведения инспектора сообщений из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-154">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="1d0b9-155">Наконец, в следующем файле конфигурации показано, как можно использовать предыдущий пример из конфигурации.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-155">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="iEndpointBehavior.Validate endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1d0b9-156">Проверяемая конечная точка.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-156">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="1d0b9-157">Реализуйте для подтверждения соответствия конечной точки намеченным критериям.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-157">Implement to confirm that the endpoint meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d0b9-158">Рекомендуется реализовать метод <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A>, чтобы изучить структуру для подтверждения любого набора критериев.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-158">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="1d0b9-159">Для использования этого метода необязательно выполнять какие-либо настройки в <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> или <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A>.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-159">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="1d0b9-160">Если конечная точка прошла проверки, выполняется возврат; в противном случае вызывается исключение.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-160">If the endpoint passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="1d0b9-161">Например, метод <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> можно использовать для подтверждения того, что все конечные точки используют одобренные корпоративные привязки.</span><span class="sxs-lookup"><span data-stu-id="1d0b9-161">For example, the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method can be use to ensure that all endpoints use an approved corporate binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
