<Type Name="ServiceAuthorizationBehavior" FullName="System.ServiceModel.Description.ServiceAuthorizationBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e13b79c1419ff02c606af17f37ada76c4a3121d4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69152282" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceAuthorizationBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceAuthorizationBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceAuthorizationBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationBehavior sealed : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceAuthorizationBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет свойства, связанные с поведением авторизации службы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Авторизация возникает на уровне службы и на уровне операции. Этот класс содержит свойства, связанные с авторизацией на уровне службы.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно приложения не вызывают конструктор напрямую. Вместо этого они извлекают экземпляр этого класса путем вызова `ServiceHostBase.Description.Behaviors.Find<ServiceAuthorizationBehavior>`.  
  
   
  
## Examples  
 В следующем примере кода показано извлечение экземпляра этого класса.  
  
 [!code-csharp[c_ImpersonationAndDelegation#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_impersonationanddelegation/cs/source.cs#3)]
 [!code-vb[c_ImpersonationAndDelegation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_impersonationanddelegation/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalAuthorizationPolicies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ExternalAuthorizationPolicies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ExternalAuthorizationPolicies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalAuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ExternalAuthorizationPolicies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalAuthorizationPolicies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; with get, set" Usage="System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает коллекцию внешних политик авторизации.</summary>
        <value>Коллекция внешних политик авторизации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внешние политики авторизации участвуют в процессе оценки политики, результатом которого является объект пользователя <xref:System.ServiceModel.ServiceSecurityContext>.  
  
   
  
## Examples  
 В следующем фрагменте кода показано, как задать это свойство для использования набора внешних политик авторизации.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Поведение доступно только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImpersonateCallerForAllOperations">
      <MemberSignature Language="C#" Value="public bool ImpersonateCallerForAllOperations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImpersonateCallerForAllOperations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonateCallerForAllOperations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImpersonateCallerForAllOperations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonateCallerForAllOperations : bool with get, set" Usage="System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, выполняет ли служба олицетворение для всех операций, которые она поддерживает.</summary>
        <value><see langword="true" />, если служба выполняет олицетворение для всех операций, которые она поддерживает; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `false` указывает, что олицетворение задано для каждой операции.  
  
   
  
## Examples  
 В этом примере кода показано, как задать это свойство.  
  
 [!code-csharp[c_ImpersonationAndDelegation#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_impersonationanddelegation/cs/source.cs#3)]
 [!code-vb[c_ImpersonationAndDelegation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_impersonationanddelegation/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Поведение доступно только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImpersonateOnSerializingReply">
      <MemberSignature Language="C#" Value="public bool ImpersonateOnSerializingReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImpersonateOnSerializingReply" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonateOnSerializingReply As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImpersonateOnSerializingReply { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonateOnSerializingReply : bool with get, set" Usage="System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выполняет ли служба олицетворение после сериализации отклика.</summary>
        <value>Значение <see langword="true" />, если служба производит олицетворение в отклике сериализации; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalPermissionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PrincipalPermissionMode As PrincipalPermissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::PrincipalPermissionMode PrincipalPermissionMode { System::ServiceModel::Description::PrincipalPermissionMode get(); void set(System::ServiceModel::Description::PrincipalPermissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.PrincipalPermissionMode : System.ServiceModel.Description.PrincipalPermissionMode with get, set" Usage="System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает режим разрешений участника.</summary>
        <value>Режим разрешений субъекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство содержит одного из участников перечисления <xref:System.ServiceModel.Description.PrincipalPermissionMode>. Допустимые значения:  
  
-   <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom>. `IAuthorizationPolicy` Для`Thread.CurrentPrincipal`заполнения используется пользовательская реализация.  
  
-   <xref:System.ServiceModel.Description.PrincipalPermissionMode.None>. Свойство `Thread.CurrentPrincipal` не задано.  
  
-   <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles>. Свойству присваивается значение, `IPrincipal` основанное на сведениях о роли ASP.NET. `Thread.CurrentPrincipal`  
  
-   <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups>. Свойству присваивается значение, `WindowsPrincipal` основанное на учетных данных пользователя входящего сообщения. `Thread.CurrentPrincipal`  
  
   
  
## Examples  
 В этом примере кода показано, как задать это свойство.  
  
 [!code-csharp[c_PrincipalPermissionAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_principalpermissionattribute/cs/source.cs#3)]
 [!code-vb[c_PrincipalPermissionAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_principalpermissionattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />
      </Docs>
    </Member>
    <Member MemberName="RoleProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.RoleProvider RoleProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.RoleProvider RoleProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleProvider As RoleProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::RoleProvider ^ RoleProvider { System::Web::Security::RoleProvider ^ get(); void set(System::Web::Security::RoleProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoleProvider : System.Web.Security.RoleProvider with get, set" Usage="System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает настраиваемого поставщика ролей.</summary>
        <value>Пользовательский поставщик ролей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращенный объект <xref:System.Web.Security.RoleProvider> является реализацией настраиваемого поставщика ролей.  
  
   
  
## Examples  
 В следующем примере кода показано, как возвратить это свойство.  
  
 [!code-csharp[PrincipalPermissionMode#6](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#6)]
 [!code-vb[PrincipalPermissionMode#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Поведение доступно только для чтения.</exception>
        <altmember cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />
        <altmember cref="T:System.Web.Security.RoleProvider" />
      </Docs>
    </Member>
    <Member MemberName="ServiceAuthorizationManager">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceAuthorizationManager As ServiceAuthorizationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceAuthorizationManager ^ ServiceAuthorizationManager { System::ServiceModel::ServiceAuthorizationManager ^ get(); void set(System::ServiceModel::ServiceAuthorizationManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceAuthorizationManager : System.ServiceModel.ServiceAuthorizationManager with get, set" Usage="System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceAuthorizationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает диспетчера авторизации служб.</summary>
        <value>Диспетчер авторизации служб.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.ServiceModel.ServiceAuthorizationManager> отвечает за оценку всех политик, цепочки вперед и назад, необязательное подключение результирующего объекта <xref:System.IdentityModel.Policy.AuthorizationContext> к <xref:System.ServiceModel.ServiceSecurityContext> и возвращение решения авторизации `true` или `false`, чтобы разрешить или запретить доступ.  
  
   
  
## Examples  
 В следующем фрагменте кода показано, как задать это свойство для использования диспетчера авторизации настраиваемых служб.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ServiceModel.ServiceAuthorizationManager" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeExternalAuthorizationPolicies">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeExternalAuthorizationPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeExternalAuthorizationPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeExternalAuthorizationPolicies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeExternalAuthorizationPolicies();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeExternalAuthorizationPolicies : unit -&gt; bool" Usage="serviceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> относительно значения по умолчанию и нужно ли его сериализовать.</summary>
        <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeServiceAuthorizationManager">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeServiceAuthorizationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeServiceAuthorizationManager () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeServiceAuthorizationManager();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeServiceAuthorizationManager : unit -&gt; bool" Usage="serviceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> относительно значения по умолчанию и нужно ли его сериализовать.</summary>
        <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Описание службы.</param>
        <param name="serviceHostBase">Ведущее приложение службы.</param>
        <param name="endpoints">Конечные точки службы.</param>
        <param name="parameters">Настраиваемые объекты, к которым имеют доступ элементы привязки.</param>
        <summary>Предоставляет возможности передачи настраиваемых данных в элементы привязки для предоставления поддержки реализации контракта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> приведен к типу интерфейса <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Описание службы.</param>
        <param name="serviceHostBase">Ведущее приложение, построение которого выполняется в настоящее время.</param>
        <summary>Определяет явную реализацию интерфейса, добавляющую поведение диспетчера для настройки привязки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> приведен к типу интерфейса <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Описание службы.</param>
        <param name="serviceHostBase">Ведущее приложение службы, которое создается в настоящий момент.</param>
        <summary>Предоставляет возможности проверки ведущего приложения и описания службы, чтобы подтвердить готовность службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> приведен к типу интерфейса <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
