<Type Name="ServiceHealthBehavior" FullName="System.ServiceModel.Description.ServiceHealthBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a964e2fd25bfb9ecc66b550f0538d62fefe1d57e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69151960" /></Metadata><TypeSignature Language="C#" Value="public class ServiceHealthBehavior : System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHealthBehavior extends System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceHealthBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHealthBehavior&#xA;Inherits ServiceHealthBehaviorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHealthBehavior : System::ServiceModel::Description::ServiceHealthBehaviorBase" />
  <TypeSignature Language="F#" Value="type ServiceHealthBehavior = class&#xA;    inherit ServiceHealthBehaviorBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.ServiceHealthBehaviorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет поведение службы Windows Communication Foundation (WCF), которое предоставляет конечную точку работоспособности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

Конечные точки работоспособности используются для выполнения проверок работоспособности, оценивающих работоспособность компонента. Конечные точки работоспособности можно использовать для следующих действий:

- Уведомлять средства оркестрации, чтобы завершить процесс, который не проходит критическую проверку работоспособности. 

- Служит индикатором раннего решения для средств мониторинга путем отслеживания и предоставления оповещений о доступности и производительности службы.

`ServiceHealthBehavior`— Это поведение службы WCF, расширяющее IServiceBehavior и производное <xref:System.ServiceModel.Description.ServiceHealthBehaviorBase>от.  `ServiceHealthBehavior` Добавление экземпляра<xref:System.ServiceModel.Description.ServiceDescription.Behaviors?displayProperty=nameWithType> в коллекцию позволяет выполнить следующие действия:

-   **Публикация работоспособности службы:** Специфичные для службы сведения, такие как состояние службы, счетчики регулирования и емкость, можно отобразить с помощью запроса HTTP/Get со `?health` строкой запроса. Знание и простота доступа к отображаемым сведениям является важнейшим фактором при устранении неполадок в службе WCF с неправильным поведением.

-   **Возврат кодов HTTP-ответов:** Можно указать в строке запроса код состояния HTTP для запроса проверки работоспособности HTTP/GET.

Конечная точка работоспособности имеет смысл только в контексте компонента, состояние которого отслеживается ИТ-отправкой. Он не имеет другого смысла или целей. Таким образом, его работоспособность является каналом работоспособности компонента. Клиенты *должны* предположить, что код ответа HTTP, возвращаемый конечной точкой работоспособности, применим ко всему компоненту. Это совместимо с поведением, ожидаемым текущими инструментами инфраструктуры, которые используют проверки работоспособности, такие как подсистемы балансировки нагрузки, обнаружения служб и др.

### <a name="enable-a-health-endpoint"></a>Включение конечной точки работоспособности

Существует два способа указать способ предоставления конечной точки работоспособности и публикации сведений о работоспособности службы WCF:

- С помощью файла конфигурации. Например:

   ```xml
   <behaviors>
     <serviceBehaviors>
       <behavior name="DefaultBehavior">
         <serviceHealth httpGetEnabled="true"/>
       </behavior>
     </serviceBehaviors>
   </behaviors>
   ```

- Программирования. В следующем фрагменте кода C# используется для предоставления конечной точки работоспособности:

    ```csharp
    ServiceHost host = new ServiceHost(typeof(Service1),
        new Uri("http://jconde-dev1:81/Service1"));
    ServiceHealthBehavior healthBehavior =
                host.Description.Behaviors.Find<ServiceHealthBehavior>();
    if (healthBehavior == null)
    {
        healthBehavior = new ServiceHealthBehavior();
    }
    //healthBehavior.HttpGetEnabled = false;
    //healthBehavior.HttpsGetEnabled = false;
    host.Description.Behaviors.Add(healthBehavior);
    ```

       ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHealthBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHealthBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpProperty">
      <MemberSignature Language="C#" Value="protected static void AddHttpProperty (System.ServiceModel.Channels.Message message, System.Net.HttpStatusCode status, bool isXml);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddHttpProperty(class System.ServiceModel.Channels.Message message, valuetype System.Net.HttpStatusCode status, bool isXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.AddHttpProperty(System.ServiceModel.Channels.Message,System.Net.HttpStatusCode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddHttpProperty(System::ServiceModel::Channels::Message ^ message, System::Net::HttpStatusCode status, bool isXml);" />
      <MemberSignature Language="F#" Value="static member AddHttpProperty : System.ServiceModel.Channels.Message * System.Net.HttpStatusCode * bool -&gt; unit" Usage="System.ServiceModel.Description.ServiceHealthBehavior.AddHttpProperty (message, status, isXml)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="status" Type="System.Net.HttpStatusCode" />
        <Parameter Name="isXml" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">Ответное сообщение.</param>
        <param name="status">Код состояния HTTP.</param>
        <param name="isXml">Определяет тип заголовка <see langWord="ContentType" />, записываемого в сообщение. Если значение равно <see langword="true" />, то <see langWord="ContentType" /> имеет тип содержимого <see langword="text/xml" />; в противном случае <see langWord="ContentType" /> имеет тип содержимого <see langword="text/sml" />.</param>
        <summary>Задает тип содержимого и код состояния HTTP для сообщения ответа.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureHttpStatusCode">
      <MemberSignature Language="C#" Value="protected static bool EnsureHttpStatusCode (int code);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool EnsureHttpStatusCode(int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.EnsureHttpStatusCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function EnsureHttpStatusCode (code As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool EnsureHttpStatusCode(int code);" />
      <MemberSignature Language="F#" Value="static member EnsureHttpStatusCode : int -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.EnsureHttpStatusCode code" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">Код состояния HTTP.</param>
        <summary>Проверяет, что код состояния HTTP находится в диапазоне от 200 до 599 включительно.</summary>
        <returns>Значение <see langword="true" />, если код состояния HTTP находится в диапазоне от 200 для 599 включительно, в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpResponseCode">
      <MemberSignature Language="C#" Value="protected virtual System.Net.HttpStatusCode GetHttpResponseCode (System.ServiceModel.ServiceHostBase serviceHost, string[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Net.HttpStatusCode GetHttpResponseCode(class System.ServiceModel.ServiceHostBase serviceHost, string[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetHttpResponseCode(System.ServiceModel.ServiceHostBase,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHttpResponseCode (serviceHost As ServiceHostBase, queries As String()) As HttpStatusCode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::HttpStatusCode GetHttpResponseCode(System::ServiceModel::ServiceHostBase ^ serviceHost, cli::array &lt;System::String ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpResponseCode : System.ServiceModel.ServiceHostBase * string[] -&gt; System.Net.HttpStatusCode&#xA;override this.GetHttpResponseCode : System.ServiceModel.ServiceHostBase * string[] -&gt; System.Net.HttpStatusCode" Usage="serviceHealthBehavior.GetHttpResponseCode (serviceHost, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="queries" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Экземпляр узла службы, содержащий службу WCF с включенным поведением <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</param>
        <param name="queries">Массив, содержащий пары поле-значение строки запроса.</param>
        <summary>Выполняет синтаксический анализ полей строки запроса и возвращает определенный код ответа HTTP.</summary>
        <returns>Код ответа HTTP.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="serviceHost" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceHealthSections">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ServiceHealthSectionCollection GetServiceHealthSections (System.ServiceModel.ServiceHostBase serviceHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceHealthSectionCollection GetServiceHealthSections(class System.ServiceModel.ServiceHostBase serviceHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetServiceHealthSections(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetServiceHealthSections (serviceHost As ServiceHostBase) As ServiceHealthSectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Description::ServiceHealthSectionCollection ^ GetServiceHealthSections(System::ServiceModel::ServiceHostBase ^ serviceHost);" />
      <MemberSignature Language="F#" Value="abstract member GetServiceHealthSections : System.ServiceModel.ServiceHostBase -&gt; System.ServiceModel.Description.ServiceHealthSectionCollection&#xA;override this.GetServiceHealthSections : System.ServiceModel.ServiceHostBase -&gt; System.ServiceModel.Description.ServiceHealthSectionCollection" Usage="serviceHealthBehavior.GetServiceHealthSections serviceHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceHealthSectionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Экземпляр узла службы, содержащий службу WCF с включенным поведением <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</param>
        <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.ServiceHealthSection" />, определенных в <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</summary>
        <returns>Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceHealthSection" />, определенных в <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlDocument GetXmlDocument (System.ServiceModel.ServiceHostBase serviceHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlDocument GetXmlDocument(class System.ServiceModel.ServiceHostBase serviceHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetXmlDocument(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetXmlDocument (serviceHost As ServiceHostBase) As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlDocument ^ GetXmlDocument(System::ServiceModel::ServiceHostBase ^ serviceHost);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlDocument : System.ServiceModel.ServiceHostBase -&gt; System.Xml.XmlDocument&#xA;override this.GetXmlDocument : System.ServiceModel.ServiceHostBase -&gt; System.Xml.XmlDocument" Usage="serviceHealthBehavior.GetXmlDocument serviceHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Экземпляр узла службы, содержащий службу WCF с включенным поведением <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</param>
        <summary>Сериализует объект <see cref="T:System.ServiceModel.Description.ServiceHealthModel" />, связанный с указанным <paramref name="serviceHost" />, и возвращает его в формате XML.</summary>
        <returns>XML-документ, соответствующий сериализованному объекту <see cref="T:System.ServiceModel.Description.ServiceHealthModel" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HandleHealthRequest">
      <MemberSignature Language="C#" Value="public override void HandleHealthRequest (System.ServiceModel.ServiceHostBase serviceHost, System.ServiceModel.Channels.Message httpGetRequest, string[] queries, out System.ServiceModel.Channels.Message replyMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void HandleHealthRequest(class System.ServiceModel.ServiceHostBase serviceHost, class System.ServiceModel.Channels.Message httpGetRequest, string[] queries, [out] class System.ServiceModel.Channels.Message&amp; replyMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.HandleHealthRequest(System.ServiceModel.ServiceHostBase,System.ServiceModel.Channels.Message,System.String[],System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub HandleHealthRequest (serviceHost As ServiceHostBase, httpGetRequest As Message, queries As String(), ByRef replyMessage As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void HandleHealthRequest(System::ServiceModel::ServiceHostBase ^ serviceHost, System::ServiceModel::Channels::Message ^ httpGetRequest, cli::array &lt;System::String ^&gt; ^ queries, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % replyMessage);" />
      <MemberSignature Language="F#" Value="override this.HandleHealthRequest : System.ServiceModel.ServiceHostBase * System.ServiceModel.Channels.Message * string[] *  -&gt; unit" Usage="serviceHealthBehavior.HandleHealthRequest (serviceHost, httpGetRequest, queries, replyMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="httpGetRequest" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="queries" Type="System.String[]" />
        <Parameter Name="replyMessage" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Экземпляр узла службы, содержащий службу WCF с включенным поведением <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</param>
        <param name="httpGetRequest">Запрос HTTP, адресованный конечной точке работоспособности.</param>
        <param name="queries">Массив, содержащий пары поле-значение строки запроса.</param>
        <param name="replyMessage">При возврате метода содержит ответное сообщение от поведения работоспособности. Это сообщение имеет тип содержимого <see langword="text/html" /> или <see langword="text/xml" /> в зависимости от того, получение в каком формате было указано в запросе: XML или HTML.</param>
        <summary>Возвращает ответное сообщение на указанный запрос.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Этот метод вызывается <xref:System.ServiceModel.Description.ServiceHealthBehaviorBase> экземпляром и отвечает за создание ответного сообщения конечной точке исправности.

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> — <see langword="null" />.

- или -

<paramref name="httpGetRequest" /> равно <see langword="null" />

-или-

<paramref name="queries" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasXmlSupport">
      <MemberSignature Language="C#" Value="protected virtual bool HasXmlSupport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasXmlSupport" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehavior.HasXmlSupport" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasXmlSupport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasXmlSupport { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasXmlSupport : bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.HasXmlSupport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, поддерживаются ли ответные сообщения в формате XML.</summary>
        <value>Этот метод всегда возвращает <see langword="true" />значение, если только он не переопределен в производном классе.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseBooleanQueryParameter">
      <MemberSignature Language="C#" Value="protected static bool TryParseBooleanQueryParameter (string parameterName, string parameter, bool defaultValue, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryParseBooleanQueryParameter(string parameterName, string parameter, bool defaultValue, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.TryParseBooleanQueryParameter(System.String,System.String,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function TryParseBooleanQueryParameter (parameterName As String, parameter As String, defaultValue As Boolean, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool TryParseBooleanQueryParameter(System::String ^ parameterName, System::String ^ parameter, bool defaultValue, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParseBooleanQueryParameter : string * string * bool *  -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.TryParseBooleanQueryParameter (parameterName, parameter, defaultValue, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameterName">Имя параметра, для значение которого метод пытается выполнить синтаксический анализ.</param>
        <param name="parameter">Пара поле-значение строки запроса.</param>
        <param name="defaultValue">Значение, которое будет присвоено аргументу <paramName name="result" />, если операция синтаксического анализа завершается неудачей.</param>
        <param name="result">При возврате метода содержит значение проанализированного логического аргумента.</param>
        <summary>Пытается выполнить синтаксический анализ логического параметра строки запроса и возвращает значение, указывающее, успешно ли была выполнена операция синтаксического анализа.</summary>
        <returns>Значение <see langword="true" />, если операция синтаксического анализа выполнена успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Метод возвращает `true` , если значение поля успешно проанализировано <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> методом.

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameterName" /> — <see langword="null" />.
        
- или -

<paramref name="parameter" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseHttpStatusCodeQueryParameter">
      <MemberSignature Language="C#" Value="protected static bool TryParseHttpStatusCodeQueryParameter (string parameterName, string parameter, System.Net.HttpStatusCode defaultErrorCode, out System.Net.HttpStatusCode result);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryParseHttpStatusCodeQueryParameter(string parameterName, string parameter, valuetype System.Net.HttpStatusCode defaultErrorCode, [out] valuetype System.Net.HttpStatusCode&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.TryParseHttpStatusCodeQueryParameter(System.String,System.String,System.Net.HttpStatusCode,System.Net.HttpStatusCode@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function TryParseHttpStatusCodeQueryParameter (parameterName As String, parameter As String, defaultErrorCode As HttpStatusCode, ByRef result As HttpStatusCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool TryParseHttpStatusCodeQueryParameter(System::String ^ parameterName, System::String ^ parameter, System::Net::HttpStatusCode defaultErrorCode, [Runtime::InteropServices::Out] System::Net::HttpStatusCode % result);" />
      <MemberSignature Language="F#" Value="static member TryParseHttpStatusCodeQueryParameter : string * string * System.Net.HttpStatusCode *  -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.TryParseHttpStatusCodeQueryParameter (parameterName, parameter, defaultErrorCode, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="defaultErrorCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="result" Type="System.Net.HttpStatusCode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameterName">Имя параметра, для значение которого метод пытается выполнить синтаксический анализ.</param>
        <param name="parameter">Пара поле-значение строки запроса.</param>
        <param name="defaultErrorCode">Значение, которое будет присвоено аргументу, если операция синтаксического анализа завершается неудачей.</param>
        <param name="result">При возврате метода содержит значение проанализированного аргумента кода состояния HTTP.</param>
        <summary>Пытается выполнить синтаксический анализ кода состояния HTTP переменной со строкой запроса и возвращает значение, указывающее, успешно ли была выполнена операция синтаксического анализа.</summary>
        <returns>Значение <see langword="true" />, если операция синтаксического анализа выполнена успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="parameterName" /> имеет значение <see langword="null" />.
        
- или -

Свойство <paramref name="parameter" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
