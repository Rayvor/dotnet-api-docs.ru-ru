<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5312dda8c99c79807fee169a22c81d1fd59f4423" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70560535" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <TypeSignature Language="F#" Value="type MetadataImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c0fa7-101">Импортирует метаданные в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fa7-102">Используйте реализацию абстрактного класса <xref:System.ServiceModel.Description.MetadataImporter> для импорта метаданных службы.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="c0fa7-103">Типы, производные от <xref:System.ServiceModel.Description.MetadataImporter> класса, реализуют поддержку импорта форматов метаданных, которые используют преимущества логики импорта WS-Policy в Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="c0fa7-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in Windows Communication Foundation (WCF).</span></span>  
  
 <span data-ttu-id="c0fa7-104">Реализация <xref:System.ServiceModel.Description.MetadataImporter> собирает выражения политики, прикрепленные к метаданным службы в объекте <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="c0fa7-105">Затем <xref:System.ServiceModel.Description.MetadataImporter> обрабатывает политики как часть импорта метаданных путем вызова реализаций интерфейса <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> в свойстве <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c0fa7-106">Можно добавить поддержку для импорта новых утверждений политики в <xref:System.ServiceModel.Description.MetadataImporter> путем добавления собственной реализации интерфейса <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> в свойство <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> в экземпляре <xref:System.ServiceModel.Description.MetadataImporter>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="c0fa7-107">В качестве альтернативы можно зарегистрировать расширение импорта политики в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="c0fa7-108">Тип является реализацией <xref:System.ServiceModel.Description.MetadataImporter> абстрактного класса, входящего в состав WCF. <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c0fa7-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with WCF.</span></span> <span data-ttu-id="c0fa7-109">Тип <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> импортирует метаданные языка WSDL с прикрепленными политиками, объединенными в объекте <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="c0fa7-110">Можно добавить поддержку для импорта расширений языка WSDL путем реализации интерфейса <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> и добавления реализации в свойство <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> в экземпляре <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="c0fa7-111">Также <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> может загружать реализации интерфейса <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>, зарегистрированного в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0fa7-112">Поскольку конструктор <xref:System.ServiceModel.Description.MetadataImporter> является внутренним, в этой версии нельзя наследовать <xref:System.ServiceModel.Description.MetadataImporter>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0fa7-113">В следующем примере показано применение производного класса <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> для импорта метаданных с помощью настраиваемого состояния, проверки свойства <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, компиляции импортированных метаданных в управляемые типы и сохранения результата в файле кода.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;" Usage="System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0fa7-114">Возвращает значение, указывающее наличие ошибок при импорте метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-114">Gets a value that indicates whether there were errors importing the metadata.</span></span></summary>
        <value><span data-ttu-id="c0fa7-115">Коллекция объектов <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fa7-116">Рекомендуется проверять свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> после импорта и перед использованием метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="abstract member ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="metadataImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0fa7-117">При переопределении в производном классе возвращает коллекцию контрактов, импортированных из метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span></span></summary>
        <returns><span data-ttu-id="c0fa7-118">Контракты, импортированные из метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-118">The contracts imported from the metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="abstract member ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="metadataImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0fa7-119">При переопределении в производном классе возвращает все конечные точки в метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-119">When overridden in a derived class, returns all endpoints in the metadata.</span></span></summary>
        <returns><span data-ttu-id="c0fa7-120">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, опубликованных службой.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fa7-121">Реализуйте метод <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A>, чтобы вернуть все конечные точки в импортированных метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="c0fa7-122">Метаданные, импортированные как конечные точки службы, не могут использоваться для создания среды выполнения или экспорта метаданных, поскольку импортируемые конечные точки не содержат сведений об управляемом типе.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="c0fa7-123">Чтобы использовать метаданные для создания среды выполнения службы или клиента, либо для создания метаданных, следует сначала создать и выполнить компиляцию кода из метаданных и использовать эти сведения о типе для создания нового объекта <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> с помощью <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KnownContracts : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, System.ServiceModel.Description.ContractDescription&gt;" Usage="System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0fa7-124">Возвращает словарь контрактов по имени, о котором знает средство импорта.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-124">Gets a dictionary of contracts by name that the importer knows about.</span></span></summary>
        <value><span data-ttu-id="c0fa7-125">Словарь контрактов, перечисленных по полному имени XML.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-125">A dictionary of contracts listed by XML qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fa7-126">Используйте свойство <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> для добавления или удаления описаний контракта и связанных с ними имен XML, на которые может ссылаться средство импорта.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PolicyImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" Usage="System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0fa7-127">Возвращает коллекцию средств импорта политики, которые средство импорта вызывает для обработки утверждений политики.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span></span></summary>
        <value><span data-ttu-id="c0fa7-128">Коллекция средств импорта политики, которые <see cref="T:System.ServiceModel.Description.MetadataImporter" /> вызывает для обработки утверждений политики.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fa7-129">Используйте свойство <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A>, чтобы добавить или удалить средства импорта политики, вызываемые для обработки утверждений политики в метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Collections.Generic.Dictionary&lt;obj, obj&gt;" Usage="System.ServiceModel.Description.MetadataImporter.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0fa7-130">Возвращает или задает коллекцию объектов, используемых при импорте метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-130">Gets or sets a collection of objects used in the importing of metadata.</span></span></summary>
        <value><span data-ttu-id="c0fa7-131">Словарь объектов, ключом которых является тип.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-131">A dictionary of objects keyed by type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fa7-132">Используйте свойство `State`, чтобы добавить или удалить объекты, используемые при импорте метаданных.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0fa7-133">В следующем примере кода показано применение свойства <xref:System.ServiceModel.Description.MetadataImporter.State%2A> для добавления настраиваемого <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> для импорта структур данных определенным образом.</span><span class="sxs-lookup"><span data-stu-id="c0fa7-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
