<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="826155e39960582186cf550051437aa2353b63cf" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70711089" /></Metadata><TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет поведение конечной точки или контракта, которое может экспортировать настраиваемые метаданные.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы изменить и расширить язык WSDL, экспортированный объектами <xref:System.ServiceModel.Description.WsdlExporter>, реализуйте интерфейс <xref:System.ServiceModel.Description.IWsdlExportExtension> в поведении конечной точки, контракта или операции (объект, реализующий <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior> или <xref:System.ServiceModel.Description.IOperationBehavior>) и добавьте поведение к свойству <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> или <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>. Кроме того, также можно реализовать <xref:System.ServiceModel.Description.IWsdlExportExtension> в <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension>реализации никогда не вызываются, если они реализуются как <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension>не экспортирует утверждения пользовательской политики, хотя Windows Communication Foundation (WCF) экспортирует утверждения пользовательской политики привязки к соответствующему элементу внутри WSDL. При необходимости экспортировать утверждения настраиваемой политики реализуйте интерфейс <xref:System.ServiceModel.Description.IPolicyExportExtension>.  
  
 Процесс публикации метаданных начинается путем вызова метода <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType>, который, в свою очередь, вызывает <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> для каждой конечной точки.  
  
 Конечная точка экспортируется путем первоначального экспорта ее контракта. При экспорте контракта <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> вызывает метод <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> во всех реализациях <xref:System.ServiceModel.Description.IWsdlExportExtension> в контракте и поведении операции для этого контракта. Операции, использующие подстановочные действия, не экспортируются в метаданные, так что реализации <xref:System.ServiceModel.Description.IWsdlExportExtension> в поведении операции для этих операций не экспортируются.  
  
 После экспорта контракта экспортируются порт и привязка, а экспортированные выражения политики прикрепляются.  
  
 Методы <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> и <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> обеспечивают доступ к <xref:System.ServiceModel.Description.WsdlExporter>, так что реализации <xref:System.ServiceModel.Description.IWsdlExportExtension> могут отчитываться об устранимых ошибках и предупреждениях посредством свойства <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>. Объекты контекста, переданные в оба метода, предоставляют удобные сопоставления из экспортированных элементов WSDL для свойств объектов <xref:System.ServiceModel.Description.ContractDescription> и <xref:System.ServiceModel.Description.ServiceEndpoint>.  
  
 Если в реализации <xref:System.ServiceModel.Description.IWsdlExportExtension> возникает исключение при экспорте, созданные метаданные находятся в несогласованном состоянии, а объект <xref:System.ServiceModel.Description.WsdlExporter> должен быть удален.  
  
> [!NOTE]
>  Пользовательский модуль экспорта должен запускаться после того, как встроенный сериализатор заполнит описание службы.  
  
   
  
## Examples  
 В следующем примере кода показан объект <xref:System.ServiceModel.Description.IWsdlExportExtension>, которые добавляет настраиваемые атрибуты документации в файл WSDL как аннотации WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о контракте.</param>
        <param name="context">Обеспечивает сопоставление экспортированных элементов WSDL описанию контракта.</param>
        <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для контракта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> вызывается при экспорте контракта системой экспорта метаданных. Только поведение контракта и операции, реализующее <xref:System.ServiceModel.Description.IWsdlExportExtension>, получает вызов <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>. Все поведение, реализующее <xref:System.ServiceModel.Description.IWsdlExportExtension>, получает вызов <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>.  
  
 Используйте параметр `context` для изменения языка WSDL для экспорта. См. пример в разделе "Пример".  
  
   
  
## Examples  
 В следующем примере кода показан объект <xref:System.ServiceModel.Description.IWsdlExportExtension>, которые добавляет настраиваемые атрибуты документации в файл WSDL как аннотации WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">Объект <see cref="T:System.ServiceModel.Description.WsdlExporter" />, экспортирующий сведения о конечной точке.</param>
        <param name="context">Предоставляет сопоставления экспортированных элементов WSDL описанию конечной точки.</param>
        <summary>Записывает пользовательские элементы WSDL в созданный код WSDL для конечной точки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте метод <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>, чтобы изменить язык WSDL, экспортированный для конечной точки. Этот метод вызывается после экспорта контракта с помощью <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 В следующем примере кода показан объект <xref:System.ServiceModel.Description.IWsdlExportExtension>, которые добавляет настраиваемые атрибуты документации в файл WSDL как аннотации WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
