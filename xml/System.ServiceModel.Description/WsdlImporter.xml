<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8d1c3e22bba962a7c669aa1557b557975cfc53a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70458350" /></Metadata><TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Импортирует метаданные на языке WSDL 1.1 с вложениями WS-Policy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рекомендуется использовать класс <xref:System.ServiceModel.Description.WsdlImporter> для импорта метаданных, а также для их преобразования в различные классы, представляющие данные контракта и конечной точки.  
  
 Базовый класс для <xref:System.ServiceModel.Description.WsdlImporter>, класс <xref:System.ServiceModel.Description.MetadataImporter>, определяет методы, с помощью которых можно выборочно импортировать сведения контракта и конечной точки, а также свойства, предоставляющие сведения об ошибках и принимающие сведения о типах, относящиеся к процессу импорта и преобразования. Тип <xref:System.ServiceModel.Description.WsdlImporter> используется средства импорта настраиваемой политики (реализации <xref:System.ServiceModel.Description.IPolicyImportExtension>) из родительского типа, чтоб обрабатывать настраиваемые операторы политики и собственные средства импорта WSDL (реализации <xref:System.ServiceModel.Description.IWsdlImportExtension>) для обработки настраиваемых элементов WSDL. Дополнительные сведения см. [в разделе расширение системы метаданных](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 При импортировании политики из документов WSDL тип <xref:System.ServiceModel.Description.WsdlImporter> пробует применить до 32 комбинаций альтернативных политик к различным объектам политики WSDL.  Если ни одну из этих комбинацией не удается импортировать без ошибок, первая комбинация используется для создания частичной пользовательской привязки.  
  
 Помимо данных методов и свойство, в <xref:System.ServiceModel.Description.WsdlImporter> также реализованы методы, которые поддерживают импорт сведений привязки и свойств, предоставляющих доступ к документам политики, документам WSDL, расширениям WSDL и документам схемы XML. Сведения о расширении <xref:System.ServiceModel.Description.WsdlImporter> для поддержки настраиваемых элементов WSDL, см. в разделе <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 Обычно класс <xref:System.ServiceModel.Description.WsdlImporter> используется в трехшаговом процессе.  
  
1.  Создайте объект <xref:System.ServiceModel.Description.WsdlImporter> и передайте объект в конструктор <xref:System.ServiceModel.Description.MetadataSet>.  
  
2.  Вызовите соответствующий метод `Import` для извлечения результатов.  
  
3.  Проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
> [!NOTE]
>  При импортировании типов порта WSDL, если QName типа порта совпадает с записью в словаре <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A>, импортирование типа порта не выполняется, и вместо него используется известный контракт.  
  
 Значения не возвращаются из свойств <xref:System.ServiceModel.Description.WsdlImporter> до тех пор, пока не будет вызван один из методов импорта. Пользовательские <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> объекты можно либо загрузить в программно <xref:System.ServiceModel.Description.WsdlImporter> , либо с помощью элемента [ &lt;всдлимпортерс&gt; ](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) конфигурации клиента.  
  
 Метаданные, импортированные как конечные точки службы, не могут использоваться для создания среды выполнения или экспорта метаданных, поскольку импортируемые конечные точки не содержат сведений об управляемом типе. Чтобы использовать метаданные для создания среды выполнения службы или клиента, либо для создания метаданных, следует сначала создать и выполнить компиляцию кода из метаданных и использовать эти сведения о типе для создания нового объекта <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> с помощью <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.ServiceModel.Description.WsdlImporter> для добавления настраиваемых <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, импортировать все контракты, а также выполнять компиляцию данных контрактов и их сохранение в файл.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Коллекция документов метаданных, из которых следует извлечь сведения о контракте, конечной точке и привязке.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте конструктор <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> для создания объекта <xref:System.ServiceModel.Description.WsdlImporter> из набора документов метаданных.  
  
   
  
## Examples  
 В следующем примере кода показаны наиболее распространенные способы использования класса <xref:System.ServiceModel.Description.WsdlImporter> с классом <xref:System.ServiceModel.Description.MetadataResolver>.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Загруженные метаданные.</param>
        <param name="policyImportExtensions">Настраиваемые средства импорта политики, используемое для импорта настраиваемых операторов политики.</param>
        <param name="wsdlImportExtensions">Настраиваемые средства импорта WSDL, используемое для импортирования настраиваемых элементов WSDL.</param>
        <summary>Создает объект <see cref="T:System.ServiceModel.Description.WsdlImporter" /> из заданных метаданных, настраиваемых средств импорта политики и настраиваемых средств импорта WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный конструктор можно использовать для управления импортируемыми метаданными и используемой политикой и средствами импорта WSDL.  
  
> [!NOTE]
>  При передаче настраиваемых средств импорта политики или настраиваемых средств импорта WSDL в данный конструктор, загрузка любых настраиваемых средств импорта, заданный в файлах конфигурации приложения, не выполняется. Если необходимо добавить настраиваемое средство импорта, следует воссоздать коллекции средств импорта перед использованием этого конструктора. См. раздел «Пример».  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить новое настраиваемое средство импорта WSDL (`WSDLDocumentationImporter`) в набор средств импорта по умолчанию перед использованием объекта <xref:System.ServiceModel.Description.WsdlImporter>.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="metadata" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Загруженные метаданные.</param>
        <param name="policyImportExtensions">Настраиваемые средства импорта политики, используемое для импорта настраиваемых операторов политики.</param>
        <param name="wsdlImportExtensions">Настраиваемые средства импорта WSDL, используемое для импортирования настраиваемых элементов WSDL.</param>
        <param name="quotas">Количество одновременно получаемых метаданных</param>
        <summary>Создает объект <see cref="T:System.ServiceModel.Description.WsdlImporter" /> из заданных метаданных, настраиваемых средств импорта политики и настраиваемых средств импорта WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный конструктор можно использовать для управления импортируемыми метаданными и используемой политикой и средствами импорта WSDL.  
  
> [!NOTE]
>  При передаче настраиваемых средств импорта политики или настраиваемых средств импорта WSDL в данный конструктор, загрузка любых настраиваемых средств импорта, заданный в файлах конфигурации приложения, не выполняется. Если необходимо добавить настраиваемое средство импорта, следует воссоздать коллекции средств импорта перед использованием этого конструктора. См. раздел «Пример».  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить новое настраиваемое средство импорта WSDL (`WSDLDocumentationImporter`) в набор средств импорта по умолчанию перед использованием объекта <xref:System.ServiceModel.Description.WsdlImporter>.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="metadata" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает набор объектов <see cref="T:System.ServiceModel.Channels.Binding" />, импортированных из документов метаданных.</summary>
        <returns>Набор объектов <see cref="T:System.ServiceModel.Channels.Binding" />, импортированных из документов метаданных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> можно использовать для импорта всех сведений о привязке из документов метаданных и возврата их как объектов <xref:System.ServiceModel.Channels.Binding>. Перед использованием возвращенных объектов проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 Сведения об импорте конкретных привязок WSDL см. в описании метода <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает набор объектов <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющих сведения о типе порта в документах метаданных.</summary>
        <returns>Набор объектов <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющих сведения о типе порта в документах метаданных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> можно использовать для импорта сведений о типе порта WSDL из документов метаданных и их возврата как объектов <xref:System.ServiceModel.Description.ContractDescription>. Перед использованием возвращенных объектов рекомендуется проверить свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 Сведения об импорте только типа порта см. в описании метода <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.ServiceModel.Description.WsdlImporter> для добавления настраиваемых <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, импортировать все контракты, а также выполнять компиляцию данных контрактов и их сохранение в файл.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, который представляет конечные точки в документах WSDL.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, который представляет конечные точки в документах WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> можно использовать для импорта всех сведений о конечных точках из документов метаданных и возврата их как коллекции объектов <xref:System.ServiceModel.Description.ServiceEndpoint>. Перед использованием возвращенных объектов проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 Сведения об импорте только конкретного порт WSDL см. в описании метода <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Объект <see cref="T:System.Web.Services.Description.Binding" />, представляющий сведения о привязке в файле метаданных.</param>
        <summary>Возвращает объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий сведения о привязке из набора документов метаданных.</summary>
        <returns>Объект <see cref="T:System.ServiceModel.Channels.Binding" />, представляющий сведения о привязке из набора документов метаданных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A>, чтобы использовать объект <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> для поиска сведений о привязке в метаданных и возвращать данные сведения о привязке как объект <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType>. Перед использованием возвращенного объекта проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="wsdlBinding" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Объект <see cref="T:System.Web.Services.Description.PortType" />, представляющий требуемый тип порта.</param>
        <summary>Возвращает объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющий метаданные, поиск которых выполняется по сведениям о конкретном типе порта.</summary>
        <returns>Объект <see cref="T:System.ServiceModel.Description.ContractDescription" />, представляющий метаданные, поиск которых выполняется по сведениям о конкретном типе порта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A>, чтобы использовать объект <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> для поиска сведений о типе порта в метаданных и возвращать данные сведения о привязке как объект <xref:System.ServiceModel.Description.ContractDescription>. Перед использованием возвращенного объекта проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
        <exception cref="T:System.ArgumentNullException">Тип порта — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">Объект <see cref="T:System.Web.Services.Description.Port" />, представляющий требуемые сведения о портах WSDL.</param>
        <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> из набора документов метаданных, которые используют сведения из указанного объекта <see cref="T:System.Web.Services.Description.Port" />.</summary>
        <returns>Объект <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, представляющий сведения о конкретном порте WSDL в документах метаданных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A>, чтобы использовать объект <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> для поиска сведений о типе порта в метаданных и возвращать данные сведения о привязке как объект <xref:System.ServiceModel.Description.ServiceEndpoint>. Перед использованием возвращенного объекта проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="wsdlPort" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, соответствующую всем портам WSDL, с помощью заданной привязки, связанной с конкретным типом порта, либо в заданной службе WSDL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Объект <see cref="T:System.Web.Services.Description.Binding" />, используемый в порте WSDL.</param>
        <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, используя заданный <see cref="T:System.Web.Services.Description.Binding" />.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, используя заданный <see cref="T:System.Web.Services.Description.Binding" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед использованием возвращенного объекта проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="wsdlBinding" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Объект <see cref="T:System.Web.Services.Description.PortType" />, используемый для поиска сведений о связанном порте WSDL.</param>
        <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, связанные с заданным <see cref="T:System.Web.Services.Description.PortType" />.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL, связанные с заданным <see cref="T:System.Web.Services.Description.PortType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед использованием возвращенного объекта проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPortType" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">Объект <see cref="T:System.Web.Services.Description.Service" />, в котором следует выполнять поиск сведений о порте WSDL.</param>
        <summary>Возвращает <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL в заданном <see cref="T:System.Web.Services.Description.Service" />.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, представляющий все типы порта WSDL в заданном <see cref="T:System.Web.Services.Description.Service" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед использованием возвращенного объекта проверьте свойство <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, чтобы определить, не было ли ошибок импорта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В объекте <see cref="T:System.ServiceModel.Description.WsdlImporter" /> возникла ошибка.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="wsdlService" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает набор объектов <see cref="T:System.Web.Services.Description.ServiceDescription" />, которые описывают сведения о контракте в документах метаданных.</summary>
        <value>Коллекция объектов <see cref="T:System.Web.Services.Description.ServiceDescription" />, которые описывают сведения о контракте в документах метаданных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> не заполняется до тех пор, пока не будет вызван метод импорта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает набор объектов <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />, используемых для импорта сведений о настраиваемом WSDL.</summary>
        <value>Набор объектов <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />, используемых для импорта сведений о настраиваемом WSDL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> для добавления или удаления настраиваемых средств импорта WSDL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает набор объектов <see cref="T:System.Xml.Schema.XmlSchema" />, которые описывают типы в документах метаданных.</summary>
        <value>Набор объектов <see cref="T:System.Xml.Schema.XmlSchema" />, которые описывают типы в документах метаданных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не заполняется до тех пор, пока не будет вызван один из методов импорта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
