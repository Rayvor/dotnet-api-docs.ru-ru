<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09ff9fdc49146379087c70b61a84e3348f410789" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69249731" /></Metadata><TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2f0d6-101">Представляет последовательность соединенных линий и кривых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-101">Represents a series of connected lines and curves.</span></span> <span data-ttu-id="2f0d6-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-103">Приложения используют пути для рисования контуров фигур, заполнения внутренних участков фигур и создания областей обрезки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="2f0d6-104">Механизм графики сохраняет координаты геометрических фигур в пути в мировом пространстве координат.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="2f0d6-105">Путь может состоять из любого числа фигур (вложенных путей).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="2f0d6-106">Каждая фигура либо состоит из последовательности Соединенных линий, кривых или геометрического примитива фигуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="2f0d6-107">Начальная точка фигуры — это первая точка в последовательности Соединенных линий и кривых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="2f0d6-108">Конечная точка — это последняя точка в последовательности.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="2f0d6-109">Начальная и конечная точки примитива геометрической фигуры определяются спецификацией-примитивом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="2f0d6-110">Фигура, состоящая из последовательности Соединенных линий и кривых (у которых начальная и конечная точки может быть коинЦидент), представляет собой открытую фигуру, если она не закрыта явным образом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="2f0d6-111">Фигура может быть закрыта явным образом с помощью <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> метода, который закрывает текущую фигуру путем соединения строки от конечной точки к начальной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="2f0d6-112">Фигура, состоящая из геометрического примитива, является замкнутой фигурой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="2f0d6-113">Для заполнения и обрезки (например, если контур визуализируется с помощью <xref:System.Drawing.Graphics.FillPath%2A>) все открытые рисунки закрываются путем добавления линии из первой точки фигуры в ее последнюю точку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="2f0d6-114">Новая фигура неявно запускается при создании пути или при закрытии фигуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="2f0d6-115">Новая фигура создается явным образом при <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> вызове метода.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="2f0d6-116">При добавлении к контуру примитива геометрической фигуры добавляется фигура, содержащая геометрическую форму, а также неявно запускается новая фигура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="2f0d6-117">Следовательно, в пути всегда существует текущая фигура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="2f0d6-118">Когда линии и кривые добавляются к контуру, при необходимости добавляется неявная линия для соединения конечной точки текущей фигуры с начальной точкой новых линий и кривых, образуя последовательность соединенных линий и кривых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="2f0d6-119">Фигура имеет направление, описывающее трассировку сегментов линии и кривой между начальной и конечной точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="2f0d6-120">Направление определяется в том порядке, в котором линии и кривые добавляются к фигуре или определяются примитивом геометрической фигуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="2f0d6-121">Направление используется для определения внутренних областей пути для обрезки и заливки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f16ec921-56cf-46d1-9741-d7316ad06b23"><span data-ttu-id="2f0d6-122">Построение и рисование контуров</span><span class="sxs-lookup"><span data-stu-id="2f0d6-122">Constructing and Drawing Paths</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-123">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с перечислением <see cref="T:System.Drawing.Drawing2D.FillMode" /> для объекта <see langword="Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-124">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> со значением <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> для объекта <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode"><span data-ttu-id="2f0d6-125">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняется внутренняя область этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-125">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span></span></param>
        <summary><span data-ttu-id="2f0d6-126">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с указанным перечислением <see cref="T:System.Drawing.Drawing2D.FillMode" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-126">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="2f0d6-127">Массив структур <see cref="T:System.Drawing.Point" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-127">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="2f0d6-128">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-128">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="2f0d6-129">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с заданными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.Point" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-129">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="2f0d6-130">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-130">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="2f0d6-131">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-131">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="2f0d6-132">Инициализирует новый экземпляр массива <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с заданными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.PointF" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="2f0d6-133">Массив структур <see cref="T:System.Drawing.Point" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-133">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="2f0d6-134">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-134">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="2f0d6-135">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="2f0d6-136">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с указанными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.Point" /> и с заданным элементом перечисления <see cref="T:System.Drawing.Drawing2D.FillMode" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="2f0d6-137">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-137">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="2f0d6-138">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-138">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="2f0d6-139">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="2f0d6-140">Инициализирует новый экземпляр массива <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с указанными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.PointF" /> и заданным элементом перечисления <see cref="T:System.Drawing.Drawing2D.FillMode" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-140">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-141">Присоединяет дугу эллипса к текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-141">Appends an elliptical arc to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-142">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий прямоугольник, ограничивающий эллипс, частью которого является дуга.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-142">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-143">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-143">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-144">Угол между объектом <paramref name="startAngle" /> и концом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-144">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="2f0d6-145">Присоединяет дугу эллипса к текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-145">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-146">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с началом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-146">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="2f0d6-147">Дуга отслеживается вдоль периметра эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-147">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="2f0d6-148">Начальная точка дуги определяется измерением по часовой стрелке от оси x эллипса (с углом 0 градусов) на число градусов начального угла.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-148">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="2f0d6-149">Подобная конечная точка расположена по часовой стрелке от начальной точки до числа градусов в градусах поворота.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-149">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="2f0d6-150">Если угол поворота больше 360 градусов или меньше-360 градусов, дуга очисткася в ровно 360 градусов или-360 градусов соответственно.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-150">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-151">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-151">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-152">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-153">Создает прямоугольник, на основе которого определяется дуга.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-153">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="2f0d6-154">Создает путь, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-154">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="2f0d6-155">Определяет эллиптическую дугу 180-градуса, которая выдается от 0 градусов до 180 градусов и добавляется к контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-155">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-156">Рисует путь к экрану.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-156">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-157">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, ограничивающий эллипс, частью которого является дуга.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-157">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-158">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-158">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-159">Угол между объектом <paramref name="startAngle" /> и концом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-159">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="2f0d6-160">Присоединяет дугу эллипса к текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-160">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-161">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с началом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-161">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="2f0d6-162">Дуга отслеживается вдоль периметра эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-162">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="2f0d6-163">Начальная точка дуги определяется измерением по часовой стрелке от оси x эллипса (с углом 0 градусов) на число градусов начального угла.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-163">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="2f0d6-164">Подобная конечная точка расположена по часовой стрелке от начальной точки до числа градусов в градусах поворота.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-164">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="2f0d6-165">Если угол поворота больше 360 градусов или меньше-360 градусов, дуга очисткася в ровно 360 градусов или-360 градусов соответственно.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-165">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-166">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-166">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-167">Координата по оси X левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-167">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-168">Координата по оси Y левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-168">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="2f0d6-169">Ширина прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-169">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="2f0d6-170">Высота прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-170">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-171">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-171">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-172">Угол между объектом <paramref name="startAngle" /> и концом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-172">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="2f0d6-173">Присоединяет дугу эллипса к текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-173">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-174">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с началом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-174">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="2f0d6-175">Дуга отслеживается вдоль периметра эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-175">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="2f0d6-176">Начальная точка дуги определяется измерением по часовой стрелке от оси x эллипса (с углом 0 градусов) на число градусов начального угла.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-176">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="2f0d6-177">Подобная конечная точка расположена по часовой стрелке от начальной точки до числа градусов в градусах поворота.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-177">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="2f0d6-178">Если угол поворота больше 360 градусов или меньше-360 градусов, дуга очисткася в ровно 360 градусов или-360 градусов соответственно.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-178">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-179">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-179">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-180">Координата по оси X левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-180">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-181">Координата по оси Y левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-181">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="2f0d6-182">Ширина прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-182">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="2f0d6-183">Высота прямоугольной области, определяющей эллипс, дуга которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-183">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-184">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-184">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-185">Угол между объектом <paramref name="startAngle" /> и концом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-185">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="2f0d6-186">Присоединяет дугу эллипса к текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-186">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-187">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с началом дуги.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-187">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="2f0d6-188">Дуга отслеживается вдоль периметра эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-188">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="2f0d6-189">Начальная точка дуги определяется измерением по часовой стрелке от оси x эллипса (с углом 0 градусов) на число градусов начального угла.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-189">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="2f0d6-190">Подобная конечная точка расположена по часовой стрелке от начальной точки до числа градусов в градусах поворота.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-190">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="2f0d6-191">Если угол поворота больше 360 градусов или меньше-360 градусов, дуга очисткася в ровно 360 градусов или-360 градусов соответственно.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-191">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-192">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-192">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-193">Добавляет в текущую фигуру кривую Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-193">Adds a cubic Bézier curve to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="2f0d6-194">Объект <see cref="T:System.Drawing.Point" />, представляющий собой начальную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-194">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="2f0d6-195">Объект <see cref="T:System.Drawing.Point" />, представляющий собой первую контрольную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-195">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="2f0d6-196">Объект <see cref="T:System.Drawing.Point" />, представляющий собой вторую контрольную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-196">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="2f0d6-197">Объект <see cref="T:System.Drawing.Point" />, представляющий конечную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-197">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-198">Добавляет в текущую фигуру кривую Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-198">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-199">Кривая третьего порядка состоит из первой точки к четвертой, а вторая и третья точки — как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-199">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="2f0d6-200">Если на рисунке изображена Предыдущая строка или сегмент кривой, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-200">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-201">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-201">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="2f0d6-202">Объект <see cref="T:System.Drawing.PointF" />, представляющий собой начальную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-202">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="2f0d6-203">Объект <see cref="T:System.Drawing.PointF" />, представляющий собой первую контрольную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-203">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="2f0d6-204">Объект <see cref="T:System.Drawing.PointF" />, представляющий собой вторую контрольную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-204">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="2f0d6-205">Объект <see cref="T:System.Drawing.PointF" />, представляющий конечную точку кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-205">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-206">Добавляет в текущую фигуру кривую Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-206">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-207">Кривая третьего порядка состоит из первой точки к четвертой, а вторая и третья точки — как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-207">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="2f0d6-208">Если на рисунке изображена Предыдущая строка или сегмент кривой, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-208">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-209">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-209">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="2f0d6-210">Координата X начальной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-210">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="2f0d6-211">Координата Y начальной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-211">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="2f0d6-212">Координата X первой контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-212">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="2f0d6-213">Координата Y первой контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-213">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="2f0d6-214">Координата X второй контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-214">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="2f0d6-215">Координата Y второй контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-215">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="2f0d6-216">Координата X конечной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-216">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="2f0d6-217">Координата Y конечной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-217">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-218">Добавляет в текущую фигуру кривую Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-218">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-219">Кривая третьего порядка состоит из первой точки к четвертой, а вторая и третья точки — как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-219">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="2f0d6-220">Если на рисунке изображена Предыдущая строка или сегмент кривой, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-220">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-221">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-221">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-222">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-222">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-223">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-223">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-224">Добавляет кривую Безье третьего порядка, определяемую точками (50, 50), (70, 0), (100, 120) и (150, 50) в путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-224">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-225">Закрывает кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-225">Closes the curve.</span></span>  
  
-   <span data-ttu-id="2f0d6-226">Рисует путь к экрану.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-226">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="2f0d6-227">Координата X начальной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-227">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="2f0d6-228">Координата Y начальной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-228">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="2f0d6-229">Координата X первой контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-229">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="2f0d6-230">Координата Y первой контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-230">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="2f0d6-231">Координата X второй контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-231">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="2f0d6-232">Координата Y второй контрольной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-232">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="2f0d6-233">Координата X конечной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-233">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="2f0d6-234">Координата Y конечной точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-234">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-235">Добавляет в текущую фигуру кривую Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-235">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-236">Кривая третьего порядка состоит из первой точки к четвертой, а вторая и третья точки — как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-236">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="2f0d6-237">Если на рисунке изображена Предыдущая строка или сегмент кривой, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-237">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-238">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-238">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-239">Добавляет в текущую фигуру последовательность соединенных кривых Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-239">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-240">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривые.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-240">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="2f0d6-241">Добавляет в текущую фигуру последовательность соединенных кривых Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-241">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-242">`points` Параметр задает массив конечных точек и контрольные точки Соединенных кривых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-242">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="2f0d6-243">Первая кривая строится от первой точки к четвертой точке `points` массива с использованием второй и третьей точек в качестве контрольных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-243">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="2f0d6-244">Помимо конечной точки предыдущей кривой, каждой последующей кривой в последовательности требуется ровно три точки: следующие две точки в последовательности являются контрольными точками, а третья — конечной точкой для добавленной кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-244">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="2f0d6-245">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой первой кривой третьего порядка в последовательности.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-245">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-246">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-246">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-247">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-247">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-248">Создает массив из семи точек (представляющих две соединенные кривые Безье).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-248">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="2f0d6-249">Создает контур и добавляет к пути ряд точек кривой Безье.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-249">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-250">Рисует путь к экрану.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-250">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-251">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривые.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-251">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="2f0d6-252">Добавляет в текущую фигуру последовательность соединенных кривых Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-252">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-253">`points` Параметр задает массив конечных точек и контрольные точки Соединенных кривых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-253">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="2f0d6-254">Первая кривая строится от первой точки к четвертой точке `points` массива с использованием второй и третьей точек в качестве контрольных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-254">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="2f0d6-255">Помимо конечной точки предыдущей кривой, каждой последующей кривой в последовательности требуется ровно три точки: следующие две точки в последовательности являются контрольными точками, а третья — конечной точкой для добавленной кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-255">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="2f0d6-256">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой первой кривой третьего порядка в последовательности.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-256">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-257">Пример см. в следующих статьях:</span><span class="sxs-lookup"><span data-stu-id="2f0d6-257">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-258">Добавляет замкнутую кривую к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-258">Adds a closed curve to this path.</span></span> <span data-ttu-id="2f0d6-259">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-259">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-260">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-260">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-261">Добавляет замкнутую кривую к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-261">Adds a closed curve to this path.</span></span> <span data-ttu-id="2f0d6-262">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-262">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-263">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-263">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-264">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-264">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="2f0d6-265">Если первая и последняя точки в `points` массиве находятся в разных точках, то кривая закрывается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-265">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="2f0d6-266">Значение натяжения не может быть задано для этого метода, а значение по умолчанию равно 0,5.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-266">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-267">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-267">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-268">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-268">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-269">Добавляет замкнутую кривую к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-269">Adds a closed curve to this path.</span></span> <span data-ttu-id="2f0d6-270">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-270">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-271">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-271">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-272">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-272">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="2f0d6-273">Если первая и последняя точки в `points` массиве находятся в разных точках, то кривая закрывается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-273">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="2f0d6-274">Значение натяжения не может быть задано для этого метода, а значение по умолчанию равно 0,5.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-274">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-275">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-275">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-276">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-276">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="2f0d6-277">Значение между 0 и 1, определяющее степень изгиба кривой между точками; значение 0 соответствует наименьшей кривой (наиболее острый угол), а 1 – наиболее сглаженной кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-277">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-278">Добавляет замкнутую кривую к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-278">Adds a closed curve to this path.</span></span> <span data-ttu-id="2f0d6-279">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-279">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-280">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-280">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-281">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-281">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="2f0d6-282">Если первая и последняя точки в `points` массиве находятся в разных точках, то кривая закрывается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-282">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-283">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-283">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-284">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-284">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-285">Создает массив из шести точек (представляющих фундаментальный сплайн).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-285">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="2f0d6-286">Создает контур и добавляет кривые замкнутых фундаментальных кривых к пути (закрытой от конечной точки к начальной точке).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-286">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="2f0d6-287">Рисует путь к экрану.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-287">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="2f0d6-288">Обратите внимание, что используется натяжение 0,5.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-288">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-289">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-289">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="2f0d6-290">Значение между 0 и 1, определяющее степень изгиба кривой между точками; значение 0 соответствует наименьшей кривой (наиболее острый угол), а 1 – наиболее сглаженной кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-290">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-291">Добавляет замкнутую кривую к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-291">Adds a closed curve to this path.</span></span> <span data-ttu-id="2f0d6-292">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-292">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-293">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-293">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-294">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-294">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="2f0d6-295">Если первая и последняя точки в `points` массиве находятся в разных точках, то кривая закрывается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-295">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-296">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-296">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-297">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-297">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="2f0d6-298">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-298">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-299">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-299">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-300">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-300">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="2f0d6-301">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-301">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-302">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-302">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-303">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-303">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-304">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-304">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-305">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-305">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="2f0d6-306">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-306">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="2f0d6-307">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-307">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-308">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-308">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-309">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-309">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-310">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-310">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-311">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-311">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="2f0d6-312">Значение, определяющее степень изгиба кривой между контрольными точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-312">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="2f0d6-313">Значения, превышающие 1, приводят к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-313">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="2f0d6-314">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-314">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-315">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-315">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-316">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-316">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-317">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-317">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-318">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-318">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="2f0d6-319">Значение, определяющее степень изгиба кривой между контрольными точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-319">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="2f0d6-320">Значения, превышающие 1, приводят к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-320">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="2f0d6-321">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-321">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-322">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-322">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-323">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-323">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-324">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-324">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-325">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-325">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="2f0d6-326">Индекс элемента в массиве <paramref name="points" />, который используется в качестве первой точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-326">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="2f0d6-327">Значение, определяющее степень изгиба кривой между контрольными точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-327">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="2f0d6-328">Значения, превышающие 1, приводят к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-328">Values greater than 1 produce unpredictable results.</span></span></param>
        <param name="tension"><span data-ttu-id="2f0d6-329">Значение, определяющее степень изгиба кривой между контрольными точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-329">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="2f0d6-330">Значения, превышающие 1, приводят к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-330">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="2f0d6-331">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-331">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-332">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-332">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-333">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-333">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="2f0d6-334">Кривая начинается с точки в массиве, заданной `offset` параметром, и включает количество точек (сегментов), `numberOfSegments`заданных аргументом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-334">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-335">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-336">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-336">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-337">Создает массив из четырех точек (представляющих фундаментальный сплайн).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-337">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="2f0d6-338">Создает путь и использует массив точек, добавляет кривую к контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-338">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-339">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-339">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-340">Обратите внимание, что хотя массив содержит четыре точки, существует только три сегмента, то есть число, указанное в третьем аргументе вызова <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-340">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-341">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-341">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="2f0d6-342">Индекс элемента в массиве <paramref name="points" />, который используется в качестве первой точки кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-342">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="2f0d6-343">Количество сегментов, используемых для отображения кривой.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-343">The number of segments used to draw the curve.</span></span> <span data-ttu-id="2f0d6-344">Сегмент может быть определен как линия, соединяющая две точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-344">A segment can be thought of as a line connecting two points.</span></span></param>
        <param name="tension"><span data-ttu-id="2f0d6-345">Значение, определяющее степень изгиба кривой между контрольными точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-345">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="2f0d6-346">Значения, превышающие 1, приводят к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-346">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="2f0d6-347">Добавляет в текущую фигуру кривую сплайна.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-347">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-348">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-348">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-349">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-349">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="2f0d6-350">Кривая начинается с точки в массиве, заданной `offset`параметром, и включает количество точек (сегментов), заданных параметром `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-350">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-351">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-351">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-352">Добавляет эллипс в текущий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-352">Adds an ellipse to the current path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-353">Объект <see cref="T:System.Drawing.Rectangle" />, содержащий ограничивающий прямоугольник, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-353">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="2f0d6-354">Добавляет эллипс в текущий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-354">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-355">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-356">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-356">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="2f0d6-357">Создает ограничивающий прямоугольник, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-357">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="2f0d6-358">Создает контур и добавляет к нему эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-358">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="2f0d6-359">Рисует путь к экрану.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-359">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-360">Объект <see cref="T:System.Drawing.RectangleF" />, содержащий ограничивающий прямоугольник, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-360">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="2f0d6-361">Добавляет эллипс в текущий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-361">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-362">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-362">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-363">Координата X верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-363">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-364">Координата Y верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-364">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="2f0d6-365">Ширина ограничивающего прямоугольника, определяющего эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-365">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="2f0d6-366">Высота ограничивающего прямоугольника, определяющего эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-366">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="2f0d6-367">Добавляет эллипс в текущий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-367">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-368">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-368">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-369">Координата X верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-369">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-370">Координата Y верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-370">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="2f0d6-371">Ширина ограничивающего прямоугольника, определяющего эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-371">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="2f0d6-372">Высота ограничивающего прямоугольника, определяющего эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-372">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="2f0d6-373">Добавляет эллипс в текущий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-373">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-374">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-374">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-375">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-375">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="2f0d6-376">Объект <see cref="T:System.Drawing.Point" />, представляющий начальную точку линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-376">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="2f0d6-377">Объект <see cref="T:System.Drawing.Point" />, представляющий конечную точку линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-377">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="2f0d6-378">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-378">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-379">Этот метод добавляет сегмент линии, определенный указанными точками, в конец этого <xref:System.Drawing.Drawing2D.GraphicsPath>метода.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-379">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="2f0d6-380">Если в <xref:System.Drawing.Drawing2D.GraphicsPath>линии имеются предыдущие строки или кривые, то для соединения последней точки контура с первой точкой в новом сегменте линии рисуется отрезок.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-380">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-381">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-381">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="2f0d6-382">Объект <see cref="T:System.Drawing.PointF" />, представляющий начальную точку линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-382">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="2f0d6-383">Объект <see cref="T:System.Drawing.PointF" />, представляющий конечную точку линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-383">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="2f0d6-384">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-384">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-385">Этот метод добавляет сегмент линии, определенный указанными точками, в конец этого <xref:System.Drawing.Drawing2D.GraphicsPath>метода.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-385">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="2f0d6-386">Если в <xref:System.Drawing.Drawing2D.GraphicsPath>линии имеются предыдущие строки или кривые, то для соединения последней точки контура с первой точкой в новом сегменте линии рисуется отрезок.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-386">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-387">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-387">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="2f0d6-388">Координата X начальной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-388">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="2f0d6-389">Координата Y начальной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-389">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="2f0d6-390">Координата X конечной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-390">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="2f0d6-391">Координата Y конечной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-391">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="2f0d6-392">Добавляет отрезок прямой к текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-392">Appends a line segment to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-393">Этот метод добавляет сегмент линии, определенный указанными точками, в конец текущей фигуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-393">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="2f0d6-394">Если в <xref:System.Drawing.Drawing2D.GraphicsPath>линии имеются предыдущие строки или кривые, то для соединения последней точки контура с первой точкой в новом сегменте линии рисуется отрезок.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-394">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-395">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-396">Код создает путь, добавляет три линии, образующих треугольник, а затем выводит контур на экран.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-396">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="2f0d6-397">Координата X начальной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-397">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="2f0d6-398">Координата Y начальной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-398">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="2f0d6-399">Координата X конечной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-399">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="2f0d6-400">Координата Y конечной точки линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-400">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="2f0d6-401">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-401">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-402">Этот метод добавляет сегмент линии, определенный указанными точками, в конец этого <xref:System.Drawing.Drawing2D.GraphicsPath>метода.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-402">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="2f0d6-403">Если в <xref:System.Drawing.Drawing2D.GraphicsPath>линии имеются предыдущие строки или кривые, то для соединения последней точки контура с первой точкой в новом сегменте линии рисуется отрезок.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-403">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-404">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-404">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-405">Добавляет последовательность соединенных отрезков прямых в конец этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-405">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-406">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют добавляемые отрезки прямых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-406">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-407">Добавляет последовательность соединенных отрезков прямых в конец этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-407">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-408">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-408">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="2f0d6-409">`points` Параметр задает массив конечных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-409">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="2f0d6-410">Первые два указывают первую строку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-410">The first two specify the first line.</span></span> <span data-ttu-id="2f0d6-411">Каждая дополнительная точка указывает конечную точку сегмента линии, начальная точка которой является конечной точкой предыдущей строки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-411">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-412">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-412">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-413">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-413">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-414">Создает массив из четырех точек, описывающих треугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-414">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="2f0d6-415">Создает путь и добавляет массив строк.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-415">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="2f0d6-416">Рисует путь к экрану.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-416">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="2f0d6-417">Обратите внимание, что каждая строка после первой точки использует предыдущую точку в качестве начальной точки и новую точку в качестве конечной точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-417">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-418">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют добавляемые отрезки прямых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-418">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-419">Добавляет последовательность соединенных отрезков прямых в конец этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-419">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-420">Если на рисунке есть предыдущие строки или кривые, то добавляется линия, соединяющая конечную точку предыдущего сегмента с начальной точкой линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-420">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="2f0d6-421">`points` Параметр задает массив конечных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-421">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="2f0d6-422">Первые два указывают первую строку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-422">The first two specify the first line.</span></span> <span data-ttu-id="2f0d6-423">Каждая дополнительная точка указывает конечную точку сегмента линии, начальная точка которой является конечной точкой предыдущей строки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-423">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-424">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-424">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath"><span data-ttu-id="2f0d6-425">Добавляемый объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-425">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span></span></param>
        <param name="connect"><span data-ttu-id="2f0d6-426">Логическое значение, определяющее, является ли первая фигура в добавленном контуре частью последней фигуры в данном контуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-426">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="2f0d6-427">Значение <see langword="true" /> указывает, что (если это возможно) первая фигура в добавленном контуре является частью последней фигуры в данном контуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-427">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="2f0d6-428">Значение <see langword="false" /> указывает, что первая фигура в добавленном контуре отделена от последней фигуры в данном контуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-428">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span></span></param>
        <summary><span data-ttu-id="2f0d6-429">Добавляет указанный объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-429">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-430">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-430">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-431">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-431">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-432">Создает два контура, один треугольник справа вверх и второй треугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-432">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="2f0d6-433">Добавляет второй путь к первому.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-433">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="2f0d6-434">Выводит результирующий контур на экран.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-434">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-435">Добавляет контур сектора к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-435">Adds the outline of a pie shape to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-436">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий ограничивающий прямоугольник, определяющий эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-436">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-437">Начальный угол сектора, измеряемый в градусах от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-437">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-438">Угол между объектом <paramref name="startAngle" /> и концом сектора, измеряемый в градусах по часовой стрелке от объекта <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-438">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="2f0d6-439">Добавляет контур сектора к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-439">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-440">Круговая фигура определяется частичным контуром эллипса и двумя радиальными линиями, пересекающими конечные точки частичной структуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-440">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="2f0d6-441">Частичная структура начинается с `startAngle` (измеряется по часовой стрелке от оси x) и заканчивается `startAngle`на  + . `sweepAngle`</span><span class="sxs-lookup"><span data-stu-id="2f0d6-441">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-442">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-442">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-443">Координата по оси X левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-443">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-444">Координата по оси Y левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-444">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="2f0d6-445">Ширина ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-445">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="2f0d6-446">Высота ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-446">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-447">Начальный угол сектора, измеряемый в градусах от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-447">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-448">Угол между объектом <paramref name="startAngle" /> и концом сектора, измеряемый в градусах по часовой стрелке от объекта <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-448">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="2f0d6-449">Добавляет контур сектора к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-449">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-450">Круговая фигура определяется частичным контуром эллипса и двумя радиальными линиями, пересекающими конечные точки частичной структуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-450">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="2f0d6-451">Частичная структура начинается с `startAngle` (измеряется по часовой стрелке от оси x) и заканчивается `startAngle`на  + . `sweepAngle`</span><span class="sxs-lookup"><span data-stu-id="2f0d6-451">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-452">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-452">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-453">Код создает графический контур, добавляет круговую фигуру, а затем выводит контур на экран.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-453">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-454">Координата по оси X левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-454">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-455">Координата по оси Y левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-455">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="2f0d6-456">Ширина ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-456">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="2f0d6-457">Высота ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-457">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="2f0d6-458">Начальный угол сектора, измеряемый в градусах от оси X по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-458">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="2f0d6-459">Угол между объектом <paramref name="startAngle" /> и концом сектора, измеряемый в градусах по часовой стрелке от объекта <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-459">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="2f0d6-460">Добавляет контур сектора к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-460">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-461">Круговая фигура определяется частичным контуром эллипса и двумя радиальными линиями, пересекающими конечные точки частичной структуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-461">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="2f0d6-462">Частичная структура начинается с `startAngle` (измеряется по часовой стрелке от оси x) и заканчивается `startAngle`на  + . `sweepAngle`</span><span class="sxs-lookup"><span data-stu-id="2f0d6-462">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-463">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-463">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-464">Добавляет многоугольник к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-464">Adds a polygon to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-465">Массив структур <see cref="T:System.Drawing.Point" />, определяющий добавляемый многоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-465">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-466">Добавляет многоугольник к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-466">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-467">Точки в `points` массиве задают вершины многоугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-467">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="2f0d6-468">Если первая точка массива не совпадает с последней точкой, то эти две точки соединяются, чтобы закрыть многоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-468">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-469">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-469">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-470">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-470">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-471">Создает массив точек, определяющих многоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-471">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="2f0d6-472">Создает контур и добавляет к нему многоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-472">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-473">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-473">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="2f0d6-474">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий добавляемый многоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-474">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-475">Добавляет многоугольник к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-475">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-476">Точки в `points` массиве задают вершины многоугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-476">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="2f0d6-477">Если первая точка массива не совпадает с последней точкой, то эти две точки соединяются, чтобы закрыть многоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-477">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-478">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-478">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-479">Добавляет прямоугольник к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-479">Adds a rectangle to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-480">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий добавляемый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-480">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-481">Добавляет прямоугольник к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-481">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-482">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-482">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-483">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-483">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-484">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-484">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-485">Создает прямоугольник и добавляет прямоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-485">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-486">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-486">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="2f0d6-487">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий добавляемый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-487">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-488">Добавляет прямоугольник к этому контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-488">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-489">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-489">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-490">Добавляет последовательность прямоугольников к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-490">Adds a series of rectangles to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="2f0d6-491">Массив структур <see cref="T:System.Drawing.Rectangle" />, представляющий добавляемые прямоугольники.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-491">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-492">Добавляет последовательность прямоугольников к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-492">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-493">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-494">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-495">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-495">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-496">Создает массив прямоугольников и добавляет прямоугольники в путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-496">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-497">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-497">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="2f0d6-498">Массив структур <see cref="T:System.Drawing.RectangleF" />, представляющий добавляемые прямоугольники.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-498">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="2f0d6-499">Добавляет последовательность прямоугольников к данному контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-499">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-500">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-500">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-501">Добавляет строку текста в этот контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-501">Adds a text string to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2f0d6-502">Добавляемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-502">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="2f0d6-503">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-503">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="2f0d6-504">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-504">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="2f0d6-505">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-505">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="2f0d6-506">Высота рамки максимального пробела, ограничивающей символ.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-506">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="2f0d6-507">Объект <see cref="T:System.Drawing.Point" />, представляющий точку начала текста.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-507">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="2f0d6-508">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-508">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="2f0d6-509">Добавляет строку текста в этот контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-509">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-510">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-510">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-511">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-511">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-512">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-512">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-513">Настраивает аргументы строки и шрифта.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-513">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="2f0d6-514">Добавляет строку в путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-514">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-515">Отображает строку на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-515">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-516">Есть два важных момента, на которые следует обратить внимание. Во-первых, обратите внимание, что `fontStyle` аргумент приводится как целое число.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-516">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="2f0d6-517">Этот метод требует этого, чтобы два или более <xref:System.Drawing.FontStyle> члена можно было объединить для создания желаемого стиля шрифта <xref:System.Drawing.FontStyle.Italic> (в данном случае и <xref:System.Drawing.FontStyle.Underline>). <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A></span><span class="sxs-lookup"><span data-stu-id="2f0d6-517">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="2f0d6-518">Во-вторых, обратите <xref:System.Drawing.Graphics.FillPath%2A> внимание, что вместо <xref:System.Drawing.Graphics.DrawPath%2A> метода используется метод.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-518">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="2f0d6-519">Если <xref:System.Drawing.Graphics.FillPath%2A> используется, отображается сплошной текст, в то время как <xref:System.Drawing.Graphics.DrawPath%2A> если используется, текст будет иметь стиль контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-519">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2f0d6-520">Добавляемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-520">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="2f0d6-521">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-521">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="2f0d6-522">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-522">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="2f0d6-523">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-523">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="2f0d6-524">Высота рамки максимального пробела, ограничивающей символ.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-524">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="2f0d6-525">Объект <see cref="T:System.Drawing.PointF" />, представляющий точку начала текста.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-525">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="2f0d6-526">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-526">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="2f0d6-527">Добавляет строку текста в этот контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-527">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-528">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-528">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2f0d6-529">Добавляемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-529">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="2f0d6-530">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-530">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="2f0d6-531">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-531">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="2f0d6-532">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-532">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="2f0d6-533">Высота рамки максимального пробела, ограничивающей символ.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-533">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="2f0d6-534">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий прямоугольник, который ограничивает текст.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-534">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="2f0d6-535">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-535">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="2f0d6-536">Добавляет строку текста в этот контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-536">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-537">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-537">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2f0d6-538">Добавляемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-538">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="2f0d6-539">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-539">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="2f0d6-540">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-540">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="2f0d6-541">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-541">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="2f0d6-542">Высота рамки максимального пробела, ограничивающей символ.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-542">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="2f0d6-543">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает текст.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-543">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="2f0d6-544">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-544">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="2f0d6-545">Добавляет строку текста в этот контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-545">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-546">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-546">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-547">Удаляет все токены из этого контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-547">Clears all markers from this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-548">Используйте метод, чтобы создать маркер в текущем месте <xref:System.Drawing.Drawing2D.GraphicsPath>в. <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A></span><span class="sxs-lookup"><span data-stu-id="2f0d6-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="2f0d6-549"><xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> Используйте метод для прохода по существующим маркерам в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-549">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="2f0d6-550">Маркеры используются для разделения групп вложенных путей.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-550">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="2f0d6-551">Один или несколько вложенных путей могут содержаться между двумя маркерами.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-551">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-552">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-553">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-554">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-554">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-555">Добавляет несколько объектов к пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-555">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-556">Добавляет маркеры к пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-556">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-557">Удаляет все маркеры из пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-557">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-558">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-558">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-559">Создает точную копию этого контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-559">Creates an exact copy of this path.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-560"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, создаваемый этим методом, приводится к типу объекта.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-560">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-561">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-561">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-562">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-562">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-563">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-563">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-564">Добавляет несколько фигур к пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-564">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-565">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-565">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-566">Создает копию этого пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-566">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="2f0d6-567">Отображает новый путь на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-567">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-568">Обратите внимание, что <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> вызов метода должен быть приведен <xref:System.Drawing.Drawing2D.GraphicsPath>как.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-568">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-569">Замыкает все незамкнутые фигуры в этом контуре и открывает новую фигуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-569">Closes all open figures in this path and starts a new figure.</span></span> <span data-ttu-id="2f0d6-570">Каждая незамкнутая фигура замыкается путем соединения ее начальной и конечной точек линией.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-570">It closes each open figure by connecting a line from its endpoint to its starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-571">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-572">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-573">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-573">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-574">Добавляет несколько открытых фигур к контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-574">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-575">Закрывает все фигуры в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-575">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-576">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-576">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-577">Замыкает текущую фигуру и открывает новую фигуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-577">Closes the current figure and starts a new figure.</span></span> <span data-ttu-id="2f0d6-578">Если текущая фигура содержит последовательность соединенных линий и кривых, метод замыкает ее путем соединения начальной и конечной точек линией.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-578">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-579">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-579">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-580">Код создает треугольник, создавая новый путь, начав фигуру, добавляя две пересекающиеся линии к фигуре, а затем закрывая фигуру для формирования треугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-580">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="2f0d6-581">После этого путь будет выведен на экран.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-581">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-582">Освобождает все ресурсы, используемые этим объектом <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-582">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-583">Вызов <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> позволяет перераспределить ресурсы, используемые <xref:System.Drawing.Drawing2D.GraphicsPath> этим объектом, для других целей.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-583">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0d6-584">Получает или задает перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-584">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></summary>
        <value><span data-ttu-id="2f0d6-585">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-586">Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-586">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-587">Преобразует каждую кривую в данном контуре в последовательность соединенных отрезков прямых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-587">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-588">Преобразует каждую кривую в данном контуре в последовательность соединенных отрезков прямых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-588">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-589">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-589">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="2f0d6-590">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, посредством которого необходимо преобразовать этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> перед выравниванием.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <summary><span data-ttu-id="2f0d6-591">Применяет указанное преобразование, а затем преобразует каждую кривую в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в последовательность соединенных отрезков прямых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-591">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-592">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-592">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="2f0d6-593">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, посредством которого необходимо преобразовать этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> перед выравниванием.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <param name="flatness"><span data-ttu-id="2f0d6-594">Указывает максимальное допустимое расхождение между кривой и ее выровненной аппроксимацией.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-594">Specifies the maximum permitted error between the curve and its flattened approximation.</span></span> <span data-ttu-id="2f0d6-595">Значение по умолчанию равно 0,25.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-595">A value of 0.25 is the default.</span></span> <span data-ttu-id="2f0d6-596">Уменьшение значения выровненности увеличивает количество отрезков прямых в аппроксимации.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-596">Reducing the flatness value will increase the number of line segments in the approximation.</span></span></param>
        <summary><span data-ttu-id="2f0d6-597">Преобразует каждую кривую в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в последовательность соединенных отрезков прямых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-597">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-598">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-598">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-599">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-599">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-600">Создает графический контур и матрицу перевода.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-600">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="2f0d6-601">Добавляет кривую к контуру, используя четыре точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-601">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="2f0d6-602">Рисует контур (кривую) на экране с помощью черного пера.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-602">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="2f0d6-603">Сдвигает кривую вниз на 10 пикселей и выравнивает ее.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-603">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="2f0d6-604">Отображает кривую на экране с помощью красного пера.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-604">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="2f0d6-605">Обратите внимание, что красная кривая содержит плоские линии, соединяющие точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-605">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-606">Возвращает прямоугольник, ограничивающий этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-607">Возвращает прямоугольник, ограничивающий этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-607">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-608">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-608">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-609">Размер возвращаемого ограничивающего прямоугольника зависит от типа концов, ширины пера и предельного числа срезов пера, и, следовательно, выдает «свободную подборку» для ограничивающего контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-609">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="2f0d6-610">Приблизительная формула: первоначальный ограничивающий прямоугольник расширяется по ширине пера, и этот результат умножается на предел среза, а также на дополнительное поле, разрешающее конечные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-610">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-611">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-611">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-612">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-612">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-613">Создает графический путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-613">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="2f0d6-614">Добавляет эллипс (окружность) к нему и отображает его на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-614">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-615">Извлекает ограничивающий прямоугольник для окружности с помощью вызова <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> и рисует прямоугольник на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-615">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-616">Создает второй графический контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-616">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="2f0d6-617">Добавляет окружность и расширяет контур до ширины, равной 10.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-617">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="2f0d6-618">Отображает контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-618">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-619">Извлекает ограничивающий прямоугольник для второго круга.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-619">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="2f0d6-620">Рисует ограничивающий прямоугольник на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-620">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-621">Отображает размер прямоугольника в диалоговом окне.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-621">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="2f0d6-622">Обратите внимание, что ограничивающий прямоугольник справа больше (для учета дополнительной ширины линии).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-622">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="2f0d6-623">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий преобразование, которое нужно применить к данному контуру до вычисления ограничивающего прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-623">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="2f0d6-624">Этот контур не преобразуется постоянно; преобразование используется только для процесса вычисления ограничивающего прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-624">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="2f0d6-625">Возвращает ограничивающий прямоугольник для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, когда данный контур преобразуется с помощью указанного объекта <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-625">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-626">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-626">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-627">Размер возвращаемого ограничивающего прямоугольника зависит от типа концов, ширины пера и предельного числа срезов пера, и, следовательно, выдает «свободную подборку» для ограничивающего контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-627">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="2f0d6-628">Приблизительная формула: первоначальный ограничивающий прямоугольник расширяется по ширине пера, и этот результат умножается на предел среза, а также на дополнительное поле, разрешающее конечные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-628">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-629">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-629">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="2f0d6-630">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий преобразование, которое нужно применить к данному контуру до вычисления ограничивающего прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-630">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="2f0d6-631">Этот контур не преобразуется постоянно; преобразование используется только для процесса вычисления ограничивающего прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-631">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-632">Объект <see cref="T:System.Drawing.Pen" />, посредством которого производится отображение объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-632">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <summary><span data-ttu-id="2f0d6-633">Возвращает ограничивающий прямоугольник для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, когда данный контур преобразуется с помощью указанного объекта <see cref="T:System.Drawing.Drawing2D.Matrix" /> и отображается с помощью заданного объекта <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-633">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-634">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-634">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-635">Размер возвращаемого ограничивающего прямоугольника зависит от типа концов, ширины пера и предельного числа срезов пера, и, следовательно, выдает «свободную подборку» для ограничивающего контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-635">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="2f0d6-636">Приблизительная формула: первоначальный ограничивающий прямоугольник расширяется по ширине пера, и этот результат умножается на предел среза, а также на дополнительное поле, разрешающее конечные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-636">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-637">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-637">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-638">Получает последнюю точку массива <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-638">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-639">Объект <see cref="T:System.Drawing.PointF" />, представляющий последнюю точку в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-639">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-640">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-640">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-641">Код создает путь, добавляет строку к пути, а затем получает последнюю точку в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-641">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-642">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-642">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="2f0d6-643">Объект <see cref="T:System.Drawing.Point" />, определяющий местоположение для тестирования.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-643">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-644">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-644">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-645">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-645">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-646">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-646">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-647">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-647">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-648">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-648">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="2f0d6-649">Объект <see cref="T:System.Drawing.PointF" />, определяющий местоположение для тестирования.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-649">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-650">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-650">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-651">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-651">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-652">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-652">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-653">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-653">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-654">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-654">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="2f0d6-655">Объект <see cref="T:System.Drawing.Point" />, определяющий местоположение для тестирования.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-655">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-656">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-656">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-657">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-657">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-658">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-658">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-659">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-659">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-660">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-660">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="2f0d6-661">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-661">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-662">Матрица `graphics` преобразования временно применяется перед проверкой видимости.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-662">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-663">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-663">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="2f0d6-664">Объект <see cref="T:System.Drawing.PointF" />, определяющий местоположение для тестирования.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-664">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-665">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-665">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-666">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-666">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-667">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-667">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-668">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри (под) контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-668">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-669">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-669">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="2f0d6-670">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-670">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-671">Матрица `graphics` преобразования временно применяется перед проверкой видимости.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-671">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-672">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-672">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-673">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-673">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-674">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-674">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-675">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-675">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-676">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-676">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-677">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-677">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-678">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-678">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-679">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-679">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-680">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-680">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-681">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-681">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-682">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-682">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-683">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-683">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-684">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-684">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-685">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-685">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-686">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-686">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-687">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-687">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-688">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-688">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-689">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-689">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-690">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-690">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-691">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-691">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-692">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-692">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-693">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-693">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="2f0d6-694">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-694">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-695">Матрица `graphics` преобразования временно применяется перед проверкой видимости.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-695">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-696">Следующий пример кода предназначен для использования с Windows Forms, и для него требуется <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> событие.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-696">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="2f0d6-697">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-697">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-698">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-698">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-699">Добавляет прямоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-699">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-700">Создает расширенное перо и расширяет путь с помощью этого пера (чтобы сделать пример более понятным),</span><span class="sxs-lookup"><span data-stu-id="2f0d6-700">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="2f0d6-701">Проверяет точку (100, 50), чтобы определить, находится ли она внутри (под) одной из краев прямоугольника путем вызова <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-701">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="2f0d6-702">Результат отображается в окне сообщения (в данном случае true).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-702">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="2f0d6-703">Иными словами, на этом этапе отображается граница.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-703">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-704">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-704">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-705">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-705">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="2f0d6-706">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-706">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-707">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-707">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-708">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-708">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-709">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри (под) контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-709">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-710">Этот метод проверяет, отображается ли контур данного контура в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-710">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="2f0d6-711">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-711">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-712">Матрица `graphics` преобразования параметра временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-712">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-713">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-713">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-714">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-714">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="2f0d6-715">Объект <see cref="T:System.Drawing.Point" />, определяющий проверяемую точку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-715">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-716">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-716">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-717">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-717">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-718">Пример см. в разделе `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-718">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="2f0d6-719">Объект <see cref="T:System.Drawing.PointF" />, определяющий проверяемую точку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-719">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-720">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-720">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-721">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-721">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-722">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-722">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="2f0d6-723">Объект <see cref="T:System.Drawing.Point" />, определяющий проверяемую точку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-723">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-724">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-724">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-725">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-725">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-726">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-726">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-727">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-727">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-728">Матрица `graphics` преобразования параметра временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-728">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-729">Пример см. в разделе `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-729">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="2f0d6-730">Объект <see cref="T:System.Drawing.PointF" />, определяющий проверяемую точку.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-730">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-731">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-731">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-732">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-732">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-733">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-733">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-734">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-734">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-735">Матрица `graphics` преобразования параметра временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-735">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-736">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-736">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-737">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-737">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-738">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-738">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-739">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-739">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-740">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-740">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-741">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-741">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-742">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-742">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-743">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-743">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="2f0d6-744">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-744">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-745">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-745">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-746">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-746">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-747">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-747">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-748">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-748">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-749">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-749">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-750">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, путем использования заданного объекта <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-750">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-751">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-751">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-752">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-752">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-753">Матрица `graphics` преобразования временно применяется перед проверкой видимости.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-753">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-754">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-754">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-755">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-755">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-756">Создает контур и добавляет к нему эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-756">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-757">Проверяет, содержится ли указанная точка в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-757">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-758">Отображает результат в диалоговом окне.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-758">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="2f0d6-759">Координата тестируемой точки по оси X.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-759">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="2f0d6-760">Координата тестируемой точки по оси Y.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-760">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="2f0d6-761">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-761">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="2f0d6-762">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в видимой вырезанной области заданного объекта <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-762">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="2f0d6-763">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-763">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-764">Координаты проверяемой точки задаются в координатах мира.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-764">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="2f0d6-765">Матрица `graphics` преобразования параметра временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-765">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-766">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-766">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0d6-767">Получает объект <see cref="T:System.Drawing.Drawing2D.PathData" />, инкапсулирующий массивы точек (<paramref name="points" />) и типов (<paramref name="types" />) для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-767">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <value><span data-ttu-id="2f0d6-768">Объект <see cref="T:System.Drawing.Drawing2D.PathData" />, инкапсулирующий массивы точек и типов для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0d6-769">Получает точки в контуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-769">Gets the points in the path.</span></span></summary>
        <value><span data-ttu-id="2f0d6-770">Массив объектов <see cref="T:System.Drawing.PointF" />, представляющий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-770">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0d6-771">Получает типы соответствующих точек в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-771">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span></span></summary>
        <value><span data-ttu-id="2f0d6-772">Массив байтов, определяющий типы соответствующих точек в контуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-772">An array of bytes that specifies the types of the corresponding points in the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-773">Массив байтов, возвращаемых <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> свойством, задает типы точек и флаги точек данных в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-773">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="2f0d6-774">Для каждой точки в битах от 0 до 2 указывается тип точки, а в битах от 3 до 7 — набор флагов, указывающих атрибуты точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-774">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="2f0d6-775">В следующей таблице показаны возможные значения и их значение.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-775">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="2f0d6-776">Значение</span><span class="sxs-lookup"><span data-stu-id="2f0d6-776">Value</span></span>|<span data-ttu-id="2f0d6-777">Смысл</span><span class="sxs-lookup"><span data-stu-id="2f0d6-777">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="2f0d6-778">0</span><span class="sxs-lookup"><span data-stu-id="2f0d6-778">0</span></span>|<span data-ttu-id="2f0d6-779">Указывает, что точка является началом фигуры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-779">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="2f0d6-780">1</span><span class="sxs-lookup"><span data-stu-id="2f0d6-780">1</span></span>|<span data-ttu-id="2f0d6-781">Указывает, что точка является одной из двух конечных точек линии.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-781">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="2f0d6-782">3</span><span class="sxs-lookup"><span data-stu-id="2f0d6-782">3</span></span>|<span data-ttu-id="2f0d6-783">Указывает, что точка является конечной точкой или контрольной точкой сплайна Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-783">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="2f0d6-784">0x7</span><span class="sxs-lookup"><span data-stu-id="2f0d6-784">0x7</span></span>|<span data-ttu-id="2f0d6-785">Маскирует все биты, кроме трех младших битов, которые указывают тип точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-785">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="2f0d6-786">0x20</span><span class="sxs-lookup"><span data-stu-id="2f0d6-786">0x20</span></span>|<span data-ttu-id="2f0d6-787">Указывает, что точка является маркером.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-787">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="2f0d6-788">0x80</span><span class="sxs-lookup"><span data-stu-id="2f0d6-788">0x80</span></span>|<span data-ttu-id="2f0d6-789">Указывает, что точка является последней точкой в замкнутом вложенном контуре (рис.).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-789">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0d6-790">Получает число элементов в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> или <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-790">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></summary>
        <value><span data-ttu-id="2f0d6-791">Целое число, определяющее количество элементов в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> или <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-791">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-792">Очищает массивы <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> и <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> и устанавливает <see cref="T:System.Drawing.Drawing2D.FillMode" /> в <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-792">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-793">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-794">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-795">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-795">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-796">Добавляет к нему несколько примитивов.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-796">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="2f0d6-797">Рисует массив точек пути на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-797">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-798">Сбрасывает путь к пустому состоянию.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-798">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="2f0d6-799">Повторно запрашивает массив точек (если он существует).</span><span class="sxs-lookup"><span data-stu-id="2f0d6-799">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="2f0d6-800">Отображает массив на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-800">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-801">Обратите внимание, что не находит массив после вызова Reset.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-801">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-802">Изменяет порядок точек в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> на противоположный.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-802">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-803">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-803">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-804">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-804">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-805">Создает путь и добавляет к пути несколько примитивов.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-805">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-806">Рисует массив точек пути на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-806">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-807">Рисует на экране массив с обратными точками.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-807">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-808">Обратите внимание, что второй список точек находится в обратном порядке от первого.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-808">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-809">Устанавливает токен на этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-809">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-810">Этот метод создает маркер на пути, который можно использовать для разделения разделов пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-810">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="2f0d6-811">Затем можно использовать <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> методы для прохода по маркерам в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-811">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="2f0d6-812">Маркеры используются для разделения групп вложенных путей.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-812">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="2f0d6-813">Один или несколько вложенных путей могут содержаться между двумя маркерами в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-813">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-814">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-814">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-815">Код создает путь и добавляет несколько примитивов к пути, разделенному маркерами, и выводит путь на экран.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-815">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0d6-816">Открывает новую фигуру, не замыкая при этом текущую фигуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-816">Starts a new figure without closing the current figure.</span></span> <span data-ttu-id="2f0d6-817">Все последующие точки, добавляемые к контуру, добавляются к этой новой фигуре.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-817">All subsequent points added to the path are added to this new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-818">При необходимости пользователь должен удерживать исходные точки.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-818">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="2f0d6-819">Исходные точки преобразуются в контрольные точки Безье третьего порядка внутри, поэтому нет механизма для возврата исходных точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-819">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="2f0d6-820">Этот метод запускает новый вложенный путь в пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-820">This method starts a new subpath in the path.</span></span> <span data-ttu-id="2f0d6-821">Вложенные пути позволяют разделить путь на разделы и использовать <xref:System.Drawing.Drawing2D.GraphicsPathIterator> класс для прохода по вложенным путям.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-821">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-822">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-822">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-823">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-823">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-824">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-824">Creates a path.</span></span>  
  
-   <span data-ttu-id="2f0d6-825">Добавляет два набора фигур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-825">Adds two sets of figures.</span></span> <span data-ttu-id="2f0d6-826">Первый набор фигур объединяет четыре примитива в две.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-826">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="2f0d6-827">Второй набор фигур объединяет те же четыре примитива (за исключением того, что они смещаются по оси y) на три цифры.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-827">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="2f0d6-828">Рисует все фигуры на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-828">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-829">Обратите внимание на различие между двумя наборами фигур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-829">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="2f0d6-830">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, представляющий применяемое преобразование.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="2f0d6-831">Применяет матрицу преобразования к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-831">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-832">Преобразование может масштабировать, преобразовывать, поворачивать или наклонять <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-832">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-833">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-833">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-834">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-834">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-835">Создает контур и добавляет к нему эллипс.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-835">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-836">Рисует контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-836">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="2f0d6-837">Создает матрицу преобразования для преобразования единиц контура 100 в направлении оси x.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-837">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="2f0d6-838">Рисует преобразованный контур на экране.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-838">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="2f0d6-839">Обратите внимание, что исходный эллипс рисуется черным цветом, а преобразованный эллипс — красным.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-839">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-840">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-840">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="2f0d6-841">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, заданный объектом <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-841">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="2f0d6-842">Массив может содержать три или четыре элемента.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-842">The array can contain either three or four elements.</span></span> <span data-ttu-id="2f0d6-843">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-843">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="2f0d6-844">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-844">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <summary><span data-ttu-id="2f0d6-845">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-845">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-846">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-846">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="2f0d6-847">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, заданный объектом <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-847">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="2f0d6-848">Массив может содержать три или четыре элемента.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-848">The array can contain either three or four elements.</span></span> <span data-ttu-id="2f0d6-849">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-849">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="2f0d6-850">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-850">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="2f0d6-851">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <summary><span data-ttu-id="2f0d6-852">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-852">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-853">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-853">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="2f0d6-854">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, заданный объектом <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-854">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="2f0d6-855">Массив может содержать три или четыре элемента.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-855">The array can contain either three or four elements.</span></span> <span data-ttu-id="2f0d6-856">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-856">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="2f0d6-857">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-857">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="2f0d6-858">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="2f0d6-859">Перечисление <see cref="T:System.Drawing.Drawing2D.WarpMode" />, указывающее, перспективный или билинейный режим использует операция перекоса.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <summary><span data-ttu-id="2f0d6-860">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-860">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-861">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-861">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="2f0d6-862">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, заданный объектом <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-862">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="2f0d6-863">Массив может содержать три или четыре элемента.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-863">The array can contain either three or four elements.</span></span> <span data-ttu-id="2f0d6-864">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-864">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="2f0d6-865">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-865">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="2f0d6-866">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="2f0d6-867">Перечисление <see cref="T:System.Drawing.Drawing2D.WarpMode" />, указывающее, перспективный или билинейный режим использует операция перекоса.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <param name="flatness"><span data-ttu-id="2f0d6-868">Значение от 0 до 1, определяющее, насколько гладок результирующий контур.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-868">A value from 0 through 1 that specifies how flat the resulting path is.</span></span> <span data-ttu-id="2f0d6-869">Для получения дополнительных сведений см. методы <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-869">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span></span></param>
        <summary><span data-ttu-id="2f0d6-870">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-870">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0d6-871">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-871">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-872">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-872">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-873">Создает контур и добавляет прямоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-873">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-874">Рисует прямоугольник на экране черным цветом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-874">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="2f0d6-875">Деформацию контура с помощью искривления перспективы.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-875">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="2f0d6-876">Рисует искривленный прямоугольник (путь) на экране красным цветом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-876">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0d6-877">Заменяет данный контур кривыми, окружающими область, заполняемую при отображении контура указанным пером.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-877">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="2f0d6-878">Объект <see cref="T:System.Drawing.Pen" />, определяющий расстояние между исходными очертаниями контура и новыми очертаниями, которые создает данный метод.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-878">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <summary><span data-ttu-id="2f0d6-879">Добавляет дополнительное очертание к контуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-879">Adds an additional outline to the path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-880">Этот метод создает контур вокруг исходных строк в этом <xref:System.Drawing.Drawing2D.GraphicsPath>, с расстоянием между существующими строками и новым контуром, равным значению ширины <xref:System.Drawing.Pen> объекта, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>используемого в вызове.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-880">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="2f0d6-881">Если необходимо заполнить пробел между строками, необходимо использовать <xref:System.Drawing.Graphics.FillPath%2A> вместо. <xref:System.Drawing.Graphics.DrawPath%2A></span><span class="sxs-lookup"><span data-stu-id="2f0d6-881">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-882">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-882">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="2f0d6-883">Объект <see cref="T:System.Drawing.Pen" />, определяющий расстояние между исходными очертаниями контура и новыми очертаниями, которые создает данный метод.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-883">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="2f0d6-884">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура перед расширением.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-884">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <summary><span data-ttu-id="2f0d6-885">Добавляет дополнительное очертание в объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-885">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-886">Этот метод создает контур вокруг исходных строк в этом <xref:System.Drawing.Drawing2D.GraphicsPath>, с расстоянием между существующими строками и новым контуром, равным значению ширины <xref:System.Drawing.Pen> объекта, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>используемого в вызове.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-886">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="2f0d6-887">Если необходимо заполнить пробел между строками, необходимо использовать <xref:System.Drawing.Graphics.FillPath%2A> вместо. <xref:System.Drawing.Graphics.DrawPath%2A></span><span class="sxs-lookup"><span data-stu-id="2f0d6-887">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-888">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-888">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="2f0d6-889">Объект <see cref="T:System.Drawing.Pen" />, определяющий расстояние между исходными очертаниями контура и новыми очертаниями, которые создает данный метод.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-889">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="2f0d6-890">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура перед расширением.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-890">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <param name="flatness"><span data-ttu-id="2f0d6-891">Значение, указывающее сглаженность кривых.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-891">A value that specifies the flatness for curves.</span></span></param>
        <summary><span data-ttu-id="2f0d6-892">Заменяет данный объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> кривыми, окружающими область, заполняемую при отображении контура указанным пером.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-892">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0d6-893">Этот метод создает контур вокруг исходных строк в этом <xref:System.Drawing.Drawing2D.GraphicsPath>, с расстоянием между существующими строками и новым контуром, равным значению ширины <xref:System.Drawing.Pen> объекта, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>используемого в вызове.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-893">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="2f0d6-894">Если необходимо заполнить пробел между строками, необходимо использовать <xref:System.Drawing.Graphics.FillPath%2A> вместо. <xref:System.Drawing.Graphics.DrawPath%2A></span><span class="sxs-lookup"><span data-stu-id="2f0d6-894">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0d6-895">Следующий пример кода предназначен для использования с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-895">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="2f0d6-896">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-896">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2f0d6-897">Создает контур и добавляет к нему два эллипса.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-897">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-898">Рисует контур черным цветом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-898">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="2f0d6-899">Расширяет путь.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-899">Widens the path.</span></span>  
  
-   <span data-ttu-id="2f0d6-900">Выводит контур красным цветом.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-900">Draws the path in red.</span></span>  
  
 <span data-ttu-id="2f0d6-901">Обратите внимание, что во <xref:System.Drawing.Graphics.FillPath%2A> второй отрисовке используется <xref:System.Drawing.Graphics.DrawPath%2A>вместо, и поэтому визуализированная фигура имеет заполненную структуру.</span><span class="sxs-lookup"><span data-stu-id="2f0d6-901">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
