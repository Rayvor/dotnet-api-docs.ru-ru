<Type Name="IpcServerChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99b7f3a75baa21ad761dd0fffac15ba155b3a0c6" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70340908" /></Metadata><TypeSignature Language="C#" Value="public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcServerChannel&#xA;Implements IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcServerChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcServerChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1fa9d-101">Реализует канал сервера для удаленных вызовов, в котором для передачи сообщений используется система межпроцессорного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-101">Implements a server channel for remote calls that uses the IPC system to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="1fa9d-102">Каналы используются .NET Framework инфраструктурой удаленного взаимодействия для передачи удаленных вызовов.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-102">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="1fa9d-103">Когда клиент вызывает удаленный объект, вызов сериализуется в сообщение, которое отправляется по каналу клиента и получается по каналу сервера.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="1fa9d-104">После получения сообщения оно десериализуется и обрабатывается.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="1fa9d-105">Все возвращенные значения передаются по каналу сервера и принимаются по каналу клиента.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="1fa9d-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> Класс использует систему межпроцессного взаимодействия Windows (IPC) для передачи сообщений между доменами приложений на одном компьютере.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.</span></span> <span data-ttu-id="1fa9d-107">При обмене данными между доменами приложений на одном компьютере канал IPC выполняется гораздо быстрее, чем каналы TCP или HTTP.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-107">When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.</span></span>  
  
 <span data-ttu-id="1fa9d-108">Для выполнения дополнительной обработки сообщений на стороне сервера укажите реализацию <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> интерфейса, через который передаются все сообщения, обрабатываемые <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> экземпляром.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-108">To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.</span></span>  
  
 <span data-ttu-id="1fa9d-109"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> Экземпляр принимает сообщения, сериализованные в двоичном или SOAP формате.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-109">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.</span></span>  
  
 <span data-ttu-id="1fa9d-110">Объект имеет связанные свойства конфигурации, которые могут быть заданы во время выполнения либо в файле конфигурации (путем вызова статического <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> метода), либо <xref:System.Collections.IDictionary> программно (путем <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> передачи коллекции в <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> конструктор).</span><span class="sxs-lookup"><span data-stu-id="1fa9d-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="1fa9d-111">Список этих свойств конфигурации см. в документации <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> по конструктору.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-111">For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1fa9d-112">При задании `exclusiveAddressUse` `false` для свойства значения в `properties` аргументе для <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> одного и того же именованного канала можно зарегистрировать несколько объектов.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-112">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="1fa9d-113">В таких случаях запросы могут переключиться на любой зарегистрированный канал.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-113">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="1fa9d-114">Этот параметр считается безопасным, только в том случае, если используются ALC.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-114">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-115">В следующем примере кода показано, <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> как использовать класс.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-115">The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.</span></span>  
  
 [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]
 [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  
  
 <span data-ttu-id="1fa9d-116">Приведенный выше код используется для предоставления следующего удаленного объекта.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-116">The preceding code is used to expose the following remote object.</span></span>  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 <span data-ttu-id="1fa9d-117">Пример удаленного клиента, использующего этот объект, см. в <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>разделе.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-117">For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fa9d-118">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="1fa9d-119">Имя порта межпроцессорного взаимодействия, которое будет использоваться каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-119">The name of the IPC port to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-120">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> с указанным именем порта межпроцессного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-120">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified IPC port name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1fa9d-121">В следующем примере кода показано, как использовать этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]
 [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="1fa9d-122">Коллекция <see cref="T:System.Collections.IDictionary" />, которая определяет значения для свойств конфигурации, используемых в канале.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-122">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1fa9d-123">Реализация интерфейса <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> для использования каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-123">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-124">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> с указанными свойствами канала и приемником.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-124">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-125">Дополнительные сведения о свойствах конфигурации канала см. в разделе [Свойства конфигурации канала и модуля форматирования](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1fa9d-125">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="1fa9d-126">Если функции приемника не требуются, присвойте `sinkProvider` `null`параметру значение.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-126">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1fa9d-127">При задании `exclusiveAddressUse` `false` для свойства значения в `properties` аргументе для <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> одного и того же именованного канала можно зарегистрировать несколько объектов.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-127">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="1fa9d-128">В таких случаях запросы могут переключиться на любой зарегистрированный канал.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-128">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="1fa9d-129">Этот параметр считается безопасным, только в том случае, если используются ALC.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-129">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-130">В следующем примере кода показано, как использовать этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-130">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="1fa9d-131">Свойства конфигурации каналов и модуля форматирования</span><span class="sxs-lookup"><span data-stu-id="1fa9d-131">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1fa9d-132">Имя канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-132">The name of the channel.</span></span></param>
        <param name="portName"><span data-ttu-id="1fa9d-133">Имя порта межпроцессорного взаимодействия, которое будет использоваться каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-133">The name of the IPC port to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-134">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> с указанными именем канала и именем порта межпроцессного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-134">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name and IPC port name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-135">Этот конструктор задает <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> свойство с `name` помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-135">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="1fa9d-136">Если требуется зарегистрировать несколько каналов, каждый канал должен иметь уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-136">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-137">В следующем примере кода показано, как использовать этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-137">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider * System.Security.AccessControl.CommonSecurityDescriptor -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider, securityDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="1fa9d-138">Коллекция <see cref="T:System.Collections.IDictionary" />, которая определяет значения для свойств конфигурации, используемых в канале.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-138">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1fa9d-139">Реализация интерфейса <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> для использования каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-139">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <param name="securityDescriptor"><span data-ttu-id="1fa9d-140">Объект <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" />, который будет использоваться каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-140">A <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-141">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> с указанными свойствами канала, приемником и дескриптором безопасности.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-141">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties, sink, and security descriptor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-142">Дополнительные сведения о свойствах конфигурации канала см. в разделе [Свойства конфигурации канала и модуля форматирования](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1fa9d-142">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="1fa9d-143">Если функции приемника не требуются, присвойте `sinkProvider` `null`параметру значение.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-143">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span> <span data-ttu-id="1fa9d-144">Если дескриптор безопасности не требуется, задайте `securityDescriptor` для `null`параметра значение.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-144">If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1fa9d-145">При задании `exclusiveAddressUse` `false` для свойства значения в `properties` аргументе для <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> одного и того же именованного канала можно зарегистрировать несколько объектов.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-145">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="1fa9d-146">В таких случаях запросы могут переключиться на любой зарегистрированный канал.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-146">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="1fa9d-147">Этот параметр считается безопасным, только в том случае, если используются ALC.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-147">This setting is considered secure only if ALCs are also used.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="1fa9d-148">Свойства конфигурации каналов и модуля форматирования</span><span class="sxs-lookup"><span data-stu-id="1fa9d-148">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1fa9d-149">Имя канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-149">The name of the channel.</span></span></param>
        <param name="portName"><span data-ttu-id="1fa9d-150">Имя порта межпроцессорного взаимодействия, которое будет использоваться каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-150">The name of the IPC port to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1fa9d-151">Реализация интерфейса <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> для использования каналом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-151">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-152">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> с указанными именем канала, именем порта межпроцессного взаимодействия и приемником.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-152">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name, IPC port name, and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-153">Этот конструктор задает <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> свойство с `name` помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-153">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="1fa9d-154">Если требуется зарегистрировать несколько каналов, каждый канал должен иметь уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-154">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="1fa9d-155">Если функции приемника не требуются, присвойте `sinkProvider` `null`параметру значение.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-155">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-156">В следующем примере кода показано, как использовать этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-156">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelReceiver.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa9d-157">Получает данные, относящиеся к каналу.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-157">Gets channel-specific data.</span></span></summary>
        <value><span data-ttu-id="1fa9d-158">Экземпляр <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" />, содержащий данные, относящиеся к каналу.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-158">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-159">Несмотря на то, что возвращается как <xref:System.Object?displayProperty=nameWithType> экземпляр класса, значение этого свойства может быть приведено к <xref:System.Runtime.Remoting.Channels.ChannelDataStore> экземпляру, описывающему канал <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> , который прослушивает объект.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-159">Although returned as an instance of the <xref:System.Object?displayProperty=nameWithType> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-160">В следующем примере кода показано, как использовать свойство <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A>.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-160">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa9d-161">Получает имя текущего канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-161">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="1fa9d-162">Экземпляр <see cref="T:System.String" />, в котором содержится имя канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-162">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-163">Каждый зарегистрированный канал имеет уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-163">Every registered channel has a unique name.</span></span> <span data-ttu-id="1fa9d-164">Имя используется для получения определенного канала при вызове <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-164">The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method.</span></span> <span data-ttu-id="1fa9d-165">Имя по умолчанию — IPC Server.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-165">The default name is "ipc server".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-166">В следующем примере кода показано, как использовать свойство <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-166">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa9d-167">Получает приоритет текущего канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-167">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="1fa9d-168">Целое число, обозначающее приоритет, назначенный данному каналу.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-168">An integer that indicates the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-169">Приоритет управляет порядком, в котором данные канала отображаются в <xref:System.Runtime.Remoting.ObjRef> экземпляре; каналы с более высоким приоритетом отображаются до каналов с более низким приоритетом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-169">The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels.</span></span> <span data-ttu-id="1fa9d-170">Клиенты пытаются подключиться к каналам сервера в том порядке, в котором они перечислены в <xref:System.Runtime.Remoting.ObjRef> экземпляре.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-170">Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance.</span></span> <span data-ttu-id="1fa9d-171">Приоритет по умолчанию — 20; отрицательные приоритеты разрешены.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-171">The default priority is 20; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-172">В следующем примере кода показано, как использовать свойство <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A>.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-172">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberSignature Language="F#" Value="member this.GetChannelUri : unit -&gt; string" Usage="ipcServerChannel.GetChannelUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fa9d-173">Возвращает универсальный код ресурса (URI) текущего канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-173">Returns the URI of the current channel.</span></span></summary>
        <returns><span data-ttu-id="1fa9d-174">Объект <see cref="T:System.String" />, в котором содержится URI канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-174">A <see cref="T:System.String" /> that contains the URI of the channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-175">Универсальный код ресурса (URI) канала используется клиентом для указания удаленного канала сервера.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-175">The channel URI is used by the client to specify a remote server channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-176">В следующем примере кода показано, <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> как использовать метод.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-176">The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> method.</span></span>  
  
 [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]
 [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="ipcServerChannel.GetUrlsForUri objectUri" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.GetUrlsForUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri"><span data-ttu-id="1fa9d-177">URI объекта, для которого требуются URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-177">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="1fa9d-178">Возвращает массив всех URL-адресов объекта с указанным универсальным кодом ресурса (URI), находящимся в текущем экземпляре <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" />.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-178">Returns an array of all the URLs for the object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1fa9d-179">Массив всех URL-адресов объекта с указанным URI, находящимся в текущем экземпляре <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-179">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-180">Этот метод используется <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> методом.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-180">This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-181">В следующем примере кода показано применение метода <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A>.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-181">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa9d-182">Возвращает или задает логическое значение, позволяющее определить, является ли текущий канал безопасным.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-182">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="1fa9d-183">Логическое значение, позволяющее определить, является ли текущий экземпляр безопасным.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-183">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * string -&gt; string&#xA;override this.Parse : string * string -&gt; string" Usage="ipcServerChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1fa9d-184">URL-адрес, из которого выделяется URI удаленного хорошо известного объекта.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-184">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="1fa9d-185">Когда этот метод возвращает значение, он содержит экземпляр <see cref="T:System.String" />, которая включает URI удаленного хорошо известного объекта.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-185">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span></param>
        <summary><span data-ttu-id="1fa9d-186">Выделяет универсальный код ресурса (URI) канала и универсальный код ресурса (URI) известного удаленного объекта из указанного URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-186">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="1fa9d-187">URI текущего канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-187">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-188">Универсальный код ресурса (URI) объекта — это значение, уникально идентифицирующее конкретный экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-188">The URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa9d-189">В следующем примере кода показано применение метода <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-189">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="ipcServerChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StartListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1fa9d-190">Объект, в котором указано состояние инициализации или значение <see langword="null" />, если нет необходимости передавать в канал определенное состояние.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-190">An object that specifies an initialization state, or <see langword="null" />, if you do not want to pass a specific state to the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-191">Дает текущему каналу команду на отслеживание запросов.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-191">Instructs the current channel to start listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-192">Нет необходимости вызывать этот метод, чтобы начать прослушивание только что инициализированного канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-192">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="1fa9d-193">Этот метод используется для перезапуска прослушивания по каналу <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> после вызова метода для прекращения прослушивания канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-193">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.</span></span>  
  
 <span data-ttu-id="1fa9d-194">Объект данных можно использовать для передачи определенного состояния инициализации в канал.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-194">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="1fa9d-195">Если вы не хотите передавать определенное состояние в канал, передайте `null` в `data` качестве значения параметра.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-195">If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="1fa9d-196">Указанный порт прослушивания недоступен.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-196">The specified listening port is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="ipcServerChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StopListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1fa9d-197">Объект, в котором указано состояние инициализации или значение <see langword="null" />, если нет необходимости передавать в канал определенное состояние.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-197">An object that specifies an initialization state, or <see langword="null" />, if you do not want to pass a specific state to the channel.</span></span></param>
        <summary><span data-ttu-id="1fa9d-198">Дает текущему каналу команду на прекращение отслеживания запросов.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-198">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa9d-199">Этот метод используется для прекращения прослушивания канала.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-199">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="1fa9d-200">Чтобы перезапустить прослушивание, <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-200">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="1fa9d-201">Объект данных можно использовать для передачи определенного состояния инициализации в канал.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-201">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="1fa9d-202">Если вы не хотите передавать определенное состояние в канал, передайте `null` в `data` качестве значения параметра.</span><span class="sxs-lookup"><span data-stu-id="1fa9d-202">If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
