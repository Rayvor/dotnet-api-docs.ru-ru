<Type Name="OperationContextScope" FullName="System.ServiceModel.OperationContextScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a908c8e9ef292a92543a436a8ec6672781b38f92" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73381574" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContextScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContextScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContextScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContextScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContextScope sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type OperationContextScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c6ca3-101">Создает блок, в котором объект <see cref="T:System.ServiceModel.OperationContext" /> является областью.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-101">Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ca3-102">Класс <xref:System.ServiceModel.OperationContextScope> используется для создания области для определенного объекта <xref:System.ServiceModel.OperationContext> или области для нового <xref:System.ServiceModel.OperationContext> объекта с помощью указанного объекта <xref:System.ServiceModel.IContextChannel>.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-102">Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object.</span></span> <span data-ttu-id="c6ca3-103"><xref:System.ServiceModel.OperationContextScope> можно использовать в службе Windows Communication Foundation (WCF) или клиентское приложение WCF.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-103">An <xref:System.ServiceModel.OperationContextScope> can be used in a Windows Communication Foundation (WCF) service or WCF client application.</span></span>  
  
 <span data-ttu-id="c6ca3-104">После создания контекста текущей операции объектом <xref:System.ServiceModel.OperationContextScope>, контекст <xref:System.ServiceModel.OperationContext> можно использовать для следующих целей.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-104">Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:</span></span>  
  
-   <span data-ttu-id="c6ca3-105">Просмотр и изменение заголовков и других свойств входящих и исходящих сообщений.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-105">Access and modify incoming and outgoing message headers and other properties.</span></span>  
  
-   <span data-ttu-id="c6ca3-106">Доступ к среде выполнения, в том числе к диспетчерам, основному приложению, каналу и расширениям.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-106">Access the runtime, including dispatchers, the host, channel, and extensions.</span></span>  
  
-   <span data-ttu-id="c6ca3-107">Доступ к другим типам контекстов, например к контексту безопасности, контексту экземпляра и контексту запросов.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-107">Access other types of contexts, such as security, instance, and request contexts.</span></span>  
  
-   <span data-ttu-id="c6ca3-108">Доступ к каналу, связанному с объектом <xref:System.ServiceModel.OperationContext> или (если в канале реализован сеанс <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) с идентификатором сеанса соответствующего канала.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-108">Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) the associated channel's session identifier.</span></span>  
  
 <span data-ttu-id="c6ca3-109">При создании области <xref:System.ServiceModel.OperationContextScope> текущий контекст сохраняется <xref:System.ServiceModel.OperationContext>, и новый контекст <xref:System.ServiceModel.OperationContext> выводится свойством <xref:System.ServiceModel.OperationContext.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-109">When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property.</span></span> <span data-ttu-id="c6ca3-110">Когда область <xref:System.ServiceModel.OperationContextScope> удаляется, восстанавливается исходный контекст <xref:System.ServiceModel.OperationContext>.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-110">When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="c6ca3-111">Не используйте асинхронный шаблон await в блоке OperationContextScope.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-111">Do not use the asynchronous "await" pattern within a OperationContextScope block.</span></span> <span data-ttu-id="c6ca3-112">Когда происходит продолжение, оно может выполняться в другом потоке, а OperationContextScope — для конкретного потока.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-112">When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</span></span> <span data-ttu-id="c6ca3-113">Если необходимо вызвать "await" для асинхронного вызова, используйте его за пределами блока OperationContextScope.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-113">If you need to call "await" for an async call, use it outside of the OperationContextScope block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6ca3-114">В следующем примере показано, как использовать область контекста <xref:System.ServiceModel.OperationContextScope> для создания нового контекста в клиентском приложении для добавления пользовательского заголовка к исходящему сообщению.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-114">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]
 [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6ca3-115">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" />.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="c6ca3-116">Канал, который следует использовать при создании области для нового контекста <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-116">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <summary><span data-ttu-id="c6ca3-117">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" />, использующего указанный канал <see cref="T:System.ServiceModel.IContextChannel" /> для создания нового контекста <see cref="T:System.ServiceModel.OperationContext" /> для области действия.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-117">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ca3-118">Конструктор <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> следует использовать для создания нового контекста <xref:System.ServiceModel.OperationContext> для клиентского канала, который можно будет использовать для добавления или изменения заголовков исходящих сообщений, чтения заголовков входящих сообщений или доступа к другим свойствам среды выполнения контекста <xref:System.ServiceModel.OperationContext>.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-118">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.</span></span>  
  
 <span data-ttu-id="c6ca3-119">Заголовки, добавляемые в свойство <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> нового контекста <xref:System.ServiceModel.OperationContext>, будут применяться только на канале, переданном в конструктор <xref:System.ServiceModel.OperationContextScope.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-119">The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor.</span></span> <span data-ttu-id="c6ca3-120">Если пользователь создаст новый канал в области, заголовки не будут применяться для сообщений, отправляемых по новому каналу.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-120">If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6ca3-121">В следующем примере показано, как использовать область контекста <xref:System.ServiceModel.OperationContextScope> для создания нового контекста в клиентском приложении для добавления пользовательского заголовка к исходящему сообщению.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-121">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.OperationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::OperationContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.OperationContext -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c6ca3-122">Активный контекст <see cref="T:System.ServiceModel.OperationContext" /> в созданной области.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-122">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</span></span></param>
        <summary><span data-ttu-id="c6ca3-123">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationContextScope" /> для создания области для указанного объекта <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-123">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ca3-124">Конструктор <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> служит для создания блока кода, для которого указанный объект <xref:System.ServiceModel.OperationContextScope> является текущей областью действия.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-124">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="operationContextScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6ca3-125">Восстанавливает первоначальный контекст <see cref="T:System.ServiceModel.OperationContext" /> в активное состояние и удаляет объект <see cref="T:System.ServiceModel.OperationContextScope" />.</span><span class="sxs-lookup"><span data-stu-id="c6ca3-125">Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
