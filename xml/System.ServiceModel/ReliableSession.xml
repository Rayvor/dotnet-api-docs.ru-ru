<Type Name="ReliableSession" FullName="System.ServiceModel.ReliableSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e91b0f2d082648b0297852981a7d01c98c3475f8" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70367294" /></Metadata><TypeSignature Language="C#" Value="public class ReliableSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReliableSession extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReliableSession" />
  <TypeSignature Language="VB.NET" Value="Public Class ReliableSession" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSession" />
  <TypeSignature Language="F#" Value="type ReliableSession = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства, содержащиеся в классе <xref:System.ServiceModel.ReliableSession>, представляют собой подмножество свойств, содержащихся в классе <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, доступ к которым можно получить из предопределенной привязки. Это подмножество состоит из свойств <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> и <xref:System.ServiceModel.ReliableSession.Ordered%2A>. Класс <xref:System.ServiceModel.ReliableSession> ссылается на те же объекты, что и класс <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, поэтому при изменении значения одного класса изменяется значение другого класса. Этот класс объединяет эти два свойства элемента привязки надежного сеанса для повышения возможности обнаружения.  
  
   
  
## Examples  
 В следующем примере показано, как создать новый надежный сеанс, получить доступ к значениям свойств этого сеанса и изменить их. Класс <xref:System.ServiceModel.ReliableSession> позволяет записать следующее.  
  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ReliableSession" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ReliableSession" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ reliableSessionBindingElement);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession reliableSessionBindingElement" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionBindingElement" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reliableSessionBindingElement">Элемент <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />, значения свойств которого используются для инициализации надежного сеанса.</param>
        <param name="binding">Элемент <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />, значения свойств которого используются для инициализации надежного сеанса.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ReliableSession" /> из элемента привязки надежного сеанса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reliableSessionBindingElement" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает интервал времени, в течение которого служба остается неактивной, перед тем как будет закрыта.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, в котором указывается интервал времени, в течение которого служба остается неактивной, перед тем как будет закрыта. По умолчанию используется значение 10 минут.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство возвращает или задает значение свойства <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>.  
  
 Под активностью канала понимается получение сообщений от приложения или инфраструктуры. Свойство времени ожидания в период бездействия задает максимальный промежуток времени, в течение которого поддерживается неактивный сеанс. Если продолжительность периода бездействия превышает заданное значение <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>, сеанс прерывается инфраструктурой, и канал закрывается с ошибкой. Надежный сеанс ликвидируется в одностороннем порядке.  
  
 Если отправляющее приложение не имеет сообщений для отправки, надежный сеанс обычно не закрывается с ошибкой из-за бездействия, напротив, механизм поддержания активности поддерживает сеанс в активном состоянии бесконечно. Обратите внимание, что диспетчер может независимо прервать надежный сеанс, если сообщения приложения не отправляются и не получаются. Таким образом, время ожидания в период бездействия обычно истекает, если условия сети таковы, что любые сообщения не получаются, или если возникает сбой на стороне отправителя.  
  
 Задание времени ожидания не позволяет серверу поддерживать надежный сеанс, если клиент не закрыл его. Если надежный сеанс не получил сообщение о продолжительности периода бездействия, сервер закрывает его. Это уменьшает риск потенциальной атаки типа "отказ в обслуживании".  
  
 При работе с надежным сеансом используются два разных таймера периода бездействия, значениям которых необходимо следовать для поддержки подключения. По истечении времени любого из таймеров периода бездействия соединение сбрасывается.  
  
-   Первый таймер периода бездействия находится в надежном сеансе и называется <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. Этот таймер периода бездействия запускается, если в течение времени ожидания сообщения приложения или инфраструктуры не были получены. Сообщение инфраструктуры — это сообщение, созданное для одного из протоколов в стеке каналов, например поддержки активности или подтверждения, оно не содержит данные приложения.  
  
-   Второй таймер периода бездействия находится в службе и использует параметр <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> привязки. Этот таймер периода бездействия запускается, если в течение времени ожидания сообщения приложения не были получены.  
  
 Поскольку подключение сбрасывается, когда включается любой из таймеров, увеличение значения <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>, если оно больше значения <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>, не оказывает никакого влияния. Значение по умолчанию для обоих таймеров составляет 10 минут, поэтому всегда следует увеличивать значения обоих таймеров, чтобы провести различие при использовании надежного сеанса.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше или равно нулю.</exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.ReliableSession.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должен ли при доставке сохраняться порядок отправки сообщений.</summary>
        <value>Значение <see langword="true" />, если следует доставлять сообщения в порядке отправки; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство возвращает или задает значение свойства <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
