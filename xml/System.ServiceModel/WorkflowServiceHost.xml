<Type Name="WorkflowServiceHost" FullName="System.ServiceModel.WorkflowServiceHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0c8def330464596b4fa0cc089ea537382b10693" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70367032" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WorkflowServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowServiceHost : System::ServiceModel::ServiceHostBase" />
  <TypeSignature Language="F#" Value="type WorkflowServiceHost = class&#xA;    inherit ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет узел для служб, основанных на рабочем процессе.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализует узел, используемый моделью программирования модели службы Windows Communication Foundation (WCF).  
  
 Используйте класс <xref:System.ServiceModel.WorkflowServiceHost> для настройки и отображения рабочего процесса в виде службы, предназначенной для использования клиентскими приложениями, если для отображения службы не используются службы IIS или службы активации Windows (WAS). Как службы IIS, так и службы WAS взаимодействуют с объектом <xref:System.ServiceModel.WorkflowServiceHost> от вашего имени.  
  
 Чтобы отобразить рабочий процесс в виде службы для использования вызывающими ее объектами, WCF требуется полное описание службы (представляемое классом <xref:System.ServiceModel.Description.ServiceDescription>). Класс <xref:System.ServiceModel.WorkflowServiceHost> создает описание <xref:System.ServiceModel.Description.ServiceDescription> из типа службы рабочего процесса и конфигурационной информации, а затем использует это описание, чтобы создать объекты <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> для каждой конечной точки из этого описания.  
  
 Используйте объект <xref:System.ServiceModel.WorkflowServiceHost> для загрузки службы рабочего процесса, настройки конечных точек, применения параметров безопасности и запуска прослушивателей, обрабатывающих входящие запросы.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение рабочего процесса.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием потока байтов, содержащего определение рабочего процесса, и базовых адресов указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если определение рабочего процесса хранится в безопасном хранилище, например в базе данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Строка, содержащая путь к файлу определения рабочего процесса.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием пути к определению рабочего процесса и базовым адресам указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если определение рабочего процесса содержится в файле Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (Type workflowType, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type workflowType, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowType As Type, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(Type ^ workflowType, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : Type * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowType, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowType">Тип <see cref="T:System.Type" /> экземпляра рабочего процесса.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием типа рабочего процесса и базовых адресов указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если рабочий процесс определен как скомпилированный тип.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение рабочего процесса.</param>
        <param name="ruleDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение правил рабочего процесса.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием потока байтов, содержащего определение рабочего процесса, потока байтов, содержащего определение правил рабочего процесса, и базовых адресов указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если определение рабочего процесса и определение правил хранятся в безопасном хранилище, например в базе данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Строка, содержащая путь к файлу определения рабочего процесса.</param>
        <param name="ruleDefinitionPath">Строка, содержащая путь к файлу определения правил рабочего процесса.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием пути к определению рабочего процесса, пути к определению правил рабочего процесса, и базовых адресов указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если определение рабочего процесса и определение правил рабочего процесса содержатся в файлах Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение рабочего процесса.</param>
        <param name="ruleDefinition">Поток <see cref="T:System.IO.Stream" />, содержащий определение правил рабочего процесса.</param>
        <param name="typeProvider">Поставщик типов, реализующий интерфейс <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием потока байтов, содержащего определение рабочего процесса, потока байтов, содержащего определение правил рабочего процесса, поставщика типа для настраиваемых типов действий и базовых адресов указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если ваш скомпилированный рабочий процесс ссылается на настраиваемые типы, определенные в отдельной сборке.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Строка, содержащая путь к файлу определения рабочего процесса.</param>
        <param name="ruleDefinitionPath">Строка, содержащая путь к файлу определения правил рабочего процесса.</param>
        <param name="typeProvider">Поставщик типов, реализующий интерфейс <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
        <param name="baseAddress">Массив типа <see cref="T:System.Uri" />, содержащий базовые адреса размещенной службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WorkflowServiceHost" /> с использованием пути к определению рабочего процесса, пути к определению правил рабочего процесса, поставщика типов для настраиваемых типов действий и базовых адресов указанной службы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот перегруженный метод, если рабочий процесс определен в файле разметки рабочего процесса (XOML) и ссылается на настраиваемые типы, определенные в отдельной сборке.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет конечную точку службы в размещенную службу.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
        <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
        <param name="address">Адрес для добавленной конечной точки.</param>
        <summary>Добавляет конечную точку службы рабочего процесса с использованием указанных контракта, привязки и адреса конечной точки.</summary>
        <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="implementedContract" /> имеет значение <see langword="null" />.

- или -

Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.
-или-

Служба рабочего процесса не реализует <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
        <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
        <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.</param>
        <summary>Добавляет конечную точку службы к службе рабочего процесса с указанными контрактом, привязкой и кодом URI, содержащим адрес конечной точки.</summary>
        <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> — <see langword="null" />.

-или-

Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.

- или -

Служба рабочего процесса не реализует <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
        <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
        <param name="address">Адрес конечной точки для службы.</param>
        <param name="listenUri">Код <see cref="T:System.Uri" />, по которому конечные точки службы могут ожидать передачи данных.</param>
        <summary>Добавляет конечную точку службы к службе рабочего процесса с указанными контрактом, привязкой, адресом конечной точки и кодом URI, по которому служба ожидает передачи данных.</summary>
        <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> — <see langword="null" />.

-или-

Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Служба рабочего процесса не реализует <paramref name="implementedContract" />.

- или -

Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">Тип <see cref="T:System.Type" /> контракта для добавленной конечной точки.</param>
        <param name="binding">Привязка <see cref="T:System.ServiceModel.Channels.Binding" /> для добавленной конечной точки.</param>
        <param name="address">Код <see cref="T:System.Uri" />, содержащий адрес для добавленной конечной точки.</param>
        <param name="listenUri">Код <see cref="T:System.Uri" />, по которому конечные точки службы могут ожидать передачи данных.</param>
        <summary>Добавляет конечную точку службы к службе рабочего процесса с указанными контрактом, привязкой, кодом URI, содержащим адрес конечной точки, и кодом URI, по которому служба ожидает передачи данных.</summary>
        <returns>Конечная точка <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, добавленная к службе рабочего процесса.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> — <see langword="null" />.

- или -

Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Служба рабочего процесса не реализует <paramref name="implementedContract" />.

-или-

Атрибут <see cref="T:System.ServiceModel.ServiceContractAttribute" /> не задан для <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="override this.CreateDescription : IDictionary -&gt; System.ServiceModel.Description.ServiceDescription" Usage="workflowServiceHost.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">Когда метод возвращает управление, объект <see cref="T:System.Collections.Generic.IDictionary`2" /> содержит контракты с ключами для размещенной службы, которые были реализованы.</param>
        <summary>Создает описание службы рабочего процесса.</summary>
        <returns>Описание <see cref="T:System.ServiceModel.Description.ServiceDescription" /> службы рабочего процесса.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected override void OnClosing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.OnClosing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosing();" />
      <MemberSignature Language="F#" Value="override this.OnClosing : unit -&gt; unit" Usage="workflowServiceHost.OnClosing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Этот метод вызывается перед переводом <see cref="T:System.ServiceModel.WorkflowServiceHost" /> в состояние закрытия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В реализации по умолчанию <xref:System.ServiceModel.WorkflowServiceHost> вызывает <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> перед вызовом <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=nameWithType>. Это означает, что среда выполнения рабочего процесса завершит работу до закрытия узла службы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
