<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="967c9b8215308ec0fca1cd8c3bf4b1ba749f469f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69101362" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Задает поведение локального выполнения метода службы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использует атрибут <xref:System.ServiceModel.OperationBehaviorAttribute>, чтобы указать, какое поведение выполнения, характерное для операции, имеет операция при выполнении. (Чтобы задать поведение выполнения на уровне службы, используйте атрибут <xref:System.ServiceModel.ServiceBehaviorAttribute>.)  
  
> [!NOTE]
>  Также можно использовать атрибут <xref:System.ServiceModel.OperationBehaviorAttribute>, чтобы настроить операцию контракта обратного вызова в дуплексном клиентском приложении. При использовании в операции обратного вызова свойство <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> должно иметь значение <xref:System.ServiceModel.ReleaseInstanceMode.None>, или в среде выполнения выводится исключение <xref:System.InvalidOperationException>.  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute> Атрибут — это функция модели программирования Windows Communication Foundation (WCF), которая обеспечивает общие функции, которые разработчикам в противном случае необходимо реализовать самостоятельно.  
  
-   Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> управляет удалением объектов параметров, переданных операции, при завершении операции.  
  
-   Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> указывает, следует ли автоматически завершать транзакцию, в которой выполняется метод, при отсутствии необработанных исключений.  
  
-   Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> указывает, должен ли метод выполняться в транзакции.  
  
-   Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> указывает, может, должна или не может ли операция службы олицетворить идентификацию вызывающей стороны.  
  
-   Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> указывает время удаления объектов службы во время процесса вызова метода.  
  
   
  
## Examples  
 В следующем примере кода показана операция, которая выполняется в обязательной распределенной транзакции. Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> указывает, что метод выполняется в транзакции вызывающей стороны, а свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> указывает, что при отсутствии необработанных исключений транзакция завершается автоматически. При наличии необработанного исключения транзакция прерывается.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор без параметров создает экземпляр класса со следующими параметрами по умолчанию:  
  
-   Значение свойства <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> — `true`.  
  
-   Значение свойства <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> — `false`.  
  
-   Значение свойства <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> — <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
-   Значение параметра <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> — <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, следует ли автоматически удалять параметры.</summary>
        <value><see langword="true" />значение, если параметры должны быть автоматически удалены; в противном случае —. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, удаляются ли службой все высвобождаемые параметры (входные, выходные или ссылочные), которые были созданы при обработке сообщения. Значение по умолчанию — `true`. Задайте для этого свойства значение `false`, если необходимо запретить системе высвобождение ресурсов и кэшировать их.  
  
 Например, если свойству <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> присвоено значение `false`, отправитель отвечает за закрытие потока на отправляющей стороне.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее уровень олицетворения вызывающей стороны, поддерживаемый операцией.</summary>
        <value>Одно из значений перечисления <see cref="T:System.ServiceModel.ImpersonationOption" />. Значение по умолчанию — <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> (вместе с конфигурацией привязки, поддерживающей олицетворение), чтобы включить заданные методы (отмеченные свойством <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>, для которого задано значение <xref:System.ServiceModel.ImpersonationOption.Allowed> или <xref:System.ServiceModel.ImpersonationOption.Required>) для выполнения с использованием идентификации вызывающей стороны. Дополнительные сведения о том, как олицетворение выполняется при совместном <xref:System.ServiceModel.ImpersonationOption.Allowed> использовании <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> со свойством, см. в разделе [Делегирование и олицетворение](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) и [инструкции. Олицетворять клиента в службе](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  
  
> [!NOTE]
>  При добавлении конечной точки службы, выполняющей олицетворение, программным образом необходимо использовать либо один из методов <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A>, либо метод <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType>, чтобы правильно загрузить контракт в новый объект <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>. Использование файла конфигурации не требует дополнительных действий.  
  
 Если олицетворение не поддерживается, могут быть предусмотрены конкретные сценарии. Дополнительные сведения см. в разделе [неподдерживаемые сценарии](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).  
  
   
  
## Examples  
 В следующем примере кода службы требуется выполнить олицетворение, присвоив свойству <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> значение <xref:System.ServiceModel.ImpersonationOption.Required>.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 В следующем примере кода показано использование свойства <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> для задания учетных данных клиентского приложения до вызова операции, которой эти учетные данные требуются для олицетворения.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, когда удалять объект службы в процессе вызова операции.</summary>
        <value>Одно из значений перечисления <see cref="T:System.ServiceModel.ReleaseInstanceMode" />. Значение по умолчанию — <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Используйте свойство, чтобы указать, когда Windows Communication Foundation (WCF) перезапускает объект службы в процессе выполнения метода. По умолчанию объект службы удаляется в соответствии со значением свойства <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>. Задание значения <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> изменяет это поведение по умолчанию.  
  
 Режим <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> не дает гарантий потоков. Если требуется новый неизмененный объект при выполнении службы, задайте для свойства <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> значение <xref:System.ServiceModel.InstanceContextMode.PerCall>.  
  
 В сценариях транзакции свойство <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> часто используется для удаления старых данных, связанных с объектом службы, до обработки вызова метода. Также можно обеспечить удаление объектов службы, связанных с транзакциями, после успешного выполнения транзакции, присвоив свойству <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> значение `true`.  
  
 Присутствуют следующие варианты выбора поведений.  
  
-   Удаление объекта службы перед вызовом операции.  
  
-   Удаление объекта службы после вызова операции.  
  
-   Удаление объекта службы как перед, так и после вызова операции.  
  
-   Отсутствие поведения удаления.  
  
 Также можно использовать атрибут <xref:System.ServiceModel.OperationBehaviorAttribute>, чтобы настроить операцию контракта обратного вызова в дуплексном клиентском приложении. При использовании в операции обратного вызова свойство <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> должно иметь значение <xref:System.ServiceModel.ReleaseInstanceMode.None>, или в среде выполнения выводится исключение <xref:System.InvalidOperationException>.  
  
 Кроме того, важно понимать, что если служба создается путем передачи объекта службы в конструктор <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType>, значение этого свойства считается <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
   
  
## Examples  
 В следующем примере кода показано использование перечисления <xref:System.ServiceModel.ReleaseInstanceMode> для удаления объектов службы перед вызовом и после вызова.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Данное значение не является одним из значений <see cref="T:System.ServiceModel.ReleaseInstanceMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="parameters">Параметры привязки, переданные для поддержки поведений привязки.</param>
        <summary>Реализует метод <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="proxy">Точка доступа расширяемости для вставки пользовательских клиентских изменений для этой операции.</param>
        <summary>Реализует поведение операций клиента.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">Описание операции, измененное для поддержки свойств <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="dispatch">Точка расширяемости для вставки изменений пользовательских служб для этой операции.</param>
        <summary>Реализует поведение операций службы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">Описание операции для проверки.</param>
        <summary>Реализует поведение проверки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли автоматически завершать текущую область транзакции при отсутствии необработанных исключений.</summary>
        <value>Значение <see langword="true" /> для автоматического завершения области транзакции при успешном выполнении операции; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задайте для свойства <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> значение `false`, чтобы завершить или прервать транзакции непосредственно в коде операции.  
  
 Обработанные исключения могут вызываться в ходе операции без автоматического прерывания транзакции. Только необработанные исключения активируют автоматическое прерывание.  
  
   
  
## Examples  
 В следующем примере кода показана операция, которая выполняется в обязательной распределенной транзакции. Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> указывает, что операция выполняется в области транзакции, а свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> указывает, что при отсутствии необработанных исключений область транзакции завершается автоматически. При наличии необработанного исключения транзакция прерывается.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, требуется ли методу область транзакции для исключения.</summary>
        <value>Значение <see langword="true" />, если методу требуется область транзакции для выполнения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задайте для свойства <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> значение `true`, чтобы операция выполнялась в области транзакции. Если доступна поточная транзакция, операция выполняется в этой транзакции. В противном случае создается новая транзакция, используемая для выполнения операции. Привязка, указанная в конечной точке, управляет тем, поддерживаются ли поточные транзакции. Следовательно, чтобы получить соответствующее поведение, необходимо понимать взаимосвязь между тем, допускает ли привязка и свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> поток транзакций. В следующей таблице показано возможное поведение.  
  
|TransactionScopeRequired|Привязка допускает поток транзакций|Вызывающая сторона передает транзакцию|Результат|  
|-|-|-|-|  
|False|False|Нет|Метод выполняется без транзакции.|  
|Да|False|Нет|Метод создается и выполняется с новой транзакцией.|  
|True или False|False|Да|Ошибка SOAP возвращается для заголовка транзакции.|  
|False|Да|Да|Метод выполняется без транзакции.|  
|Да|Да|Да|Метод выполняется в поточной транзакции.|  
  
   
  
## Examples  
 В следующем примере кода показана операция, которая выполняется в обязательной распределенной транзакции. Свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> указывает, что операция выполняется в области транзакции, а свойство <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> указывает, что при отсутствии необработанных исключений область транзакции завершается автоматически. При наличии необработанного исключения транзакция прерывается.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
