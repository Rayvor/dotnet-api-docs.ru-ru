<Type Name="MsmqBindingBase" FullName="System.ServiceModel.MsmqBindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdc487c6c9c69a403ec3441cef99a650b63a8fa9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70564305" /></Metadata><TypeSignature Language="C#" Value="public abstract class MsmqBindingBase : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqBindingBase extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqBindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqBindingBase&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqBindingBase abstract : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type MsmqBindingBase = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Базовый класс для элементов привязки <see cref="T:System.ServiceModel.NetMsmqBinding" /> и <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот абстрактный класс содержит свойства, общие для элементов <xref:System.ServiceModel.NetMsmqBinding> и <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding>. Все базовые принципы работы с очередями отображаются в виде свойств.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqBindingBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqBindingBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqBindingBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает универсальный код ресурса (URI), содержащий информацию о расположении очереди недоставленных сообщений для каждого приложения; в этой очереди размещаются просроченные сообщения или сообщения, которые не удалось передать или доставить.</summary>
        <value>Код <see cref="T:System.Uri" />, содержащий информацию о расположении очереди недоставленных сообщений для каждого приложения. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь недоставленных сообщений — это очередь в диспетчере очередей отправляющего приложения для просроченных сообщений, которые не удалось доставить.  
  
 Универсальный код ресурса (URI), определяемый свойством <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A>, должен использовать схему net.msmq.  
  
 Если свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> присвоено значение <xref:System.ServiceModel.DeadLetterQueue.None> или <xref:System.ServiceModel.DeadLetterQueue.System>, свойству <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> необходимо присвоить значение `null`. Если значение свойства <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> отличается от значения `null`, свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> необходимо присвоить значение <xref:System.ServiceModel.DeadLetterQueue.Custom>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение перечисления, указывающее тип используемой очереди недоставленных сообщений.</summary>
        <value>Значение перечисления <see cref="T:System.ServiceModel.DeadLetterQueue" />, указывающее тип используемой очереди недоставленных сообщений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь недоставленных сообщений — это очередь в диспетчере очередей отправляющего приложения, в которой находятся недоставленные просроченные сообщения. Перечисление для очереди недоставленных сообщений определяет тип используемой очереди недоставленных сообщений. Возможные значения:  
  
-   `None`: очередь недоставленных сообщений не требуется. При сбое доставки сообщения запись об этом событии не помещается в очередь недоставленных сообщений. Это значение по умолчанию, если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `false`.  
  
-   `System`: для записи сообщений, которые не удалось доставить, используется системная очередь недоставленных сообщений. В очереди сообщений MSMQ имеются системная очередь недоставленных транзакционных сообщений и системная очередь недоставленных нетранзакционных сообщений, предназначенные для записи сообщений, которые не удалось доставить из очередей транзакционных и нетранзакционных сообщений, соответственно. Это значение по умолчанию, если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `true`.  
  
-   `Custom`: для записи сообщений, которые не удалось доставить, используется очередь, указанная в свойстве <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A>.  
  
 Ниже перечислены возможные причины, по которым сообщение может не дойти до принимающего приложения.  
  
-   Транзакционное сообщение отправлено в нетранзакционную очередь.  
  
-   Нетранзакционное сообщение отправлено в транзакционную очередь.  
  
-   В очередь, принимающую только сообщения, которые прошли проверку подлинности, отправлено сообщение, не прошедшее проверку подлинности.  
  
-   В очередь, принимающую только зашифрованные сообщения, отправлено незашифрованное сообщение.  
  
-   Срок действия сообщения истек до того, как оно было доставлено получателю.  
  
-   При получении сообщения была превышена квота хранилища сообщений на конечном компьютере или квота хранилища очереди назначения, либо не хватило пространства памяти на конечном компьютере.  
  
-   У отправителя нет [прав доступа](https://go.microsoft.com/fwlink/?LinkID=96167) , необходимых для размещения сообщения в очереди назначения.  
  
-   Цифровая сигнатура сообщения недействительна.  
  
-   Диспетчеру очереди назначения не удалось расшифровать зашифрованное сообщение.  
  
-   Очередь назначения была очищена или удалена до извлечения сообщения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, устойчивыми или неустойчивыми являются сообщения, обрабатываемые этой привязкой.</summary>
        <value>Значение <see langword="true" />, если сообщения, обрабатываемые этой привязкой, являются устойчивыми; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда диспетчер очередей прекращает отвечать, устойчивое сообщение сохраняется, а неустойчивое — нет. Неустойчивые сообщения используются, если приложения допускают случайные потери сообщений.  
  
 Если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `true`, сообщения должны быть устойчивыми.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, принимаются ли сообщения, обрабатываемые этой привязкой, только один раз.</summary>
        <value>Значение <see langword="true" />, если сообщения, обрабатываемые этой привязкой, принимаются только один раз; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщение может быть отправлено с гарантией или без нее. Гарантия позволяет приложению обеспечить достижение отправленным сообщением очереди полученных сообщений, а если этого не произошло, приложение может определить этот факт, считав данные из очереди недоставленных сообщений.  
  
 Сообщения, отправленные со свойством <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, имеющим значение `true`, должны отправляться только в транзакционную очередь.  
  
 Если свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присвоено значение `true`, это означает, что очередь сообщений (MSMQ) гарантированно поместит отправленное сообщение в очередь полученных сообщений один и только один раз. В случае сбоя доставки сообщение отправляется в очередь недоставленных сообщений.  
  
 Для сообщений, которым требуется, чтобы свойство <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> имело значение `false`, свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> по умолчанию присваивается значение `null`.  
  
 Для сообщений, которым требуется, чтобы свойство <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> имело значение `true`, свойству <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> по умолчанию присваивается используемая в MSMQ системная очередь транзакционных сообщений.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальный размер (в байтах) сообщения, обрабатываемого данной привязкой.</summary>
        <value>Максимальный размер сообщения (в байтах), обрабатываемого данной привязкой. Значение по умолчанию - 65 536 байт.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это ограничение размера сообщения предназначено для уменьшения уязвимости к атакам типа «отказ в обслуживании» (DoS).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальное число циклов повторных попыток доставки сообщений принимающему приложению.</summary>
        <value>Максимальное число циклов повторных попыток доставки сообщений приложению. Значение по умолчанию — 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В одном цикле повторений выполняется попытка доставить сообщение приложению заданное число раз. Число предпринимаемых попыток задается свойством <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A>. Если приложению не удается получить доступ к сообщению после выполнения заданного числа немедленных повторных попыток, сообщение отправляется в очередь повторных попыток. В дальнейшем сообщение возвращается из очереди повторного выполнения в очередь приложения для повторной попытки доставки приложению. Это действие выполняется после задержки, указанной в свойстве <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>. Свойство <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> определяет число циклов повторных попыток, в ходе которых приложение пытается доставить сообщение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, запрошено ли поведение контекста получения.</summary>
        <value>Значение <see langword="true" />, если поведение контекста получения запрошено; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение перечисления, указывающее способ обработки подозрительных сообщений.</summary>
        <value>Значение <see cref="T:System.ServiceModel.ReceiveErrorHandling" />, указывающее способ обработки подозрительных сообщений и других сообщений, которые не удается доставить.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщение в очереди становится подозрительным в случае неуспешного завершения многократных попыток его доставки. Такое подозрительное сообщение в конце концов обрабатывается на основе значения этого свойства. Если этому свойству присвоить значение <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, это приведет к сбою прослушивателя и вызову исключения <xref:System.ServiceModel.MsmqPoisonMessageException> с трассировкой. Подозрительное сообщение остается в очереди и должно быть удалено, чтобы в очереди стали доступны дополнительные сообщения. Класс <xref:System.ServiceModel.MsmqPoisonMessageException> содержит свойство <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>, позволяющее выявить и вручную удалить подозрительное сообщение из очереди.  
  
 Если этому свойству присвоено значение <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, подозрительное сообщение отбрасывается.  
  
 Если этому свойству присвоено значение <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, клиенту отправляется уведомление о недоставке, и подозрительное сообщение удаляется из очереди. Этот параметр доступен только в Message Queuing 4.0 и для него требуется [!INCLUDE[wv](~/includes/wv-md.md)].  
  
 Если этому свойству присвоено значение <xref:System.ServiceModel.ReceiveErrorHandling.Move>, подозрительное сообщение перемещается в конечную вложенную очередь подозрительных сообщений. Этот параметр доступен только в Message Queuing 4.0 и для него требуется [!INCLUDE[wv](~/includes/wv-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальное число немедленных попыток доставки сообщения, считанного из очереди приложения.</summary>
        <value>Максимальное число немедленных попыток доставки. Значение по умолчанию — 5.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если предпринято максимальное число немедленных попыток доставки сообщения, а приложение так и не получило доступа к сообщению, сообщение отправляется в очередь повторных попыток для повторной попытки доставить его позже. Если циклы повторных попыток не заданы, сообщения либо отправляются в очередь подозрительных сообщений, либо отправителю направляется уведомление о недоставке.  
  
 Дополнительные сведения см. в разделах <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> и <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:30:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее время задержки между циклами повторных попыток при попытке доставить сообщение, которое не удалось доставить немедленно.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, задающее промежуток времени ожидания до начала следующего цикла попыток доставки сообщения принимающему приложению. По умолчанию используется значение 10 минут.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В одном цикле повторений попытка доставить сообщение принимающему приложению выполняется заданное число раз. Число выполняемых попыток определяется свойством <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A>. Если приложению не удается получить доступ к сообщению после выполнения заданного числа немедленных повторных попыток, сообщение отправляется в очередь повторных попыток. В дальнейшем сообщение возвращается из очереди повторных попыток в очередь приложения для повторной попытки доставки приложению. Это действие выполняется после задержки, определенной свойством <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>. Число циклов повторных попыток определяется свойством <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.MsmqBindingBase.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает схему для этой привязки.</summary>
        <value>Схема для этой привязки. Возвращаемая схема зависит от реализации объекта <see cref="T:System.ServiceModel.MsmqBindingBase" />. Реализация <see cref="T:System.ServiceModel.NetMsmqBinding" /> возвращает схему "net.msmq". Реализация <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> возвращает схему "msmq.formatname".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь сообщений (MSMQ) поддерживает передачу сообщений между диспетчерами очередей с помощью собственного протокола MSMQ и протокола SRMP. Приложения, использующие привязку транспорта с очередями, могут использовать оба этих протокола. Схемы протокола, поддерживаемые привязкой транспорта с очередями: net.msmq для собственного протокола, net.srmp для протокола SRMP и net.srmps для протокола SRMP поверх HTTPS.  
  
 Привязка <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> поддерживает единственную схему, msmq.formatname, с помощью которой пользователь может задать имя формата очереди непосредственно в адресе очереди.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее наиболее эффективный способ обработки входящих запросов: синхронный или асинхронный.</summary>
        <value><see langword="true" />значение, если запросы могут обрабатываться более эффективно синхронно; в <see langword=" false" />противном случае — значение. Значение по умолчанию — <see langword="false" /> (асинхронная обработка запросов).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство <xref:System.ServiceModel.MsmqBindingBase.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> имеет значение `true`, свойству <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> присваивается значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "1.00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает промежуток времени, определяющий срок нахождения сообщений в очереди до того момента, когда они становятся просроченными.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, указывающее срок нахождения сообщений в очереди до того момента, когда они становятся просроченными. Значение по умолчанию — 1 день.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойству <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> присваивается значение, гарантирующее, что критические по времени сообщения не будут просрочены до их обработки принимающими приложениями. Сообщение в очереди, к которому принимающее приложение не обращается в пределах заданного промежутка времени, считается просроченным. Просроченные сообщения отправляются в специальную очередь, называемую очередью недоставленных сообщений. Расположение очереди недоставленных сообщений указывается в свойстве <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> или определяется соответствующим значением по умолчанию на основании гарантий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должна ли выполняться трассировка сообщений, обрабатываемых этой привязкой.</summary>
        <value>Значение <see langword="true" />, если должна выполняться трассировка сообщений, обрабатываемых данной привязкой; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если трассировка включена, каждый раз, когда сообщение отправляется с компьютера очереди сообщений (MSMQ) или поступает на этот компьютер, создаются сообщения-отчеты, которые затем отправляются в очередь отчетов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должны ли сохраняться в очереди журнала источника копии сообщений, обрабатываемых этой привязкой.</summary>
        <value>Значение <see langword="true" />, если копии сообщений, обрабатываемых этой привязкой, должны сохраняться в очереди журнала источника; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставленные в очередь приложения, ведущие учет сообщений, покинувших очередь исходящих сообщений компьютера, могут копировать сообщения в очередь журнала. После того как сообщение покинуло очередь исходящих сообщений, и появилось подтверждение приема сообщения конечным компьютером, в очереди системного журнала компьютера-отправителя сохраняется копия сообщения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:05:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее время, в течение которого сообщение будет заблокировано возможностью контекста получения.</summary>
        <value>Объект timespan.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Если в ходе транзакции для сообщения истекает срок <xref:System.ServiceModel.MsmqBindingBase.ValidityDuration%2A>, то любая транзакция, используемая для его обработки, будет прервана вместе с экземпляром рабочего процесса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
