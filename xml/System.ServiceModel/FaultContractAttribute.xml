<Type Name="FaultContractAttribute" FullName="System.ServiceModel.FaultContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="258dde72e7912d28ac6a726677683455fbada41b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70648396" /></Metadata><TypeSignature Language="C#" Value="public sealed class FaultContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FaultContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.FaultContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FaultContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FaultContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type FaultContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f232-101">Задает одну или несколько ошибок протокола SOAP, сообщения о которых возвращаются, когда операция службы обнаруживает ошибки обработки.</span><span class="sxs-lookup"><span data-stu-id="9f232-101">Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f232-102">Отметьте операцию атрибутом <xref:System.ServiceModel.FaultContractAttribute> для объявления одного или нескольких конкретных условий исключений, которые добавляются в описание WSDL операции службы в виде явных сообщений об ошибках SOAP, возвращаемых операцией.</span><span class="sxs-lookup"><span data-stu-id="9f232-102">Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.</span></span>  
  
 <span data-ttu-id="9f232-103">Во всех управляемых приложениях обработка ошибок представлена объектами <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="9f232-103">In all managed applications, processing errors are represented by <xref:System.Exception> objects.</span></span> <span data-ttu-id="9f232-104">В приложениях на основе SOAP, таких как приложения Windows Communication Foundation (WCF), методы служб обмениваются сведениями об ошибках обработки с помощью сообщений о сбоях SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-104">In SOAP-based applications such as Windows Communication Foundation (WCF) applications, service methods communicate processing error information using SOAP fault messages.</span></span> <span data-ttu-id="9f232-105">Поскольку приложения WCF выполняются в обоих типах систем ошибок, все управляемые сведения об исключениях, которые должны быть отправлены клиенту, должны быть преобразованы из исключений в ошибки SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-105">Because WCF applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults.</span></span> <span data-ttu-id="9f232-106">Можно использовать поведения исключений службы по умолчанию или явно управлять тем, будут ли исключения сопоставляться с сообщениями об ошибках и как будет выполняться это сопоставление.</span><span class="sxs-lookup"><span data-stu-id="9f232-106">You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages.</span></span> <span data-ttu-id="9f232-107">Общие сведения об исключениях и ошибках SOAP в приложениях WCF см. в разделе [Указание и обработка ошибок в контрактах и службах](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).</span><span class="sxs-lookup"><span data-stu-id="9f232-107">For an overview of exceptions and SOAP faults in WCF applications, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).</span></span>  
  
 <span data-ttu-id="9f232-108">Рекомендуется, чтобы операции службы использовали атрибут <xref:System.ServiceModel.FaultContractAttribute> для формального указания всех ошибок SOAP, которые клиент может получить во время обычной операции.</span><span class="sxs-lookup"><span data-stu-id="9f232-108">It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation.</span></span> <span data-ttu-id="9f232-109">Кроме того, чтобы свести к минимуму раскрытие информации, рекомендуется возвращать в сообщении об ошибке SOAP только те сведения, которые необходимо знать клиенту.</span><span class="sxs-lookup"><span data-stu-id="9f232-109">It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.</span></span>  
  
-   <span data-ttu-id="9f232-110">Свойство <xref:System.ServiceModel.FaultContractAttribute.Action%2A> управляет действием сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="9f232-110">The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message.</span></span>  
  
-   <span data-ttu-id="9f232-111">Свойство <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> возвращает тип объекта сведений, сериализованного в сообщении об ошибке.</span><span class="sxs-lookup"><span data-stu-id="9f232-111">The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message.</span></span>  
  
-   <span data-ttu-id="9f232-112">Свойства <xref:System.ServiceModel.FaultContractAttribute.Name%2A> и <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> управляют именем и пространством имен сообщения об ошибке, соответственно.</span><span class="sxs-lookup"><span data-stu-id="9f232-112">The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message.</span></span>  
  
-   <span data-ttu-id="9f232-113">Свойство <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> указывает, имеет ли сообщение об ошибке заданный уровень защиты, и, если да, свойство <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> управляет этим уровнем защиты.</span><span class="sxs-lookup"><span data-stu-id="9f232-113">The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9f232-114">Если сообщение об ошибке содержит конфиденциальную информацию или может привести к проблемам с безопасностью, настоятельно рекомендуется задать свойство <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>.</span><span class="sxs-lookup"><span data-stu-id="9f232-114">If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set.</span></span>  
  
-   <span data-ttu-id="9f232-115">Если для свойства <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> явно задается значение <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> или <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>, необходимо использовать привязку с разрешенным для нее с помощью свойства <xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType> обеспечением безопасности. В противном случае будет вызвано исключение.</span><span class="sxs-lookup"><span data-stu-id="9f232-115">If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> or <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType> property on the binding or an exception is thrown.</span></span>  
  
-   <span data-ttu-id="9f232-116">Если выбирается привязка, разрешающая обеспечение безопасности, а свойство <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> нигде в контракте не задается, все данные приложений будут шифроваться и подписываться.</span><span class="sxs-lookup"><span data-stu-id="9f232-116">If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed.</span></span>  
  
-   <span data-ttu-id="9f232-117">Если выбирается привязка, в которой не разрешено обеспечение безопасности (например, в классе <xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType> обеспечение безопасности запрещено по умолчанию), и свойство <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> явно не задано, данные приложений защищаться не будут.</span><span class="sxs-lookup"><span data-stu-id="9f232-117">If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected.</span></span>  
  
 <span data-ttu-id="9f232-118">Во многих случаях достаточно присвоить свойству <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> для сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="9f232-118">For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient.</span></span> <span data-ttu-id="9f232-119">Дополнительные сведения см. в разделе [Основные сведения об уровне защиты](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="9f232-119">For more details, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="9f232-120">Чтобы возвратить указанную ошибку из операции, отмеченной атрибутом <xref:System.ServiceModel.FaultContractAttribute>, вызовите исключение <xref:System.ServiceModel.FaultException%601> (где параметр типа содержит сериализуемые сведения об ошибке) при возникновении управляемого исключения во время операции.</span><span class="sxs-lookup"><span data-stu-id="9f232-120">To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation.</span></span> <span data-ttu-id="9f232-121">Клиентские приложения WCF выдают ошибку SOAP как тот же тип, который был вызван в реализации клиента, то есть как <xref:System.ServiceModel.FaultException%601> (где typeparameter находится вне — сериализуемые сведения об ошибке).</span><span class="sxs-lookup"><span data-stu-id="9f232-121">WCF client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information).</span></span> <span data-ttu-id="9f232-122">Атрибут <xref:System.ServiceModel.FaultContractAttribute> может использоваться только для указания ошибок SOAP для двусторонних операций служб и для пар асинхронных операций; односторонние операции не поддерживают ошибки SOAP и, следовательно, атрибут <xref:System.ServiceModel.FaultContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="9f232-122">The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f232-123">Для передачи информации об ошибках можно использовать любой сериализуемый тип.</span><span class="sxs-lookup"><span data-stu-id="9f232-123">You can use any serializable type to convey error information.</span></span> <span data-ttu-id="9f232-124">Единственное ограничение в этой версии WCF состоит в том, что типы, указанные <xref:System.ServiceModel.FaultContractAttribute> в, должны быть сериализуемыми <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType>с помощью.</span><span class="sxs-lookup"><span data-stu-id="9f232-124">The only restriction in this version of WCF is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9f232-125">Сведения о поддержке сериализации см <xref:System.Runtime.Serialization.DataContractSerializer> . в разделе [сериализатор контрактов данных](~/docs/framework/wcf/feature-details/data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="9f232-125">For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md).</span></span>  
  
 <span data-ttu-id="9f232-126">Например, чтобы задать, что клиенты могут ожидать сообщение об ошибке SOAP, содержащее <xref:System.Int32>, разместите этот параметр типа в атрибуте <xref:System.ServiceModel.FaultContractAttribute> метода службы.</span><span class="sxs-lookup"><span data-stu-id="9f232-126">For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f232-127">В приведенных ниже примерах кода не задаются свойства <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A> и <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="9f232-127">The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties.</span></span>  
  
 [!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]
 [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]  
  
 <span data-ttu-id="9f232-128">Затем в методе службы вызовите новое исключение <xref:System.ServiceModel.FaultException%601>, где параметром типа является тип, содержащий информацию об ошибке (в представленном выше случае — <xref:System.Int32>).</span><span class="sxs-lookup"><span data-stu-id="9f232-128">Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>).</span></span> <span data-ttu-id="9f232-129">Например:</span><span class="sxs-lookup"><span data-stu-id="9f232-129">For example:</span></span>  
  
 [!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]
 [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]  
  
 <span data-ttu-id="9f232-130">Представленный пример — очень общий; почти любая информация может быть передана с помощью кода <xref:System.Int32?displayProperty=nameWithType>, поэтому этот тип сведений не является наиболее полезным.</span><span class="sxs-lookup"><span data-stu-id="9f232-130">The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=nameWithType> code, so this detail type is not the most useful.</span></span> <span data-ttu-id="9f232-131">Как правило, приложения WCF указывают ошибки SOAP с типами сведений, специфичными для требований клиента к сведениям об ошибках.</span><span class="sxs-lookup"><span data-stu-id="9f232-131">Typically, WCF applications specify SOAP faults with detail types specific to the error information requirements of the client.</span></span> <span data-ttu-id="9f232-132">Более полный пример см. в подразделе "Пример".</span><span class="sxs-lookup"><span data-stu-id="9f232-132">For a more complete example, see the Example section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f232-133">Если задается исключение <xref:System.ServiceModel.FaultException%601>, где параметр типа — <xref:System.String?displayProperty=nameWithType>, свойству Detail в клиентском приложении присваивается строковое значение; клиенты не могут извлекать эту строку путем вызова метода <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-133">If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=nameWithType>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9f232-134">Чтобы при вызове клиентским приложением метода <xref:System.Exception.ToString%2A?displayProperty=nameWithType> возвращалось строковое значение, необходимо вызывать исключение <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> внутри операции и передавать строку конструктору.</span><span class="sxs-lookup"><span data-stu-id="9f232-134">To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=nameWithType>, throw a <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> exception inside the operation and pass the string to the constructor.</span></span>  
  
 <span data-ttu-id="9f232-135">Для явного управления поведением приложения в случае возникновения исключения или <xref:System.ServiceModel.FaultException%601>, реализуйте интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> на <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> или <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> и добавьте его к свойству <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-135">To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9f232-136"><xref:System.ServiceModel.Dispatcher.IErrorHandler>позволяет явно управлять создаваемой ошибкой SOAP и отправкой ее обратно клиенту.</span><span class="sxs-lookup"><span data-stu-id="9f232-136"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.</span></span>  
  
 <span data-ttu-id="9f232-137">Чтобы упростить отладку, присвойте `true` параметру <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> значение in в коде <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> или используйте в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="9f232-137">To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> in an application configuration file.</span></span> <span data-ttu-id="9f232-138">Когда эта функция включена, служба автоматически возвращает вызывающему объекту информацию об исключениях.</span><span class="sxs-lookup"><span data-stu-id="9f232-138">When enabled, the service automatically returns exception information to the caller.</span></span> <span data-ttu-id="9f232-139">Эти ошибки выглядят для клиента как исключения <xref:System.ServiceModel.FaultException>.</span><span class="sxs-lookup"><span data-stu-id="9f232-139">These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f232-140">Так как управляемые исключения могут предоставлять внутренние сведения о приложении <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> , <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> устанавливать `true` или разрешать клиентам WCF получать сведения о внутренних исключениях операций службы, включая личные идентифицируемые или другие конфиденциальные сведения.</span><span class="sxs-lookup"><span data-stu-id="9f232-140">Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> to `true` can permit WCF clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.</span></span>  
>   
>  <span data-ttu-id="9f232-141">Поэтому задавать для свойства <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> или <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> значение `true` рекомендуется только для временной отладки приложения службы.</span><span class="sxs-lookup"><span data-stu-id="9f232-141">Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> to `true` is only recommended as a way of temporarily debugging a service application.</span></span> <span data-ttu-id="9f232-142">Кроме того, WSDL для метода, который возвращает такие необработанные управляемые исключения, не содержит контракт для исключения <xref:System.ServiceModel.FaultException%601> типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="9f232-142">In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>.</span></span> <span data-ttu-id="9f232-143">Клиенты должны рассчитывать на возможность неизвестной ошибки SOAP (возвращается клиентам WCF как <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> объекты) для правильного получения отладочной информации.</span><span class="sxs-lookup"><span data-stu-id="9f232-143">Clients must expect the possibility of an unknown SOAP fault (returned to WCF clients as <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> objects) to obtain the debugging information properly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f232-144">В следующем примере кода показано, как с помощью атрибута <xref:System.ServiceModel.FaultContractAttribute> указать, что операция `SampleMethod` может возвращать ошибку SOAP с типом по умолчанию `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="9f232-144">The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="9f232-145">В следующем примере кода показано, что клиенты `ISampleService` WCF, воздействующие эту ошибку <xref:System.ServiceModel.FaultException%601> SOAP, имеют тип. `GreetingFault`</span><span class="sxs-lookup"><span data-stu-id="9f232-145">The following code example shows that WCF clients of `ISampleService` experience this SOAP fault as a <xref:System.ServiceModel.FaultException%601> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/client.cs#3)]
 [!code-vb[FaultContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaultContractAttribute (Type detailType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type detailType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (detailType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FaultContractAttribute(Type ^ detailType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.FaultContractAttribute : Type -&gt; System.ServiceModel.FaultContractAttribute" Usage="new System.ServiceModel.FaultContractAttribute detailType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="detailType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="detailType"><span data-ttu-id="9f232-146">Сериализуемый тип, который содержит информацию об ошибке для вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="9f232-146">The serializable type that contains error information for the caller.</span></span></param>
        <summary><span data-ttu-id="9f232-147">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.FaultContractAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9f232-147">Initializes a new instance of the <see cref="T:System.ServiceModel.FaultContractAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f232-148">Этот конструктор обычно выполняется путем применения атрибута к методу службы и указания типа в качестве аргумента в атрибуте.</span><span class="sxs-lookup"><span data-stu-id="9f232-148">The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f232-149">В следующем примере кода показано, как с помощью атрибута <xref:System.ServiceModel.FaultContractAttribute> указать, что операция `SampleMethod` может возвращать ошибку SOAP с типом по умолчанию `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="9f232-149">The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f232-150">Аргумент <paramref name="detailType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9f232-150">The <paramref name="detailType" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f232-151">Возвращает или задает действие сообщения об ошибке SOAP, которое задается как компонент контракта операции.</span><span class="sxs-lookup"><span data-stu-id="9f232-151">Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</span></span></summary>
        <value><span data-ttu-id="9f232-152">Значение действия для сообщения об ошибке SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-152">The value of the action for the SOAP fault message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f232-153">Используйте для управления действием сообщения об ошибке SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-153">Use to control the action of the SOAP fault message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetailType">
      <MemberSignature Language="C#" Value="public Type DetailType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DetailType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.DetailType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DetailType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DetailType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DetailType : Type" Usage="System.ServiceModel.FaultContractAttribute.DetailType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f232-154">Возвращает тип сериализуемого объекта, который содержит информацию об ошибке.</span><span class="sxs-lookup"><span data-stu-id="9f232-154">Gets the type of a serializable object that contains error information.</span></span></summary>
        <value><span data-ttu-id="9f232-155">Тип, представляющий сериализуемый класс ошибки.</span><span class="sxs-lookup"><span data-stu-id="9f232-155">The type that represents the serializable error class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9f232-156">В следующем примере кода показано, как с помощью атрибута <xref:System.ServiceModel.FaultContractAttribute> указать, что операция `SampleMethod` может возвращать ошибку SOAP с типом по умолчанию `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="9f232-156">The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f232-157">Возвращает значение, указывающее, присвоен ли сообщению об ошибке SOAP уровень защиты.</span><span class="sxs-lookup"><span data-stu-id="9f232-157">Gets a value that indicates whether the SOAP fault message has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="9f232-158">Значение <see langword="true" />, если сообщению об ошибке присвоен уровень защиты; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f232-158"><see langword="true" /> if the fault message has a protection level; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9f232-159">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f232-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f232-160">Свойство <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> определяет, необходимо ли шифровать, подписывать сообщения об ошибках SOAP или выполнять оба эти действия.</span><span class="sxs-lookup"><span data-stu-id="9f232-160">Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both.</span></span> <span data-ttu-id="9f232-161">Дополнительные сведения см. в описании свойства <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>.</span><span class="sxs-lookup"><span data-stu-id="9f232-161">See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f232-162">Возвращает или задает имя сообщения об ошибке в языке WSDL.</span><span class="sxs-lookup"><span data-stu-id="9f232-162">Gets or sets the name of the fault message in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="9f232-163">Имя сообщения ошибки.</span><span class="sxs-lookup"><span data-stu-id="9f232-163">The fault message name.</span></span> <span data-ttu-id="9f232-164">Значение по умолчанию — имя типа, используемого в качестве сведений об ошибке.</span><span class="sxs-lookup"><span data-stu-id="9f232-164">The default is the name of the type used as the fault detail.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f232-165">Возвращает или задает пространство имен ошибки SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-165">Gets or sets the namespace of the SOAP fault.</span></span></summary>
        <value><span data-ttu-id="9f232-166">Пространство имен ошибки SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-166">The namespace of the SOAP fault.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f232-167">Задает уровень защиты, который требуется от привязки для ошибки SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-167">Specifies the level of protection the SOAP fault requires from the binding.</span></span></summary>
        <value><span data-ttu-id="9f232-168">Одно из значений <see cref="T:System.Net.Security.ProtectionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="9f232-168">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="9f232-169">Значение по умолчанию — <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span><span class="sxs-lookup"><span data-stu-id="9f232-169">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f232-170">Свойство <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType> определяет, как привязка должна выполнять шифрование, подписывание или оба эти действия при передаче сообщения об ошибке SOAP.</span><span class="sxs-lookup"><span data-stu-id="9f232-170">Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault.</span></span> <span data-ttu-id="9f232-171">Настоятельно рекомендуется, чтобы ошибка операции явным образом определяла требования к уровню защиты безопасности в контракте.</span><span class="sxs-lookup"><span data-stu-id="9f232-171">It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract.</span></span> <span data-ttu-id="9f232-172">Уровень защиты по умолчанию — <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>. Это означает, что для определяемого сообщения об ошибке SOAP не требуются ни шифрование, ни цифровая сигнатура (хотя привязка может обеспечивать поддержку этих функций, если она настроена на их поддержку).</span><span class="sxs-lookup"><span data-stu-id="9f232-172">The default protection level is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so).</span></span> <span data-ttu-id="9f232-173">Если сообщение об ошибке содержит конфиденциальную информацию или может привести к проблемам с безопасностью, настоятельно рекомендуется задать для свойства <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-173">If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9f232-174">Дополнительные сведения о проблемах безопасности см. в разделе [Общие сведения об уровне защиты](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="9f232-174">For more about security issues, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="9f232-175">Поведение защиты в среде выполнения представляет собой сочетание свойств уровня защиты, которые имеют иерархическую структуру.</span><span class="sxs-lookup"><span data-stu-id="9f232-175">The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure.</span></span> <span data-ttu-id="9f232-176">При задании внешнего значения устанавливается значение по умолчанию для всех более узких областей, если явно не задано другое значение для более узкой области.</span><span class="sxs-lookup"><span data-stu-id="9f232-176">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="9f232-177">В этом случае внешнее значение остается значением по умолчанию для всех более узких областей за исключением тех областей, для которых задано иное значение.</span><span class="sxs-lookup"><span data-stu-id="9f232-177">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="9f232-178">Например, если для свойства <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> задано значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> и другие более узкие области не имеют параметров уровня защиты, все сообщения в контракте операции шифруются и подписываются, включая сообщения об ошибках.</span><span class="sxs-lookup"><span data-stu-id="9f232-178">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages.</span></span> <span data-ttu-id="9f232-179">Однако если атрибуту <xref:System.ServiceModel.OperationContractAttribute> одной из этих операций присвоено значение <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, сообщения для этой операции подписываются, а все другие сообщения в контракте шифруются и подписываются, включая сообщения об ошибках.</span><span class="sxs-lookup"><span data-stu-id="9f232-179">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.</span></span>  
  
 <span data-ttu-id="9f232-180">Ниже приводятся области, в которых заданы эти значения.</span><span class="sxs-lookup"><span data-stu-id="9f232-180">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="9f232-181">Свойство <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> атрибута <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-181">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f232-182">Свойство <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> атрибута <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-182">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f232-183">Если в контракте отсутствует явно заданный уровень защиты, а базовая привязка поддерживает безопасность (как на транспортном уровне, так и на уровне сообщений), эффективным уровнем защиты для всего контракта является <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-183">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9f232-184">Если привязка не поддерживает безопасность (например, <xref:System.ServiceModel.BasicHttpBinding>), эффективным уровнем <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> является <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> для всего контракта.</span><span class="sxs-lookup"><span data-stu-id="9f232-184">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="9f232-185">В результате в зависимости от привязки конечной точки клиенты могут требовать разную степень защиты на уровне сообщений или транспортном уровне, даже если контракт задает <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9f232-185">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
