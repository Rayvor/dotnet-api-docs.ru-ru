<Type Name="WSHttpBinding" FullName="System.ServiceModel.WSHttpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c73b0e676649507bf73cd2c6528b573a6d14ab2" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73381296" /></Metadata><TypeSignature Language="C#" Value="public class WSHttpBinding : System.ServiceModel.WSHttpBindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSHttpBinding extends System.ServiceModel.WSHttpBindingBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSHttpBinding&#xA;Inherits WSHttpBindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSHttpBinding : System::ServiceModel::WSHttpBindingBase" />
  <TypeSignature Language="F#" Value="type WSHttpBinding = class&#xA;    inherit WSHttpBindingBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Http</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.WSHttpBindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет привязку с возможностью взаимодействия, поддерживающую распределенные транзакции и безопасные надежные сеансы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Привязка <xref:System.ServiceModel.WSHttpBinding> аналогична привязке <xref:System.ServiceModel.BasicHttpBinding>, но при этом предоставляет больше функциональных возможностей веб-служб. Как и привязка <xref:System.ServiceModel.BasicHttpBinding>, она использует транспорт HTTP и обеспечивает безопасность сообщений, но, кроме того, поддерживает транзакции, надежный обмен сообщениями и протокол WS-Addressing, включенные по умолчанию или доступные посредством одного управляющего параметра.  
  
   
  
## Examples  
 В следующем образце кода показано использование класса <xref:System.ServiceModel.WSHttpBinding>.  
  
 [!code-csharp[WSHttpBinding#0](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#0)]
 [!code-vb[WSHttpBinding#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем образце кода показана инициализация нового экземпляра класса <xref:System.ServiceModel.WSHttpBinding>.  
  
 [!code-csharp[WSHttpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#1)]
 [!code-vb[WSHttpBinding#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding (System.ServiceModel.SecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding(System::ServiceModel::SecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSHttpBinding : System.ServiceModel.SecurityMode -&gt; System.ServiceModel.WSHttpBinding" Usage="new System.ServiceModel.WSHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" /> с указанным типом безопасности, используемым привязкой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показана инициализация нового экземпляра класса <xref:System.ServiceModel.WSHttpBinding> с параметром `securityMode`.  
  
 [!code-csharp[WSHttpBinding#7](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#7)]
 [!code-vb[WSHttpBinding#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding(System::String ^ configName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSHttpBinding : string -&gt; System.ServiceModel.WSHttpBinding" Usage="new System.ServiceModel.WSHttpBinding configName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="configName">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" /> привязкой, заданной именем ее конфигурации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показана инициализация нового экземпляра класса <xref:System.ServiceModel.WSHttpBinding> со строковым аргументом.  
  
 [!code-csharp[WSHttpBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#5)]
 [!code-vb[WSHttpBinding#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент привязки с именем <paramref name="configName" /> не найден.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding(System::ServiceModel::SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSHttpBinding : System.ServiceModel.SecurityMode * bool -&gt; System.ServiceModel.WSHttpBinding" Usage="new System.ServiceModel.WSHttpBinding (securityMode, reliableSessionEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
        <Parameter Name="reliableSessionEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityMode">Значение <see cref="T:System.ServiceModel.SecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</param>
        <param name="reliableSessionEnabled">Значение <see langword="true" />, если надежный сеанс разрешен; в противном случае — значение <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSHttpBinding" /> с указанием типа безопасности, используемого привязкой, и значения, указывающего, разрешены ли надежные сеансы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показана инициализация нового экземпляра класса <xref:System.ServiceModel.WSHttpBinding> с параметрами `securityMode` и `reliableSessionEnabled`.  
  
 [!code-csharp[WSHttpBinding#6](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#6)]
 [!code-vb[WSHttpBinding#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCookies : bool with get, set" Usage="System.ServiceModel.WSHttpBinding.AllowCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, будет ли клиент WCF автоматически сохранять и повторно отправлять все файлы cookie, отправленные одной веб-службой.</summary>
        <value>Значение <see langword="true" />, если требуется автоматическая обработка файлов cookie; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установка <xref:System.ServiceModel.WSHttpBinding.AllowCookies%2A> в `true` полезна, когда клиент взаимодействует с одной веб-службой, использующей файлы cookie.  Если вы обращаетесь к нескольким службам с одним и тем же файлом cookie, задайте для <xref:System.ServiceModel.WSHttpBinding.AllowCookies%2A> значение `false` и потребуется вручную добавить заголовок cookie к каждому исходящему сообщению. В следующем коде показано, как это сделать:  
  
```csharp  
MyWebServiceClient client = new MyWebServiceClient();  
  
        using (new OperationContextScope(client.InnerChannel))  
        {  
            client.DoSomething();  
  
            // Extract the cookie embedded in the received web service response  
            // and stores it locally  
            HttpResponseMessageProperty response = (HttpResponseMessageProperty)  
            OperationContext.Current.IncomingMessageProperties[  
                HttpResponseMessageProperty.Name];  
            sharedCookie = response.Headers["Set-Cookie"];  
        }  
  
        MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();  
  
        using (new OperationContextScope(otherClient.InnerChannel))  
        {  
            // Embeds the extracted cookie in the next web service request  
            // Note that we manually have to create the request object since  
            // since it doesn't exist yet at this stage   
            HttpRequestMessageProperty request = new HttpRequestMessageProperty();  
            request.Headers["Cookie"] = sharedCookie;  
            OperationContext.Current.OutgoingMessageProperties[  
                HttpRequestMessageProperty.Name] = request;  
  
            otherClient.DoSomethingElse();  
        }  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="wSHttpBinding.BuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Тип канала, создаваемого фабрикой каналов.</typeparam>
        <param name="parameters">Указывает требования для построения фабрики каналов.</param>
        <summary>Выполняет построение на клиенте стека фабрики каналов, создающего каналы заданного типа и удовлетворяющего заданным коллекцией привязки параметрам.</summary>
        <returns>Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа TChannel удовлетворяющий заданным коллекцией параметрам.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="wSHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</summary>
        <returns>Коллекция <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, содержащая упорядоченный стек элементов привязки, описываемых привязкой <see cref="T:System.ServiceModel.WSHttpBinding" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Важен порядок элементов привязки. Он соответствует порядку создания и расположения в стеке каналов транспорта и протокола.  
  
   
  
## Examples  
 В следующем примере показано, как получить коллекцию <xref:System.ServiceModel.Channels.BindingElementCollection>, содержащую упорядоченный стек элементов привязки, описываемых привязкой <xref:System.ServiceModel.WSHttpBinding>.  
  
 [!code-csharp[WSHttpBinding#9](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#9)]
 [!code-vb[WSHttpBinding#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Заданный режим безопасности транспорта не может обеспечить надежный сеанс, который включен.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSecurity">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateMessageSecurity () As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Channels::SecurityBindingElement ^ CreateMessageSecurity();" />
      <MemberSignature Language="F#" Value="override this.CreateMessageSecurity : unit -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="wSHttpBinding.CreateMessageSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает элемент привязки безопасности для текущей привязки.</summary>
        <returns>Элемент <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> текущей привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransport">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Channels.TransportBindingElement GetTransport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Channels.TransportBindingElement GetTransport() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.GetTransport" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTransport () As TransportBindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Channels::TransportBindingElement ^ GetTransport();" />
      <MemberSignature Language="F#" Value="override this.GetTransport : unit -&gt; System.ServiceModel.Channels.TransportBindingElement" Usage="wSHttpBinding.GetTransport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает элемент привязки транспорта для текущей привязки.</summary>
        <returns>Элемент <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> текущей привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSHttpSecurity Security { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSHttpSecurity" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSHttpSecurity ^ Security { System::ServiceModel::WSHttpSecurity ^ get(); void set(System::ServiceModel::WSHttpSecurity ^ value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.WSHttpSecurity with get, set" Usage="System.ServiceModel.WSHttpBinding.Security" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSHttpSecurity Security { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As WSHttpSecurity" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSHttpSecurity ^ Security { System::ServiceModel::WSHttpSecurity ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.WSHttpSecurity" Usage="System.ServiceModel.WSHttpBinding.Security" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры безопасности, используемые с данной привязкой.</summary>
        <value>Объект <see cref="T:System.ServiceModel.WSHttpSecurity" />, используемый с этой привязкой. Значение по умолчанию свойства <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> — <see cref="P:System.ServiceModel.WSHttpSecurity.Message" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы задать параметры безопасности, отличные от установленных по умолчанию, воспользуйтесь конструктором <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29>.  
  
   
  
## Examples  
 В следующем примере показано, как получить значение свойства <xref:System.ServiceModel.WSHttpBinding.Security%2A>.  
  
 [!code-csharp[WSHttpBinding#8](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#8)]
 [!code-vb[WSHttpBinding#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="wSHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> относительно значения по умолчанию и нужно ли его сериализовать.</summary>
        <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
