<Type Name="PeerResolver" FullName="System.ServiceModel.PeerResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2e2314c5056323d9b83e16668843d9c296f5535" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69101270" /></Metadata><TypeSignature Language="C#" Value="public abstract class PeerResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PeerResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PeerResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerResolver abstract" />
  <TypeSignature Language="F#" Value="type PeerResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1c739-101">Задает базовый тип, используемый для определения контракта для регистрации и разрешения идентификатора сетки одноранговых узлов для адресов конечной точки узлов, входящих в сетку.</span><span class="sxs-lookup"><span data-stu-id="1c739-101">Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c739-102">Этот класс является базовым для реализации пользовательских распознавателей имен одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-102">This class is the base class for the implementation of custom peer name resolvers.</span></span> <span data-ttu-id="1c739-103">Арбитр одноранговых узлов представляет собой службу обнаружения, используемую одноранговыми каналами для поиска одноранговых узлов, входящих в сетку таких узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-103">A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh.</span></span> <span data-ttu-id="1c739-104">Он также используется для «регистрации» узла в сетке с IP-адресами; с помощью такого механизма одноранговый узел становится известным и доступным из сетки с IP-адресами.</span><span class="sxs-lookup"><span data-stu-id="1c739-104">It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c739-105">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.PeerResolver" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-105">Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShareReferrals">
      <MemberSignature Language="C#" Value="public abstract bool CanShareReferrals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShareReferrals" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanShareReferrals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanShareReferrals { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanShareReferrals : bool" Usage="System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c739-106">Возвращает значение, указывающее, открыт ли совместный доступ арбитра имен одноранговых узлов к ссылкам.</span><span class="sxs-lookup"><span data-stu-id="1c739-106">Gets whether the peer name resolver can share referrals.</span></span></summary>
        <value><span data-ttu-id="1c739-107">Значение true, если совместный доступ арбитра имен одноранговых узлов к ссылкам открыт; в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="1c739-107">If true, the peer name resolver can share referrals; if false, it cannot.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.Description.ClientCredentials credentials, valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::Description::ClientCredentials ^ credentials, System::ServiceModel::PeerResolvers::PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ServiceModel.EndpointAddress * System.ServiceModel.Channels.Binding * System.ServiceModel.Description.ClientCredentials * System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; unit&#xA;override this.Initialize : System.ServiceModel.EndpointAddress * System.ServiceModel.Channels.Binding * System.ServiceModel.Description.ClientCredentials * System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; unit" Usage="peerResolver.Initialize (address, binding, credentials, referralPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="1c739-108"><see cref="T:System.ServiceModel.EndpointAddress" />, содержащий новый адрес конечной точки этого экземпляра арбитра одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-108"><see cref="T:System.ServiceModel.EndpointAddress" /> that contains the new endpoint address of this peer resolver instance.</span></span></param>
        <param name="binding"><span data-ttu-id="1c739-109">Привязка <see cref="T:System.ServiceModel.Channels.Binding" />, задающая новую сетевую привязку для этого арбитра одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-109"><see cref="T:System.ServiceModel.Channels.Binding" /> that specifies the new network binding for this peer resolver.</span></span></param>
        <param name="credentials"><span data-ttu-id="1c739-110">Значение <see cref="T:System.ServiceModel.Description.ClientCredentials" />, задающее новые учетные данные клиента для этого арбитра одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-110"><see cref="T:System.ServiceModel.Description.ClientCredentials" /> that specifies the new client credentials for this peer resolver.</span></span></param>
        <param name="referralPolicy"><span data-ttu-id="1c739-111"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />, задающая новую политику ссылок для этого арбитра одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-111"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the new referral policy for this peer resolver.</span></span></param>
        <summary><span data-ttu-id="1c739-112">Инициализирует текущий экземпляр арбитра одноранговых узлов с новым поддерживаемым адресом конечной точки и параметрами.</span><span class="sxs-lookup"><span data-stu-id="1c739-112">Initializes the current peer resolver instance with the new supplied endpoint address and settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c739-113">Этот метод всего лишь инициализирует существующий экземпляр распознавателя одноранговых узлов, но не создает новый.</span><span class="sxs-lookup"><span data-stu-id="1c739-113">This method simply initializes the existing peer resolver instance; it does not create a new one.</span></span> <span data-ttu-id="1c739-114">Чтобы создать новый распознаватель одноранговых узлов, вызовите метод CreatePeerResolver для соответствующего элемента привязки (например, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</span><span class="sxs-lookup"><span data-stu-id="1c739-114">To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Register(string meshId, class System.ServiceModel.PeerNodeAddress nodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Register (meshId As String, nodeAddress As PeerNodeAddress, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Register(System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Register : string * System.ServiceModel.PeerNodeAddress * TimeSpan -&gt; obj" Usage="peerResolver.Register (meshId, nodeAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="nodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId"><span data-ttu-id="1c739-115">Идентификатор сетки одноранговых узлов, в которой регистрируется такой узел.</span><span class="sxs-lookup"><span data-stu-id="1c739-115">The ID of the peer mesh in which the peer node is to be registered.</span></span></param>
        <param name="nodeAddress"><span data-ttu-id="1c739-116"><see cref="T:System.ServiceModel.PeerNodeAddress" /> для регистрации в сетке одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-116">The <see cref="T:System.ServiceModel.PeerNodeAddress" /> to be registered with the peer mesh.</span></span></param>
        <param name="timeout"><span data-ttu-id="1c739-117">Продолжительность времени ожидания успешного завершения перед прекращением попытки регистрации в сетке одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-117">The length of time to wait for success before aborting the attempt to register with the peer mesh.</span></span> <span data-ttu-id="1c739-118">В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-118">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="1c739-119">Регистрирует <see cref="T:System.ServiceModel.PeerNodeAddress" /> для определенной сетки одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-119">Registers a <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a specific peer mesh.</span></span></summary>
        <returns><span data-ttu-id="1c739-120">Объект <see cref="T:System.Object" />, который представляет идентификатор регистрации.</span><span class="sxs-lookup"><span data-stu-id="1c739-120">An <see cref="T:System.Object" /> that represents the registration ID.</span></span> <span data-ttu-id="1c739-121">Объект идентификатора регистрации передается методам <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> и <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-121">This registration ID object is passed to the <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> and <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> methods.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt; Resolve (string meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.PeerNodeAddress&gt; Resolve(string meshId, int32 maxAddresses, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Resolve (meshId As String, maxAddresses As Integer, timeout As TimeSpan) As ReadOnlyCollection(Of PeerNodeAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::PeerNodeAddress ^&gt; ^ Resolve(System::String ^ meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string * int * TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;" Usage="peerResolver.Resolve (meshId, maxAddresses, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="maxAddresses" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId"><span data-ttu-id="1c739-122">Идентификатор сетки одноранговых узлов, в пределах которой необходимо получить объекты <see cref="T:System.ServiceModel.PeerNodeAddress" />, представляющие входящие в эту сетку узлы.</span><span class="sxs-lookup"><span data-stu-id="1c739-122">The mesh ID of the peer mesh within which the <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing participating nodes are to be obtained.</span></span></param>
        <param name="maxAddresses"><span data-ttu-id="1c739-123">Число возвращаемых адресов конечных точек.</span><span class="sxs-lookup"><span data-stu-id="1c739-123">The number of endpoint addresses to return.</span></span></param>
        <param name="timeout"><span data-ttu-id="1c739-124">Продолжительность времени ожидания успешного завершения перед прекращением попытки разрешения адресов конечных точек в сетке одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-124">The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh.</span></span> <span data-ttu-id="1c739-125">В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-125">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="1c739-126">Разрешает для передаваемого идентификатора сетки нулевое или иное число адресов конечной точки узлов, входящих в сетку одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-126">Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</span></span></summary>
        <returns><span data-ttu-id="1c739-127">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая объекты <see cref="T:System.ServiceModel.PeerNodeAddress" />, представляющие узлы, входящие в сетку одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-127">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing nodes participating in the peer mesh.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public abstract void Unregister (object registrationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(object registrationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unregister (registrationId As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unregister(System::Object ^ registrationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : obj * TimeSpan -&gt; unit" Usage="peerResolver.Unregister (registrationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId"><span data-ttu-id="1c739-128">Регистрационный идентификатор узла, полученный во время предыдущего вызова <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-128">A registration ID for the node obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span></span></param>
        <param name="timeout"><span data-ttu-id="1c739-129">Период ожидания успешного удаления регистрации из сетки одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-129">The length of time to wait for a successful removal of the registration from the peer mesh.</span></span> <span data-ttu-id="1c739-130">В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-130">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="1c739-131">Удаляет из сетки одноранговых узлов регистрационную запись узла.</span><span class="sxs-lookup"><span data-stu-id="1c739-131">Removes the registration entry for a node from a peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c739-132">Идентификатор регистрации является маркером арбитра одноранговых узлов, который в минимальном варианте представляет кортеж, содержащий идентификатор однорангового узла и идентификатор сетки.</span><span class="sxs-lookup"><span data-stu-id="1c739-132">A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID.</span></span> <span data-ttu-id="1c739-133">Это значение идентификатора должно быть получено при предыдущем вызове метода <xref:System.ServiceModel.PeerResolver.Register%2A>.</span><span class="sxs-lookup"><span data-stu-id="1c739-133">This ID value must have been obtained in a previous call to <xref:System.ServiceModel.PeerResolver.Register%2A>.</span></span>  
  
 <span data-ttu-id="1c739-134"><xref:System.ServiceModel.PeerResolver.Unregister%2A> вызывается в двух особых случаях.</span><span class="sxs-lookup"><span data-stu-id="1c739-134"><xref:System.ServiceModel.PeerResolver.Unregister%2A> is called in two specific cases:</span></span>  
  
-   <span data-ttu-id="1c739-135">Когда <xref:System.ServiceModel.PeerNode> выходит из сетки одноранговых узлов (обычно в результате закрытия последнего однорангового канала или связанного с ним узла службы).</span><span class="sxs-lookup"><span data-stu-id="1c739-135">When the <xref:System.ServiceModel.PeerNode> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).</span></span>  
  
-   <span data-ttu-id="1c739-136">Когда <xref:System.ServiceModel.PeerNode> не может найти доступных адресов конечных точек других узлов, входящих в сетку одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-136">When the <xref:System.ServiceModel.PeerNode> can find no available endpoint addresses of other nodes participating in the peer mesh.</span></span> <span data-ttu-id="1c739-137">В результате <xref:System.ServiceModel.PeerNode> находится вне зоны доступа и попытается вызвать <xref:System.ServiceModel.PeerResolver.Unregister%2A>, чтобы удалить регистрацию о себе из <xref:System.ServiceModel.PeerResolver>.</span><span class="sxs-lookup"><span data-stu-id="1c739-137">As a result, the <xref:System.ServiceModel.PeerNode> is no longer reachable, and it will attempt to call <xref:System.ServiceModel.PeerResolver.Unregister%2A> to unregister itself from the <xref:System.ServiceModel.PeerResolver>.</span></span> <span data-ttu-id="1c739-138">Если другие одноранговые узлы в сетке становятся доступными после удаления регистрации, узел может повторно зарегистрироваться, вызвав <xref:System.ServiceModel.PeerResolver.Register%2A> и получив новый регистрационный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="1c739-138">If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <xref:System.ServiceModel.PeerResolver.Register%2A> and obtaining a new registration ID.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(object registrationId, class System.ServiceModel.PeerNodeAddress updatedNodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Update (registrationId As Object, updatedNodeAddress As PeerNodeAddress, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Update(System::Object ^ registrationId, System::ServiceModel::PeerNodeAddress ^ updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * System.ServiceModel.PeerNodeAddress * TimeSpan -&gt; unit" Usage="peerResolver.Update (registrationId, updatedNodeAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="updatedNodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId"><span data-ttu-id="1c739-139">Маркер регистрационного идентификатора узла, полученный во время предыдущего вызова <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-139">A registration ID token for the node, obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></span></span></param>
        <param name="updatedNodeAddress"><span data-ttu-id="1c739-140">Обновленный адрес конечной точки (и другие IP-адреса с множественной адресацией).</span><span class="sxs-lookup"><span data-stu-id="1c739-140">The updated endpoint address (and other multihoming IP addresses).</span></span></param>
        <param name="timeout"><span data-ttu-id="1c739-141">Продолжительность времени ожидания успешного завершения перед прекращением попытки обновления регистрации узла в сетке одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-141">The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh.</span></span> <span data-ttu-id="1c739-142">В случае неудачной попытки для однорангового узла выдается исключение <see cref="T:System.TimeoutException" />.</span><span class="sxs-lookup"><span data-stu-id="1c739-142">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="1c739-143">Обновляет <see cref="T:System.ServiceModel.PeerNodeAddress" /> для узла, зарегистрированного в определенной сетке одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="1c739-143">Updates the <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a node registered with a specific peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c739-144"><xref:System.ServiceModel.PeerResolver.Update%2A> вызывается, когда на локальном компьютере изменяется адрес <xref:System.ServiceModel.PeerNode>.</span><span class="sxs-lookup"><span data-stu-id="1c739-144"><xref:System.ServiceModel.PeerResolver.Update%2A> is called when the address of the <xref:System.ServiceModel.PeerNode> changes on the local machine.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
