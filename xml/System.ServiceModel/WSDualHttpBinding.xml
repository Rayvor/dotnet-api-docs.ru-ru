<Type Name="WSDualHttpBinding" FullName="System.ServiceModel.WSDualHttpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6bd260082a875976d1b5f3b261b0b5f1fa388b9" /><Meta Name="ms.sourcegitcommit" Value="93667418e6e77da6ba7109a407c61b8969cec4ec" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/05/2019" /><Meta Name="ms.locfileid" Value="67570883" /></Metadata><TypeSignature Language="C#" Value="public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSDualHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type WSDualHttpBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dd174-101">Безопасная привязка с возможностью взаимодействия, предназначенная для использования с дуплексными контрактами служб и позволяющая и службам, и клиентам отправлять и получать сообщения.</span><span class="sxs-lookup"><span data-stu-id="dd174-101">A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-102">Объект <xref:System.ServiceModel.WSDualHttpBinding> предоставляет такую же поддержку протоколам веб-служб, как и объект <xref:System.ServiceModel.WSHttpBinding>, но применяется для дуплексных контрактов.</span><span class="sxs-lookup"><span data-stu-id="dd174-102">The <xref:System.ServiceModel.WSDualHttpBinding> provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts.</span></span> <span data-ttu-id="dd174-103"><xref:System.ServiceModel.WSDualHttpBinding> поддерживает только безопасность SOAP и требует надежного обмена сообщениями.</span><span class="sxs-lookup"><span data-stu-id="dd174-103"><xref:System.ServiceModel.WSDualHttpBinding> only supports SOAP security and requires reliable messaging.</span></span> <span data-ttu-id="dd174-104">Для этой привязки необходимо, чтобы клиент имел открытый универсальный код ресурса (URI), предоставляющий конечную точку обратного вызова для службы.</span><span class="sxs-lookup"><span data-stu-id="dd174-104">This binding requires that the client has a public URI that provides a callback endpoint for the service.</span></span> <span data-ttu-id="dd174-105">Это обеспечивается атрибутом <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd174-105">This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span></span> <span data-ttu-id="dd174-106">Двойная привязка предоставляет службе IP-адрес клиента.</span><span class="sxs-lookup"><span data-stu-id="dd174-106">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="dd174-107">Клиенту следует использовать механизм безопасности, чтобы гарантировать, что подключение выполняется только к доверенным службам.</span><span class="sxs-lookup"><span data-stu-id="dd174-107">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
 <span data-ttu-id="dd174-108">По умолчанию привязка <xref:System.ServiceModel.WSDualHttpBinding> формирует следующий стек элементов привязки:</span><span class="sxs-lookup"><span data-stu-id="dd174-108">By default the <xref:System.ServiceModel.WSDualHttpBinding> generates the following binding element stack:</span></span>  
  
-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  
  
-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  
  
-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  
  
-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  
  
-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  
  
-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-109">В следующем примере показано, как задать привязку `wsDualHttpBinding` в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-109">The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#134](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#134)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd174-110">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-110">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-111">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-111">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-112">В следующем примере показано использование конструктора wsDualHttpBinding по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="dd174-112">The following example shows how to use the default constructor for wsDualHttpBinding.</span></span>  
  
 [!code-csharp[S_dualhttp#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#1)]
 [!code-vb[S_dualhttp#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.WSDualHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As WSDualHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::ServiceModel::WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSDualHttpBinding : System.ServiceModel.WSDualHttpSecurityMode -&gt; System.ServiceModel.WSDualHttpBinding" Usage="new System.ServiceModel.WSDualHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.WSDualHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="dd174-113">Значение <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />, указывающее тип безопасности, используемый с сообщением SOAP и для клиента.</span><span class="sxs-lookup"><span data-stu-id="dd174-113">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span></span></param>
        <summary><span data-ttu-id="dd174-114">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" /> с указанным типом безопасности, используемым привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-114">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-115">Привязка <xref:System.ServiceModel.WSDualHttpBinding> требует надежного обмена сообщениями, поэтому для нее не предусмотрен конструктор с переключателем для отключения надежного обмена, как в конструкторе <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> для привязки <xref:System.ServiceModel.WSHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="dd174-115">Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-116">В следующем примере показано использование конструктора `wsDualHttpBinding` с режимом безопасности.</span><span class="sxs-lookup"><span data-stu-id="dd174-116">The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.</span></span>  
  
 [!code-csharp[S_dualhttp#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#3)]
 [!code-vb[S_dualhttp#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::String ^ configName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSDualHttpBinding : string -&gt; System.ServiceModel.WSDualHttpBinding" Usage="new System.ServiceModel.WSDualHttpBinding configName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName"><span data-ttu-id="dd174-117">Имя конфигурации привязки объекта <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-117">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span></span></param>
        <summary><span data-ttu-id="dd174-118">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.WSDualHttpBinding" /> привязкой, заданной именем ее конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-118">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="dd174-119">Элемент привязки с именем <paramref name="configurationName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="dd174-119">The binding element with the name <paramref name="configurationName" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-120">Возвращает или задает значение, указывающее, будет ли доступ к локальным адресам осуществляться в обход прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="dd174-120">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value><span data-ttu-id="dd174-121"><see langword="true" /> при обходе прокси-сервера для локальных адресов, в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-121"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dd174-122">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-122">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-123">Интернет-ресурс является локальным, если у него локальный адрес.</span><span class="sxs-lookup"><span data-stu-id="dd174-123">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="dd174-124">Локальный адрес — это приложения, на том же компьютере, локальной сети или в интрасети, а, синтаксически определяется по отсутствию точки (.), как и в коды URI `http://webserver/` и `http://localhost/`.</span><span class="sxs-lookup"><span data-stu-id="dd174-124">A local address is one that is on the same computer, the local LAN or intranet, and is identified, syntactically, by the lack of a period (.), as in the URIs `http://webserver/` and `http://localhost/`.</span></span>  
  
 <span data-ttu-id="dd174-125">Значение свойства <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> определяет, будут ли конечные точки, настроенные с помощью элементов <xref:System.ServiceModel.WSDualHttpBinding>, использовать прокси-сервер при доступе к локальным ресурсам.</span><span class="sxs-lookup"><span data-stu-id="dd174-125">Setting the <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="dd174-126">Если свойству <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> присвоено значение `true`, данный прокси-сервер не будет использоваться в запросах к локальным интернет-ресурсам.</span><span class="sxs-lookup"><span data-stu-id="dd174-126">If <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="dd174-127">Когда этому свойству присвоено значение `localhost`, используйте имя узла (а не `true`), если необходимо, чтобы клиенты проходили через прокси-сервер при взаимодействии со службами на том же компьютере.</span><span class="sxs-lookup"><span data-stu-id="dd174-127">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>  
  
 <span data-ttu-id="dd174-128">Если <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> присвоено значение `false`, все интернет-запросы выполняются через прокси-сервер.</span><span class="sxs-lookup"><span data-stu-id="dd174-128">When <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-129">В следующем примере показано, как задать привязку wsDualHttpBinding в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-129">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
  
  
 <span data-ttu-id="dd174-130">В следующем примере показано, как задать это свойство для указания того, что доступ к локальным ресурсам должен осуществляться в обход прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="dd174-130">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>  
  
 [!code-csharp[S_dualhttp#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#6)]
 [!code-vb[S_dualhttp#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#6)]  
  
 <span data-ttu-id="dd174-131">Значение этого свойства также может быть задано в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-131">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientBaseAddress : Uri with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-132">Возвращает или задает базовый адрес клиента.</span><span class="sxs-lookup"><span data-stu-id="dd174-132">Gets or sets the base address of the client.</span></span></summary>
        <value><span data-ttu-id="dd174-133">Объект <see cref="T:System.Uri" />, представляющий базовый адрес клиента.</span><span class="sxs-lookup"><span data-stu-id="dd174-133">The <see cref="T:System.Uri" /> that is the base address of the client.</span></span> <span data-ttu-id="dd174-134">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-134">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-135">Открытый универсальный код ресурса (URI) для клиента предоставляет конечную точку обратного вызова, необходимую службе для связи с клиентом при использовании дуплексного контракта.</span><span class="sxs-lookup"><span data-stu-id="dd174-135">This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-136">В следующем примере показано, как задать привязку wsDualHttpBinding в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-136">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#8)]
 [!code-vb[S_dualhttp#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="wSDualHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-137">Возвращает упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</span><span class="sxs-lookup"><span data-stu-id="dd174-137">Returns an ordered collection of binding elements contained in the current binding.</span></span></summary>
        <returns><span data-ttu-id="dd174-138">Объект <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, включающий объект <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> и, поскольку для привязки <see cref="T:System.ServiceModel.WSDualHttpBinding" /> требуются надежные сеансы, объект <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-138">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-139">В следующем примере показано, как получить упорядоченную коллекцию элементов привязки, содержащихся в текущей привязке.</span><span class="sxs-lookup"><span data-stu-id="dd174-139">The following example shows how to get an ordered collection of binding elements contained in the current binding.</span></span>  
  
 [!code-csharp[S_dualhttp#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#20)]
 [!code-vb[S_dualhttp#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-140">Возвращает версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-140">Gets the version of SOAP that is used for messages that are processed by this binding.</span></span></summary>
        <value><span data-ttu-id="dd174-141">Значение <see cref="T:System.ServiceModel.EnvelopeVersion" />, используемое с данной привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-141">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span></span> <span data-ttu-id="dd174-142">Значение всегда должно быть SOAP 1.2.</span><span class="sxs-lookup"><span data-stu-id="dd174-142">The value must always be SOAP 1.2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-143">В следующем привязке показано, как получить версию протокола SOAP, используемого для сообщений, обрабатываемых этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-143">The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.</span></span>  
  
 [!code-csharp[S_dualhttp#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#21)]
 [!code-vb[S_dualhttp#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-144">Возвращает или задает значение, которое указывает, используется ли имя узла для доступа к службе при сравнении по универсальному коду ресурса (URI).</span><span class="sxs-lookup"><span data-stu-id="dd174-144">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="dd174-145">Значение <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" />, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</span><span class="sxs-lookup"><span data-stu-id="dd174-145">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="dd174-146">Значение по умолчанию — <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, при котором имя узла в найденном соответствии не используется.</span><span class="sxs-lookup"><span data-stu-id="dd174-146">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-147">В следующем примере показано, как задать привязку wsDualHttpBinding в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-147">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#9)]
 [!code-vb[S_dualhttp#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-148">Получает или задает максимальный объем (в байтах) памяти, выделяемой для диспетчера буферов сообщений, которые принимают сообщения на конечных точках, настроенных с этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-148">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="dd174-149">Максимальный размер (в байтах) буферного пула, используемого конечной точкой, настроенной с этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-149">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span></span> <span data-ttu-id="dd174-150">Значение по умолчанию — 524288 байт.</span><span class="sxs-lookup"><span data-stu-id="dd174-150">The default value is 524288 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-151">Диспетчер буферов <xref:System.ServiceModel.Channels.BufferManager> минимизирует затраты на использование буферов с помощью буферного пула.</span><span class="sxs-lookup"><span data-stu-id="dd174-151">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="dd174-152">Буферы требуются для обработки службой сообщений, приходящих из канала.</span><span class="sxs-lookup"><span data-stu-id="dd174-152">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="dd174-153">Если в буферном пуле недостаточно памяти для обработки потока сообщений диспетчер <xref:System.ServiceModel.Channels.BufferManager> должен выделить дополнительную память из кучи CLR что увеличивает время сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="dd174-153">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="dd174-154">Интенсивное выделение памяти из мусорной кучи CLR указывает на то, что размер буферного пула слишком мал и производительность можно повысить за счет выделения большего объема памяти путем увеличения предельного значения <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd174-154">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.</span></span>  
  
 <span data-ttu-id="dd174-155">Ограничения на размер буфера, устанавливаемые этим свойством, предназначены для оптимизации производительности обмена сообщениями.</span><span class="sxs-lookup"><span data-stu-id="dd174-155">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="dd174-156">Если размер сообщения превышает максимальное значение, заданное для буфера, оно не отбрасывается.</span><span class="sxs-lookup"><span data-stu-id="dd174-156">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="dd174-157">Вместо этого из кучи CLR запрашивается дополнительная память, в результате чего на сборку мусора расходуется больше времени по сравнению с использованием буферов.</span><span class="sxs-lookup"><span data-stu-id="dd174-157">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-158">В следующем примере показано, как задать свойство `MaxBufferPoolSize`.</span><span class="sxs-lookup"><span data-stu-id="dd174-158">The following example shows how to set the `MaxBufferPoolSize`.</span></span>  
  
 [!code-csharp[S_dualhttp#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#10)]
 [!code-vb[S_dualhttp#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-159">Получает или задает максимальный размер (в байтах) сообщения, которое можно получить по каналу, настроенному с этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-159">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="dd174-160">Максимальный размер (в байтах) сообщения, обрабатываемого привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-160">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="dd174-161">Значение по умолчанию - 65 536 байт.</span><span class="sxs-lookup"><span data-stu-id="dd174-161">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-162">Размер сообщений, которые службы могут принимать из сети с использованием объекта <xref:System.ServiceModel.WSDualHttpBinding>, ограничен объемом памяти, выделенной для каждого сообщения.</span><span class="sxs-lookup"><span data-stu-id="dd174-162">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="dd174-163">Такое ограничение размера сообщения позволяет снизить уязвимость для атак типа «отказ в обслуживании» (DoS).</span><span class="sxs-lookup"><span data-stu-id="dd174-163">This bound on message size is intended to limit exposure to DOS-style attacks.</span></span>  
  
 <span data-ttu-id="dd174-164">Обратите внимание, что параметры для <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> и <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> являются локальными параметрами поведения.</span><span class="sxs-lookup"><span data-stu-id="dd174-164">Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings.</span></span> <span data-ttu-id="dd174-165">Это означает, что они не передаются другим конечным точкам в метаданных.</span><span class="sxs-lookup"><span data-stu-id="dd174-165">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="dd174-166">При создании из метаданных прокси-сервера для службы с максимальным размером сообщения 2 ГБ прокси-сервер по-прежнему будет использовать значение по умолчанию 64 КБ.</span><span class="sxs-lookup"><span data-stu-id="dd174-166">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="dd174-167">Это позволяет контролировать соответствующие параметры сообщения, а также размер буфера сообщений в области действия локальных администраторов.</span><span class="sxs-lookup"><span data-stu-id="dd174-167">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-168">В следующем примере показано, как получить свойство <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd174-168">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#22)]
 [!code-vb[S_dualhttp#22](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd174-169">Значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="dd174-169">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : System.ServiceModel.WSMessageEncoding with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-170">Возвращает или задает значение, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или Text/XML).</span><span class="sxs-lookup"><span data-stu-id="dd174-170">Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</span></span></summary>
        <value><span data-ttu-id="dd174-171">Значение <see cref="T:System.ServiceModel.WSMessageEncoding" />, указывающее формат, используемый для кодирования сообщений SOAP (MTOM или Text/XML).</span><span class="sxs-lookup"><span data-stu-id="dd174-171">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages.</span></span> <span data-ttu-id="dd174-172">Значение по умолчанию — <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-172">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-173">В следующем примере показано, как присвоить свойству `WSMessageEncoding` значение "MTOM".</span><span class="sxs-lookup"><span data-stu-id="dd174-173">The following example shows how to set the `WSMessageEncoding` property to MTOM.</span></span>  
  
 [!code-csharp[S_dualhttp#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#11)]
 [!code-vb[S_dualhttp#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-174">Возвращает или задает URI-адрес прокси-сервера HTTP.</span><span class="sxs-lookup"><span data-stu-id="dd174-174">Gets or sets the URI address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="dd174-175">Объект <see cref="T:System.Uri" />, используемый в качестве адреса прокси-сервера HTTP.</span><span class="sxs-lookup"><span data-stu-id="dd174-175">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span></span> <span data-ttu-id="dd174-176">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-176">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-177">Если свойству <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> присвоено значение `true`, значение свойства <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> игнорируется.</span><span class="sxs-lookup"><span data-stu-id="dd174-177">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-178">В следующем примере показано, как задать адрес прокси-сервера HTTP.</span><span class="sxs-lookup"><span data-stu-id="dd174-178">The following example shows how to specify the address of the HTTP proxy.</span></span>  
  
 [!code-csharp[S_dualhttp#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#12)]
 [!code-vb[S_dualhttp#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-179">Возвращает или задает ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-179">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="dd174-180">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, в котором задаются ограничения по сложности.</span><span class="sxs-lookup"><span data-stu-id="dd174-180">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-181">Ограничения по сложности включают такие элементы, как максимальная глубина элемента и максимальная длина строкового содержимого сообщения.</span><span class="sxs-lookup"><span data-stu-id="dd174-181">The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span> <span data-ttu-id="dd174-182">Ограничения защищают от атак типа "отказ в обслуживании", в которых сложность сообщения используется для перегрузки ресурсов процессора конечной точки.</span><span class="sxs-lookup"><span data-stu-id="dd174-182">The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-183">В следующем примере показано, как получить свойство `ReaderQuotas`.</span><span class="sxs-lookup"><span data-stu-id="dd174-183">The following example shows how to get the `ReaderQuotas` property.</span></span>  
  
 [!code-csharp[S_dualhttp#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#13)]
 [!code-vb[S_dualhttp#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableSession ReliableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableSession As ReliableSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableSession ^ ReliableSession { System::ServiceModel::ReliableSession ^ get(); void set(System::ServiceModel::ReliableSession ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReliableSession : System.ServiceModel.ReliableSession with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-184">Возвращает объект, обеспечивающий удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</span><span class="sxs-lookup"><span data-stu-id="dd174-184">Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></summary>
        <value><span data-ttu-id="dd174-185">Объект <see cref="T:System.ServiceModel.ReliableSession" />, обеспечивающий удобный доступ к свойствам элемента привязки надежного сеанса, доступным при использовании одной из предоставляемых системой привязок.</span><span class="sxs-lookup"><span data-stu-id="dd174-185">The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-186">Надежные сеансы требуются для служб, настроенных с использованием привязки <xref:System.ServiceModel.WSDualHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="dd174-186">The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-187">В следующем примере показано, как получить свойство <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd174-187">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#14)]
 [!code-vb[S_dualhttp#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-188">Возвращает схему транспорта URI для каналов и прослушивателей, настроенных с этой привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-188">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span></span></summary>
        <value><span data-ttu-id="dd174-189">Схема транспорта: "http".</span><span class="sxs-lookup"><span data-stu-id="dd174-189">The transport scheme: "http".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-190">В следующем примере показано, как задать привязку wsDualHttpBinding в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="dd174-190">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#15)]
 [!code-vb[S_dualhttp#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSDualHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSDualHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSDualHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSDualHttpSecurity ^ Security { System::ServiceModel::WSDualHttpSecurity ^ get(); void set(System::ServiceModel::WSDualHttpSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.WSDualHttpSecurity with get, set" Usage="System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSDualHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-191">Возвращает объект, в котором указываются параметры безопасности, используемые с данной привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-191">Gets an object that specifies the security settings used with this binding.</span></span></summary>
        <value><span data-ttu-id="dd174-192">Объект <see cref="T:System.ServiceModel.WSDualHttpSecurity" />, в котором указываются параметры безопасности, используемые с данной привязкой.</span><span class="sxs-lookup"><span data-stu-id="dd174-192">The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding.</span></span> <span data-ttu-id="dd174-193">Значением свойства <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> по умолчанию является <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-193">The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-194">Двойная привязка предоставляет службе IP-адрес клиента.</span><span class="sxs-lookup"><span data-stu-id="dd174-194">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="dd174-195">Клиенту следует использовать механизм безопасности, чтобы гарантировать, что подключение выполняется только к доверенным службам.</span><span class="sxs-lookup"><span data-stu-id="dd174-195">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-196">В следующем примере показано, как получить тип безопасности привязки.</span><span class="sxs-lookup"><span data-stu-id="dd174-196">The following example shows how to get the type of security of the binding.</span></span>  
  
 [!code-csharp[S_dualhttp#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#16)]
 [!code-vb[S_dualhttp#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-197">Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> относительно значения по умолчанию и нужно ли его сериализовать.</span><span class="sxs-lookup"><span data-stu-id="dd174-197">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="dd174-198">Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-198"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReliableSession : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeReliableSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-199">Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> относительно значения по умолчанию и нужно ли его сериализовать.</span><span class="sxs-lookup"><span data-stu-id="dd174-199">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="dd174-200">Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-200"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-201">Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> относительно значения по умолчанию и нужно ли его сериализовать.</span><span class="sxs-lookup"><span data-stu-id="dd174-201">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="dd174-202">Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-202"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTextEncoding : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeTextEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-203">Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> относительно значения по умолчанию и нужно ли его сериализовать.</span><span class="sxs-lookup"><span data-stu-id="dd174-203">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="dd174-204">Значение <see langword="true" />, если значение свойства <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-204"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-205">Возвращает значение, указывающее, синхронно или асинхронно обрабатываются входящие запросы.</span><span class="sxs-lookup"><span data-stu-id="dd174-205">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="dd174-206">Значение <see langword="true" />, если входящие запросы обрабатываются синхронно. Значение <see langword="false" />, если входящие запросы обрабатываются асинхронно.</span><span class="sxs-lookup"><span data-stu-id="dd174-206"><see langword="true" /> if requests are handled synchronously; <see langword="false" /> if handled asynchronously.</span></span> <span data-ttu-id="dd174-207">Возвращаемое значение — всегда <see langword="false" />, чтобы запросы обрабатывались асинхронно.</span><span class="sxs-lookup"><span data-stu-id="dd174-207">The value returned is always is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-208">Это значение можно изменить с помощью поведения модели службы.</span><span class="sxs-lookup"><span data-stu-id="dd174-208">This value can be changed by using a service model behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-209">В следующих примерах показано, как получить значение <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd174-209">The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> value.</span></span>  
  
 [!code-csharp[S_dualhttp#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#23)]
 [!code-vb[S_dualhttp#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#23)]  
  
 [!code-csharp[S_dualhttp#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#24)]
 [!code-vb[S_dualhttp#24](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-210">Возвращает или задает кодировку, используемую в тексте сообщений.</span><span class="sxs-lookup"><span data-stu-id="dd174-210">Gets or sets the character encoding that is used for the message text.</span></span></summary>
        <value><span data-ttu-id="dd174-211">Объект <see cref="T:System.Text.Encoding" />, указывающий используемую кодировку.</span><span class="sxs-lookup"><span data-stu-id="dd174-211">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span></span> <span data-ttu-id="dd174-212">Значение по умолчанию — <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-212">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-213">В следующем примере показано, как получить кодировку, используемую в тексте сообщений.</span><span class="sxs-lookup"><span data-stu-id="dd174-213">The following example shows how to get the character encoding that is used for the message text.</span></span>  
  
 [!code-csharp[S_dualhttp#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#17)]
 [!code-vb[S_dualhttp#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionFlow : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-214">Возвращает или задает значение, указывающее, должна ли эта привязка поддерживать поточные WS-транзакции.</span><span class="sxs-lookup"><span data-stu-id="dd174-214">Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</span></span></summary>
        <value><span data-ttu-id="dd174-215">Значение <see langword="true" />, если поточные транзакции поддерживаются; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-215"><see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dd174-216">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-216">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-217">Значение по умолчанию указывает на то, что клиенты не передают транзакции потоком, а службы отклоняют сообщения с заголовком поточной транзакции.</span><span class="sxs-lookup"><span data-stu-id="dd174-217">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-218">В следующем примере кода показано, как задать свойство `TransactionFlow` для поддержки поточных транзакций.</span><span class="sxs-lookup"><span data-stu-id="dd174-218">The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.</span></span>  
  
 [!code-csharp[S_dualhttp#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#18)]
 [!code-vb[S_dualhttp#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd174-219">Возвращает или задает значение, определяющее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы при его наличии.</span><span class="sxs-lookup"><span data-stu-id="dd174-219">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span></span></summary>
        <value><span data-ttu-id="dd174-220">Значение <see langword="true" />, если должен использоваться автоматически настроенный прокси-сервер HTTP системы (при его наличии); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-220"><see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dd174-221">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dd174-221">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-222">В следующем примере показано задание свойства `UseDefaultWebProxy` для использования автоматически настроенного прокси-сервера HTTP системы.</span><span class="sxs-lookup"><span data-stu-id="dd174-222">The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.</span></span>  
  
 [!code-csharp[S_dualhttp#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#19)]
 [!code-vb[S_dualhttp#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
