<Type Name="IClientChannel" FullName="System.ServiceModel.IClientChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fff6a2dcbfb42a60c262dd1b69e836006a2c8197" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75160003" /></Metadata><TypeSignature Language="C#" Value="public interface IClientChannel : IDisposable, System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientChannel implements class System.IDisposable, class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject, class System.ServiceModel.IContextChannel, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientChannel&#xA;Implements IContextChannel, IDisposable, IExtensibleObject(Of IContextChannel)" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientChannel : IDisposable, System::ServiceModel::IContextChannel, System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::IContextChannel ^&gt;" />
  <TypeSignature Language="F#" Value="type IClientChannel = interface&#xA;    interface IContextChannel&#xA;    interface ICommunicationObject&#xA;    interface IDisposable&#xA;    interface IChannel&#xA;    interface IExtensibleObject&lt;IContextChannel&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IContextChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="58ecd-101">Определяет поведение исходящего запроса и каналов типа "запрос-ответ", используемых клиентскими приложениями.</span><span class="sxs-lookup"><span data-stu-id="58ecd-101">Defines the behavior of outbound request and request/reply channels used by client applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecd-102">Интерфейс <xref:System.ServiceModel.IClientChannel> определяет операции, поддерживаемые всеми каналами, возвращенными вызовом метода <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="58ecd-102">The <xref:System.ServiceModel.IClientChannel> interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="58ecd-103">Используйте методы и свойства <xref:System.ServiceModel.IClientChannel> для проверки и изменения исходящего типизированного канала.</span><span class="sxs-lookup"><span data-stu-id="58ecd-103">Use the <xref:System.ServiceModel.IClientChannel> methods and properties to inspect and modify the outbound typed channel.</span></span> <span data-ttu-id="58ecd-104">[Средство служебной программы метаданных ServiceModel (Svcutil. exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) экспортирует как класс <xref:System.ServiceModel.ClientBase%601>, так и интерфейс контракта службы, создавая интерфейс контракта, который наследует от целевого контракта службы и <xref:System.ServiceModel.IClientChannel>, позволяя использовать расширенный контракт в качестве прокси-сервера для службы и доступа к каналу клиента.</span><span class="sxs-lookup"><span data-stu-id="58ecd-104">The [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <xref:System.ServiceModel.IClientChannel>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.</span></span>  
  
 <span data-ttu-id="58ecd-105">Дополнительные сведения см. в разделе [архитектура клиента WCF](~/docs/framework/wcf/feature-details/client-architecture.md).</span><span class="sxs-lookup"><span data-stu-id="58ecd-105">For more information, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md).</span></span> <span data-ttu-id="58ecd-106">Примеры его внешнего вида в создаваемых файлах кода клиента см. в разделе [Основные сведения о созданном клиентском коде](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).</span><span class="sxs-lookup"><span data-stu-id="58ecd-106">For examples of its appearance in generated client code files, see [Understanding Generated Client Code](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowInitializationUI">
      <MemberSignature Language="C#" Value="public bool AllowInitializationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitializationUI" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInitializationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitializationUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowInitializationUI : bool with get, set" Usage="System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecd-107">Возвращает или задает значение, указывающее, пытается интерфейс <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> вызвать объекты <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> в свойстве <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> или создает исключение, если коллекция не пуста.</span><span class="sxs-lookup"><span data-stu-id="58ecd-107">Gets or sets a value indicating whether <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> attempts to call the <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> objects in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> property or throws if that collection is not empty.</span></span></summary>
        <value><span data-ttu-id="58ecd-108"><see langword="true" />, если Windows Communication Foundation (WCF) может вызывать инициализаторы интерактивных каналов; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58ecd-108"><see langword="true" /> if Windows Communication Foundation (WCF) is permitted to invoke interactive channel initializers; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecd-109">Задает значение `false`, если необходимо вызвать исключение, а не отобразить диалоговое окно инициализации.</span><span class="sxs-lookup"><span data-stu-id="58ecd-109">Set this to `false` if you want to throw an exception rather than display an initialization dialog.</span></span> <span data-ttu-id="58ecd-110">Это полезно в сценарии среднего уровня, в котором необходимо гарантировать, что диалоговое окно отобразится, даже если приложение настроено на его отображение.</span><span class="sxs-lookup"><span data-stu-id="58ecd-110">This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one.</span></span> <span data-ttu-id="58ecd-111">Дополнительные сведения см. [в разделе доступ к службам с помощью клиента WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) и <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="58ecd-111">For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : AsyncCallback * obj -&gt; IAsyncResult" Usage="iClientChannel.BeginDisplayInitializationUI (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="58ecd-112">Метод, вызываемый по завершении этого метода.</span><span class="sxs-lookup"><span data-stu-id="58ecd-112">The method that is called when this method completes.</span></span></param>
        <param name="state"><span data-ttu-id="58ecd-113">Сведения о состоянии канала.</span><span class="sxs-lookup"><span data-stu-id="58ecd-113">Information about the state of the channel.</span></span></param>
        <summary><span data-ttu-id="58ecd-114">Асинхронный вызов для начала использования пользовательского интерфейса для получения учетных данных.</span><span class="sxs-lookup"><span data-stu-id="58ecd-114">An asynchronous call to begin using a user interface to obtain credential information.</span></span></summary>
        <returns><span data-ttu-id="58ecd-115">Объект <see cref="T:System.IAsyncResult" />, используемый для обратного вызова после завершения обработки.</span><span class="sxs-lookup"><span data-stu-id="58ecd-115">The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecd-116">Вызовите этот метод, чтобы начать инициализацию любого интерактивного канала (например, выбор карты CardSpace).</span><span class="sxs-lookup"><span data-stu-id="58ecd-116">Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</span></span> <span data-ttu-id="58ecd-117">Это происходит автоматически, если канал используется без явного вызова метода <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, поэтому для многих приложений этот вызов необязателен.</span><span class="sxs-lookup"><span data-stu-id="58ecd-117">This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, so for many applications this call is optional.</span></span>  
  
 <span data-ttu-id="58ecd-118">Однако если в процессе выбора происходит длительное время, операция, которая автоматически вызвала это, может истекает время ожидания. Чтобы избежать этого, вызовите <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> или <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> и <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> явным образом.</span><span class="sxs-lookup"><span data-stu-id="58ecd-118">However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly.</span></span> <span data-ttu-id="58ecd-119">Время ожидания этих операций не истечет, что позволит точно управлять тем, где в приложении отобразится это диалоговое окно.</span><span class="sxs-lookup"><span data-stu-id="58ecd-119">These operations do not time out and allow you to control exactly where in your application this dialog comes up.</span></span>  
  
 <span data-ttu-id="58ecd-120">Это метод открывает диалоговое окно, только если в приложении задана такая настройка.</span><span class="sxs-lookup"><span data-stu-id="58ecd-120">This method only brings up a dialog if the application is configured to do so.</span></span> <span data-ttu-id="58ecd-121">Если приложение не настроено на использование CardSpace или другого интерактивного инициализатора канала, этот вызов возвращается без выполнения каких-либо действий.</span><span class="sxs-lookup"><span data-stu-id="58ecd-121">When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</span></span>  
  
 <span data-ttu-id="58ecd-122">Если этот метод вызывается явным образом, также необходимо явным образом открыть канал перед его использованием.</span><span class="sxs-lookup"><span data-stu-id="58ecd-122">If you call this method explicitly, you must also explicitly open the channel before using it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidInteractiveInitialization">
      <MemberSignature Language="C#" Value="public bool DidInteractiveInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidInteractiveInitialization" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DidInteractiveInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidInteractiveInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DidInteractiveInitialization : bool" Usage="System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecd-123">Возвращает значение, указывающее, был ли вызван пользовательский интерфейс для получения учетных данных.</span><span class="sxs-lookup"><span data-stu-id="58ecd-123">Gets a value indicating whether a call was done to a user interface to obtain credential information.</span></span></summary>
        <value><span data-ttu-id="58ecd-124">Значение <see langword="true" />, если метод <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> был вызван (или методы <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> и <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58ecd-124"><see langword="true" /> if the <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> method was called (or the <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> and <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> methods; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecd-125">Если операции вызваны в канале <xref:System.ServiceModel.IClientChannel> без вызова методов <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> и <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, эти методы вызываются автоматически.</span><span class="sxs-lookup"><span data-stu-id="58ecd-125">If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, these methods are called automatically.</span></span> <span data-ttu-id="58ecd-126">Дополнительные сведения см. [в разделе доступ к службам с помощью клиента WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) и <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="58ecd-126">For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void DisplayInitializationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayInitializationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayInitializationUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisplayInitializationUI();" />
      <MemberSignature Language="F#" Value="abstract member DisplayInitializationUI : unit -&gt; unit" Usage="iClientChannel.DisplayInitializationUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecd-127">Вызов пользовательского интерфейса для получения учетных данных.</span><span class="sxs-lookup"><span data-stu-id="58ecd-127">A call to a user interface to obtain credential information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecd-128">Вызовите этот метод, чтобы начать инициализацию любого интерактивного канала (например, выбор карты CardSpace).</span><span class="sxs-lookup"><span data-stu-id="58ecd-128">Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</span></span> <span data-ttu-id="58ecd-129">Это происходит автоматически, если канал используется без явного вызова метода <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, поэтому для многих приложений этот вызов необязателен.</span><span class="sxs-lookup"><span data-stu-id="58ecd-129">This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, so for many applications this call is optional.</span></span>  
  
 <span data-ttu-id="58ecd-130">Однако если в процессе выбора происходит длительное время, операция, которая автоматически вызвала это, может истекает время ожидания. Чтобы избежать этого, вызовите <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> или <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> и <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> явным образом.</span><span class="sxs-lookup"><span data-stu-id="58ecd-130">However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly.</span></span> <span data-ttu-id="58ecd-131">Время ожидания этих операций не истечет, что позволит точно управлять тем, где в приложении отобразится это диалоговое окно.</span><span class="sxs-lookup"><span data-stu-id="58ecd-131">These operations do not time out and allow you to control exactly where in your application this dialog comes up.</span></span>  
  
 <span data-ttu-id="58ecd-132">Это метод открывает диалоговое окно, только если в приложении задана такая настройка.</span><span class="sxs-lookup"><span data-stu-id="58ecd-132">This method only brings up a dialog if the application is configured to do so.</span></span> <span data-ttu-id="58ecd-133">Если приложение не настроено на использование CardSpace или другого интерактивного инициализатора канала, этот вызов возвращается без выполнения каких-либо действий.</span><span class="sxs-lookup"><span data-stu-id="58ecd-133">When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</span></span>  
  
 <span data-ttu-id="58ecd-134">Если этот метод вызывается явным образом, также необходимо явным образом открыть канал перед его использованием.</span><span class="sxs-lookup"><span data-stu-id="58ecd-134">If you call this method explicitly, you must also explicitly open the channel before using it.</span></span>  
  
 <span data-ttu-id="58ecd-135">Дополнительные сведения см. [в разделе доступ к службам с помощью клиента WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) и <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="58ecd-135">For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iClientChannel.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="58ecd-136"><see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="58ecd-136">The <see cref="T:System.IAsyncResult" />.</span></span></param>
        <summary><span data-ttu-id="58ecd-137">Вызывается после завершения вызова <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="58ecd-137">Called when the call to <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> has finished.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMessageReceived">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::UnknownMessageReceivedEventArgs ^&gt; ^ UnknownMessageReceived;" />
      <MemberSignature Language="F#" Value="member this.UnknownMessageReceived : EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; " Usage="member this.UnknownMessageReceived : System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecd-138">Это событие зарезервировано.</span><span class="sxs-lookup"><span data-stu-id="58ecd-138">This is a reserved event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.IClientChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecd-139">Возвращает универсальный код ресурса (URI), содержащий адрес транспорта, по которому отправляются сообщения по каналу клиента.</span><span class="sxs-lookup"><span data-stu-id="58ecd-139">Gets the URI that contains the transport address to which messages are sent on the client channel.</span></span></summary>
        <value><span data-ttu-id="58ecd-140">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляются сообщения по каналу.</span><span class="sxs-lookup"><span data-stu-id="58ecd-140">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecd-141">Адрес <xref:System.ServiceModel.EndpointAddress> является одновременно конечным назначением и физическим адресом, если не задано свойство <xref:System.ServiceModel.IClientChannel.Via%2A>.</span><span class="sxs-lookup"><span data-stu-id="58ecd-141">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="58ecd-142">Если свойство <xref:System.ServiceModel.IClientChannel.Via%2A> задано, это значение является фактическим физическим адресом, по которому отправляется сообщение и через который должно пройти сообщение, чтобы попасть по назначению.</span><span class="sxs-lookup"><span data-stu-id="58ecd-142">If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span> <span data-ttu-id="58ecd-143">Это значение можно задать в файле конфигурации с помощью <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="58ecd-143">This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
