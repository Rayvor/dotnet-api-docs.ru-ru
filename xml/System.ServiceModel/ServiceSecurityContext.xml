<Type Name="ServiceSecurityContext" FullName="System.ServiceModel.ServiceSecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec7bb422097397e333844ebc4fcf856ada66acf1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69101147" /></Metadata><TypeSignature Language="C#" Value="public class ServiceSecurityContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceSecurityContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceSecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceSecurityContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceSecurityContext" />
  <TypeSignature Language="F#" Value="type ServiceSecurityContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет контекст безопасности удаленной стороны. На клиенте представляет удостоверение службы, а на службе представляет удостоверение клиента.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данные являются частью объекта <xref:System.ServiceModel.Security.SecurityMessageProperty> для сообщения.  
  
 Этот класс используется для получения сведений об удаленном *контексте безопасности* во время выполнения. Контекст безопасности создается после успешного прохождения клиентом проверки подлинности и его авторизации на доступ к методу. После успешного прохождения проверки подлинности и авторизации сообщения сведения о безопасности от клиента и для текущего экземпляра службы можно получить из экземпляра данного класса.  
  
 Можно извлечь экземпляр класса <xref:System.ServiceModel.ServiceSecurityContext> из свойства <xref:System.ServiceModel.OperationContext.Current%2A> класса <xref:System.ServiceModel.OperationContext> или использовать его из метода операции службы, как показано в следующем примере.  
  
## <a name="parsing-a-claimset"></a>Анализ объекта ClaimSet  
 Этот класс обычно используется для получения текущего набора утверждений с целью идентификации или авторизации клиента при доступе к методу. Класс <xref:System.IdentityModel.Claims.ClaimSet> содержит коллекцию объектов <xref:System.IdentityModel.Claims.Claim>, каждый из которых можно проанализировать на предмет наличия определенного утверждения. Если заданное утверждение предоставлено, клиент может быть авторизован. Эта функциональность обеспечивается переопределением метода <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> класса <xref:System.ServiceModel.ServiceAuthorizationManager>.  Полный пример см. в разделе [Политика авторизации](~/docs/framework/wcf/samples/authorization-policy.md).  
  
## <a name="cookie-mode-and-isauthenticated"></a>Режим "cookie" и свойство IsAuthenticated  
 В некоторых случаях свойство <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> интерфейса <xref:System.Security.Principal.IIdentity> возвращает значение `true`, даже если удаленный клиент прошел проверку подлинности как анонимный пользователь. (Свойство <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> возвращает реализацию интерфейса <xref:System.Security.Principal.IIdentity>.) Чтобы это произошло, должны выполняться следующие условия:  
  
-   служба использует проверку подлинности Windows;  
  
-   служба допускает анонимный вход;  
  
-   Привязка является [ &lt;CustomBinding&gt;](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md).  
  
-   пользовательская привязка включает элемент `<security>`;  
  
-   `<security>` Элемент содержит`requireSecurityContextCancellation` [секуреконверсатионбутстрапс&gt; атрибутом, для которого задано значение. &lt;](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md) `false`  
  
   
  
## Examples  
 В следующем примере класс <xref:System.ServiceModel.ServiceSecurityContext> используется для предоставления сведений о текущем контексте безопасности. Код создает экземпляр класса <xref:System.IO.StreamWriter> для записи этой информации в файл.  
  
 [!code-csharp[ServiceSecurityContext#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#1)]
 [!code-vb[ServiceSecurityContext#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#1)]  
  
 В следующем примере показана реализация метода <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>, в которой класс <xref:System.ServiceModel.ServiceSecurityContext> используется для синтаксического анализа набора утверждений.  
  
 [!code-csharp[ServiceSecurityContext#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#2)]
 [!code-vb[ServiceSecurityContext#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.OperationContext.Current" />
    <altmember cref="T:System.ServiceModel.OperationContext" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.ServiceModel.ServiceAuthorizationManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/389b5a57-4175-4bc0-ada0-fc750d51149f">Как Анализ контекста безопасности</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0">Пример политики авторизации</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f0ecc6f7-f4b5-42a4-9cb1-b02e28e26620">Защита служб</related>
    <related type="Article" href="https://msdn.microsoft.com/library/099defbb-5d35-434e-9336-1a49b9ec7663">Утверждения и авторизация</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ authorizationPolicies);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext authorizationPolicies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationPolicies" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizationPolicies">Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащий политики авторизации.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" /> коллекцией объектов политик.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор использует модуль создания цепочки политик по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Policy.AuthorizationContext authorizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::IdentityModel::Policy::AuthorizationContext ^ authorizationContext);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.IdentityModel.Policy.AuthorizationContext -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext authorizationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="authorizationContext">Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий информацию об авторизации.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" /> указанными параметрами авторизации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор обычно используется в сценариях, где приложение запускает собственный модуль создания цепочки политик, в результате чего получается объект <xref:System.IdentityModel.Policy.AuthorizationContext>. Для обработчика политик по умолчанию следует использовать конструкторы, принимающие в качестве параметра коллекцию типа <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Policy.AuthorizationContext authorizationContext, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::IdentityModel::Policy::AuthorizationContext ^ authorizationContext, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ authorizationPolicies);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.IdentityModel.Policy.AuthorizationContext * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext (authorizationContext, authorizationPolicies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
        <Parameter Name="authorizationPolicies" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizationContext">Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий параметры авторизации.</param>
        <param name="authorizationPolicies">Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащий политики авторизации.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" /> указанными параметрами авторизации и коллекцией политик.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.ServiceSecurityContext Anonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.ServiceSecurityContext Anonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Anonymous As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::ServiceSecurityContext ^ Anonymous { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Anonymous : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.ServiceSecurityContext.Anonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" />, содержащий пустую коллекцию утверждений, удостоверений и других данных контекста, которые обычно используются для представления анонимной стороны.</summary>
        <value>Пустой экземпляр класса <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Policy.AuthorizationContext AuthorizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Policy.AuthorizationContext AuthorizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthorizationContext As AuthorizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Policy::AuthorizationContext ^ AuthorizationContext { System::IdentityModel::Policy::AuthorizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationContext : System.IdentityModel.Policy.AuthorizationContext" Usage="System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Policy.AuthorizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает информацию об авторизации для экземпляра этого класса.  Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> содержит коллекцию объектов <see cref="T:System.IdentityModel.Claims.ClaimSet" />, которые приложение может запрашивать и получать сведения о конкретной стороне.</summary>
        <value>Объект <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, содержащий параметры авторизации.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationPolicies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; AuthorizationPolicies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; AuthorizationPolicies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ AuthorizationPolicies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationPolicies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; with get, set" Usage="System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию политик, связанную с экземпляром этого класса.</summary>
        <value>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />, содержащая политики.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [Управление утверждениями и авторизацией с помощью модели удостоверения](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.ServiceSecurityContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.ServiceSecurityContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::ServiceSecurityContext ^ Current { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.ServiceSecurityContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущий <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</summary>
        <value>Текущий контекст <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, предоставил ли текущий клиент учетные данные службе.</summary>
        <value>Значение <see langword="true" />, если клиент предоставил учетные данные; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity PrimaryIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity PrimaryIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ PrimaryIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentity : System.Security.Principal.IIdentity" Usage="System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает первичное удостоверение, связанное с текущим параметром.</summary>
        <value>Интерфейс <see cref="T:System.Security.Principal.IIdentity" />, связанный с текущим параметром.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Первичное удостоверение берется из учетных данных, использованных для проверки подлинности текущего пользователя. Если учетные данные — сертификат X.509, удостоверение представляет собой объединение имени субъекта и отпечатка (в таком порядке). Имя субъекта отделяется от отпечатка точкой с запятой и пробелом. Если поле субъекта сертификата имеет значение `null`, первичное удостоверение содержит только точку с запятой, пробел и отпечаток.  
  
 При использовании дуплексной схемы обмена сообщениями с прямой проверки подлинности Kerberos это свойство становится пустым при обратном вызове, и набор утверждений также пуст. Это не происходит, если вместо Kerberos используется *SspiNegotiated* .  
  
 Маркер инициатора запроса Kerberos используется только на клиенте для представления службы. Формируемая им политика авторизации содержит одно утверждение — SPN; следовательно, удостоверение в утверждении отсутствует. В большинстве случаев это не создает проблем, поскольку <xref:System.ServiceModel.ServiceSecurityContext> не используется на клиенте. В дуплексном сценарии во время обратного вызова, если обратный вызов проверяет это свойство, он получает анонимное удостоверение.  
  
   
  
## Examples  
 Пример использования `PrimaryIdentity` свойства для авторизации клиента с помощью сертификата см. в разделе [как Изучите контекст](~/docs/framework/wcf/how-to-examine-the-security-context.md)безопасности.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="https://msdn.microsoft.com/library/389b5a57-4175-4bc0-ada0-fc750d51149f">Как Анализ контекста безопасности</related>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает удостоверение Windows текущего параметра.</summary>
        <value>Объект <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий пользователя домена Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если удаленную сторону нельзя связать с учетной записью Windows, свойству <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> присваивается значение `true`.  
  
   
  
## Examples  
 <xref:System.Security.Permissions.PrincipalPermissionAttribute>  
  
 <xref:System.Security.Principal.IPrincipal>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
