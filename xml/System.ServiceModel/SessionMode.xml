<Type Name="SessionMode" FullName="System.ServiceModel.SessionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23e8fa9172a48a65b021d988a1812316b9fd73ad" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73381370" /></Metadata><TypeSignature Language="C#" Value="public enum SessionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SessionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.SessionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SessionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SessionMode" />
  <TypeSignature Language="F#" Value="type SessionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Задает значения для указания поддержки для надежных сеансов, которые требует или поддерживает контракт.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перечисление <xref:System.ServiceModel.SessionMode> со свойством <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType>, чтобы требовать, разрешать или запрещать привязки для использования сеансов между конечными точками, которые связывают или поддерживают контракт службы. Сеанс — это способ корреляции набора сообщений, обмен которыми выполняется между двумя или несколькими конечными точками. Дополнительные сведения о сеансах см. [в разделе Использование сеансов](~/docs/framework/wcf/using-sessions.md).  
  
 Если служба поддерживает сеансы, можно использовать свойство <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType>, чтобы указать отношение между экземплярами реализации контракта службы и сеансом канала.  
  
 Например, если свойству <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> присвоено значение `Allowed`, а свойству <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> — <xref:System.ServiceModel.InstanceContextMode.PerSession?displayProperty=nameWithType>, клиент может использовать привязку, поддерживающую надежные сеансы для осуществления повторных вызовов одного и того же объекта службы.  
  
 Поскольку сеанс представляет собой концепт на уровне канала, используемый моделью приложения, существует взаимодействие между перечислением <xref:System.ServiceModel.SessionMode> в контракте и свойством <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType>, которое контролирует связь между каналами и определенными объектами службы.  
  
 В приведенной ниже таблице показано, к какому результату приводит поддержка или отсутствие поддержки надежных сеансов входящим каналом при заданном сочетании значений свойств <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> и <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> в службе.  
  
|Значение InstanceContextMode|Обязательное|Allowed|NotAllowed|  
|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|  
|PerCall|— Поведение с каналом сеанса: сеанс и <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого вызова.<br />-Поведение с каналом без сеанса: создается исключение.|— Поведение с каналом сеанса: сеанс и <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого вызова.<br />-Поведение с каналом без сеанса: <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого вызова.|-Поведение с каналом сеанса: создается исключение.<br />-Поведение с каналом без сеанса: <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого вызова.|  
|PerSession|— Поведение с каналом сеанса: сеанс и <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого канала.<br />-Поведение с каналом без сеанса: создается исключение.|— Поведение с каналом сеанса: сеанс и <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого канала.<br />-Поведение с каналом без сеанса: <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого вызова.|-Поведение с каналом сеанса: создается исключение.<br />-Поведение с каналом без сеанса: <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого вызова.|  
|Single|— Поведение с каналом сеанса: один сеанс и один <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для всех вызовов.<br />-Поведение с каналом без сеанса: создается исключение.|— Поведение с каналом сеанса: сеанс и <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого созданного одноэлементного элемента или для заданного пользователем одноэлементного множества.<br />-Поведение с каналом без сеанса: <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого созданного одноэлементного экземпляра или для заданного пользователем одноэлементного множества.|-Поведение с каналом сеанса: создается исключение.<br />-Поведение с каналом без сеанса: <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> для каждого созданного одноэлементного экземпляра или для заданного пользователем одноэлементного множества.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> <xref:System.ServiceModel.ServiceContractAttribute>, чтобы указать, что контракту службы `IMyService` требуются привязки, поддерживающие состояние сеанса.  
  
 [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]
 [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Allowed">
      <MemberSignature Language="C#" Value="Allowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.SessionMode Allowed = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.SessionMode.Allowed" />
      <MemberSignature Language="VB.NET" Value="Allowed" />
      <MemberSignature Language="C++ CLI" Value="Allowed" />
      <MemberSignature Language="F#" Value="Allowed = 0" Usage="System.ServiceModel.SessionMode.Allowed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Указывает, что контракт поддерживает сеансы, если входящая привязка их поддерживает.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotAllowed">
      <MemberSignature Language="C#" Value="NotAllowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.SessionMode NotAllowed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.SessionMode.NotAllowed" />
      <MemberSignature Language="VB.NET" Value="NotAllowed" />
      <MemberSignature Language="C++ CLI" Value="NotAllowed" />
      <MemberSignature Language="F#" Value="NotAllowed = 2" Usage="System.ServiceModel.SessionMode.NotAllowed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Указывает, что контракт не поддерживает привязки, инициирующие сеансы.</summary>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="Required" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.SessionMode Required = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.SessionMode.Required" />
      <MemberSignature Language="VB.NET" Value="Required" />
      <MemberSignature Language="C++ CLI" Value="Required" />
      <MemberSignature Language="F#" Value="Required = 1" Usage="System.ServiceModel.SessionMode.Required" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Указывает, что для контракта требует привязка, связанная с сеансом. Если привязка не настроена для поддержки сеанса, выдается исключение.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
