<Type Name="IDefaultCommunicationTimeouts" FullName="System.ServiceModel.IDefaultCommunicationTimeouts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d93b5d739f83fcd00be0225ebcb06f10589672d7" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70570315" /></Metadata><TypeSignature Language="C#" Value="public interface IDefaultCommunicationTimeouts" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDefaultCommunicationTimeouts" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDefaultCommunicationTimeouts" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDefaultCommunicationTimeouts" />
  <TypeSignature Language="F#" Value="type IDefaultCommunicationTimeouts = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52860-101">Определяет интерфейс определения времени ожидания связи, используемый каналами и диспетчерами каналов, например прослушивателями каналов, фабриками каналов и узлами служб.</span><span class="sxs-lookup"><span data-stu-id="52860-101">Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52860-102">В этом интерфейсе имеется четыре свойства только для чтения, которые предоставляют значения времени по умолчанию для методов открытия, отправки, получения и закрытия, которые можно вызвать для объекта связи.</span><span class="sxs-lookup"><span data-stu-id="52860-102">This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object.</span></span> <span data-ttu-id="52860-103">Каждая реализация отвечает за получение значений по умолчанию соответствующим для реализации образом.</span><span class="sxs-lookup"><span data-stu-id="52860-103">Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation.</span></span> <span data-ttu-id="52860-104">Этот интерфейс реализуется основной реализацией для написания пользовательских каналов <xref:System.ServiceModel.Channels.ChannelBase>, а также основной реализацией для написания диспетчеров пользовательских каналов <xref:System.ServiceModel.Channels.ChannelManagerBase>, которые наследуются от каналов <xref:System.ServiceModel.Channels.ChannelFactoryBase> и <xref:System.ServiceModel.Channels.ChannelListenerBase>.</span><span class="sxs-lookup"><span data-stu-id="52860-104">This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>.</span></span> <span data-ttu-id="52860-105">Интерфейс также реализован классом <xref:System.ServiceModel.Channels.Binding> и наследуется от этого класса посредством <xref:System.ServiceModel.Channels.CustomBinding> и системных привязок, например <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="52860-105">The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 <span data-ttu-id="52860-106">При непосредственном использовании каналов существует возможность прямо указать время ожидания для каждого канала или для каждой операции либо для любой другой пользовательской основы.</span><span class="sxs-lookup"><span data-stu-id="52860-106">When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis.</span></span> <span data-ttu-id="52860-107">При использовании модели каналов доступ к времени ожидания имеется, когда нужно им управлять.</span><span class="sxs-lookup"><span data-stu-id="52860-107">When using the channel model, timeouts are quite accessible when you want to control them.</span></span>  
  
 <span data-ttu-id="52860-108">С другой стороны, при использовании модели служб программирование основано на службах и контрактах и время ожидания рассматривается в фоновом режиме.</span><span class="sxs-lookup"><span data-stu-id="52860-108">When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background.</span></span> <span data-ttu-id="52860-109">Они управляются системами инфраструктуры, переносящими время ожидания из одного места в другое от имени программиста.</span><span class="sxs-lookup"><span data-stu-id="52860-109">They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf.</span></span> <span data-ttu-id="52860-110"><xref:System.ServiceModel.IDefaultCommunicationTimeouts> является единым механизмом для этого переноса.</span><span class="sxs-lookup"><span data-stu-id="52860-110"><xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52860-111">Возвращает промежуток времени, по истечении которого истекает время ожидания метода закрытия, вызванного объектом связи.</span><span class="sxs-lookup"><span data-stu-id="52860-111">Gets the interval of time after which the close method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="52860-112">Объект <see cref="T:System.TimeSpan" />, который задает для метода закрытия интервал времени до времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-112">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the close method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52860-113">Все операции, которые потенциально будут выполняться длительное время, должны иметь время ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-113">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="52860-114">Методы, которые не принимают явно заданных значений времени ожидания, должны делегировать методам, которые работают со значениями времени ожидания по умолчанию, или не должны выполнять никаких операций, блокирующих действие этих методов.</span><span class="sxs-lookup"><span data-stu-id="52860-114">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="52860-115">Время ожидания представляет общее ограничение для конкурирующих операций высокого уровня; поэтому количество повторных попыток должно ограничиваться временем, еще не использованным предыдущими попытками.</span><span class="sxs-lookup"><span data-stu-id="52860-115">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52860-116">Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода открытия, вызванного объектом связи.</span><span class="sxs-lookup"><span data-stu-id="52860-116">Gets the interval of time after which the open method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="52860-117">Объект <see cref="T:System.TimeSpan" />, который задает для метода открытия интервал времени до времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-117">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the open method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52860-118">Все операции, которые потенциально будут выполняться длительное время, должны иметь время ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-118">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="52860-119">Методы, которые не принимают явно заданных значений времени ожидания, должны делегировать методам, которые работают со значениями времени ожидания по умолчанию, или не должны выполнять никаких операций, блокирующих действие этих методов.</span><span class="sxs-lookup"><span data-stu-id="52860-119">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="52860-120">Время ожидания представляет общее ограничение для конкурирующих операций высокого уровня; поэтому количество повторных попыток должно ограничиваться временем, еще не использованным предыдущими попытками.</span><span class="sxs-lookup"><span data-stu-id="52860-120">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ReceiveTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReceiveTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52860-121">Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода получения, вызванного объектом связи.</span><span class="sxs-lookup"><span data-stu-id="52860-121">Gets the interval of time after which the receive method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="52860-122">Объект <see cref="T:System.TimeSpan" />, который задает для метода получения интервал времени до времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-122">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the receive method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52860-123">Все операции, которые потенциально будут выполняться длительное время, должны иметь время ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-123">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="52860-124">Методы, которые не принимают явно заданных значений времени ожидания, должны делегировать методам, которые работают со значениями времени ожидания по умолчанию, или не должны выполнять никаких операций, блокирующих действие этих методов.</span><span class="sxs-lookup"><span data-stu-id="52860-124">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="52860-125">Время ожидания представляет общее ограничение для конкурирующих операций высокого уровня; поэтому количество повторных попыток должно ограничиваться временем, еще не использованным предыдущими попытками.</span><span class="sxs-lookup"><span data-stu-id="52860-125">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SendTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SendTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52860-126">Возвращает промежуток времени, по истечении которого заканчивается время ожидания метода отправки, вызванного объектом связи.</span><span class="sxs-lookup"><span data-stu-id="52860-126">Gets the interval of time after which the send method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="52860-127">Объект <see cref="T:System.TimeSpan" />, который задает для метода отправки интервал времени до времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-127">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the send method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52860-128">Все операции, которые потенциально будут выполняться длительное время, должны иметь время ожидания.</span><span class="sxs-lookup"><span data-stu-id="52860-128">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="52860-129">Методы, которые не принимают явно заданных значений времени ожидания, должны делегировать методам, которые работают со значениями времени ожидания по умолчанию, или не должны выполнять никаких операций, блокирующих действие этих методов.</span><span class="sxs-lookup"><span data-stu-id="52860-129">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="52860-130">Время ожидания представляет общее ограничение для конкурирующих операций высокого уровня; поэтому количество повторных попыток должно ограничиваться временем, еще не использованным предыдущими попытками.</span><span class="sxs-lookup"><span data-stu-id="52860-130">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
