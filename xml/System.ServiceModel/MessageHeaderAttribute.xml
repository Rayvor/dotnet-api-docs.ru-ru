<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e47c3a9c2c4d0e75fae5f0dbd05a4c00e2a84ac" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70693016" /></Metadata><TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageHeaderAttribute&#xA;Inherits MessageContractMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageHeaderAttribute : System::ServiceModel::MessageContractMemberAttribute" />
  <TypeSignature Language="F#" Value="type MessageHeaderAttribute = class&#xA;    inherit MessageContractMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что член данных является заголовком сообщения SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Атрибут <xref:System.ServiceModel.MessageHeaderAttribute> позволяет сопоставить поля и свойства, принадлежащие к типу, отмеченному атрибутом <xref:System.ServiceModel.MessageContractAttribute>, с заголовками сообщений SOAP. Поле или свойство может принадлежать к простому или составному типу, который можно сериализовать.  
  
 Сведения об управлении сериализацией содержимого текста SOAP без изменения самого конверта SOAP по умолчанию см. в разделе <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Указание передача данных в контрактах служб](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)и [использование контрактов данных](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Дополнительные сведения о создании контрактов сообщений см. [в разделе Использование контрактов сообщений](~/docs/framework/wcf/feature-details/using-message-contracts.md).  
  
 В стандарте SOAP определены следующие атрибуты, которые могут присутствовать в заголовке.  
  
-   `Actor` или `Role` (`Actor` в SOAP 1.1, `Role` в SOAP 1.2)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 Атрибут `Actor` или `Role` задает универсальный код ресурса (URI) узла, для которого предназначен данный заголовок. Атрибут `MustUnderstand` указывает, должен ли заголовок поддерживать обработку узла. Атрибут `Relay` указывает, надо ли передавать заголовок на нижележащие узлы. Windows Communication Foundation (WCF) не выполняет обработку этих атрибутов для входящих сообщений, за исключением `MustUnderstand` атрибута.  
  
 Однако эти атрибуты можно считать и записать, даже если они не отправлены по умолчанию. Задать значения для атрибута можно двумя способами. Первый способ заключается в изменении свойств <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> и <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> атрибута <xref:System.ServiceModel.MessageHeaderAttribute>. (Свойство — не `Role` <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> устанавливает свойство и `Role` передается, если используется SOAP 1,2). Например:  
  
  
  
 Второй способ управления этими атрибутами заключается в изменении требуемого типа заголовка на параметр типа класса <xref:System.ServiceModel.MessageHeader%601> и использовании полученного типа вместе с атрибутом <xref:System.ServiceModel.MessageHeaderAttribute>. Затем используйте свойства <xref:System.ServiceModel.MessageHeader%601> программными средствами, чтобы задать атрибуты SOAP. Например:  
  
  
  
  
  
 Если используются и динамический, и статический механизмы управления, статические параметры используются по умолчанию, однако могут позднее быть переопределены с помощью динамического механизма. Например:  
  
  
  
  
  
 Допускается создание повторяющихся заголовков с динамическим управлением атрибутами. Например:  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 На получающей стороне чтение этих атрибутов SOAP возможно только при использовании универсального класса <xref:System.ServiceModel.MessageHeader%601>. Для определения параметров атрибутов полученного сообщения проверьте свойства <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> или <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> заголовка, принадлежащего к типу <xref:System.ServiceModel.MessageHeader%601>.  
  
 При получении сообщения и последующей отправке его обратно круговой путь совершают только параметры атрибутов SOAP для заголовков, принадлежащих к типу <xref:System.ServiceModel.MessageHeader%601>.  
  
   
  
## Examples  
 В следующем примере кода показано использование атрибута <xref:System.ServiceModel.MessageHeaderAttribute> для создания заголовка SOAP для ответного сообщения с помощью свойств <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> и <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>, которым присвоены значения, соответствующие этому заголовку. После примера кода следует пример отправки сообщения.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageHeaderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : string with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает универсальный код ресурса (URI), указывающий узел, на который нацелен заголовок. Сопоставляется с атрибутом заголовка Role при использовании SOAP 1.2 и с атрибутом заголовка Actor при использовании SOAP 1.1.</summary>
        <value>Универсальный код ресурса (URI), указывающий узел, на который нацелен заголовок. Этот универсальный код ресурса (URI) сопоставляется с атрибутом заголовка Role при использовании URI SOAP 1.2 и с атрибутом заголовка Actor при использовании SOAP 1.1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в разделе "Примечания" атрибута <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MustUnderstand : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, должен ли узел, выступающий в роли <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" />, понимать этот заголовок. Сопоставляется с атрибутом заголовка SOAP <see langword="mustUnderstand" />.</summary>
        <value>Значение <see langword="true" />, если узел, выступающий в роли <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" />, должен понимать этот заголовок; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в разделе "Примечания" атрибута <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
> [!IMPORTANT]
>  Важно помнить, что если свойству <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> присвоено значение `true` в отправляемом сообщении, а приложение на принимающей стороне не понимает заголовок, создается ошибка. И наоборот, если заголовок с `mustUnderstand` атрибутом заголовка SOAP, установленным в `true` , получается Windows Communication Foundation (WCF), он должен быть частью контракта сообщения (или должен обрабатываться одним из Windows Communication Foundation (WCF). каналы); в противном случае предполагается, что заголовок не понятен и создается исключение.  
  
   
  
## Examples  
 В следующем примере кода показано использование атрибута <xref:System.ServiceModel.MessageHeaderAttribute> для создания заголовка SOAP для ответного сообщения с помощью свойств <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> и <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>, которым присвоены значения, соответствующие этому заголовку. После примера кода следует пример отправки сообщения.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Relay : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, должен ли этот заголовок ретранслироваться на следующие узлы. Сопоставляется с атрибутом заголовка SOAP <see langword="relay" />.</summary>
        <value>Значение <see langword="true" />, если этот заголовок должен ретранслироваться на следующие узлы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство игнорируется при использовании SOAP 1.1. Дополнительные сведения см. в разделе "Примечания" атрибута <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
