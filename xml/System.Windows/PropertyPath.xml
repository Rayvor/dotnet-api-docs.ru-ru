<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4329e496700e4e34a463e39da3ce24baafeb38d2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444300" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="50131-101">Предоставляет структуру данных для описания свойства как подпути иного свойства или типа владельца.</span><span class="sxs-lookup"><span data-stu-id="50131-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span></span> <span data-ttu-id="50131-102">Пути свойств используются в объектах для привязки данных, в раскадровках и графиках для анимации.</span><span class="sxs-lookup"><span data-stu-id="50131-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50131-103">Этот класс содержит строку <xref:System.Windows.PropertyPath.Path%2A>и список свойств зависимостей, которые <xref:System.Windows.PropertyPath.PathParameters%2A> являются строкой <xref:System.Windows.PropertyPath.Path%2A>.</span><span class="sxs-lookup"><span data-stu-id="50131-103">This class contains a string <xref:System.Windows.PropertyPath.Path%2A>, and list of dependency properties that are the <xref:System.Windows.PropertyPath.PathParameters%2A> into the string <xref:System.Windows.PropertyPath.Path%2A>.</span></span>  
  
 <span data-ttu-id="50131-104"><xref:System.Windows.PropertyPath>поддерживает два режима поведения:</span><span class="sxs-lookup"><span data-stu-id="50131-104"><xref:System.Windows.PropertyPath> supports two modes of behavior:</span></span>  
  
 <span data-ttu-id="50131-105">**Режим исходного кода** описывает путь к свойству, которое используется в качестве источника для некоторой другой операции.</span><span class="sxs-lookup"><span data-stu-id="50131-105">**Source mode** describes a path to a property that is used as a source for some other operation.</span></span> <span data-ttu-id="50131-106">Этот режим используется <xref:System.Windows.Data.Binding> классом для поддержки привязки данных.</span><span class="sxs-lookup"><span data-stu-id="50131-106">This mode is used by the <xref:System.Windows.Data.Binding> class to support data binding.</span></span>  
  
 <span data-ttu-id="50131-107">**Целевой режим** описывает путь к свойству, которое будет задано в качестве целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="50131-107">**Target mode** describes a path to a property that will be set as a target property.</span></span> <span data-ttu-id="50131-108">Этот режим используется анимацией для поддержки методов задания раскадровки и временной шкалы.</span><span class="sxs-lookup"><span data-stu-id="50131-108">This mode is used by animation in support of storyboard and timeline setters.</span></span>  
  
 <span data-ttu-id="50131-109">Например, `Background.Opacity` — это двухэтапный путь.</span><span class="sxs-lookup"><span data-stu-id="50131-109">For instance, `Background.Opacity` is a two-step path.</span></span> <span data-ttu-id="50131-110">Этот путь подразумевает следующее: сначала найдите `Background` свойство объекта, получите объект `Background` значения, для которого задано свойство, а затем `Opacity` получите значение свойства для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="50131-110">This path implies: first, find the `Background` property of an object, get the value object that the `Background` property is set to, and then get the value of the `Opacity` property on that object.</span></span>  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="50131-111">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="50131-111">XAML Attribute Usage</span></span>  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a><span data-ttu-id="50131-112">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="50131-112">XAML Values</span></span>  
 <span data-ttu-id="50131-113">*propertyPath*</span><span class="sxs-lookup"><span data-stu-id="50131-113">*propertyPath*</span></span>  
 <span data-ttu-id="50131-114">Строка, которая вычисляется как простой или сложный путь к свойству.</span><span class="sxs-lookup"><span data-stu-id="50131-114">A string that is evaluated to be either a simple or complex property path.</span></span> <span data-ttu-id="50131-115">Синтаксис для установки <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] является универсальным, но сложным и описывается в отдельном разделе синтаксиса [PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="50131-115">The syntax for setting a <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is versatile but complex, and is described in the separate topic [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343"><span data-ttu-id="50131-116">Расширение разметки x:Static</span><span class="sxs-lookup"><span data-stu-id="50131-116">x:Static Markup Extension</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50131-117">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" />.</span><span class="sxs-lookup"><span data-stu-id="50131-117">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="50131-118">Путь свойства, описывающий путь к свойству [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)], или же единому свойству зависимостей.</span><span class="sxs-lookup"><span data-stu-id="50131-118">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span></span></param>
        <summary><span data-ttu-id="50131-119">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" />.</span><span class="sxs-lookup"><span data-stu-id="50131-119">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50131-120">Этот конструктор имеет два совершенно разных способа использования в зависимости от того, используется ли он для пути к свойству в исходном режиме для привязки или для одношагового свойства в целевом режиме для цели раскадровки.</span><span class="sxs-lookup"><span data-stu-id="50131-120">This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</span></span>  
  
 <span data-ttu-id="50131-121">При использовании этого <xref:System.Windows.PropertyPath> режима в исходном режиме для `parameter` привязки — это строка, представляющая имя свойства, или строка, которая описывает пошаговый путь [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] к свойству в объектной модели объекта, используемого в качестве источника. для привязки.</span><span class="sxs-lookup"><span data-stu-id="50131-121">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, `parameter` is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="50131-122">Для пути свойства привязки символ, определяющий "Step", представляет собой точку (.).</span><span class="sxs-lookup"><span data-stu-id="50131-122">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="50131-123">Также поддерживаются ссылки на индексаторы (включая несколько индексаторов и различий типов).</span><span class="sxs-lookup"><span data-stu-id="50131-123">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="50131-124">Дополнительные сведения о синтаксисе строки, специально используемом <xref:System.Windows.Data.Binding> объектом, см. в разделе. <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50131-124">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="50131-125">Свойство, используемое в качестве источника привязки, не должно быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="50131-125">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="50131-126">Если привязка обновляется двумя способами, то свойство, на которое указывает ссылка, должно быть доступно для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="50131-126">If the binding updates two-way, the property referenced must be read-write.</span></span> <span data-ttu-id="50131-127">Также обратите внимание, что целевой объект привязки должен быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="50131-127">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="50131-128">Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="50131-128">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="50131-129">При использовании этого <xref:System.Windows.PropertyPath> режима в целевом режиме для одношагового пути для `parameter` цели раскадровки обычно предоставляется как тип <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="50131-129">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, `parameter` is generally provided as type <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="50131-130">Можно также указать строку, которая является <xref:System.Windows.DependencyProperty.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="50131-130">You can also specify a string that is the <xref:System.Windows.DependencyProperty.Name%2A>.</span></span> <span data-ttu-id="50131-131">Один из них имеет один и тот же результат, так как он хранится внутренне как строка.</span><span class="sxs-lookup"><span data-stu-id="50131-131">Either of these evaluate to the same result, because it is stored internally as a string.</span></span> <span data-ttu-id="50131-132">Предоставленный <xref:System.Windows.DependencyProperty> объект преобразуется в строку с <xref:System.Windows.Markup.DependencyPropertyConverter>помощью.</span><span class="sxs-lookup"><span data-stu-id="50131-132">A provided <xref:System.Windows.DependencyProperty> is converted to a string through <xref:System.Windows.Markup.DependencyPropertyConverter>.</span></span> <span data-ttu-id="50131-133">Поддерживает полный формат имен для свойств зависимостей, поэтому можно указать *имя типа.* <xref:System.Windows.Markup.DependencyPropertyConverter>  *PropertyName* строка <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> имени квалифицированного свойства зависимостей в конструкторе в коде.</span><span class="sxs-lookup"><span data-stu-id="50131-133">The <xref:System.Windows.Markup.DependencyPropertyConverter> supports a qualified naming format for dependency properties, so you can specify a *typeName*.*propertyName* qualified dependency property name string to the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor in code.</span></span> <span data-ttu-id="50131-134">Полный путь к идентификатору свойства зависимости отличается от понятия сложного пути.</span><span class="sxs-lookup"><span data-stu-id="50131-134">The qualified path to the dependency property identifier is a different concept than a complex path.</span></span> <span data-ttu-id="50131-135">Вместо этого следует создавать <xref:System.Windows.PropertyPath> сложный путь <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> с помощью конструктора.</span><span class="sxs-lookup"><span data-stu-id="50131-135">A complex-path <xref:System.Windows.PropertyPath> should instead be created with the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="50131-136">Строка, указывающая <see cref="P:System.Windows.PropertyPath.Path" />, в размеченном формате.</span><span class="sxs-lookup"><span data-stu-id="50131-136">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span></span></param>
        <param name="pathParameters"><span data-ttu-id="50131-137">Массив объектов, задающий <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span><span class="sxs-lookup"><span data-stu-id="50131-137">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span></span></param>
        <summary><span data-ttu-id="50131-138">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" /> с заданной строкой пути и внутренним и параметрами.</span><span class="sxs-lookup"><span data-stu-id="50131-138">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50131-139">Эта сигнатура обычно используется только для целевого режима <xref:System.Windows.PropertyPath> использования с сложными путями.</span><span class="sxs-lookup"><span data-stu-id="50131-139">This signature is generally only used for target-mode <xref:System.Windows.PropertyPath> usages with complex paths.</span></span>  
  
 <span data-ttu-id="50131-140">Этот конструктор поддерживает `params` `pathParameters` аргумент конструктора.</span><span class="sxs-lookup"><span data-stu-id="50131-140">This constructor supports `params` for the `pathParameters` constructor argument.</span></span> <span data-ttu-id="50131-141">Таким образом, можно указать содержимое `pathParameters` в виде последовательности аргументов конструктора с разделителями-запятыми, заполняющих массив, вместо того, чтобы использовать измерение массива, а затем заполнить его `pathParameters` элементами.</span><span class="sxs-lookup"><span data-stu-id="50131-141">Therefore you can specify the contents of `pathParameters` as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the `pathParameters` items.</span></span> <span data-ttu-id="50131-142">Каждый заданный элемент должен иметь один из следующих типов: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="50131-142">Each item you specify must be one of the following types: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="50131-143">Дополнительные сведения о требованиях к параметрам см <xref:System.Windows.PropertyPath.Path%2A> . в статьях и. <xref:System.Windows.PropertyPath.PathParameters%2A></span><span class="sxs-lookup"><span data-stu-id="50131-143">For more information on the requirements of the parameters, see <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50131-144">Получает или задает строку, описывающую путь.</span><span class="sxs-lookup"><span data-stu-id="50131-144">Gets or sets the string that describes the path.</span></span></summary>
        <value><span data-ttu-id="50131-145">Строка, описывающая путь.</span><span class="sxs-lookup"><span data-stu-id="50131-145">The string that describes the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50131-146">Строка, содержащаяся в этом свойстве, имеет три совершенно разные значения в зависимости от <xref:System.Windows.PropertyPath> того, используется ли объект для пути к свойству в исходном режиме для привязки, для одношагового пути к свойству одноэтапного режима для цели раскадровки или для сложного путь для цели раскадровки.</span><span class="sxs-lookup"><span data-stu-id="50131-146">The string contained in this property has three completely different meanings depending on whether a <xref:System.Windows.PropertyPath> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</span></span>  
  
 <span data-ttu-id="50131-147">При использовании этого <xref:System.Windows.PropertyPath> режима в исходном режиме для <xref:System.Windows.PropertyPath.Path%2A> привязки — это строка, представляющая имя свойства, или строка, которая описывает пошаговый путь [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] к свойству в объектной модели объекта, используемого в качестве источника. для привязки.</span><span class="sxs-lookup"><span data-stu-id="50131-147">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, <xref:System.Windows.PropertyPath.Path%2A> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="50131-148">Для пути свойства привязки символ, определяющий "Step", представляет собой точку (.).</span><span class="sxs-lookup"><span data-stu-id="50131-148">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="50131-149">Также поддерживаются ссылки на индексаторы (включая несколько индексаторов и различий типов).</span><span class="sxs-lookup"><span data-stu-id="50131-149">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="50131-150">Дополнительные сведения о синтаксисе строки, специально используемом <xref:System.Windows.Data.Binding> объектом, см. в разделе. <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="50131-150">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="50131-151">Свойство, используемое в качестве источника привязки, не должно быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="50131-151">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="50131-152">Если привязка обновляется двумя способами, источник свойства должен быть доступен для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="50131-152">If the binding updates two-way, the property source must be read-write.</span></span> <span data-ttu-id="50131-153">Также обратите внимание, что целевой объект привязки должен быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="50131-153">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="50131-154">Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="50131-154">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="50131-155">При использовании этого <xref:System.Windows.PropertyPath> режима в целевом режиме для одношагового пути для <xref:System.Windows.PropertyPath> цели раскадровки — это строка, которая является *именем typeName*. *propertyName* строка имени уточненного свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="50131-155">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, <xref:System.Windows.PropertyPath> is a string that is a *typeName*.*propertyName* qualified dependency property name string.</span></span>  
  
 <span data-ttu-id="50131-156">При использовании этого <xref:System.Windows.PropertyPath> параметра для сложного пути для <xref:System.Windows.PropertyPath.Path%2A> цели раскадровки — это строковый формат с маркерами, описывающий связи различных объектов, <xref:System.Windows.PropertyPath.PathParameters%2A>заданных в.</span><span class="sxs-lookup"><span data-stu-id="50131-156">If using this <xref:System.Windows.PropertyPath> for a complex path for a storyboard target, <xref:System.Windows.PropertyPath.Path%2A> is a tokenized string format that describes the relationships of the various objects given in the <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
-   <span data-ttu-id="50131-157">Каждый элемент массива задается в этом формате индексом массива для элемента, заключенного в круглые скобки.</span><span class="sxs-lookup"><span data-stu-id="50131-157">Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</span></span> <span data-ttu-id="50131-158">Например, чтобы указать первый элемент в массиве, строковый токен имеет `(0)`значение.</span><span class="sxs-lookup"><span data-stu-id="50131-158">For example, to specify the first item in the array, the string token is `(0)`.</span></span>  
  
-   <span data-ttu-id="50131-159">Связи между элементами ("шаги" в пути) указываются точкой (.).</span><span class="sxs-lookup"><span data-stu-id="50131-159">Relationships between items ("steps" in the path) are specified by a dot (.).</span></span> <span data-ttu-id="50131-160">Свойство Forward точки — это первый шаг в пути, свойство после — второй шаг и т. д. (можно указать шаги, которые выходят за два).</span><span class="sxs-lookup"><span data-stu-id="50131-160">The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</span></span> <span data-ttu-id="50131-161">Последний шаг в цепочке всегда представляет свойство, которое анимируется.</span><span class="sxs-lookup"><span data-stu-id="50131-161">The last step in the chain always represents the property being animated.</span></span>  
  
-   <span data-ttu-id="50131-162">Доступ к элементам в свойствах коллекции осуществляется с помощью синтаксиса индексатора с индексом в квадратных скобках ([и]).</span><span class="sxs-lookup"><span data-stu-id="50131-162">Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</span></span> <span data-ttu-id="50131-163">Индексатор является аддитивным по отношению к маркеру, представляющему свойство.</span><span class="sxs-lookup"><span data-stu-id="50131-163">The indexer is additive to the token representing the property.</span></span> <span data-ttu-id="50131-164">Например, следующий путь состоит из двух шагов с сочетанием токенов на первом шаге, задающим второй элемент из коллекции этого свойства: `(0)[1].(1)` .</span><span class="sxs-lookup"><span data-stu-id="50131-164">For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: `(0)[1].(1)` .</span></span> <span data-ttu-id="50131-165">Нельзя использовать индексатор для последнего свойства в цепочке; нельзя анимировать фактическую позицией коллекции, необходимо анимировать свойство этого объекта.</span><span class="sxs-lookup"><span data-stu-id="50131-165">You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</span></span>  
  
 <span data-ttu-id="50131-166">Строка пути для, <xref:System.Windows.PropertyPath> как правило, устанавливается через конструкторы <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> : сигнатура для привязок или <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> Одношаговая раскадровка, подпись для многошаговых целей раскадровки.</span><span class="sxs-lookup"><span data-stu-id="50131-166">The path string for a <xref:System.Windows.PropertyPath> is typically established through the constructors: the <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature for bindings or single-step storyboard targets, the <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature for multi-step storyboard targets.</span></span>  
  
 <span data-ttu-id="50131-167">**КОДА** При использовании <xref:System.Windows.PropertyPath> для описания ссылки на свойство в в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]качестве значения атрибута указанная строка сначала обрабатывается преобразователем типов (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="50131-167">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="50131-168">Затем этот преобразователь типов обрабатывает строку и, в зависимости от ее синтаксиса, вызовет одну из <xref:System.Windows.PropertyPath> подписей конструктора.</span><span class="sxs-lookup"><span data-stu-id="50131-168">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="50131-169">Это косвенное обращение с помощью преобразователя типов, <xref:System.Windows.PropertyPath> обрабатывающего значение атрибута, обычно используется в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.PropertyPath> вместо объявления элемента объекта и применения конкретных значений к атрибутам, таким как <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="50131-169">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="50131-170">Дополнительные сведения см. в разделе [синтаксис языка XAML PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="50131-170">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="50131-171">Использование текста XAML</span><span class="sxs-lookup"><span data-stu-id="50131-171">XAML Text Usage</span></span>  
 <span data-ttu-id="50131-172">Члены типа обычно не задаются в виде прямого [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксиса. <xref:System.Windows.PropertyPath></span><span class="sxs-lookup"><span data-stu-id="50131-172">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="50131-173">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="50131-173">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50131-174">Получает список параметров для использования, когда путь относится к индексированным параметрам.</span><span class="sxs-lookup"><span data-stu-id="50131-174">Gets the list of parameters to use when the path refers to indexed parameters.</span></span></summary>
        <value><span data-ttu-id="50131-175">Список параметров.</span><span class="sxs-lookup"><span data-stu-id="50131-175">The parameter list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50131-176">Свойства для <xref:System.Windows.PropertyPath> , как правило, устанавливаются с помощью конструкторов.</span><span class="sxs-lookup"><span data-stu-id="50131-176">The properties for a <xref:System.Windows.PropertyPath> are typically established through the constructors.</span></span> <span data-ttu-id="50131-177">Для параметра <xref:System.Windows.PropertyPath.PathParameters%2A> <xref:System.Windows.PropertyPath.%23ctor%2A> конструктор особенно удобен, так как `pathParameters` аргумент конструктора обозначен как `params`, то есть вам не нужно создавать массив или изменять размер массива для построения.</span><span class="sxs-lookup"><span data-stu-id="50131-177">For setting <xref:System.Windows.PropertyPath.PathParameters%2A>, the <xref:System.Windows.PropertyPath.%23ctor%2A> constructor is particularly convenient because the `pathParameters` constructor argument is designated as `params`, meaning that you do not need to create or dimension an array for construction.</span></span> <span data-ttu-id="50131-178">Вы просто указываете каждый элемент массива как дополнительный параметр.</span><span class="sxs-lookup"><span data-stu-id="50131-178">You simply specify each member of the array as an additional parameter.</span></span>  
  
 <span data-ttu-id="50131-179">Если конечное свойство, которое является целевым объектом, <xref:System.Windows.Freezable> имеет тип, это значение будет клонировано.</span><span class="sxs-lookup"><span data-stu-id="50131-179">If the final property that is the target is a <xref:System.Windows.Freezable> type, that value will be cloned.</span></span> <span data-ttu-id="50131-180">Дополнительные сведения см. в разделе [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="50131-180">For details, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="50131-181">Фактическое вычисление цепочки свойств выполняется механизмами анимации раскадровки.</span><span class="sxs-lookup"><span data-stu-id="50131-181">The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</span></span> <span data-ttu-id="50131-182"><xref:System.Windows.PropertyPath> На уровне проверка не выполняется, чтобы убедиться в том, что шаги пути подключаются вообще.</span><span class="sxs-lookup"><span data-stu-id="50131-182">At the <xref:System.Windows.PropertyPath> level, no validation is performed to make sure that the steps of the path connect at all.</span></span> <span data-ttu-id="50131-183">Например, можно создать путь к свойству, который имеет <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> в качестве первого шага, а <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> также как второй шаг.</span><span class="sxs-lookup"><span data-stu-id="50131-183">For instance, you can construct a property path that has <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> as the first step, and <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> as the second step.</span></span> <span data-ttu-id="50131-184">Но такой путь к свойству будет неудачным, если фактически применяется в качестве целевого объекта, так <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> как тип кисти, <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> заполняемый, не имеет свойства.</span><span class="sxs-lookup"><span data-stu-id="50131-184">But such a property path would fail if actually applied as a target, because the Brush type that fills <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> does not have a <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="50131-185">Недопустимые пути свойств не проходят автоматическую установку.</span><span class="sxs-lookup"><span data-stu-id="50131-185">Invalid property paths fail silently.</span></span> <span data-ttu-id="50131-186">Дополнительные сведения см. в разделе [Общие сведения о Storyboard](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="50131-186">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="50131-187">**КОДА** При использовании <xref:System.Windows.PropertyPath> для описания ссылки на свойство в в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]качестве значения атрибута указанная строка сначала обрабатывается преобразователем типов (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="50131-187">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="50131-188">Затем этот преобразователь типов обрабатывает строку и, в зависимости от ее синтаксиса, вызовет одну из <xref:System.Windows.PropertyPath> подписей конструктора.</span><span class="sxs-lookup"><span data-stu-id="50131-188">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="50131-189">Это косвенное обращение с помощью преобразователя типов, <xref:System.Windows.PropertyPath> обрабатывающего значение атрибута, обычно используется в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.PropertyPath> вместо объявления элемента объекта и применения конкретных значений к атрибутам, таким как <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="50131-189">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="50131-190">Дополнительные сведения см. в разделе [синтаксис языка XAML PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="50131-190">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="50131-191">Использование текста XAML</span><span class="sxs-lookup"><span data-stu-id="50131-191">XAML Text Usage</span></span>  
 <span data-ttu-id="50131-192">Члены типа обычно не задаются в виде прямого [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксиса. <xref:System.Windows.PropertyPath></span><span class="sxs-lookup"><span data-stu-id="50131-192">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="50131-193">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="50131-193">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
