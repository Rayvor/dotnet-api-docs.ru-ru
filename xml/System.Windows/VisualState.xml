<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94d52fadbbe5ee0176549400999a58e3ae14fb10" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432776" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет внешний вид элемента управления, находящегося в определенном состоянии.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указывает <xref:System.Windows.VisualState> , как выглядит элемент управления, когда он находится в определенном состоянии. Например, если <xref:System.Windows.Controls.Button> нажата кнопка, ее граница может иметь другой цвет, чем обычно.  <xref:System.Windows.VisualState> Класс<xref:System.Windows.VisualState.Storyboard%2A> имеет свойство, которое изменяет внешний вид элемента управления. Когда элемент управления переходит в состояние, заданное <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> свойством <xref:System.Windows.VisualState.Storyboard%2A> , начинается. Когда элемент управления выходит из состояния, <xref:System.Windows.VisualState.Storyboard%2A> останавливается.  
  
 <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> Свойство содержит<xref:System.Windows.VisualState> объекты. <xref:System.Windows.VisualStateGroup>объекты добавляются в <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> присоединенное свойство, которое определено <xref:System.Windows.FrameworkElement>в. Объекты можно добавлять <xref:System.Windows.VisualState> в любые <xref:System.Windows.FrameworkElement>, но <xref:System.Windows.Controls.ControlTemplate> обычно они <xref:System.Windows.Controls.Control>используются в. Сведения о создании <xref:System.Windows.Controls.ControlTemplate> объектов и <xref:System.Windows.VisualState> для существующих элементов управления см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Пример использования <xref:System.Windows.VisualState> объектов за пределами <xref:System.Windows.Controls.ControlTemplate>класса см. в <xref:System.Windows.VisualStateManager> разделе класс.  
  
   
  
## Examples  
 В <xref:System.Windows.VisualStateGroup> следующем примере создается <xref:System.Windows.Controls.ControlTemplate> в из <xref:System.Windows.Controls.Button> вызываемого `CommonStates` объекта и добавляются <xref:System.Windows.VisualState> объекты для состояний, `Normal` `Pressed`, и `MouseOver`. Кроме того, определяет состояние с `Disabled` именем, которое находится `CommonStates`в <xref:System.Windows.VisualStateGroup>, но в примере это не используется для краткости. <xref:System.Windows.Controls.Button> Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.VisualState" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Имя <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы указываете визуальное состояние, которое элемент должен ввести, <xref:System.Windows.VisualState.Name%2A> передав <xref:System.Windows.VisualState> <xref:System.Windows.VisualStateManager>объект в.  
  
 Если объект <xref:System.Windows.Controls.Control> <xref:System.Windows.TemplateVisualStateAttribute> <xref:System.Windows.VisualState> <xref:System.Windows.Controls.ControlTemplate> использует в <xref:System.Windows.VisualStateManager> <xref:System.Windows.Controls.ControlTemplate>, автор элемента управления должен указать, какие объекты он будет искать в его сигнатуре класса. <xref:System.Windows.Controls.ControlTemplate>авторы определяют новые <xref:System.Windows.VisualState> объекты и <xref:System.Windows.VisualState.Name%2A> устанавливают для свойства значение, заданное <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> свойством.  
  
 Чтобы найти имена визуальных состояний для элементов управления, которые включены в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], см. раздел [стили и шаблоны элемента управления](~/docs/framework/wpf/controls/control-styles-and-templates.md). Сведения о создании <xref:System.Windows.Controls.ControlTemplate> объектов и <xref:System.Windows.VisualState> для существующих элементов управления см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 В <xref:System.Windows.VisualStateGroup> следующем примере создается <xref:System.Windows.Controls.ControlTemplate> в из <xref:System.Windows.Controls.Button> вызываемого `CommonStates` объекта и добавляются <xref:System.Windows.VisualState> объекты для состояний, `Normal` `Pressed`, и `MouseOver`. Кроме того, определяет состояние с `Disabled` именем, которое находится `CommonStates`в <xref:System.Windows.VisualStateGroup>, но в примере это не используется для краткости. <xref:System.Windows.Controls.Button> Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Media.Animation.Storyboard" />, определяющий внешний вид элемента управления, когда тот находится в состоянии, представленном объектом <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Раскадровка, определяющая внешний вид элемента управления, когда тот находится в состоянии, представленном объектом <see cref="T:System.Windows.VisualState" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда элемент управления переходит в состояние, заданное <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> свойством <xref:System.Windows.VisualState.Storyboard%2A> , начинается. Когда элемент управления выходит из состояния, <xref:System.Windows.VisualState.Storyboard%2A> останавливается.  
  
   
  
## Examples  
 В следующем примере создается простой <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.Button> для, который содержит один <xref:System.Windows.Controls.Grid>.  Вызываемая `MouseOver` объект имеет раскадровку, которая <xref:System.Windows.Controls.Grid> изменяет цвет с зеленого на красный, <xref:System.Windows.Controls.Button>когда пользователь наводит указатель мыши на. <xref:System.Windows.VisualState>  Вызываемая `Normal` функция включается, так что когда пользователь наводит указатель мыши <xref:System.Windows.Controls.Grid> за пределы кнопки, возвращается зеленый цвет. <xref:System.Windows.VisualState>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
