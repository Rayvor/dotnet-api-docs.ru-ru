<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adf0e675798669d33ee93a98f4d16c1764e9ea63" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72408224" /></Metadata><TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="529dd-101">Описывает ширину, высоту и расположение прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-101">Describes the width, height, and location of a rectangle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="529dd-102">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="529dd-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="529dd-103">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="529dd-103">XAML Values</span></span>  
 <span data-ttu-id="529dd-104">*x*</span><span class="sxs-lookup"><span data-stu-id="529dd-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="529dd-105">Положение координаты x левой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="529dd-106">*y*</span><span class="sxs-lookup"><span data-stu-id="529dd-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="529dd-107">Положение координаты y верхней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="529dd-108">*width*</span><span class="sxs-lookup"><span data-stu-id="529dd-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="529dd-109">Неотрицательное значение, представляющее <xref:System.Windows.Rect.Width%2A> прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="529dd-110">*равно*</span><span class="sxs-lookup"><span data-stu-id="529dd-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="529dd-111">Неотрицательное значение, представляющее <xref:System.Windows.Rect.Height%2A> прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-112">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-113">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-114">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-115">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="529dd-116">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-117">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанный размер и расположена в точке с координатами (0,0).</span><span class="sxs-lookup"><span data-stu-id="529dd-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-118">В следующем примере показано, как создать новую структуру <xref:System.Windows.Rect> с помощью конструктора <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29>.</span><span class="sxs-lookup"><span data-stu-id="529dd-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="529dd-119">Первая точка, которую должен включать новый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-119">The first point that the new rectangle must contain.</span></span></param>
        <param name="point2"><span data-ttu-id="529dd-120">Вторая точка, которую должен включать новый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-120">The second point that the new rectangle must contain.</span></span></param>
        <summary><span data-ttu-id="529dd-121">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая достаточна велика, чтобы включать две указанных точки.</span><span class="sxs-lookup"><span data-stu-id="529dd-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-122">В следующем примере показано, как создать новую структуру <xref:System.Windows.Rect> с помощью конструктора <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29>.</span><span class="sxs-lookup"><span data-stu-id="529dd-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="529dd-123">Точка, которая определяет расположение верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-123">A point that specifies the location of the top-left corner of the rectangle.</span></span></param>
        <param name="size"><span data-ttu-id="529dd-124">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-125">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанное расположение верхнего левого угла и указанные ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="529dd-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-126">В следующем примере показано, как создать новую структуру <xref:System.Windows.Rect> с помощью конструктора <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29>.</span><span class="sxs-lookup"><span data-stu-id="529dd-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="529dd-127">Первая точка, которую должен включать прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-127">The first point the rectangle must contain.</span></span></param>
        <param name="vector"><span data-ttu-id="529dd-128">Степень смещения указанной точки.</span><span class="sxs-lookup"><span data-stu-id="529dd-128">The amount to offset the specified point.</span></span> <span data-ttu-id="529dd-129">Полученный прямоугольник будет достаточно большим, чтобы включать обе точки.</span><span class="sxs-lookup"><span data-stu-id="529dd-129">The resulting rectangle will be exactly large enough to contain both points.</span></span></param>
        <summary><span data-ttu-id="529dd-130">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая достаточно велика, чтобы включать указанную точку и сумму указанной точки и указанного вектора.</span><span class="sxs-lookup"><span data-stu-id="529dd-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-131">В следующем примере показано, как создать новую структуру <xref:System.Windows.Rect> с помощью конструктора <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29>.</span><span class="sxs-lookup"><span data-stu-id="529dd-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="529dd-132">Координата по оси X верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-132">The x-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="529dd-133">Координата по оси Y верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-133">The y-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="529dd-134">Ширина прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-134">The width of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="529dd-135">Высота прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-135">The height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-136">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанные координаты по оси Х и Y, а также ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="529dd-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-137">В следующем примере показано, как создать новую структуру <xref:System.Windows.Rect> с помощью конструктора <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29>.</span><span class="sxs-lookup"><span data-stu-id="529dd-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="529dd-138"><paramref name="width" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="529dd-138"><paramref name="width" /> is a negative value.</span></span>  
  
<span data-ttu-id="529dd-139">- или -</span><span class="sxs-lookup"><span data-stu-id="529dd-139">-or-</span></span> 
 <span data-ttu-id="529dd-140"><paramref name="height" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="529dd-140"><paramref name="height" /> is a negative value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-141">Возвращает координату по оси Y нижней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-141">Gets the y-axis value of the bottom of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-142">Координата по оси Y нижней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-142">The y-axis value of the bottom of the rectangle.</span></span> <span data-ttu-id="529dd-143">Если прямоугольник пуст, значение — <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-144">Значение по оси y нижней части прямоугольника равно сумме свойств <xref:System.Windows.Rect.Y%2A> и <xref:System.Windows.Rect.Height%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-145">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-146">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-147">Возвращает расположение левого нижнего угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-147">Gets the position of the bottom-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-148">Расположение левого нижнего угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-148">The position of the bottom-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-149">Расположение левого нижнего угла прямоугольника равно (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> @ no__t-2 @ no__t-3).</span><span class="sxs-lookup"><span data-stu-id="529dd-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-150">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-151">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-152">Возвращает расположение правого нижнего угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-152">Gets the position of the bottom-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-153">Расположение правого нижнего угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-153">The position of the bottom-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-154">Расположение правого нижнего угла прямоугольника равно (<xref:System.Windows.Rect.X%2A> @ no__t-1 @ no__t-2, <xref:System.Windows.Rect.Y%2A> @ no__t-4 @ no__t-5).</span><span class="sxs-lookup"><span data-stu-id="529dd-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-155">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-156">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-157">Определяет, включает ли прямоугольник указанную точку или прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-157">Indicates whether the rectangle contains the specified point or rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="529dd-158">Проверяемая точка.</span><span class="sxs-lookup"><span data-stu-id="529dd-158">The point to check.</span></span></param>
        <summary><span data-ttu-id="529dd-159">Определяет, включает ли прямоугольник указанную точку.</span><span class="sxs-lookup"><span data-stu-id="529dd-159">Indicates whether the rectangle contains the specified point.</span></span></summary>
        <returns><span data-ttu-id="529dd-160">Значение <see langword="true" />, если прямоугольник содержит указанную точку; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-160"><see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-161">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Contains%28System.Windows.Point%29>, чтобы определить, содержит ли прямоугольник указанную <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="529dd-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-162">Проверяемый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-162">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="529dd-163">Определяет, включает ли прямоугольник указанный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-163">Indicates whether the rectangle contains the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-164">Значение <see langword="true" />, если прямоугольник полностью включает <paramref name="rect" />. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-164"><see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-165">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29>, чтобы определить, содержится ли один прямоугольник в другом прямоугольнике.</span><span class="sxs-lookup"><span data-stu-id="529dd-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="529dd-166">Координата по оси X проверяемой точки.</span><span class="sxs-lookup"><span data-stu-id="529dd-166">The x-coordinate of the point to check.</span></span></param>
        <param name="y"><span data-ttu-id="529dd-167">Координата по оси Y проверяемой точки.</span><span class="sxs-lookup"><span data-stu-id="529dd-167">The y-coordinate of the point to check.</span></span></param>
        <summary><span data-ttu-id="529dd-168">Показывает, включает ли прямоугольник указанную координату по оси X и Y.</span><span class="sxs-lookup"><span data-stu-id="529dd-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span></span></summary>
        <returns><span data-ttu-id="529dd-169">Значение <see langword="true" />, если прямоугольник включает точку с координатами <paramref name="x" /> и <paramref name="y" />. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-169"><see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-170">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29>, чтобы определить, содержит ли прямоугольник точку, заданную заданной координатой x и y.</span><span class="sxs-lookup"><span data-stu-id="529dd-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-171">Возвращает специальное значение, которое представляет прямоугольник без расположения или области.</span><span class="sxs-lookup"><span data-stu-id="529dd-171">Gets a special value that represents a rectangle with no position or area.</span></span></summary>
        <value><span data-ttu-id="529dd-172">Пустой прямоугольник, который имеет значения свойств <see cref="P:System.Windows.Rect.X" /> и <see cref="P:System.Windows.Rect.Y" /> равными <see cref="F:System.Double.PositiveInfinity" /> и значения свойств <see cref="P:System.Windows.Rect.Width" /> и <see cref="P:System.Windows.Rect.Height" /> равными <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-173">Избегайте математических вычислений, содержащих пустые прямоугольники.</span><span class="sxs-lookup"><span data-stu-id="529dd-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="529dd-174">Поскольку как <xref:System.Windows.Rect.X%2A>, так <xref:System.Windows.Rect.Y%2A> — бесконечные значения, операции с процессором в этих операциях имеют серьезные нарушения.</span><span class="sxs-lookup"><span data-stu-id="529dd-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="529dd-175">Сравнения, включающие эти значения, не влияют на производительность приложения.</span><span class="sxs-lookup"><span data-stu-id="529dd-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-176">Определяет равенство двух прямоугольников.</span><span class="sxs-lookup"><span data-stu-id="529dd-176">Indicates whether two rectangles are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="529dd-177">Объект, который требуется сравнить с текущим прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-177">The object to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-178">Показывает, равен ли указанный объект текущему прямоугольнику.</span><span class="sxs-lookup"><span data-stu-id="529dd-178">Indicates whether the specified object is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-179"><see langword="true" />, если <paramref name="o" /> является <see cref="T:System.Windows.Rect" /> и имеет те же значения <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />, что и текущий прямоугольник. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-179"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-180">Эта операция проверяет равенство объектов.</span><span class="sxs-lookup"><span data-stu-id="529dd-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="529dd-181">В этом сравнении два экземпляра <xref:System.Double.NaN?displayProperty=nameWithType> считаются равными.</span><span class="sxs-lookup"><span data-stu-id="529dd-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="529dd-182">Расположение и измерения прямоугольника описываются значениями <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="529dd-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="529dd-183">Поскольку значения <xref:System.Double> могут терять точность при работе с, сравнение двух логически эквивалентных значений может завершиться ошибкой.</span><span class="sxs-lookup"><span data-stu-id="529dd-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-184">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Equals%28System.Object%29>, чтобы определить, равен ли прямоугольник указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="529dd-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="529dd-185">Прямоугольник, который требуется сравнить с текущим прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-185">The rectangle to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-186">Показывает, равен ли указанный прямоугольник текущему прямоугольнику.</span><span class="sxs-lookup"><span data-stu-id="529dd-186">Indicates whether the specified rectangle is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-187"><see langword="true" />, если указанный прямоугольник имеет те же значения <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />, что и текущий прямоугольник. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-187"><see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-188">Эта операция проверяет равенство объектов.</span><span class="sxs-lookup"><span data-stu-id="529dd-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="529dd-189">В этом сравнении два экземпляра <xref:System.Double.NaN?displayProperty=nameWithType> считаются равными.</span><span class="sxs-lookup"><span data-stu-id="529dd-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="529dd-190">Расположение и измерения прямоугольника описываются значениями <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="529dd-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="529dd-191">Поскольку значения <xref:System.Double> могут терять точность при работе с, сравнение двух логически эквивалентных значений может завершиться ошибкой.</span><span class="sxs-lookup"><span data-stu-id="529dd-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-192">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29>, чтобы определить, равен ли прямоугольник указанному прямоугольнику.</span><span class="sxs-lookup"><span data-stu-id="529dd-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="529dd-193">Первый прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-193">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="529dd-194">Второй прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-194">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="529dd-195">Показывает, являются ли указанные прямоугольники равными.</span><span class="sxs-lookup"><span data-stu-id="529dd-195">Indicates whether the specified rectangles are equal.</span></span></summary>
        <returns><span data-ttu-id="529dd-196"><see langword="true" />, если прямоугольники имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-196"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-197">Эта операция проверяет равенство объектов.</span><span class="sxs-lookup"><span data-stu-id="529dd-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="529dd-198">В этом сравнении два экземпляра <xref:System.Double.NaN?displayProperty=nameWithType> считаются равными.</span><span class="sxs-lookup"><span data-stu-id="529dd-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="529dd-199">Расположение и измерения прямоугольника описываются значениями <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="529dd-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="529dd-200">Поскольку значения <xref:System.Double> могут терять точность при работе с, сравнение двух логически эквивалентных значений может завершиться ошибкой.</span><span class="sxs-lookup"><span data-stu-id="529dd-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-201">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29>, чтобы определить, равен ли один прямоугольник другому.</span><span class="sxs-lookup"><span data-stu-id="529dd-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="529dd-202">Создает хэш-код для прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-202">Creates a hash code for the rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-203">Хэш-код для текущей структуры <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-204">Этот метод создает хэш-код с помощью значений свойств <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A> и <xref:System.Windows.Rect.Height%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-205">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.GetHashCode%2A> для получения хэш-кода <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="529dd-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-206">Возвращает или задает высоту прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-206">Gets or sets the height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-207">Положительное число, которое представляет высоту прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-207">A positive number that represents the height of the rectangle.</span></span> <span data-ttu-id="529dd-208">Значение по умолчанию — 0.</span><span class="sxs-lookup"><span data-stu-id="529dd-208">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-209">Прямоугольник <xref:System.Windows.Rect.Empty%2A> имеет <xref:System.Windows.Rect.Height%2A> из <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="529dd-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="529dd-210">Прямоугольник <xref:System.Windows.Rect.Empty%2A> доступен только для чтения; его <xref:System.Windows.Rect.Height%2A> не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="529dd-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-211">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-212">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-213">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="529dd-214">Свойству <see cref="P:System.Windows.Rect.Height" /> присваивается отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="529dd-214"><see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-215">Для <see cref="P:System.Windows.Rect.Height" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-215"><see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-216">Создает прямоугольник, который получается в результате увеличения или уменьшения прямоугольника с указанным коэффициентом.</span><span class="sxs-lookup"><span data-stu-id="529dd-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="529dd-217">Указывает степень расширения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-217">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="529dd-218">Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Width" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="529dd-219">Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Height" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="529dd-220">Расширяет прямоугольник во всех направлениях с использованием указанного значения <see cref="T:System.Windows.Size" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-221">Значение <xref:System.Windows.Rect.Width%2A> полученного прямоугольника увеличивается вдвое <xref:System.Windows.Size.Width%2A> указанной структуры <xref:System.Windows.Size>, так как левая и правая стороны прямоугольника являются неизменными.</span><span class="sxs-lookup"><span data-stu-id="529dd-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="529dd-222">Аналогичным образом <xref:System.Windows.Rect.Height%2A> результирующего прямоугольника увеличивается вдвое <xref:System.Windows.Size.Height%2A> указанной структуры <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="529dd-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-223">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> для увеличения размера прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-224">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="529dd-225">Степень увеличения или уменьшения левой и правой сторон прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="529dd-226">Степень увеличения или уменьшения верхней и нижней сторон прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-227">Увеличивает или уменьшает прямоугольник по всем направлениям с использованием указанных значений ширины и высоты.</span><span class="sxs-lookup"><span data-stu-id="529dd-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-228">Значение <xref:System.Windows.Rect.Width%2A> полученного прямоугольника увеличивается или уменьшается вдвое в соответствии с заданным смещением ширины, поскольку оно применяется к левой и правой сторонам прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="529dd-229">Аналогичным образом, <xref:System.Windows.Rect.Height%2A> полученного прямоугольника увеличивается или уменьшается дважды на указанную высоту.</span><span class="sxs-lookup"><span data-stu-id="529dd-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="529dd-230">Если заданная ширина или высота уменьшает размер прямоугольника по сравнению с его текущими <xref:System.Windows.Rect.Width%2A> или <xref:System.Windows.Rect.Height%2A>, предоставляя прямоугольнику отрицательную площадь, прямоугольник превращается в прямоугольник <xref:System.Windows.Rect.Empty%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A> - giving the rectangle a negative area - the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-231">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> для изменения размера прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-232">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-233">Структура <see cref="T:System.Windows.Rect" />, которую необходимо изменить.</span><span class="sxs-lookup"><span data-stu-id="529dd-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="size"><span data-ttu-id="529dd-234">Указывает степень расширения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-234">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="529dd-235">Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Width" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="529dd-236">Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Height" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="529dd-237">Возвращает прямоугольник, который получается в результате увеличения данного прямоугольника с указанным коэффициентом <see cref="T:System.Windows.Size" /> по всем направлениям.</span><span class="sxs-lookup"><span data-stu-id="529dd-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <returns><span data-ttu-id="529dd-238">Полученный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-238">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-239">Значение <xref:System.Windows.Rect.Width%2A> полученного прямоугольника увеличивается вдвое <xref:System.Windows.Size.Width%2A> указанной структуры <xref:System.Windows.Size>, так как левая и правая стороны прямоугольника являются неизменными.</span><span class="sxs-lookup"><span data-stu-id="529dd-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="529dd-240">Аналогичным образом <xref:System.Windows.Rect.Height%2A> результирующего прямоугольника увеличивается вдвое <xref:System.Windows.Size.Height%2A> указанной структуры <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="529dd-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-241">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> для изменения размера прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-242"><paramref name="rect" /> является прямоугольником <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-242"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-243">Структура <see cref="T:System.Windows.Rect" />, которую необходимо изменить.</span><span class="sxs-lookup"><span data-stu-id="529dd-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="width"><span data-ttu-id="529dd-244">Степень увеличения или уменьшения левой и правой сторон прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="529dd-245">Степень увеличения или уменьшения верхней и нижней сторон прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-246">Создает прямоугольник, который получается в результате увеличения или уменьшения данного прямоугольника с указанным изменением ширины и высоты по всем направлениям.</span><span class="sxs-lookup"><span data-stu-id="529dd-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span></span></summary>
        <returns><span data-ttu-id="529dd-247">Полученный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-247">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-248">Значение <xref:System.Windows.Rect.Width%2A> полученного прямоугольника увеличивается или уменьшается вдвое в соответствии с заданным смещением ширины, поскольку оно применяется к левой и правой сторонам прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="529dd-249">Аналогичным образом, <xref:System.Windows.Rect.Height%2A> полученного прямоугольника увеличивается или уменьшается дважды на указанную высоту.</span><span class="sxs-lookup"><span data-stu-id="529dd-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="529dd-250">Если указанные модификаторы ширины или высоты уменьшают размер прямоугольника больше, чем его текущий <xref:System.Windows.Rect.Width%2A> или <xref:System.Windows.Rect.Height%2A>, предоставляя прямоугольнику отрицательную область, этот метод возвращает <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="529dd-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A> - giving the rectangle a negative area - this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-251">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> для изменения размера прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-252"><paramref name="rect" /> является прямоугольником <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-252"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-253">Находит пересечение двух прямоугольников.</span><span class="sxs-lookup"><span data-stu-id="529dd-253">Finds the intersection of two rectangles.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-254">Прямоугольник, который должен пересекаться с текущим прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-254">The rectangle to intersect with the current rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-255">Находит пересечение текущего прямоугольника и указанного прямоугольника и сохраняет результат как текущий прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-256">Если пересечение не существует, текущий прямоугольник преобразуется в <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="529dd-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-257">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> для поиска пересечения двух прямоугольников и сохранения результата в виде прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="529dd-258">Первый прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-258">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="529dd-259">Второй прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-259">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="529dd-260">Возвращает пересечение указанных прямоугольников.</span><span class="sxs-lookup"><span data-stu-id="529dd-260">Returns the intersection of the specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="529dd-261">Пересечение двух прямоугольников. Если пересечение отсутствует, возвращается значение <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-262">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> для поиска пересечения двух прямоугольников.</span><span class="sxs-lookup"><span data-stu-id="529dd-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-263">Проверяемый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-263">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="529dd-264">Показывает, пересекается ли указанный прямоугольник с текущим прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-264">Indicates whether the specified rectangle intersects with the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-265">Значение <see langword="true" />, если указанный прямоугольник пересекается с текущим прямоугольником. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-265"><see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-266">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.IntersectsWith%2A>, чтобы определить, пересекаются ли два прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-267">Возвращает значение, которое показывает является ли прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-268"><see langword="true" />, если прямоугольник является <see cref="P:System.Windows.Rect.Empty" />. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-268"><see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-269">Не используйте это свойство для проверки нулевой области; прямоугольник с нулевой областью не обязательно является прямоугольником <xref:System.Windows.Rect.Empty%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="529dd-270">Дополнительные сведения см. в описании свойства <xref:System.Windows.Rect.Empty%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-271">Возвращает координату по оси X левой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-271">Gets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-272">Координата по оси X левой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-272">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-273">Получение этого свойства эквивалентно получению свойства <xref:System.Windows.Rect.X%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-274">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-275">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-276">Получает или задает расположение верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-276">Gets or sets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-277">Расположение верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-277">The position of the top-left corner of the rectangle.</span></span> <span data-ttu-id="529dd-278">Значение по умолчанию — (0, 0).</span><span class="sxs-lookup"><span data-stu-id="529dd-278">The default is (0, 0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-279">Расположение левого верхнего угла прямоугольника равно (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="529dd-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-280">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-281">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-282">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-283">Для <see cref="P:System.Windows.Rect.Location" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-283"><see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-284">Перемещает прямоугольник на указанную величину.</span><span class="sxs-lookup"><span data-stu-id="529dd-284">Moves a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector"><span data-ttu-id="529dd-285">Вектор, который показывает степень горизонтального и вертикального смещения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-286">Перемещает прямоугольник по указанному вектору.</span><span class="sxs-lookup"><span data-stu-id="529dd-286">Moves the rectangle by the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-287">Вызов этого метода для пустого прямоугольника (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) не допускается.</span><span class="sxs-lookup"><span data-stu-id="529dd-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="529dd-288">Обратите внимание, что вызов метода <xref:System.Windows.Rect.Offset%2A> будет действовать только в том случае, если вы можете изменить свойства <xref:System.Windows.Rect.X%2A> и <xref:System.Windows.Rect.Y%2A> напрямую.</span><span class="sxs-lookup"><span data-stu-id="529dd-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="529dd-289">Поскольку <xref:System.Windows.Rect> является типом значения, при ссылке на объект <xref:System.Windows.Rect> с помощью свойства или индексатора вы получаете копию объекта, а не ссылку на объект.</span><span class="sxs-lookup"><span data-stu-id="529dd-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="529dd-290">При попытке изменить <xref:System.Windows.Rect.X%2A> или <xref:System.Windows.Rect.Y%2A> в ссылке на свойство или индексатор возникает ошибка компилятора.</span><span class="sxs-lookup"><span data-stu-id="529dd-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="529dd-291">Аналогичным образом, вызов <xref:System.Windows.Rect.Offset%2A> для свойства или индексатора не изменит базовый объект.</span><span class="sxs-lookup"><span data-stu-id="529dd-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="529dd-292">Если необходимо изменить значение <xref:System.Windows.Rect>, на которое ссылается свойство или индексатор, создайте новый <xref:System.Windows.Rect>, измените его поля, а затем присвойте <xref:System.Windows.Rect> обратно свойству или индексатору.</span><span class="sxs-lookup"><span data-stu-id="529dd-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-293">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> для изменения расположения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-294">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="529dd-295">Степень смещения прямоугольника по горизонтали.</span><span class="sxs-lookup"><span data-stu-id="529dd-295">The amount to move the rectangle horizontally.</span></span></param>
        <param name="offsetY"><span data-ttu-id="529dd-296">Степень смещения прямоугольника по вертикали.</span><span class="sxs-lookup"><span data-stu-id="529dd-296">The amount to move the rectangle vertically.</span></span></param>
        <summary><span data-ttu-id="529dd-297">Перемещает прямоугольник на указанную величину по горизонтали и вертикали.</span><span class="sxs-lookup"><span data-stu-id="529dd-297">Moves the rectangle by the specified horizontal and vertical amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-298">Вызов этого метода для пустого прямоугольника (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) не допускается.</span><span class="sxs-lookup"><span data-stu-id="529dd-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="529dd-299">Обратите внимание, что вызов метода <xref:System.Windows.Rect.Offset%2A> будет действовать только в том случае, если вы можете изменить свойства <xref:System.Windows.Rect.X%2A> и <xref:System.Windows.Rect.Y%2A> напрямую.</span><span class="sxs-lookup"><span data-stu-id="529dd-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="529dd-300">Поскольку <xref:System.Windows.Rect> является типом значения, при ссылке на объект <xref:System.Windows.Rect> с помощью свойства или индексатора вы получаете копию объекта, а не ссылку на объект.</span><span class="sxs-lookup"><span data-stu-id="529dd-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="529dd-301">При попытке изменить <xref:System.Windows.Rect.X%2A> или <xref:System.Windows.Rect.Y%2A> в ссылке на свойство или индексатор возникает ошибка компилятора.</span><span class="sxs-lookup"><span data-stu-id="529dd-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="529dd-302">Аналогичным образом, вызов <xref:System.Windows.Rect.Offset%2A> для свойства или индексатора не изменит базовый объект.</span><span class="sxs-lookup"><span data-stu-id="529dd-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="529dd-303">Если необходимо изменить значение <xref:System.Windows.Rect>, на которое ссылается свойство или индексатор, создайте новый <xref:System.Windows.Rect>, измените его поля, а затем присвойте <xref:System.Windows.Rect> обратно свойству или индексатору.</span><span class="sxs-lookup"><span data-stu-id="529dd-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-304">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> для изменения расположения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-305">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-306">Исходный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-306">The original rectangle.</span></span></param>
        <param name="offsetVector"><span data-ttu-id="529dd-307">Вектор, который показывает степень горизонтального и вертикального смещения нового прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-308">Возвращает прямоугольник, который получается в результате смещения указанного прямоугольника по заданному вектору.</span><span class="sxs-lookup"><span data-stu-id="529dd-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span></span></summary>
        <returns><span data-ttu-id="529dd-309">Полученный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-309">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-310">Вызов этого метода с пустым прямоугольником (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) не допускается.</span><span class="sxs-lookup"><span data-stu-id="529dd-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-311">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> для изменения расположения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-312">Свойство <paramref name="rect" /> имеет значение <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-312"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-313">Перемещаемый прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-313">The rectangle to move.</span></span></param>
        <param name="offsetX"><span data-ttu-id="529dd-314">Горизонтальное смещение нового прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-314">The horizontal offset for the new rectangle.</span></span></param>
        <param name="offsetY"><span data-ttu-id="529dd-315">Вертикальное смещение нового прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-315">The vertical offset for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="529dd-316">Возвращает прямоугольник, который получается в результате смещения указанного прямоугольника на заданные значения по горизонтали и вертикали.</span><span class="sxs-lookup"><span data-stu-id="529dd-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span></span></summary>
        <returns><span data-ttu-id="529dd-317">Полученный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-317">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-318">Вызов этого метода с пустым прямоугольником (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) не допускается.</span><span class="sxs-lookup"><span data-stu-id="529dd-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-319">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> для изменения расположения прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-320"><paramref name="rect" /> — <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-320"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="529dd-321">Первый прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-321">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="529dd-322">Второй прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-322">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="529dd-323">Проверяет точное равенство двух прямоугольников.</span><span class="sxs-lookup"><span data-stu-id="529dd-323">Compares two rectangles for exact equality.</span></span></summary>
        <returns><span data-ttu-id="529dd-324"><see langword="true" />, если прямоугольники имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-324"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-325">Эта операция проверяет равенство объектов.</span><span class="sxs-lookup"><span data-stu-id="529dd-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="529dd-326">В этом сравнении два экземпляра <xref:System.Double.NaN?displayProperty=nameWithType> считаются равными.</span><span class="sxs-lookup"><span data-stu-id="529dd-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="529dd-327">Расположение и измерения прямоугольника описываются значениями <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="529dd-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="529dd-328">Поскольку значения <xref:System.Double> могут терять точность при работе с, сравнение двух логически эквивалентных значений может завершиться ошибкой.</span><span class="sxs-lookup"><span data-stu-id="529dd-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="529dd-329">Эквивалентным методом для этого оператора является <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="529dd-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="529dd-330">В следующем примере показано, как использовать оператор <xref:System.Windows.Rect.op_Equality%2A>, чтобы определить, равны ли два прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="529dd-331">Первый прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-331">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="529dd-332">Второй прямоугольник для сравнения.</span><span class="sxs-lookup"><span data-stu-id="529dd-332">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="529dd-333">Проверяет, различны ли два прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-333">Compares two rectangles for inequality.</span></span></summary>
        <returns><span data-ttu-id="529dd-334"><see langword="true" />, если прямоугольники не имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-334"><see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-335">Эта операция проверяет неравенство объектов.</span><span class="sxs-lookup"><span data-stu-id="529dd-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="529dd-336">В этом сравнении два экземпляра <xref:System.Double.NaN?displayProperty=nameWithType> считаются равными.</span><span class="sxs-lookup"><span data-stu-id="529dd-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="529dd-337">Расположение и измерения прямоугольника описываются значениями <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="529dd-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="529dd-338">Поскольку значения <xref:System.Double> могут терять точность при работе с, сравнение двух логически эквивалентных значений может завершиться ошибкой.</span><span class="sxs-lookup"><span data-stu-id="529dd-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="529dd-339">Эквивалентным методом для этого оператора является <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="529dd-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="529dd-340">В следующем примере показано, как использовать оператор <xref:System.Windows.Rect.op_Inequality%2A>, чтобы определить, не равны ли два прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="529dd-341">Строковое представление прямоугольника имеет следующий формат: "x, y, ширина, высота".</span><span class="sxs-lookup"><span data-stu-id="529dd-341">The string representation of the rectangle, in the form "x, y, width, height".</span></span></param>
        <summary><span data-ttu-id="529dd-342">Создает новый прямоугольник из заданного строкового представления.</span><span class="sxs-lookup"><span data-stu-id="529dd-342">Creates a new rectangle from the specified string representation.</span></span></summary>
        <returns><span data-ttu-id="529dd-343">Полученный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-343">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-344">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Parse%2A> для преобразования строкового представления прямоугольника в структуру <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="529dd-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-345">Возвращает координату по оси X правой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-345">Gets the x-axis value of the right side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-346">Координата по оси X правой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-346">The x-axis value of the right side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-347">Значение оси x правой части прямоугольника равно сумме свойств <xref:System.Windows.Rect.X%2A> и <xref:System.Windows.Rect.Width%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-348">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-349">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="529dd-350">Коэффициент масштабирования по оси X.</span><span class="sxs-lookup"><span data-stu-id="529dd-350">The scale factor in the x-direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="529dd-351">Коэффициент масштабирования по оси Y.</span><span class="sxs-lookup"><span data-stu-id="529dd-351">The scale factor in the y-direction.</span></span></param>
        <summary><span data-ttu-id="529dd-352">Умножает размер текущего прямоугольника на указанные значения x и y.</span><span class="sxs-lookup"><span data-stu-id="529dd-352">Multiplies the size of the current rectangle by the specified x and y values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-353">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Scale%2A> для умножения ширины и высоты прямоугольника на заданный объем.</span><span class="sxs-lookup"><span data-stu-id="529dd-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-354">Получает или задает ширину и высоту прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-354">Gets or sets the width and height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-355">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-356">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-357">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-358">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-359">Для <see cref="P:System.Windows.Rect.Size" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-359"><see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="529dd-360">Используемый формат.</span><span class="sxs-lookup"><span data-stu-id="529dd-360">The format to use.</span></span>  
  
<span data-ttu-id="529dd-361">- или -</span><span class="sxs-lookup"><span data-stu-id="529dd-361">-or-</span></span> 
<span data-ttu-id="529dd-362">Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="529dd-363">Поставщик, используемый для форматирования значения.</span><span class="sxs-lookup"><span data-stu-id="529dd-363">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="529dd-364">-или-</span><span class="sxs-lookup"><span data-stu-id="529dd-364">-or-</span></span> 
<span data-ttu-id="529dd-365">Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="529dd-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="529dd-366">Форматирует значение текущего экземпляра, используя указанный формат.</span><span class="sxs-lookup"><span data-stu-id="529dd-366">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="529dd-367">Строковое представление прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-367">A string representation of the rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-368">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="529dd-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="529dd-369">Он может использоваться, только если экземпляр <xref:System.Windows.Rect> приведен к типу интерфейса <xref:System.IFormattable>.</span><span class="sxs-lookup"><span data-stu-id="529dd-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-370">Возвращает координату по оси Y верхней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-370">Gets the y-axis position of the top of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-371">Координата по оси Y верхней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-371">The y-axis position of the top of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-372">Получение этого свойства эквивалентно получению свойства <xref:System.Windows.Rect.Y%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-373">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-374">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-375">Возвращает расположение верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-375">Gets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-376">Расположение верхнего левого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-376">The position of the top-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-377">Расположение левого верхнего угла прямоугольника равно (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="529dd-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-378">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-379">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-380">Возвращает расположение верхнего правого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-380">Gets the position of the top-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-381">Расположение верхнего правого угла прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-381">The position of the top-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-382">Расположение верхнего правого угла прямоугольника равно (<xref:System.Windows.Rect.X%2A> @ no__t-1 @ no__t-2, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="529dd-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-383">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-384">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-385">Возвращает строковое представление прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-385">Returns a string representation of the rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="529dd-386">Возвращает строковое представление прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-386">Returns a string representation of the rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-387">Строковое представление текущего прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-387">A string representation of the current rectangle.</span></span> <span data-ttu-id="529dd-388">Строка имеет следующий формат: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span><span class="sxs-lookup"><span data-stu-id="529dd-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-389">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.ToString> для получения строкового представления структуры <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="529dd-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="529dd-390">Сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="529dd-390">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="529dd-391">Возвращает строковое представление прямоугольника с использованием указанного поставщика формата.</span><span class="sxs-lookup"><span data-stu-id="529dd-391">Returns a string representation of the rectangle by using the specified format provider.</span></span></summary>
        <returns><span data-ttu-id="529dd-392">Строковое представление текущего прямоугольника, которое определяется указанным поставщиком формата.</span><span class="sxs-lookup"><span data-stu-id="529dd-392">A string representation of the current rectangle that is determined by the specified format provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-393">Преобразовывает прямоугольник с использованием заданной матрицы.</span><span class="sxs-lookup"><span data-stu-id="529dd-393">Transforms a rectangle by using the specified matrix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="529dd-394">Матрица, которая определяет применяемое преобразование.</span><span class="sxs-lookup"><span data-stu-id="529dd-394">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="529dd-395">Преобразовывает прямоугольник с использованием заданной матрицы.</span><span class="sxs-lookup"><span data-stu-id="529dd-395">Transforms the rectangle by applying the specified matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-396">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> для преобразования структуры <xref:System.Windows.Rect> с помощью <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="529dd-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-397">Прямоугольник, который является основой для преобразования.</span><span class="sxs-lookup"><span data-stu-id="529dd-397">A rectangle that is the basis for the transformation.</span></span></param>
        <param name="matrix"><span data-ttu-id="529dd-398">Матрица, которая определяет применяемое преобразование.</span><span class="sxs-lookup"><span data-stu-id="529dd-398">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="529dd-399">Возвращает прямоугольник, который получается в результате применения указанной матрицы к заданному прямоугольнику.</span><span class="sxs-lookup"><span data-stu-id="529dd-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="529dd-400">Прямоугольник, полученный в результате операции.</span><span class="sxs-lookup"><span data-stu-id="529dd-400">The rectangle that results from the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-401">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> для создания новой структуры <xref:System.Windows.Rect>, полученной в результате применения <xref:System.Windows.Media.Matrix> к существующему прямоугольнику.</span><span class="sxs-lookup"><span data-stu-id="529dd-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="529dd-402">Создает прямоугольник, который имеет достаточные размеры, чтобы включить данный прямоугольник и заданную точку или второй прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="529dd-403">Точка, которую необходимо включить.</span><span class="sxs-lookup"><span data-stu-id="529dd-403">The point to include.</span></span></param>
        <summary><span data-ttu-id="529dd-404">Увеличивает текущий прямоугольник на величину, достаточную, чтобы включить указанную точку.</span><span class="sxs-lookup"><span data-stu-id="529dd-404">Expands the current rectangle exactly enough to contain the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-405">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Union%28System.Windows.Point%29>, чтобы развернуть текущий прямоугольник точно так, чтобы он содержал заданный <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="529dd-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-406">Прямоугольник, который необходимо включить.</span><span class="sxs-lookup"><span data-stu-id="529dd-406">The rectangle to include.</span></span></param>
        <summary><span data-ttu-id="529dd-407">Увеличивает текущий прямоугольник на величину, достаточную, чтобы включить указанный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-408">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Union%28System.Windows.Rect%29>, чтобы развернуть текущий прямоугольник точно так, чтобы он содержал указанный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="529dd-409">Прямоугольник, который необходимо включить.</span><span class="sxs-lookup"><span data-stu-id="529dd-409">The rectangle to include.</span></span></param>
        <param name="point"><span data-ttu-id="529dd-410">Точка, которую необходимо включить.</span><span class="sxs-lookup"><span data-stu-id="529dd-410">The point to include.</span></span></param>
        <summary><span data-ttu-id="529dd-411">Создает прямоугольник, который достаточно большой, чтобы включить указанный прямоугольник и указанную точку.</span><span class="sxs-lookup"><span data-stu-id="529dd-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span></span></summary>
        <returns><span data-ttu-id="529dd-412">Прямоугольник, который достаточно большой, чтобы включить указанный прямоугольник и указанную точку.</span><span class="sxs-lookup"><span data-stu-id="529dd-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-413">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> для создания прямоугольника, который достаточно большой для размещения данного прямоугольника и заданного <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="529dd-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="529dd-414">Первый прямоугольник, который необходимо включить.</span><span class="sxs-lookup"><span data-stu-id="529dd-414">The first rectangle to include.</span></span></param>
        <param name="rect2"><span data-ttu-id="529dd-415">Второй прямоугольник, который необходимо включить.</span><span class="sxs-lookup"><span data-stu-id="529dd-415">The second rectangle to include.</span></span></param>
        <summary><span data-ttu-id="529dd-416">Создает прямоугольник, который достаточно большой, чтобы включить два указанных прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="529dd-417">Полученный прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="529dd-417">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="529dd-418">В следующем примере показано, как использовать метод <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> для создания прямоугольника, который достаточно большой, чтобы вместить два заданных прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-419">Получает или задает ширину прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-419">Gets or sets the width of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-420">Положительное число, которое представляет ширину прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-420">A positive number that represents the width of the rectangle.</span></span> <span data-ttu-id="529dd-421">Значение по умолчанию — 0.</span><span class="sxs-lookup"><span data-stu-id="529dd-421">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-422">Прямоугольник <xref:System.Windows.Rect.Empty%2A> имеет <xref:System.Windows.Rect.Width%2A> из <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="529dd-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="529dd-423">Прямоугольник <xref:System.Windows.Rect.Empty%2A> доступен только для чтения; его <xref:System.Windows.Rect.Width%2A> не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="529dd-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-424">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-425">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-426">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="529dd-427">Свойству <see cref="P:System.Windows.Rect.Width" /> присваивается отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="529dd-427"><see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-428">Для <see cref="P:System.Windows.Rect.Width" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-428"><see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-429">Получает или задает координату по оси X левой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-429">Gets or sets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-430">Координата по оси X левой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-430">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-431">Получение этого свойства эквивалентно получению свойства <xref:System.Windows.Rect.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-432">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-433">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-434">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-435">Для <see cref="P:System.Windows.Rect.X" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-435"><see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="529dd-436">Получает или задает координату по оси Y верхней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-436">Gets or sets the y-axis value of the top side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="529dd-437">Координата по оси Y верхней стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="529dd-437">The y-axis value of the top side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="529dd-438">Получение этого свойства эквивалентно получению свойства <xref:System.Windows.Rect.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="529dd-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="529dd-439">В следующем примере показано, как использовать структуру <xref:System.Windows.Rect> для указания размеров и расположения прямоугольника с помощью XAML.</span><span class="sxs-lookup"><span data-stu-id="529dd-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="529dd-440">В следующем примере показано, как использовать код для создания прямоугольника и его добавления на страницу.</span><span class="sxs-lookup"><span data-stu-id="529dd-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="529dd-441">В примере также показано, как найти сведения о размере и координатах нового прямоугольника и отобразить сведения в <xref:System.Windows.Controls.TextBox> под прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="529dd-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="529dd-442">Для <see cref="P:System.Windows.Rect.Y" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="529dd-442"><see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>
