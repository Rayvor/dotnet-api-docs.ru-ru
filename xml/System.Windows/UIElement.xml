<Type Name="UIElement" FullName="System.Windows.UIElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8479fb90b87cf7db6a64e500883322e3fd9bdbab" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443729" /></Metadata><TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type UIElement = class&#xA;    inherit Visual&#xA;    interface IAnimatable&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a581-101"><see cref="T:System.Windows.UIElement" /> — это базовый класс для реализаций уровня ядра WPF, которые основаны на элементах Windows Presentation Foundation (WPF) и базовых характеристиках представления.</span><span class="sxs-lookup"><span data-stu-id="1a581-101"><see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-102"><xref:System.Windows.UIElement>предоставляет отправную точку для характеристик макета элемента, а также предоставляет виртуальные методы, которые могут переопределяться производными классами, что может повлиять на поведение отрисовки макета элемента и его дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="1a581-103">Большая часть поведения ввода и фокусировки для элементов в целом также определяется в <xref:System.Windows.UIElement> классе.</span><span class="sxs-lookup"><span data-stu-id="1a581-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="1a581-104">Сюда входят события ввода с клавиатуры, мыши и пера, а также связанные свойства состояния.</span><span class="sxs-lookup"><span data-stu-id="1a581-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="1a581-105">Многие из этих событий являются перенаправленными событиями, и многие из событий, связанных с входом, имеют как версию маршрутизации с восходящей маршрутизацией, так и версию события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="1a581-106">Эти парные события обычно являются событиями, наиболее важными для разработчиков элементов управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="1a581-107"><xref:System.Windows.UIElement>также включает [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] в себя связь с моделью событий, включая методы, которые могут вызывать указанные перенаправленные события, источником которых являются экземпляры элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="1a581-108">С точки зрения архитектуры <xref:System.Windows.UIElement> можно считать примерно эквивалентом обработчика окна в [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] программировании или элемента в [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] программировании.</span><span class="sxs-lookup"><span data-stu-id="1a581-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="1a581-109"><xref:System.Windows.UIElement>является базовым элементом на уровне ядра WPF.</span><span class="sxs-lookup"><span data-stu-id="1a581-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="1a581-110"><xref:System.Windows.UIElement> Компонент имеетследующиевозможности,<xref:System.Windows.UIElement> определяемые классом:</span><span class="sxs-lookup"><span data-stu-id="1a581-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="1a581-111">Может быть отображен как дочерний<xref:System.Windows.UIElement> элемент (производный от <xref:System.Windows.Media.Visual>, класс Graphics высокого уровня)</span><span class="sxs-lookup"><span data-stu-id="1a581-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="1a581-112">Содержит логику, используемую для определения размера и позиционирования возможных дочерних элементов <xref:System.Windows.UIElement> объекта (при интерпретации в системе макета).</span><span class="sxs-lookup"><span data-stu-id="1a581-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="1a581-113">Может отвечать на введенные пользователем данные (включая контроль над тем, куда передаются входные данные посредством обработки маршрутизации событий или маршрутизации команд).</span><span class="sxs-lookup"><span data-stu-id="1a581-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="1a581-114">Может создавать перенаправленные события, которые проходят маршрут через дерево логических элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="1a581-115">Поддерживает некоторые аспекты системы анимации</span><span class="sxs-lookup"><span data-stu-id="1a581-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="1a581-116"><xref:System.Windows.FrameworkElement>— Это класс реализации уровня среды WPF, который строится на <xref:System.Windows.UIElement>и добавляет определенные взаимодействия с уровнем платформы WPF.</span><span class="sxs-lookup"><span data-stu-id="1a581-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="1a581-117"><xref:System.Windows.FrameworkElement>добавляет и определяет следующие возможности:</span><span class="sxs-lookup"><span data-stu-id="1a581-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="1a581-118">Дополнительные характеристики макета для конкретных платформ</span><span class="sxs-lookup"><span data-stu-id="1a581-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="1a581-119">Поддержка расширенных отчетов о метаданных для свойств</span><span class="sxs-lookup"><span data-stu-id="1a581-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="1a581-120">Реализация определенного класса для определенных входных базовых классов и их присоединенных свойств или вложенных событий</span><span class="sxs-lookup"><span data-stu-id="1a581-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="1a581-121">Поддержка стиля</span><span class="sxs-lookup"><span data-stu-id="1a581-121">Style support</span></span>  
  
-   <span data-ttu-id="1a581-122">Дальнейшая поддержка анимации</span><span class="sxs-lookup"><span data-stu-id="1a581-122">Further animation support</span></span>  
  
 <span data-ttu-id="1a581-123">Еще один связанный класс <xref:System.Windows.ContentElement>—.</span><span class="sxs-lookup"><span data-stu-id="1a581-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="1a581-124">Класс реализует многие из тех же элементов, что и <xref:System.Windows.UIElement>делает; разница между этими двумя классами состоит в том, чтобы выполнить их с требуемым местом в общей модели содержимого. <xref:System.Windows.ContentElement></span><span class="sxs-lookup"><span data-stu-id="1a581-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="1a581-125"><xref:System.Windows.UIElement> Производный класс обычно определяет относительно жесткую модель содержимого, что означает наличие ограничений на то, какие элементы могут быть дочерними элементами в разметке.</span><span class="sxs-lookup"><span data-stu-id="1a581-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="1a581-126">Может существовать емкость для менее ограничения дочернего содержимого в <xref:System.Windows.UIElement>, но эта емкость обычно централизована по назначенным свойствам содержимого.</span><span class="sxs-lookup"><span data-stu-id="1a581-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="1a581-127"><xref:System.Windows.ContentElement> Производный класс обычно не является ограничением содержимого и поддерживает такие сценарии, как документы в формате потока.</span><span class="sxs-lookup"><span data-stu-id="1a581-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a581-128"><xref:System.Windows.UIElement.Visibility%2A>состояние влияет на всю обработку ввода этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="1a581-129">Невидимые элементы не участвуют в проверке нажатия и не получают входные события, даже если указатель мыши наведен на границы, в которых элемент был бы видимым.</span><span class="sxs-lookup"><span data-stu-id="1a581-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-130">Инициализирует новый экземпляр класса <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-131">Создание нового экземпляра, который фактически является типом <xref:System.Windows.UIElement> , часто встречается в коде приложения, поскольку <xref:System.Windows.UIElement> является базовым элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="1a581-132">См. раздел [Общие сведения о базовых элементах](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a581-133">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="1a581-134">Идентификатор маршрутизируемого события для обработки.</span><span class="sxs-lookup"><span data-stu-id="1a581-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="1a581-135">Ссылка на реализацию обработчика.</span><span class="sxs-lookup"><span data-stu-id="1a581-135">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="1a581-136">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-137">Один и тот же обработчик можно добавить для одного и того же события несколько раз, не создавая исключение.</span><span class="sxs-lookup"><span data-stu-id="1a581-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="1a581-138">Однако обработчик в действительности вызывается несколько раз при обработке события.</span><span class="sxs-lookup"><span data-stu-id="1a581-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="1a581-139">Поэтому рассмотрите, как это поведение может иметь побочные эффекты, которые следует учитывать в реализации обработчика.</span><span class="sxs-lookup"><span data-stu-id="1a581-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="1a581-140">Обычно этот метод используется для предоставления реализации метода доступа Add для [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] шаблона доступа к событию настраиваемого перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="1a581-141">Идентификатор маршрутизируемого события для обработки.</span><span class="sxs-lookup"><span data-stu-id="1a581-141">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="1a581-142">Ссылка на реализацию обработчика.</span><span class="sxs-lookup"><span data-stu-id="1a581-142">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="1a581-143">Значение <see langword="true" /> для регистрации обработчика, чтобы он вызывался даже в том случае, если перенаправленное событие помечено как обработанное в его данных события. Значение <see langword="false" /> для регистрации обработчика с условием по умолчанию, что он не будет вызываться, если перенаправленное событие уже помечено как обработанное.</span><span class="sxs-lookup"><span data-stu-id="1a581-143"><see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="1a581-144">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-144">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="1a581-145">Не следует постоянно прибегать к повторной обработке перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-145">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="1a581-146">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="1a581-147">Укажите <paramref name="handledEventsToo" /> как <see langword="true" />, чтобы предоставленный обработчик вызывался для перенаправленного события, которое уже было отмечено как обработанное другим элементом на маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-148">Обработка событий ввода низкого уровня практическим образом является сложной задачей.</span><span class="sxs-lookup"><span data-stu-id="1a581-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="1a581-149">Многие элементы управления реализуют поведение, при котором определенное событие помечается как обработанное и заменяется другим интуитивно понятным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="1a581-150">Как правило, элемент управления помечает событие ввода платформы как обработанное только при наличии некоторой намеренности по проектированию.</span><span class="sxs-lookup"><span data-stu-id="1a581-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="1a581-151">В некоторых сценариях эти действия по проектированию могут быть не теми, которые необходимы для конкретной обработки события ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="1a581-152">Это для таких сценариев, которые регистрируют обработчики `handledEventsToo` с `true` помощью AS.</span><span class="sxs-lookup"><span data-stu-id="1a581-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="1a581-153">Но делать это не следует.</span><span class="sxs-lookup"><span data-stu-id="1a581-153">But you should not do this routinely.</span></span> <span data-ttu-id="1a581-154">Вызов обработчиков в ответ на все события, даже если они были обработаны, усложняет логику обработки событий приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="1a581-155">Если логика обработчика очень значительна, производительность может снизиться.</span><span class="sxs-lookup"><span data-stu-id="1a581-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="1a581-156">Следует зарезервировать использование присоединяемых обработчиков для уже обработанных событий в тех ситуациях, когда вы уже обнаружили в процессе разработки, что определенные элементы управления обрабатывают события, которые все же нужно обработать с помощью логики приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="1a581-157">Другой способ избежать поведения обработки класса определенных сочетаний управления событиями — использовать альтернативу предварительного просмотра этого события.</span><span class="sxs-lookup"><span data-stu-id="1a581-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="1a581-158">Например, если <xref:System.Windows.UIElement.MouseLeftButtonDown> помечен как обработанный с помощью обработки класса, можно добавить <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> обработчики вместо.</span><span class="sxs-lookup"><span data-stu-id="1a581-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="1a581-159">Один и тот же обработчик можно добавить для одного и того же события несколько раз, не создавая исключение.</span><span class="sxs-lookup"><span data-stu-id="1a581-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="1a581-160">Однако обработчик в действительности вызывается несколько раз при обработке события.</span><span class="sxs-lookup"><span data-stu-id="1a581-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="1a581-161">Поэтому рассмотрите, как это поведение может иметь побочные эффекты, которые следует учитывать в реализации обработчика.</span><span class="sxs-lookup"><span data-stu-id="1a581-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="1a581-162">Обычно этот метод используется для предоставления реализации метода доступа Add для [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] шаблона доступа к событию настраиваемого перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-163">В следующем примере реализуется обработчик, вызванный для <xref:System.Windows.FrameworkElement.Initialized> события на странице, который прикрепляет определенный обработчик к одному из именованных элементов на странице с помощью. `handledEventsToo` `true`</span><span class="sxs-lookup"><span data-stu-id="1a581-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="1a581-164">Этот обработчик будет вызываться, даже если другой элемент в маршруте пометил данные общих событий как обработанные перед достижением обрабатывающего элемента в маршруте.</span><span class="sxs-lookup"><span data-stu-id="1a581-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="1a581-165">Маршрут события, к которому добавляются обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-165">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="1a581-166">Информация о событии, используемая для добавления обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-166">The event data that is used to add the handlers.</span></span> <span data-ttu-id="1a581-167">Данный метод использует свойство <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> данных события для создания обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="1a581-168">Добавляет обработчики в указанный <see cref="T:System.Windows.EventRoute" /> для настоящего коллекции обработчиков событий <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-169">Этот метод может использоваться элементами узла содержимого (либо, которые реализуют <xref:System.Windows.IContentHost> , либо не имеют) для добавления обработчиков для дочерних элементов <xref:System.Windows.EventRoute>в.</span><span class="sxs-lookup"><span data-stu-id="1a581-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="1a581-170">Обычно это не требуется для <xref:System.Windows.UIElement>, так как обработчики автоматически добавляются для всех элементов, найденных в завершенном логическом дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="1a581-171">Однако в некоторых случаях, когда <xref:System.Windows.ContentElement> и <xref:System.Windows.UIElement> являются смешанными в шаблонных деревьях, промежуточные элементы, поступилные из шаблона, необходимо добавить в маршрут.</span><span class="sxs-lookup"><span data-stu-id="1a581-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="1a581-172"><xref:System.Windows.ContentElement> И<xref:System.Windows.UIElement> поддерживают версию этого метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-173">Получение или установка значения, определяющего возможность использования элемента в качестве целевого объекта для операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span>  <span data-ttu-id="1a581-174">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-174">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-175">Значение<see langword="true" /> , если этот элемент можно использовать в качестве целевого объекта для операции перетаскивания; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-175"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-176">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-177">Операции перетаскивания не включены по умолчанию, и их необходимо включить намеренно, задав <xref:System.Windows.UIElement.AllowDrop%2A> для `true`значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="1a581-178">Помимо этого базового параметра, поведение перетаскивания полностью зависит от реализации и не определено ни в <xref:System.Windows.UIElement> каком другом классе базового элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="1a581-179">Некоторые элементы управления, например <xref:System.Windows.Controls.RichTextBox>, имеют поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="1a581-180">Дополнительные сведения о перетаскивании см. в разделе [Общие сведения о](~/docs/framework/wpf/advanced/drag-and-drop-overview.md)перетаскивании.</span><span class="sxs-lookup"><span data-stu-id="1a581-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="1a581-181"><xref:System.Windows.FrameworkElement>переопределяет метаданные для этого свойства зависимостей в его реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="1a581-182">В частности <xref:System.Windows.FrameworkElement> , определяет это свойство, разрешающее наследование<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> значения `true` свойства (в метаданных).</span><span class="sxs-lookup"><span data-stu-id="1a581-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="1a581-183">Наследование значения свойства в этом контексте означает, что если имеются дочерние элементы, для <xref:System.Windows.UIElement.AllowDrop%2A> которых нет другого значения для назначения через локальные значения или стили, значение ближайшего родительского элемента с этим значением (в стилях по умолчанию значения или локальное значение), тогда значение из родительского элемента будет назначено всем ранее неназначенным дочерним элементам в системе свойств.</span><span class="sxs-lookup"><span data-stu-id="1a581-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="1a581-184">На практике это означает, что можно разрешить операции DROP в корневом элементе, и это значение будет распространяться на все дочерние элементы, которые не были специально назначены в `false`качестве.</span><span class="sxs-lookup"><span data-stu-id="1a581-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-185">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-186">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="1a581-187">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-188">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-189">В <xref:System.Windows.UIElement.AllowDrop%2A> следующем примере разметки свойство `true` задается <xref:System.Windows.Controls.TextBox>с помощью атрибута для, а также некоторые другие связанные свойства, которые в статистической функции <xref:System.Windows.Controls.TextBox> позволяют назначить целевой объект для многострочного текстового объекта данных, если Он перетаскивается в.</span><span class="sxs-lookup"><span data-stu-id="1a581-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="1a581-190">Полный пример см. в разделе [Загрузка примера удаленного файла](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="1a581-190">For the complete sample, see [Load a Dropped File Sample](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-191">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.AllowDrop" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a581-192">Применяет анимацию к указанному свойству зависимостей в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-192">Applies an animation to a specified dependency property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-193">Данный метод запечатан и не может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="1a581-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="1a581-194">Идентификатор анимируемого свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-194">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="1a581-195">Таймер анимации, контролирующий и объявляющий анимацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-195">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="1a581-196">Применяет анимацию к указанному свойству зависимостей в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-196">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="1a581-197">Все существующие анимации останавливаются и заменяются новой анимацией.</span><span class="sxs-lookup"><span data-stu-id="1a581-197">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-198">Чтобы удалить анимацию из свойства, укажите идентификатор для этого свойства в виде `dp` и укажите `clock` в качестве `null`значения.</span><span class="sxs-lookup"><span data-stu-id="1a581-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="1a581-199">Это приведет к удалению анимации, а анимированному свойству будет присвоено базовое значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="1a581-200">Однако изначально связанные часы анимации не останавливаются.</span><span class="sxs-lookup"><span data-stu-id="1a581-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="1a581-201">Все другие анимации, назначенные этому часам, будут продолжать работать.</span><span class="sxs-lookup"><span data-stu-id="1a581-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-202">В следующем примере <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` для определена определенная анимация по времени путем вызова <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="1a581-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="1a581-203">Анимируемое свойство.</span><span class="sxs-lookup"><span data-stu-id="1a581-203">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="1a581-204">Таймер анимации, контролирующий и объявляющий анимацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-204">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="1a581-205">Значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="1a581-205">A value of the enumeration.</span></span> <span data-ttu-id="1a581-206">Значение по умолчанию — <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />; это значение будет останавливать все существующие анимации и заменять их новой анимацией.</span><span class="sxs-lookup"><span data-stu-id="1a581-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="1a581-207">Применяет анимацию к заданному свойству зависимостей этого элемента с возможностью указать, что должно происходить, если у свойства уже имеется запущенная анимация.</span><span class="sxs-lookup"><span data-stu-id="1a581-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-208">Чтобы удалить анимацию из свойства, укажите идентификатор для этого свойства в виде `dp` и укажите `clock` в качестве `null`значения.</span><span class="sxs-lookup"><span data-stu-id="1a581-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="1a581-209">Это приведет к удалению анимации, а анимированному свойству будет присвоено базовое значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="1a581-210">Однако изначально связанные часы анимации не останавливаются.</span><span class="sxs-lookup"><span data-stu-id="1a581-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="1a581-211">Все другие анимации, назначенные этому часам, будут продолжать работать.</span><span class="sxs-lookup"><span data-stu-id="1a581-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-212">Получает значение, которое указывает, была ли хотя бы одна операция сенсорного ввода передана в данный элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-212">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="1a581-213">Значение <see langword="true" />, если хотя бы одна операция сенсорного ввода получена данным элементом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-213"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-214">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-215">Получает значение, указывающее, была ли хотя бы одна операция сенсорного ввода передана в данный элемент или в какой-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="1a581-216">Значение <see langword="true" />, если хотя бы одна операция сенсорного ввода получена данным элементом или каким-либо из его дочерних элементов в визуальном дереве; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-216"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-217">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-218">Получает значение, которое указывает, произошло ли хотя бы одно сенсорное нажатие данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-218">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="1a581-219">Значение <see langword="true" />, если произошло хотя бы одно сенсорное нажатие данного элемента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-219"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-220">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-221">Получает значение, указывающее, произошло ли хотя бы одно сенсорное нажатие данного элемента или какого-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="1a581-222">Значение <see langword="true" />, если произошло хотя бы одно сенсорное нажатие данного элемента или какого-либо из его дочерних элементов в визуальном дереве; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-222"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-223">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="member this.Arrange : System.Windows.Rect -&gt; unit" Usage="uIElement.Arrange finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="1a581-224">Окончательный размер, вычисляемый родительским элементом для дочернего элемента, представленного в виде экземпляра <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span></span></param>
        <summary><span data-ttu-id="1a581-225">Размещает дочерние элементы и определяет размер для <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="1a581-226">Родительские элементы вызывают этот метод из своей реализации <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (или эквивалента уровня инфраструктуры WPF) для формирования рекурсивного обновления макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span></span> <span data-ttu-id="1a581-227">Этот метод образует второй проход обновления макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-227">This method constitutes the second pass of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-228">Для элементов на уровне платформы WPF поведение <xref:System.Windows.UIElement.Arrange%2A> в случае наследования не должно (и недоступно, если не будет изменена теневая).</span><span class="sxs-lookup"><span data-stu-id="1a581-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="1a581-229">Вместо этого следует переопределить <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> реализацию в классе.</span><span class="sxs-lookup"><span data-stu-id="1a581-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="1a581-230">Реализация вызывается внутренним <xref:System.Windows.UIElement.Arrange%2A> образом в рамках операций макета на уровне платформы WPF по умолчанию. <xref:System.Windows.FrameworkElement.ArrangeOverride%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="1a581-231">Ваша <xref:System.Windows.UIElement.ArrangeCore%2A> реализация также должна вызывать <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> для каждого дочернего элемента, если у него есть дочерние элементы.</span><span class="sxs-lookup"><span data-stu-id="1a581-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="1a581-232">Для производных сценариев элемента уровня ядра WPF поведение для <xref:System.Windows.UIElement.Arrange%2A> этого не должно (и не может, если только не была скрыта).</span><span class="sxs-lookup"><span data-stu-id="1a581-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="1a581-233">Вместо этого следует переопределить <xref:System.Windows.UIElement.ArrangeCore%2A> в классе.</span><span class="sxs-lookup"><span data-stu-id="1a581-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="1a581-234">Реализация вызывается внутренним <xref:System.Windows.UIElement.Arrange%2A> образом в рамках операций макета на уровне платформы WPF по умолчанию. <xref:System.Windows.UIElement.ArrangeCore%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="1a581-235">Однако в этом случае предполагается, что используется макет уровня платформы WPF и его система макета, которая часто не является случайом, если вы специально наследуете элементы на уровне ядра WPF от <xref:System.Windows.UIElement> базового класса element.</span><span class="sxs-lookup"><span data-stu-id="1a581-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="1a581-236">Ваша <xref:System.Windows.UIElement.ArrangeCore%2A> реализация также должна вызывать <xref:System.Windows.UIElement.Arrange%2A> для каждого дочернего элемента, если у него есть дочерние элементы.</span><span class="sxs-lookup"><span data-stu-id="1a581-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="1a581-237">Обратите внимание, что в сценарии уровня ядра WPF предполагается, что вы <xref:System.Windows.FrameworkElement> не используете производный <xref:System.Windows.FrameworkElement> класс <xref:System.Windows.FrameworkElement.ArrangeCore%2A>, так как запечатывает.</span><span class="sxs-lookup"><span data-stu-id="1a581-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="1a581-238">Вычисление расположения макета на уровне платформы WPF в [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] состоит <xref:System.Windows.UIElement.Measure%2A> из вызова и <xref:System.Windows.UIElement.Arrange%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="1a581-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="1a581-239">Во время <xref:System.Windows.Size> `availableSize`вызова система макета определяет требования к размеру элемента с помощью предоставленного аргумента (). <xref:System.Windows.UIElement.Measure%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="1a581-240">Во время <xref:System.Windows.UIElement.Arrange%2A> вызова система макета завершает размер и положение ограничивающего прямоугольника элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="1a581-241">Дополнительные сведения см. в разделе [Макет](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="1a581-242">`availableSize`может быть любым числом от нуля до бесконечности.</span><span class="sxs-lookup"><span data-stu-id="1a581-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="1a581-243">Элементы, которые должны быть размещены, возвращают минимальное <xref:System.Windows.Size> `availableSize` значение, требуемое в параметре.</span><span class="sxs-lookup"><span data-stu-id="1a581-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="1a581-244">При первом создании экземпляра макета он всегда получает <xref:System.Windows.UIElement.Measure%2A> <xref:System.Windows.UIElement.Arrange%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="1a581-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="1a581-245">Однако после <xref:System.Windows.UIElement.Arrange%2A> первого прохода макета он может получить вызов <xref:System.Windows.UIElement.Measure%2A>без; это может произойти, когда изменяется свойство, влияющее только <xref:System.Windows.UIElement.Arrange%2A> на изменение (например, выравнивание), или когда родительский объект получает исключение <xref:System.Windows.UIElement.Arrange%2A> без <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="1a581-246">Вызов автоматически сделает <xref:System.Windows.UIElement.Arrange%2A> вызов недействительным. <xref:System.Windows.UIElement.Measure%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="1a581-247">Обновления макета обычно происходят асинхронно (по времени, определенному системой макета).</span><span class="sxs-lookup"><span data-stu-id="1a581-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="1a581-248">Элемент может не сразу отражать изменения свойств, влияющих на размер элемента (например <xref:System.Windows.FrameworkElement.Width%2A>,).</span><span class="sxs-lookup"><span data-stu-id="1a581-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a581-249">Обновления макета можно принудительно применять с помощью <xref:System.Windows.UIElement.UpdateLayout%2A> метода. Однако вызывать эту функцию не рекомендуется, так как обычно это не требуется и может привести к снижению производительности.</span><span class="sxs-lookup"><span data-stu-id="1a581-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="1a581-250">Во многих ситуациях, когда <xref:System.Windows.UIElement.UpdateLayout%2A> может быть уместным вызов, система макета, вероятно, уже будет обрабатывать обновления.</span><span class="sxs-lookup"><span data-stu-id="1a581-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="1a581-251">Система макета может обрабатывать изменения макета способом, который может оптимизировать все необходимые обновления как часть пакета.</span><span class="sxs-lookup"><span data-stu-id="1a581-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="1a581-252">Система макета хранит две отдельные очереди недопустимых макетов: одна <xref:System.Windows.UIElement.Measure%2A> для и одна <xref:System.Windows.UIElement.Arrange%2A>для.</span><span class="sxs-lookup"><span data-stu-id="1a581-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="1a581-253">Очередь макета сортируется в соответствии с порядком элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="1a581-254">Элементы, расположенные выше в дереве, находятся в верхней части очереди, чтобы избежать избыточных макетов, вызванных повторяющимися изменениями в родительских элементах.</span><span class="sxs-lookup"><span data-stu-id="1a581-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="1a581-255">Дубликаты записей автоматически удаляются из очереди, а элементы автоматически удаляются из очереди, если они уже действительны.</span><span class="sxs-lookup"><span data-stu-id="1a581-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="1a581-256">При обновлении макета <xref:System.Windows.UIElement.Measure%2A> сначала очищается очередь, а затем <xref:System.Windows.UIElement.Arrange%2A> очередь.</span><span class="sxs-lookup"><span data-stu-id="1a581-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="1a581-257">Элемент в <xref:System.Windows.UIElement.Arrange%2A> очереди никогда не будет упорядочен, если <xref:System.Windows.UIElement.Measure%2A> в очереди есть элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeCore : System.Windows.Rect -&gt; unit&#xA;override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="uIElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="1a581-258">Итоговая область в родительском элементе, которую элемент должен использовать для размещения себя и своих дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-258">The final area within the parent that element should use to arrange itself and its child elements.</span></span></param>
        <summary><span data-ttu-id="1a581-259">Определяет шаблон для определения макета упорядочивания WPF уровня ядра.</span><span class="sxs-lookup"><span data-stu-id="1a581-259">Defines the template for WPF core-level arrange layout definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a581-260">Переопределение этого метода уместно, только если вы наследуете на уровне ядра WPF и не используете систему макета уровня платформы WPF и <xref:System.Windows.FrameworkElement> производный класс, так как <xref:System.Windows.FrameworkElement> запечатывает <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="1a581-261">Если используется система макета уровня платформы WPF, то для поведения <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>компоновки макета, зависящего от класса, необходимо переопределить соответствующий метод.</span><span class="sxs-lookup"><span data-stu-id="1a581-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-262"><xref:System.Windows.UIElement.ArrangeCore%2A>реализации должны вызывать базовую реализацию для возврата размера, затем вызывать <xref:System.Windows.UIElement.Arrange%2A> метод каждого видимого дочернего элемента и согласовать размеры, возвращенные этими <xref:System.Windows.UIElement.Arrange%2A> вызовами, с размером базовой реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="1a581-263">Логика для аспекта <xref:System.Windows.UIElement.ArrangeCore%2A> сверки реализации может быть различной в зависимости от характеристик макета элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="1a581-264">В следующем примере шаблона `VisualChildren` является гипотетическым свойством, которое элемент может определить для помощи в перечислении его содержимого. <xref:System.Windows.UIElement> не определяет коллекции содержимого на этом уровне, архитектура на уровне платформы WPF откладывает поведение содержимого на производные элементы, такие как определенные элементы управления или базовые классы элементов управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-265">Если вы разрабатываете элементы на уровне ядра WPF, следует переопределить этот метод, чтобы предоставить элементу уровня ядра WPF уникальное поведение макета или для принятия правильных макетов о дочерних элементах элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span></span> <span data-ttu-id="1a581-266">Переопределение может быть необходимым, если эти дочерние элементы не распознаются из определенного шаблона, <see cref="T:System.Windows.Controls.ItemCollection" />такого как.</span><span class="sxs-lookup"><span data-stu-id="1a581-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span></span>  
  
<span data-ttu-id="1a581-267">Родительский элемент должен вызывать зависящий <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> от класса для каждого дочернего элемента, в противном случае эти дочерние элементы не подготавливаются к просмотру.</span><span class="sxs-lookup"><span data-stu-id="1a581-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a581-268">Запускает анимацию для указанного свойства данного элемента, имеющего анимацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-268">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="1a581-269">Свойство для анимации, указанное как идентификатор свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-269">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="1a581-270">График для анимации.</span><span class="sxs-lookup"><span data-stu-id="1a581-270">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="1a581-271">Запускает анимацию для указанного свойства данного элемента, имеющего анимацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-271">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-272">При проверке того, анимировано ли свойство, обратите внимание, что анимация начнется и будет считаться анимированной при отрисовке первого кадра после неанимированной начальной точки.</span><span class="sxs-lookup"><span data-stu-id="1a581-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="1a581-273"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> Если для `animation` имеет значение,товсетекущиеанимацииудаляются,атекущеезначениесвойстваудерживается.`null`</span><span class="sxs-lookup"><span data-stu-id="1a581-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="1a581-274">Если все `null`значение равно, все анимации удаляются из свойства, а значение свойства возвращается к базовому значению. `animation`</span><span class="sxs-lookup"><span data-stu-id="1a581-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="1a581-275">Однако изначально связанная временная шкала анимации не останавливается.</span><span class="sxs-lookup"><span data-stu-id="1a581-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="1a581-276">Все остальные анимации, назначенные этой временной шкале, будут продолжать выполняться.</span><span class="sxs-lookup"><span data-stu-id="1a581-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-277">В следующем примере создается анимация, назначается, а затем вызывается <xref:System.Windows.UIElement.BeginAnimation%2A> для запуска.</span><span class="sxs-lookup"><span data-stu-id="1a581-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="1a581-278">Свойство для анимации, указанное как идентификатор свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-278">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="1a581-279">График для анимации, которую следует применить.</span><span class="sxs-lookup"><span data-stu-id="1a581-279">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="1a581-280">Значение перечисления, которое указывает, как новая анимация должна взаимодействовать с любыми текущими анимациями, уже влияющими на значение свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="1a581-281">Запускает указанную анимацию для указанного анимированного свойства зависимостей этого элемента, с возможностью указания действий, которые следует предпринять при уже существующей анимации для данного свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-282">При проверке того, анимировано ли свойство, обратите внимание, что анимация начнется и будет считаться анимированной при отрисовке первого кадра после неанимированной начальной точки.</span><span class="sxs-lookup"><span data-stu-id="1a581-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="1a581-283"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> Если для `animation` имеет значение,товсетекущиеанимацииудаляются,атекущеезначениесвойстваудерживается.`null`</span><span class="sxs-lookup"><span data-stu-id="1a581-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="1a581-284">Если все `null`значение равно, все анимации удаляются из свойства, а значение свойства возвращается к базовому значению. `animation`</span><span class="sxs-lookup"><span data-stu-id="1a581-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="1a581-285">Однако изначально связанная временная шкала анимации не останавливается.</span><span class="sxs-lookup"><span data-stu-id="1a581-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="1a581-286">Все остальные анимации, назначенные этой временной шкале, будут продолжать выполняться.</span><span class="sxs-lookup"><span data-stu-id="1a581-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-287">В следующем примере реализуется обработчик, который получает существующую анимацию из ресурса и затем вызывает <xref:System.Windows.UIElement.BeginAnimation%2A> с указанным поведением передачи.</span><span class="sxs-lookup"><span data-stu-id="1a581-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.UIElement.BitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-288">Получение или установка эффекта для точечных рисунков, который применяется непосредственно к отображаемому содержимому этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="1a581-289">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-289">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-290">Применяемый эффект точечного рисунка.</span><span class="sxs-lookup"><span data-stu-id="1a581-290">The bitmap effect to apply.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-291"><xref:System.Windows.Media.Effects.BitmapEffect>является абстрактным типом, поэтому для [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] использования требуется реализованный производный <xref:System.Windows.Media.Effects.BitmapEffect>класс, например <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="1a581-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="1a581-292">Обратите внимание, что один реализованный производный класс — это тип коллекции, который позволяет указать <xref:System.Windows.Media.Effects.BitmapEffect>несколько последовательных элементов, используя синтаксис вложенных тегов.</span><span class="sxs-lookup"><span data-stu-id="1a581-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="1a581-293">Ни один из <xref:System.Windows.Media.Effects.BitmapEffect> существующих производных классов не поддерживает преобразователь типов [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , поэтому синтаксис, используемый для этого свойства, обычно является синтаксисом элемента свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-294">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-295">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="1a581-296">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-297">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-298">В следующем примере задается растровый эффекты <xref:System.Windows.Media.Effects.BlurBitmapEffect>с помощью.</span><span class="sxs-lookup"><span data-stu-id="1a581-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.UIElement.BitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-299">Получение или установка источника входных данных эффекта для точечных рисунков, который применяется непосредственно к отображаемому содержимому этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="1a581-300">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-300">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-301">Источник эффектов для точечных рисунков.</span><span class="sxs-lookup"><span data-stu-id="1a581-301">The source for bitmap effects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-302">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-303">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="1a581-304">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-305">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectInputProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-306">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.BitmapEffectInput" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-307">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.BitmapEffect" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.UIElement.CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-308">Получает или задает кэшированное представление объекта <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="1a581-309">Объект <see cref="T:System.Windows.Media.CacheMode" />, содержащий кэшированное представление <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-310"><xref:System.Windows.UIElement.CacheMode%2A> Задайте свойство, если требуется повысить производительность для содержимого, которое занимает время визуализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="1a581-311">Для получения дополнительной информации см. <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="1a581-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.CacheModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-312">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.CacheMode" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-313">Пытается принудительно захватить мышь данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-313">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="1a581-314">Значение <see langword="true" />, если мышь успешно захвачена, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-314"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-315">Для записи необходимо включить элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="1a581-316">Проверка перед вызовом<xref:System.Windows.UIElement.CaptureMouse%2A>. `true` <xref:System.Windows.UIElement.IsEnabled%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="1a581-317">При вызове `true`метода <xref:System.Windows.UIElement.CaptureMouse%2A> возвращается <xref:System.Windows.UIElement.IsMouseCaptured%2A> также .`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="1a581-318">При вызове `true`метода <xref:System.Windows.UIElement.CaptureMouse%2A> <xref:System.Windows.UIElement.GotMouseCapture> возвращаются события и <xref:System.Windows.UIElement.IsMouseCapturedChanged> , <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> а в данных события сообщается как элемент, где <xref:System.Windows.UIElement.CaptureMouse%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="1a581-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="1a581-319">При принудительном захвате может возникнуть конфликт с существующими захватами, особенно с захватами, которые связаны с перетаскиванием мышью.</span><span class="sxs-lookup"><span data-stu-id="1a581-319">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="1a581-320">Чтобы снять захват с мыши из всех элементов, <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> вызовите `element` с помощью параметра `null`, предоставленного как.</span><span class="sxs-lookup"><span data-stu-id="1a581-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-321">В следующем примере реализуется пара обработчиков для сочетания клавиш мыши и ввода ключа, которые захватывают (и изменяют захват) Мышь и обеспечивают специальный режим работы мыши для просмотра трехмерной модели.</span><span class="sxs-lookup"><span data-stu-id="1a581-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-322">Пытается принудительно захватить перо данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-322">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="1a581-323">Значение <see langword="true" />, если перо успешно захвачено, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-323"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-324">Реализация по умолчанию, основанная на базовом устройстве пера `true`по умолчанию, всегда возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="1a581-325">Однако при расширении устройств ввода, предоставляющих реализацию устройства для входной системы, можно создать систему с альтернативной реализацией устройства пера, которая может возвращать различные результаты.</span><span class="sxs-lookup"><span data-stu-id="1a581-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="1a581-326">Когда элемент захватывает перо, он получает входные данные пера, даже если оно находится за пределами границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="1a581-327">Перо обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="1a581-328">Вызов этого метода вызывает базовый статический <xref:System.Windows.Input.Stylus> метод. <xref:System.Windows.Input.Stylus.Capture%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="1a581-329">Фактическое поведение отслеживания реализуется реализацией активного устройства пера.</span><span class="sxs-lookup"><span data-stu-id="1a581-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="1a581-330">Для записи необходимо включить элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="1a581-331">Перед вызовом `true` проверьте, не возвращается <xref:System.Windows.UIElement.CaptureStylus%2A>ли <xref:System.Windows.UIElement.IsEnabled%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1a581-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="1a581-332">При <xref:System.Windows.UIElement.CaptureStylus%2A> вызове `true`метода <xref:System.Windows.UIElement.IsStylusCaptured%2A> возвращается также`true`значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="1a581-333">Захватываемое устройство.</span><span class="sxs-lookup"><span data-stu-id="1a581-333">The device to capture.</span></span></param>
        <summary><span data-ttu-id="1a581-334">Предпринимает попытку принудительного получения операции сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-334">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="1a581-335">Значение <see langword="true" />, если указанная операция сенсорного ввода была получена данным элементом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-335"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-336"><xref:System.Windows.UIElement.CaptureTouch%2A>Возвращает `false` значение, если <xref:System.Windows.Input.TouchDevice> объект в настоящий момент захвачен другим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="1a581-337">Если <xref:System.Windows.UIElement.CaptureTouch%2A> возвращает `true` ,<xref:System.Windows.UIElement.GotTouchCapture> возникает событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="1a581-338">Чтобы освободить запись одного касания от этого элемента, используйте <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> метод и укажите устройство сенсорного ввода для выпуска.</span><span class="sxs-lookup"><span data-stu-id="1a581-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="1a581-339">Чтобы освободить все касания от этого элемента, используйте <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1a581-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a581-340"><paramref name="touchDevice" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-340"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.UIElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-341">Получает или задает геометрию, используемую для определения контура содержимого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-341">Gets or sets the geometry used to define the outline of the contents of an element.</span></span>  <span data-ttu-id="1a581-342">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-342">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-343">Геометрия, используемая для определения размеров области отсечения.</span><span class="sxs-lookup"><span data-stu-id="1a581-343">The geometry to be used for clipping area sizing.</span></span> <span data-ttu-id="1a581-344">Значение по умолчанию — <see cref="T:System.Windows.Media.Geometry" />, равное null.</span><span class="sxs-lookup"><span data-stu-id="1a581-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-345">Элементы за пределами геометрии будут визуально обрезаны в макете, готовом для просмотра.</span><span class="sxs-lookup"><span data-stu-id="1a581-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="1a581-346">Геометрия не обязательно должна быть прямоугольной.</span><span class="sxs-lookup"><span data-stu-id="1a581-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-347">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-348">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="1a581-349">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-350">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-351">В этом примере показано, как определить <xref:System.Windows.UIElement.Clip%2A> область элемента платформы.</span><span class="sxs-lookup"><span data-stu-id="1a581-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="1a581-352">Чтобы определить клип, используйте <xref:System.Windows.Media.Geometry> (например <xref:System.Windows.Media.EllipseGeometry> , <xref:System.Windows.UIElement.Clip%2A> для задания свойства элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="1a581-353">Будут видны только области, находящиеся в пределах области геометрии.</span><span class="sxs-lookup"><span data-stu-id="1a581-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="1a581-354">В следующем примере показан <xref:System.Windows.Controls.Image> элемент без определенной области отсечения.</span><span class="sxs-lookup"><span data-stu-id="1a581-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="1a581-355">Так как область отсечения не определена, отображается изображение целиком.</span><span class="sxs-lookup"><span data-stu-id="1a581-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="1a581-356">![Объект перед применением области обрезки] (~/add/media/mil-task-clip-region-noclip.png "Объект перед применением области обрезки")</span><span class="sxs-lookup"><span data-stu-id="1a581-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="1a581-357">Изображение без области отсечения</span><span class="sxs-lookup"><span data-stu-id="1a581-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="1a581-358">В следующем примере создается идентичное изображение, за исключением того, что в нем определена область обрезки.</span><span class="sxs-lookup"><span data-stu-id="1a581-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="1a581-359"><xref:System.Windows.Media.EllipseGeometry> Будет отображена только часть изображения, находящихся в пределах области.</span><span class="sxs-lookup"><span data-stu-id="1a581-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="1a581-360">![Обрезанный объект] (~/add/media/mil-task-clip-region-ellispe.PNG "Обрезанный объект")</span><span class="sxs-lookup"><span data-stu-id="1a581-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="1a581-361">Изображение с эллиптической областью отсечения</span><span class="sxs-lookup"><span data-stu-id="1a581-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="1a581-362">В следующем примере показано, как анимировать <xref:System.Windows.UIElement.Clip%2A> область элемента платформы.</span><span class="sxs-lookup"><span data-stu-id="1a581-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="1a581-363">В этом примере <xref:System.Windows.Media.EllipseGeometry> используется для определения эллиптической области отсечения <xref:System.Windows.Controls.Image> для элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="1a581-364">Объект <xref:System.Windows.Media.Animation.PointAnimation> анимируется <xref:System.Windows.Media.EllipseGeometry.Center%2A> свойство Geometry в виде эллипса от (0, 0) до (200, 150).</span><span class="sxs-lookup"><span data-stu-id="1a581-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="1a581-365">Анимация начнет играть после загрузки изображения и повторять его в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="1a581-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="1a581-366">Полный пример см. в разделе [Пример области Clip](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="1a581-366">For the full sample, see the [Clip Region Sample](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-367">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.Clip" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClipToBounds : bool with get, set" Usage="System.Windows.UIElement.ClipToBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-368">Получение или установка значения, определяющего усечение содержимого этого элемента (или содержимого, поступающего из его дочерних элементов) в соответствии с размерами содержащего его элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span></span>   <span data-ttu-id="1a581-369">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-369">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-370">Значение <see langword="true" />, если содержимое необходимо отсечь, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-370"><see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-371">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-371">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-372"><xref:System.Windows.UIElement.ClipToBounds%2A> Для дочерних элементов разные эффекты поведения макета в зависимости от того, <xref:System.Windows.FrameworkElement.MaxHeight%2A> <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> определяется ли высота и ширина родительского элемента или  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="1a581-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>родительского элемента всегда учитывается независимо от значения <xref:System.Windows.UIElement.ClipToBounds%2A> , а эффективная обрезка всегда будет обрезать содержимое на основе этих максимальных значений.</span><span class="sxs-lookup"><span data-stu-id="1a581-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="1a581-374"><xref:System.Windows.FrameworkElement.Height%2A> <xref:System.Windows.UIElement.ClipToBounds%2A> `true` <xref:System.Windows.UIElement.ClipToBounds%2A> `false`Параметры родительского  /  элемента не будут обрезать содержимое, если имеет значение, но будет обрезать содержимое, если имеет значение. <xref:System.Windows.FrameworkElement.Width%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="1a581-375">Обратите внимание, что `false` значение по умолчанию — это общее поведение <xref:System.Windows.UIElement> , реализованное в классе.</span><span class="sxs-lookup"><span data-stu-id="1a581-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="1a581-376">Можно использовать любой заданный элемент, производный от <xref:System.Windows.UIElement> , для переопределения метаданных свойства зависимостей для этого свойства в этом экземпляре на `true` вместо этого значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="1a581-377">Несколько существующих производных классов переопределяют эти метаданные и/или настраивают значение свойства зависимости по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="1a581-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, и <xref:System.Windows.Controls.Primitives.Popup> каждое переопределяет значение по умолчанию `true`на.</span><span class="sxs-lookup"><span data-stu-id="1a581-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="1a581-379"><xref:System.Windows.FrameworkElement>переопределяет метаданные для этого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="1a581-380">В частности <xref:System.Windows.FrameworkElement> , определяет это свойство, разрешающее наследование<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> значения `true` свойства (в метаданных).</span><span class="sxs-lookup"><span data-stu-id="1a581-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="1a581-381">Наследование значения свойства в этом контексте означает, что если имеются дочерние элементы, для <xref:System.Windows.UIElement.ClipToBounds%2A> которых нет другого значения для назначения через локальные значения или стили, значение ближайшего родительского элемента с этим значением (в стилях по умолчанию значения, или локальное значение), значение из родительского элемента будет назначено для всех неназначенных дочерних элементов системой свойств.</span><span class="sxs-lookup"><span data-stu-id="1a581-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="1a581-382">На практике это означает, что можно разрешить привязку клипа к корневому элементу, и это значение будет распространяться на все дочерние элементы, не назначенные им в качестве `false`.</span><span class="sxs-lookup"><span data-stu-id="1a581-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-383">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-384">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="1a581-385">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-386">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipToBoundsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-387">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.ClipToBounds" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-388">Получает коллекцию объектов <see cref="T:System.Windows.Input.CommandBinding" />, сопоставленных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span> <span data-ttu-id="1a581-389">Привязка <see cref="T:System.Windows.Input.CommandBinding" /> включает обработку команды для данного элемента и объявляет связь между командой, ее событиями и обработчиками, присоединенные данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span></summary>
        <value><span data-ttu-id="1a581-390">Коллекция всех объектов <see cref="T:System.Windows.Input.CommandBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-391">Другой типичный способ заполнения <xref:System.Windows.UIElement.CommandBindings%2A> коллекции — использование <xref:System.Windows.Input.CommandManager> методов программным способом.</span><span class="sxs-lookup"><span data-stu-id="1a581-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="1a581-392">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="1a581-393">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-393">XAML Values</span></span>  
 <span data-ttu-id="1a581-394">*онеорморекоммандбиндингс*</span><span class="sxs-lookup"><span data-stu-id="1a581-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="1a581-395">Один или несколько <xref:System.Windows.Input.CommandBinding> элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="1a581-396">Каждый из них должен иметь <xref:System.Windows.Input.CommandBinding.Command%2A> атрибут, установленный на известную команду, и атрибуты, заданные <xref:System.Windows.Input.CommandBinding.Executed> <xref:System.Windows.Input.CommandBinding.CanExecute> для реализаций обработчика и.</span><span class="sxs-lookup"><span data-stu-id="1a581-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="1a581-397">Дополнительные сведения см. в разделе <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="1a581-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-398">В следующем примере в окно <xref:System.Windows.Input.CommandBinding> добавляется с помощью разметки.</span><span class="sxs-lookup"><span data-stu-id="1a581-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="1a581-399">Обратите внимание [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], что <xref:System.Windows.Input.CommandBindingCollection> в параметр не объявлен в разметке как элемент; объект коллекции выводится типом, который принимает свойство, а элемент свойства заполняется одним или несколькими <xref:System.Windows.Input.CommandBinding> элементами:</span><span class="sxs-lookup"><span data-stu-id="1a581-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="1a581-400">Дополнительные сведения о [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксисе коллекций см. в разделе [подробное описание синтаксиса XAML](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="1a581-401">В следующем примере выполняется аналогичное действие в коде:</span><span class="sxs-lookup"><span data-stu-id="1a581-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredSize : System.Windows.Size" Usage="System.Windows.UIElement.DesiredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-402">Возвращает размер, вычисленный этим элементом на этапе измерения процесса компоновки.</span><span class="sxs-lookup"><span data-stu-id="1a581-402">Gets the size that this element computed during the measure pass of the layout process.</span></span></summary>
        <value><span data-ttu-id="1a581-403">Вычисленный размер, который становится предпочтительным размером на этапе упорядочения.</span><span class="sxs-lookup"><span data-stu-id="1a581-403">The computed size, which becomes the desired size for the arrange pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-404">Значение, возвращаемое этим свойством, будет иметь только допустимое измерение, если значение <xref:System.Windows.UIElement.IsMeasureValid%2A> свойства равно `true`.</span><span class="sxs-lookup"><span data-stu-id="1a581-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="1a581-405"><xref:System.Windows.UIElement.DesiredSize%2A>обычно проверяется как один из факторов измерения при реализации переопределений поведения макета, таких как <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>или <xref:System.Windows.UIElement.OnRender%2A> (в <xref:System.Windows.UIElement.OnRender%2A> случае, если вы можете проверить <xref:System.Windows.UIElement.RenderSize%2A> вместо этого, но это зависит от реализация).</span><span class="sxs-lookup"><span data-stu-id="1a581-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="1a581-406">В зависимости от сценария <xref:System.Windows.UIElement.DesiredSize%2A> может полностью соблюдаться в логике реализации, могут применяться <xref:System.Windows.UIElement.DesiredSize%2A> ограничения, а такие ограничения могут также изменить другие характеристики родительского элемента или дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="1a581-407">Например, элемент управления, который поддерживает прокручиваемые регионы (но выбирает не производный от элементов управления уровня среды WPF, которые уже включают прокручиваемые области), может сравнить доступный размер с <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="1a581-408">Затем элемент управления может задать внутреннее состояние, которое включало полосы прокрутки в [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] для этого элемента управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="1a581-409">Кроме того <xref:System.Windows.UIElement.DesiredSize%2A> , в некоторых сценариях может игнорироваться потенциальная ситуация.</span><span class="sxs-lookup"><span data-stu-id="1a581-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-410">В следующем примере показано <xref:System.Windows.UIElement.DesiredSize%2A> как часть <xref:System.Windows.FrameworkElement.MeasureOverride%2A> реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="1a581-411">Обратите <xref:System.Windows.UIElement.Measure%2A> внимание на то, как вызывается непосредственно перед получением. <xref:System.Windows.UIElement.DesiredSize%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="1a581-412">Это гарантирует, что <xref:System.Windows.UIElement.DesiredSize%2A> содержит допустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-413">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-414">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-415">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.DragEnter> событию, присоединяются к <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-416">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-417">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="1a581-418">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-418">Routing strategy</span></span>|<span data-ttu-id="1a581-419">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-419">Bubbling</span></span>|  
|<span data-ttu-id="1a581-420">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-421">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="1a581-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="1a581-422">Переопределение <xref:System.Windows.UIElement.OnDragEnter%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-423">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-424">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-425">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-426">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-427">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-428">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-429">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-430">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-431">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.DragLeave> событию, присоединяются к <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-432">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-433">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="1a581-434">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-434">Routing strategy</span></span>|<span data-ttu-id="1a581-435">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-435">Bubbling</span></span>|  
|<span data-ttu-id="1a581-436">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-437">Соответствующее событие туннелирования — <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="1a581-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="1a581-438">Переопределение <xref:System.Windows.UIElement.OnDragLeave%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-439">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-440">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-441">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-442">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-443">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-444">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-445">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели данный элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-446">Это событие происходит, даже если перетаскивание происходит в границах элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="1a581-447">Если перетаскивание начинается за пределы границ и затем перемещается внутрь, это событие также вызывается, <xref:System.Windows.UIElement.DragEnter> а также связанные события предварительного просмотра.</span><span class="sxs-lookup"><span data-stu-id="1a581-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="1a581-448">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-449">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.DragOver> событию, присоединяются к <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-450">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-451">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="1a581-452">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-452">Routing strategy</span></span>|<span data-ttu-id="1a581-453">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-453">Bubbling</span></span>|  
|<span data-ttu-id="1a581-454">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-455">Соответствующее событие туннелирования — <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="1a581-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="1a581-456">Переопределение <xref:System.Windows.UIElement.OnDragOver%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-457">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-458">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-459">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-460">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-461">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-462">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-463">Происходит, когда система ввода сообщает о базовом событии удаления с этим элементом в качестве цели удаления.</span><span class="sxs-lookup"><span data-stu-id="1a581-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-464">Это событие создает псевдоним для <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-465">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.Drop> событию, присоединяются к <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-466">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-467">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="1a581-468">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-468">Routing strategy</span></span>|<span data-ttu-id="1a581-469">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-469">Bubbling</span></span>|  
|<span data-ttu-id="1a581-470">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-471">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="1a581-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="1a581-472">Переопределение <xref:System.Windows.UIElement.OnDrop%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-473">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.Drop" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-474">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-475">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-476">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-477">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-478">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.UIElement.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-479">Получает или задает эффект растрового изображения, который применяется к объекту <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="1a581-480">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-480">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-481">Объект <see cref="T:System.Windows.Media.Effects.Effect" />, представляющий эффект растрового изображения.</span><span class="sxs-lookup"><span data-stu-id="1a581-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-482">Используйте свойство, чтобы применить растровый эффекты <xref:System.Windows.UIElement>к. <xref:System.Windows.UIElement.Effect%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-483">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-484">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="1a581-485">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-486">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-487">В следующем коде XAML показано, как назначить пользовательское <xref:System.Windows.Media.Effects.ShaderEffect> <xref:System.Windows.UIElement.Effect%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1a581-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.EffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-488">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.Effect" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-489">Попытка задать фокус для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-489">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="1a581-490">Значение <see langword="true" />, если для данного элемента задан клавиатурный фокус и логический фокус; значение <see langword="false" />, если для данного элемента задан только логический фокус или если вызов данного метода не привел к изменению фокуса.</span><span class="sxs-lookup"><span data-stu-id="1a581-490"><see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-491">Чтобы быть в фокусе <xref:System.Windows.UIElement.Focusable%2A> , <xref:System.Windows.UIElement.IsEnabled%2A> и оба должны `true`иметь значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="1a581-492">Даже если элемент находится в фокусе и является допустимым `Focus` , события предварительного просмотра могут обрабатываться в определенном дереве, и фокус на этот элемент может быть запрещен (например, в составном элементе управления).</span><span class="sxs-lookup"><span data-stu-id="1a581-492">Even if the element is focusable and valid, the `Focus` preview events may be processed in a specific tree, and focus on that element may not be allowed (for example, in a composite control).</span></span>
<span data-ttu-id="1a581-493">В этом случае этот метод возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="1a581-493">In such a case, this method returns `false`.</span></span>
 
 <span data-ttu-id="1a581-494">Как правило, управление фокусом осуществляется двумя разными концепциями: фокус клавиатуры и логический фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-494">In general, focus is controlled by two different concepts: keyboard focus and logical focus.</span></span> <span data-ttu-id="1a581-495">Эти две концепции не всегда одинаковы.</span><span class="sxs-lookup"><span data-stu-id="1a581-495">These two concepts are not always the same.</span></span> <span data-ttu-id="1a581-496">Дополнительные сведения см. в разделе [Сводка фокуса](~/docs/framework/wpf/advanced/focus-overview.md) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-496">For more information, see [Focus summary](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>
 
 <span data-ttu-id="1a581-497">Если вызов <xref:System.Windows.UIElement.Focus%2A> возвращает `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> тотакже`true`являются. <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-497">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="1a581-498">`true`Если связанные свойства еще не заданы, при вызове <xref:System.Windows.UIElement.Focus%2A>возникает одно или несколько из следующих событий в следующем порядке: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (источник — это новый целевой объект фокуса), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus> (источник—этоновыйцелевой<xref:System.Windows.UIElement.GotKeyboardFocus> объект фокуса).</span><span class="sxs-lookup"><span data-stu-id="1a581-498">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="1a581-499">Чтобы этот вызов был успешным, другой элемент в приложении должен был получить фокус ранее.</span><span class="sxs-lookup"><span data-stu-id="1a581-499">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-500">В следующем примере фокус устанавливается на объект <xref:System.Windows.Controls.TextBox> <xref:System.Windows.FrameworkElement.Name%2A>, на который ссылается, а затем настраивается расположение курсора в <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1a581-500">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-501">Получение или установка значения, определяющего возможность получения фокуса элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-501">Gets or sets a value that indicates whether the element can receive focus.</span></span>  <span data-ttu-id="1a581-502">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-502">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-503">Значение <see langword="true" />, если данный элемент может иметь фокус; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-503"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="1a581-504">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-504">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-505">Ввод с клавиатуры получает только элемент с фокусом ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-505">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="1a581-506"><xref:System.Windows.UIElement.Focusable%2A>— Это метод доступа к свойствудлятого,чтовдействительностиявляетсясвойствомзависимостей.[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]</span><span class="sxs-lookup"><span data-stu-id="1a581-506"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="1a581-507">Это конкретное свойство зависимости довольно часто имеет свое видимое значение по умолчанию по-разному в производных классах элементов, особенно в элементах управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-507">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="1a581-508">Обычно это происходит одним из двух способов:</span><span class="sxs-lookup"><span data-stu-id="1a581-508">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="1a581-509">Свойство зависимостей наследуется определенным производным классом, но этот производный класс переопределяет метаданные свойства зависимостей и изменяет значение свойства по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-509">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="1a581-510">Стиль или шаблон применяется к элементу, который устанавливает значение свойства зависимостей по-разному.</span><span class="sxs-lookup"><span data-stu-id="1a581-510">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="1a581-511">Например, очевидным «по умолчанию» <xref:System.Windows.UIElement.Focusable%2A> <xref:System.Windows.Controls.Button> для элемента управления <xref:System.Windows.Controls.Button> будет `true`, несмотря на то, <xref:System.Windows.UIElement.Focusable%2A> что наследуется как [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] свойство <xref:System.Windows.UIElement>непосредственно из.</span><span class="sxs-lookup"><span data-stu-id="1a581-511">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="1a581-512">Это связано с тем, что применяемое значение <xref:System.Windows.UIElement.Focusable%2A> метаданных для свойства зависимостей было переопределено в статическом конструкторе <xref:System.Windows.Controls.Control> базового класса, который располагается <xref:System.Windows.Controls.Button> между <xref:System.Windows.UIElement> и в иерархии классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-512">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="1a581-513">Если наследуется от <xref:System.Windows.Controls.Control> или его производными классами, <xref:System.Windows.Controls.Control> переопределяет значение этого свойства по умолчанию на `true`.</span><span class="sxs-lookup"><span data-stu-id="1a581-513">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="1a581-514">При наследовании <xref:System.Windows.Controls.Label> методом (который <xref:System.Windows.Controls.Control> является производным классом) значение по умолчанию снова определяется `false`как.</span><span class="sxs-lookup"><span data-stu-id="1a581-514">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-515">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-515">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-516">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-516">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="1a581-517">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-517">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-518">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-518">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-519">В следующем примере кода показан шаблон элемента управления для определенного пользовательского элемента управления, который задается <xref:System.Windows.UIElement.Focusable%2A> `false` в одном из элементов шаблона.</span><span class="sxs-lookup"><span data-stu-id="1a581-519">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-520">При наследовании от <see cref="T:System.Windows.UIElement" /> напрямую (в отличие от <see cref="T:System.Windows.Controls.Control" />) следует подумать, должен ли элемент быть в фокусе, так как по умолчанию элемент не будет получать фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-520">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span></span> <span data-ttu-id="1a581-521">Если вы хотите, чтобы элемент был в фокусе, переопределите метаданные для этого свойства в статическом конструкторе типа следующим образом:</span><span class="sxs-lookup"><span data-stu-id="1a581-521">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span></span> 
<span data-ttu-id="1a581-522">[! код-CSharp[корепсеудокоде # уиелементшортоверриде](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! code-VB[корепсеудокоде # уиелементшортоверриде](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span><span class="sxs-lookup"><span data-stu-id="1a581-522">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span></span> 
<span data-ttu-id="1a581-523">где <paramref name="myElement" /> должно быть именем класса типа, для которого переопределяется значение метаданных.</span><span class="sxs-lookup"><span data-stu-id="1a581-523">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-524">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-524">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-525">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-525">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-526">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-526">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="uIElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="1a581-527">Проверяемое свойство зависимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-527">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="1a581-528">Возвращает значение базового свойства для указанного свойства данного элемента без учета возможного анимированного значения из запущенной или остановленной анимации.</span><span class="sxs-lookup"><span data-stu-id="1a581-528">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="1a581-529">Значение свойства, как если бы анимации не присоединялись к указанному свойству зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-529">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-530">Если к свойству не присоединены анимации, <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> то возвращаемое значение всегда идентично <xref:System.Windows.DependencyObject.GetValue%2A> возвращаемому значению.</span><span class="sxs-lookup"><span data-stu-id="1a581-530">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="1a581-531">Если присоединенные анимации, то все возможные производные от анимации значения, включая начальные и останавливаемые, не учитываются, а значение свойства определяется на основе всех других возможных входных данных.</span><span class="sxs-lookup"><span data-stu-id="1a581-531">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="1a581-532">Дополнительные сведения см. в разделе [Приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-532">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-533">В следующем примере реализуется обработчик, который сообщает базовое значение анимированного <xref:System.Windows.FrameworkElement.Width%2A> свойства <xref:System.Windows.Controls.Button>в, а также базовое значение преобразования.</span><span class="sxs-lookup"><span data-stu-id="1a581-533">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="abstract member GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry&#xA;override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="uIElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="1a581-534">Доступный размер, предоставляемый элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-534">The available size provided by the element.</span></span></param>
        <summary><span data-ttu-id="1a581-535">Возвращает альтернативную геометрию обрезки, представляющую область, которая будет отсечена, если свойству <see cref="P:System.Windows.UIElement.ClipToBounds" /> было присвоено значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-535">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="1a581-536">Потенциальная геометрия обрезки.</span><span class="sxs-lookup"><span data-stu-id="1a581-536">The potential clipping geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-537">Реализация по умолчанию возвратит допустимое значение, но не использует `layoutSlotSize` параметр в его вычислениях.</span><span class="sxs-lookup"><span data-stu-id="1a581-537">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="1a581-538">Вместо этого используется значение <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-538">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="1a581-539">Этот метод существенно переопределяется непосредственно производным <xref:System.Windows.FrameworkElement> классом, <xref:System.Windows.FrameworkElement> а переопределение обеспечивает более сложное поведение для общих элементов уровня среды WPF.</span><span class="sxs-lookup"><span data-stu-id="1a581-539">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="1a581-540">Дополнительные сведения см. в разделе <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-540">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-541">При переопределении в производном классе возвращает альтернативный родительский элемент [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] при условии отсутствия видимого родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-541">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="1a581-542">Объект, если реализация производного класса сообщает об альтернативном родительском подключении.</span><span class="sxs-lookup"><span data-stu-id="1a581-542">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-543">Виртуальная реализация по умолчанию этого метода `null`возвращает.</span><span class="sxs-lookup"><span data-stu-id="1a581-543">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="1a581-544"><xref:System.Windows.FrameworkElement>предоставляет практическую реализацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-544"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="1a581-545">Альтернативные родительские элементы используются для маршрутизации событий, в случаях, когда элемент создает альтернативную родительскую структуру, чтобы ее события направлялись таким образом, что рассылается из стандартного шаблона маршрутизации визуального дерева к стандартному родителю или вниз в Предварительная версия стратегии маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="1a581-545">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-546">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, в котором участвует данный элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-546">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-547"><xref:System.Windows.UIElement.GiveFeedback> Событие позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы предоставить пользователю визуальную обратную связь во время операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-547">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="1a581-548">Визуальная обратная связь помещает в действие процесс перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-548">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="1a581-549">Это событие создает псевдоним для <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.GiveFeedback> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-549">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-550">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.GiveFeedback> событию, присоединяются к <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-550">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-551">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-551">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-552">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-552">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="1a581-553">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-553">Routing strategy</span></span>|<span data-ttu-id="1a581-554">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-554">Bubbling</span></span>|  
|<span data-ttu-id="1a581-555">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-555">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="1a581-556">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="1a581-556">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="1a581-557">Переопределение <xref:System.Windows.UIElement.OnGiveFeedback%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-557">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-558">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-558">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-559">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-559">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-560">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-560">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-561">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-561">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-562">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-562">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-563">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-563">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-564">Происходит при получении данным элементом логического фокуса.</span><span class="sxs-lookup"><span data-stu-id="1a581-564">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-565">Логический фокус отличается от фокуса клавиатуры, если фокус намеренно принудительно задается с помощью вызова метода, но предыдущий фокус клавиатуры существует в другой области.</span><span class="sxs-lookup"><span data-stu-id="1a581-565">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="1a581-566">В этом сценарии фокус клавиатуры остается там, где он находится, и элемент, <xref:System.Windows.UIElement.Focus%2A> в котором вызывается метод, по-прежнему получает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-566">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="1a581-567">Более точная интерпретация этого события заключается в том, что это событие возникает при <xref:System.Windows.UIElement.IsFocused%2A> `false` изменении значения свойства элемента в маршруте с на `true`.</span><span class="sxs-lookup"><span data-stu-id="1a581-567">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="1a581-568">Так как в этом событии используется восходящая маршрутизация, элемент, получивший фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-568">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-569"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, получивший фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-569">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-570">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-571">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-571">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="1a581-572">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-572">Routing strategy</span></span>|<span data-ttu-id="1a581-573">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-573">Bubbling</span></span>|  
|<span data-ttu-id="1a581-574">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-574">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="1a581-575">Нет соответствующего события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-575">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-576">Переопределение <xref:System.Windows.UIElement.OnGotFocus%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-576">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-577">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-577">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-578">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-578">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-579">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-579">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-580">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-580">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-581">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-581">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-582">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-582">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-583">Происходит при получении данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-583">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-584"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged>аналогичное событие, отслеживающее изменения состояния в свойстве, которое поддерживает состояние фокуса для элемента; Это <xref:System.Windows.UIElement.GotKeyboardFocus> событие возникает во многих случаях.</span><span class="sxs-lookup"><span data-stu-id="1a581-584"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="1a581-585">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-585">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-586"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-586">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="1a581-587">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.GotKeyboardFocus> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-587">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-588">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.GotKeyboardFocus> событию, присоединяются к <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-588">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-589">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-589">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-590">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-590">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="1a581-591">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-591">Routing strategy</span></span>|<span data-ttu-id="1a581-592">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-592">Bubbling</span></span>|  
|<span data-ttu-id="1a581-593">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-593">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="1a581-594">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="1a581-594">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="1a581-595">Переопределение <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-595">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-596">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-596">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-597">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-597">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-598">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-598">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-599">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-599">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-600">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-600">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-601">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-601">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-602">Происходит при захвате мыши данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-602">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-603">Когда элемент захватывает мышь, он получает ввод с клавиатуры, даже если указатель мыши находится за пределами границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-603">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="1a581-604">Мышь обычно захватывается только во время операций перетаскивания и остается захваченной до тех пор, пока не произойдет действие перетаскивания операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-604">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="1a581-605">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-605">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-606"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, имеющий захват мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-606">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="1a581-607">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.GotMouseCapture> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-607">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-608">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.GotMouseCapture> событию, присоединяются к <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-608">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-609">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-609">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-610">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-610">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="1a581-611">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-611">Routing strategy</span></span>|<span data-ttu-id="1a581-612">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-612">Bubbling</span></span>|  
|<span data-ttu-id="1a581-613">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-613">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="1a581-614">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-614">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-615">Переопределение <xref:System.Windows.UIElement.OnGotMouseCapture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-615">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-616">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-616">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-617">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-617">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-618">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-618">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-619">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-619">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-620">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-620">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-621">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-621">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-622">Происходит при захвате пера данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-622">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-623">Когда элемент захватывает перо, он получает входные данные пера, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-623">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="1a581-624">Перо обычно захватывается только во время операций перетаскивания и сохраняет захват до тех пор, пока не произойдет действие Drop операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-624">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="1a581-625">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-625">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-626"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, который содержит запись.</span><span class="sxs-lookup"><span data-stu-id="1a581-626">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="1a581-627">Это событие создает псевдоним для присоединенного события для этого класса, чтобы он <xref:System.Windows.UIElement.GotStylusCapture> был частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-627">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-628">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.GotStylusCapture> событию, присоединяются к <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-628">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-629">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-629">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-630">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-630">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="1a581-631">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-631">Routing strategy</span></span>|<span data-ttu-id="1a581-632">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-632">Bubbling</span></span>|  
|<span data-ttu-id="1a581-633">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-633">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-634">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-634">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-635">Переопределение <xref:System.Windows.UIElement.OnGotStylusCapture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-635">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-636">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-636">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-637">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-637">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-638">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-638">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-639">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-639">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-640">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-640">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-641">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-641">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-642">Происходит при получении данным элементом операции сенсорного ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-642">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-643">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-643">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-644">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-644">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="1a581-645">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-645">Routing strategy</span></span>|<span data-ttu-id="1a581-646">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-646">Bubbling</span></span>|  
|<span data-ttu-id="1a581-647">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-647">Delegate</span></span>|<span data-ttu-id="1a581-648"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-648"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-649">Переопределение <xref:System.Windows.UIElement.OnGotTouchCapture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-649">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-650">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.GotTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-650">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.UIElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-651">Возвращает значение, указывающее, имеет ли данный элемент какие-либо анимированные свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-651">Gets a value indicating whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="1a581-652"><see langword="true" />, если элемент имеет анимированные свойства; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-652"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-653">Это свойство возвращает `true` значение для постоянных (нечасовых, всегда выполняющихся) анимаций или для анимаций, имеющих определенную временную шкалу.</span><span class="sxs-lookup"><span data-stu-id="1a581-653">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-654">Возвращает значение, информирующее о фокусе <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-654">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span></span></summary>
        <value><span data-ttu-id="1a581-655"><see langword="true" />, если у <see cref="T:System.Windows.UIElement" /> есть фокус. В противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-655"><see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-656">Подклассы могут переопределять это свойство, чтобы указать, когда элемент имеет фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-656">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="1a581-657">Это полезно, если <xref:System.Windows.UIElement> элементы Contains, которые могут иметь фокус клавиатуры, и вы хотите, чтобы элемент получил сообщение о том, что он имеет фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-657">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a581-658">Реализует метод <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />, обеспечивая поведение проверки местонахождения пера для базового элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-658">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="1a581-659">Описывает выполняемую проверку нажатия, включая начальную точку нажатия.</span><span class="sxs-lookup"><span data-stu-id="1a581-659">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="1a581-660">Реализует метод <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> для обеспечения поведения проверки нажатия для базового элемента (возвращая <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="1a581-660">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="1a581-661">Результаты теста, включая вычисленную геометрию.</span><span class="sxs-lookup"><span data-stu-id="1a581-661">Results of the test, including the evaluated geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-662">Сведения о переопределении этого <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> метода в последующих производных классах см. в исходном виртуальном методе.</span><span class="sxs-lookup"><span data-stu-id="1a581-662">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="1a581-663">Обратите внимание, что несколько<xref:System.Windows.Controls.TextBlock>конкретных элементов управления (например,) имеют отдельные реализации, которые переопределяют этот.</span><span class="sxs-lookup"><span data-stu-id="1a581-663">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="1a581-664">Этот метод не предназначен для вызова из кода приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-664">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="1a581-665">Этот метод поддерживает внутренние поведения проверки нажатия, предоставляемые различными аспектами входной системы (например, находится ли указатель мыши над элементом).</span><span class="sxs-lookup"><span data-stu-id="1a581-665">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="1a581-666">Описывает выполняемую проверку нажатия, включая начальную точку нажатия.</span><span class="sxs-lookup"><span data-stu-id="1a581-666">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="1a581-667">Реализует метод <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> для обеспечения поведения проверки нажатия для базового элемента (возвращая <see cref="T:System.Windows.Media.HitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="1a581-667">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="1a581-668">Результаты теста, включая вычисленную точку.</span><span class="sxs-lookup"><span data-stu-id="1a581-668">Results of the test, including the evaluated point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-669">Сведения о переопределении этого <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> метода в последующих производных классах см. в исходном виртуальном методе.</span><span class="sxs-lookup"><span data-stu-id="1a581-669">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="1a581-670">Обратите внимание, что несколько<xref:System.Windows.Controls.TextBlock>конкретных элементов управления (например,) имеют отдельные реализации, которые <xref:System.Windows.UIElement.HitTestCore%2A> переопределяют, <xref:System.Windows.UIElement>как определено в.</span><span class="sxs-lookup"><span data-stu-id="1a581-670">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-671">Этот метод не предназначен для вызова из кода приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-671">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="1a581-672">Этот метод поддерживает внутренние поведения проверки нажатия, предоставляемые различными аспектами входной системы (например, находится ли указатель мыши над элементом).</span><span class="sxs-lookup"><span data-stu-id="1a581-672">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-673">Получение коллекции привязок ввода, связанных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-673">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="1a581-674">Коллекция привязок ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-674">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-675">Входные привязки поддерживают привязку команд к входным устройствам.</span><span class="sxs-lookup"><span data-stu-id="1a581-675">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="1a581-676">Например, <xref:System.Windows.Input.MouseBinding> реализует входные привязки, включающие свойства, определенные для устройств мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-676">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="1a581-677">Коллекция входных привязок будет включать входные привязки, относящиеся к типу, а также входные привязки, объявленные в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="1a581-677">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="1a581-678">Связанное свойство, <xref:System.Windows.UIElement.CommandBindings%2A>содержит коллекцию привязок команд.</span><span class="sxs-lookup"><span data-stu-id="1a581-678">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="1a581-679">Они отличаются от входных привязок тем, что они представляют следующий уровень обработки команд — действия, привязанные к известным командам.</span><span class="sxs-lookup"><span data-stu-id="1a581-679">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="1a581-680">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-680">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="1a581-681">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-681">XAML Values</span></span>  
 <span data-ttu-id="1a581-682">*онеормореинпутбиндингс*</span><span class="sxs-lookup"><span data-stu-id="1a581-682">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="1a581-683">Один или несколько <xref:System.Windows.Input.InputBinding> элементов (как правило <xref:System.Windows.Input.KeyBinding> <xref:System.Windows.Input.MouseBinding> , производные классы).</span><span class="sxs-lookup"><span data-stu-id="1a581-683">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="1a581-684">Предполагается, что <xref:System.Windows.Input.InputBinding.Command%2A> для каждого из них задан <xref:System.Windows.Input.InputBinding.Gesture%2A> атрибут и.</span><span class="sxs-lookup"><span data-stu-id="1a581-684">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-685">В следующем примере показано заполнение этого свойства на <xref:System.Windows.Window>с помощью одного. <xref:System.Windows.Input.KeyBinding></span><span class="sxs-lookup"><span data-stu-id="1a581-685">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="1a581-686">Дополнительные сведения о [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксисе коллекций см. в разделе [подробное описание синтаксиса XAML](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-686">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="uIElement.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="1a581-687">Координаты смещения в пределах данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-687">The offset coordinates within this element.</span></span></param>
        <summary><span data-ttu-id="1a581-688">Возвращает элемент ввода, расположенный внутри текущего элемента по указанным координатам относительно начала координат текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-688">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span></span></summary>
        <returns><span data-ttu-id="1a581-689">Дочерний элемент, расположенный в заданной позиции.</span><span class="sxs-lookup"><span data-stu-id="1a581-689">The element child that is located at the given position.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-690"><xref:System.Windows.IInputElement>возвращается в качестве типа возвращаемого значения, так как этот тип является общим интерфейсом <xref:System.Windows.UIElement> для <xref:System.Windows.ContentElement>и.</span><span class="sxs-lookup"><span data-stu-id="1a581-690"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="1a581-691">Затем можно привести тип возвращаемого значения к типу или использовать экземпляр интерфейса для определенных членов, определенных <xref:System.Windows.IInputElement> интерфейсом.</span><span class="sxs-lookup"><span data-stu-id="1a581-691">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="1a581-692">Обычно этот метод не вызывается из кода приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-692">This method typically is not called from your application code.</span></span> <span data-ttu-id="1a581-693">Вызов этого метода подходит только в том случае, если вы планируете повторно реализовать значительный объем уже имеющихся входных функций нижнего уровня, например повторное создание логики устройства мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-693">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="1a581-694"><xref:System.Windows.IContentHost>Contracts <xref:System.Windows.IContentHost.InputHitTest%2A> метод с той же сигнатурой, какие элементы реализуются явным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-694"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberSignature Language="F#" Value="member this.InvalidateArrange : unit -&gt; unit" Usage="uIElement.InvalidateArrange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-695">Делает недействительным состояние компоновки (структуру) элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-695">Invalidates the arrange state (layout) for the element.</span></span> <span data-ttu-id="1a581-696">После того как структура элемента станет недействительной, она будет обновлена, что произойдет асинхронно, если только не будет сделано принудительно с помощью метода <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-696">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-697">Частое обращение <xref:System.Windows.UIElement.InvalidateArrange%2A> к или в частности <xref:System.Windows.UIElement.UpdateLayout%2A> приводит к существенным последствиям для производительности.</span><span class="sxs-lookup"><span data-stu-id="1a581-697">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="1a581-698">Поэтому следует избегать вызова этого метода, если только не требуется абсолютное состояние макета для последующих вызовов [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] в коде.</span><span class="sxs-lookup"><span data-stu-id="1a581-698">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="1a581-699">Если вы <xref:System.Windows.UIElement.InvalidateArrange%2A> <xref:System.Windows.Freezable> создаете <xref:System.Windows.FrameworkElement> для свойства зависимости, которое не находится в производном классе или классе, который по-прежнему влияет на проход компоновки при изменении, можно вызвать расширенный сценарий. <xref:System.Windows.PropertyChangedCallback></span><span class="sxs-lookup"><span data-stu-id="1a581-699">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasure : unit -&gt; unit" Usage="uIElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-700">Делает недействительным состояние измерения (структуру) элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-700">Invalidates the measurement state (layout) for the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-701">Вызов этого метода также вызывается <xref:System.Windows.UIElement.InvalidateArrange%2A> внутренним образом, нет необходимости вызывать <xref:System.Windows.UIElement.InvalidateMeasure%2A> и <xref:System.Windows.UIElement.InvalidateArrange%2A> в случае успеха.</span><span class="sxs-lookup"><span data-stu-id="1a581-701">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="1a581-702">После недействительности элемент будет обновлен макет, что будет происходить асинхронно, если только <xref:System.Windows.UIElement.UpdateLayout%2A> не вызывается для принудительного изменения макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-702">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="1a581-703">Система макета уровня платформы WPF выполняет собственную обработку изменений в визуальном дереве элемента и в большинстве распространенных случаев недействительности макета система макета вызывает эквивалент этого метода при необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-703">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="1a581-704">Этот метод следует вызывать только при создании полной реализации макета, которая выполняет прямую манипуляцию с деревом элементов или похожими расширенными сценариями.</span><span class="sxs-lookup"><span data-stu-id="1a581-704">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="1a581-705">Один из таких сложных сценариев состоит в том, что <xref:System.Windows.PropertyChangedCallback> при создании для свойства зависимости, которое не находится <xref:System.Windows.Freezable> в <xref:System.Windows.FrameworkElement> производном классе или класса, который по-прежнему влияет на проход меры в макете при изменении.</span><span class="sxs-lookup"><span data-stu-id="1a581-705">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="1a581-706">Частое обращение <xref:System.Windows.UIElement.InvalidateMeasure%2A> к или в частности <xref:System.Windows.UIElement.UpdateLayout%2A> приводит к существенным последствиям для производительности.</span><span class="sxs-lookup"><span data-stu-id="1a581-706">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="1a581-707">Поэтому следует избегать вызова этого метода, если только не требуется абсолютное состояние макета для последующих вызовов [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] в коде.</span><span class="sxs-lookup"><span data-stu-id="1a581-707">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberSignature Language="F#" Value="member this.InvalidateVisual : unit -&gt; unit" Usage="uIElement.InvalidateVisual " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-708">Делает недействительной отрисовку элемента и принудительно вызывает новый полный этап разметки.</span><span class="sxs-lookup"><span data-stu-id="1a581-708">Invalidates the rendering of the element, and forces a complete new layout pass.</span></span> <span data-ttu-id="1a581-709"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> вызывается после завершения цикла разметки.</span><span class="sxs-lookup"><span data-stu-id="1a581-709"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-710">Этот метод вызывается <xref:System.Windows.UIElement.InvalidateArrange%2A> внутренним образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-710">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="1a581-711">Этот метод обычно не вызывается из кода приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-711">This method is not generally called from your application code.</span></span> <span data-ttu-id="1a581-712">Система макета уровня платформы WPF выполняет собственную обработку изменений в визуальном дереве элемента и вызовет эквивалент этого метода, если он уже необходим.</span><span class="sxs-lookup"><span data-stu-id="1a581-712">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="1a581-713">Вызов этого метода необходим только для расширенных сценариев.</span><span class="sxs-lookup"><span data-stu-id="1a581-713">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="1a581-714">Один из таких сложных сценариев состоит в том, что <xref:System.Windows.PropertyChangedCallback> при создании для свойства зависимости, которое не находится <xref:System.Windows.Freezable> в <xref:System.Windows.FrameworkElement> производном классе или класса, который по-прежнему влияет на макет при его изменении.</span><span class="sxs-lookup"><span data-stu-id="1a581-714">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArrangeValid : bool" Usage="System.Windows.UIElement.IsArrangeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-715">Возвращает значение, указывающее, являются ли действительными вычисленные размер и позиция дочерних элементов в структуре данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-715">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span></span></summary>
        <value><span data-ttu-id="1a581-716"><see langword="true" />, если размер и позиция структуры действительны; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-716"><see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-717">Принудительное упорядочение можно сделать недействительным, вызвав <xref:System.Windows.UIElement.InvalidateArrange%2A> для этого элемента (или его родителей).</span><span class="sxs-lookup"><span data-stu-id="1a581-717">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="1a581-718">Это помечает макет для повторной композиции в тот момент, когда определяется системой макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-718">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="1a581-719">Кроме того, немедленный <xref:System.Windows.UIElement.UpdateLayout%2A> вызов может быть выполнен, но это следует делать только в том случае, если известно, что дальнейшие недействительности недействительны (большое количество необязательных принудительных обновлений имеет последствия для производительности).</span><span class="sxs-lookup"><span data-stu-id="1a581-719">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="1a581-720"><xref:System.Windows.UIElement.IsArrangeValid%2A>не может `true` быть <xref:System.Windows.UIElement.IsMeasureValid%2A> , если `true` не является также (в процессе макета, компоновка не может быть допустимой без предварительного измерения).</span><span class="sxs-lookup"><span data-stu-id="1a581-720"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-721">Получает или задает значение, указывающее, включен ли этот элемент в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a581-721">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="1a581-722">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-722">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-723">Значение <see langword="true" />, если элемент включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-723"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-724">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-724">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-725">Обратите внимание, что на это свойство влияют реализации <xref:System.Windows.UIElement.IsEnabledCore%2A> отдельных элементов, зависящие от класса, часто во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="1a581-725">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="1a581-726">Таким образом, значение по умолчанию, указанное здесь, иногда не действует.</span><span class="sxs-lookup"><span data-stu-id="1a581-726">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="1a581-727">Например, <xref:System.Windows.Controls.Primitives.ScrollBar> <xref:System.Windows.UIElement.IsEnabled%2A> при определениитого,чтонетребуетсяподдерживатьполосупрокрутки.`false`</span><span class="sxs-lookup"><span data-stu-id="1a581-727">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="1a581-728">Попытка установить это значение также может быть переопределена значением, <xref:System.Windows.UIElement.IsEnabledCore%2A>возвращаемым.</span><span class="sxs-lookup"><span data-stu-id="1a581-728">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="1a581-729">Элементы, которые не включены, не участвуют в проверке нажатия или фокусе и поэтому не будут источниками событий ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-729">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-730">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-730">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-731">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-731">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="1a581-732">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-732">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-733">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-733">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-734">В следующем примере показан обработчик для одной кнопки, которая при выполнении будет установлена <xref:System.Windows.UIElement.IsEnabled%2A> `false` на другой именованной `b1`кнопке.</span><span class="sxs-lookup"><span data-stu-id="1a581-734">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-735">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsEnabled" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-735">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-736">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-736">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-737">Возвращает значение, которое становится возвращаемым значением свойства <see cref="P:System.Windows.UIElement.IsEnabled" /> в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-737">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="1a581-738">Значение <see langword="true" />, если элемент включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-738"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-739">Реализация этого свойства по умолчанию кэширует значение, а также вычисляет, включен ли родительский элемент этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-739">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="1a581-740">(Если родитель не включен, дочерний элемент нельзя эффективно включить в практике [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Если вы решили переопределить эту реализацию, убедитесь, что вы вызываете базовую реализацию, чтобы сохранить это поведение.</span><span class="sxs-lookup"><span data-stu-id="1a581-740">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>  
  
<span data-ttu-id="1a581-741"><see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> Класс предоставляет существующую реализацию переопределения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-741">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span></span> <span data-ttu-id="1a581-742">Это переопределение определяет, превышает ли содержимое области представления содержимого доступную область.</span><span class="sxs-lookup"><span data-stu-id="1a581-742">This override determines whether the content inside the content presentation area exceeds the available area.</span></span> <span data-ttu-id="1a581-743">Если содержимое выходит за пределы области, часть полосы прокрутки включена.</span><span class="sxs-lookup"><span data-stu-id="1a581-743">If the content does exceed the area, the scrollbar portion is enabled.</span></span> <span data-ttu-id="1a581-744">В противном случае полоса прокрутки не включена.</span><span class="sxs-lookup"><span data-stu-id="1a581-744">Otherwise, the scrollbar is not enabled.</span></span></para></block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-745">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-745">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-746">Получает значение, определяющее, имеет ли элемент логический фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-746">Gets a value that determines whether this element has logical focus.</span></span>  <span data-ttu-id="1a581-747">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-747">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-748">Значение <see langword="true" />, если элемент имеет логический фокус; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-748"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-749">Логический фокус может отличаться от фокуса клавиатуры, если приложение имеет несколько разделений фокуса, например, между содержимым меню и оставшейся частью приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-749">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="1a581-750">В этом сценарии фокус клавиатуры может находиться только на одном элементе пользовательского интерфейса приложения, однако определенные элементы в других фокусах могут по-прежнему сохранить логический фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-750">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="1a581-751">Дополнительные сведения о логическом фокусе см. в разделе [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-751">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="1a581-752">Вы не устанавливаете фокус, настроив это свойство (оно доступно только для чтения).</span><span class="sxs-lookup"><span data-stu-id="1a581-752">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="1a581-753">Обычно это свойство используется в качестве свойства зависимостей для <xref:System.Windows.Setter> или. <xref:System.Windows.EventTrigger></span><span class="sxs-lookup"><span data-stu-id="1a581-753">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="1a581-754">Чтобы установить фокус программно, <xref:System.Windows.UIElement.Focus%2A>вызовите.</span><span class="sxs-lookup"><span data-stu-id="1a581-754">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="1a581-755">Фокус также можно задать с помощью действий пользователя или реализаций элементов управления, которые могут включать режим захвата мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-755">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-756">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-756">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-757">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-757">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="1a581-758">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-758">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-759">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-759">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-760">В следующем примере показан обработчик кода, который изменяет фон элемента управления, когда он имеет особое значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-760">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="1a581-761">Другим распространенным способом добиться такого же результата является размещение <xref:System.Windows.Trigger> <xref:System.Windows.Style> в элементе управления. Этот подход не требует обработки конкретных событий с помощью кода программной части и позволяет проектировщикам получить доступ к интерактивной и графической природе Объект [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a581-761">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="1a581-762">Пример см. в статье [Практическое руководство. Создайте эффект](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1)внешнего свечения.</span><span class="sxs-lookup"><span data-stu-id="1a581-762">For an example, see [How to: Create an Outer Glow Effect](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-763">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsFocused" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-763">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-764">Получение или установка значения, определяющего возможность возврата этого элемента в качестве результата проверки нажатия в какой-либо части его отображаемого содержимого.</span><span class="sxs-lookup"><span data-stu-id="1a581-764">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span> <span data-ttu-id="1a581-765">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-765">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-766">Значение <see langword="true" />, если этот элемент может возвращаться в результате проверки нажатия из по меньшей мере одной точки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-766"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-767">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-767">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-768">На эффективное значение этого свойства влияют относительные позиции элементов, проверяемых на попадание в логическом дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-768">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="1a581-769">Например, если элемент является дочерним элементом элемента, который не является видимым для проверки попадания, то эффективное значение свойства в дочернем элементе останется `false`, даже если попытка задать это значение локально.</span><span class="sxs-lookup"><span data-stu-id="1a581-769">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="1a581-770">По этой причине важно, чтобы не было задано значение <xref:System.Windows.UIElement.IsHitTestVisible%2A> для составного элемента управления, если не требуется, чтобы `false` какие-либо входные данные или проверка нажатия для этого элемента управления не предприняты.</span><span class="sxs-lookup"><span data-stu-id="1a581-770">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="1a581-771">Дополнительные сведения о проверке нажатия см. в разделе [Проверка нажатия на визуальном уровне](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-771">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-772">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-772">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-773">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-773">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="1a581-774">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-774">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-775">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-775">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-776">Происходит при изменении значения свойства зависимостей <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-776">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-777">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-777">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-778">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsHitTestVisible" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-778">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-779">Возвращает значение, указывающее, включена ли обработка входящих данных в этот элемент в системе метода ввода, например [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a581-779">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="1a581-780">Значение <see langword="true" />, если метод ввода активен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-780"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-781">Значение по умолчанию базового прикрепленного свойства — <see langword="true;" />, однако на него повлияет фактическое состояние методов ввода в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="1a581-781">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-782">Это свойство возвращает значение, возвращаемое присоединенным свойством <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> для текущих включенных методов ввода (клавиатура, речь и другие устройства ввода).</span><span class="sxs-lookup"><span data-stu-id="1a581-782">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-783">Получает значение, указывающее, имеет ли данный элемент фокус ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-783">Gets a value indicating whether this element has keyboard focus.</span></span>  <span data-ttu-id="1a581-784">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-784">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-785">Значение <see langword="true" />, если элемент имеет фокус клавиатуры; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-785"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-786">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-786">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-787">Изменения в определенном значении этого свойства могут сопровождаться событиями, связанными с фокусом.</span><span class="sxs-lookup"><span data-stu-id="1a581-787">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="1a581-788"><xref:System.Windows.UIElement.IsKeyboardFocused%2A>и <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> обычно используются в обработчиках событий класса для других событий, связанных с входом, например для определения того, имеет ли элемент фокус клавиатуры, или для определения того, когда возникают события мыши и клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-788"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-789">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-789">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-790">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-790">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="1a581-791">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-791">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-792">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-792">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-793">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-793">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-794">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-794">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-795">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-795">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-796">Получает значение, указывающее, находится ли фокус клавиатуры где-либо в элементе или в его дочерних элементах визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="1a581-796">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span>  <span data-ttu-id="1a581-797">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-797">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-798">Значение <see langword="true" />, если фокус клавиатуры находится в элементе или в его дочерних элементах; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-798"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-799">Изменения значения этого свойства обычно вызывают <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> событие, если производный класс не был переопределен <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> для подавления события.</span><span class="sxs-lookup"><span data-stu-id="1a581-799">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="1a581-800">Это свойство не задается напрямую, но можно установить фокус на элемент, вызвав <xref:System.Windows.UIElement.Focus%2A>или <xref:System.Windows.UIElement.MoveFocus%2A> выполнив запрос.</span><span class="sxs-lookup"><span data-stu-id="1a581-800">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="1a581-801">Любой из этих вызовов метода может изменить это значение свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-801">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="1a581-802"><xref:System.Windows.UIElement.IsKeyboardFocused%2A>и <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> обычно используются в обработчиках событий класса для других событий, связанных с входом, например для определения того, имеет ли элемент фокус клавиатуры, или для определения того, когда возникают события мыши и клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-802"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-803">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-803">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-804">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-804">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="1a581-805">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-805">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-806">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-806">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-807">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-807">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-808">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-808">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-809">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-809">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsManipulationEnabled : bool with get, set" Usage="System.Windows.UIElement.IsManipulationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-810">Получает или задает значение, которое определяет, включены ли события манипулирования для данного элемента <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-810">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="1a581-811">Значение <see langword="true" />, если для данного элемента <see cref="T:System.Windows.UIElement" /> включены события манипулирования; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-811"><see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-812">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-812">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-813">Присвойте этому свойству значение true, если <xref:System.Windows.UIElement> требуется, чтобы <xref:System.Windows.UIElement.ManipulationStarting>объект <xref:System.Windows.UIElement.ManipulationStarted>получал <xref:System.Windows.UIElement.ManipulationDelta>события <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>,, <xref:System.Windows.UIElement.ManipulationCompleted> , и.</span><span class="sxs-lookup"><span data-stu-id="1a581-813">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="1a581-814">Дополнительные сведения об операциях см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-814">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1a581-815">Пример приложения, реагирующего на манипуляции, см. в разделе [пошаговое руководство. Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-815">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-816">В следующем примере создается приложение с красным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="1a581-816">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="1a581-817">Свойству прямоугольника присваивается значение true, а окно приложения подписывается <xref:System.Windows.UIElement.ManipulationStarting>на события, <xref:System.Windows.UIElement.ManipulationDelta>и <xref:System.Windows.UIElement.ManipulationInertiaStarting>. <xref:System.Windows.UIElement.IsManipulationEnabled%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-817">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="1a581-818">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-818">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsManipulationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-819">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsManipulationEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-819">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMeasureValid : bool" Usage="System.Windows.UIElement.IsMeasureValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-820">Возвращает значение, указывающее, действителен ли текущий размер, возвращенный измерением структуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-820">Gets a value indicating whether the current size returned by layout measure is valid.</span></span></summary>
        <value><span data-ttu-id="1a581-821"><see langword="true" />, если проход измерения структуры вернул действительное и текущее значение; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-821"><see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-822">Можно принудительно задать недействительность измерения и упорядочения, вызвав <xref:System.Windows.UIElement.InvalidateMeasure%2A> для этого элемента (или любого родительского элемента в визуальном дереве).</span><span class="sxs-lookup"><span data-stu-id="1a581-822">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="1a581-823">Это указывает макет для асинхронной рекомпозиции, происходящий в момент времени, определяемый системой макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-823">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="1a581-824">Кроме того, можно выполнить немедленный вызов <xref:System.Windows.UIElement.UpdateLayout%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-824">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="1a581-825">Тем не менее, следует вызывать <xref:System.Windows.UIElement.UpdateLayout%2A> только в том случае, если возможно, что дальнейшие недействительности недействительны (большое количество необязательных принудительных обновлений будет иметь последствия для производительности).</span><span class="sxs-lookup"><span data-stu-id="1a581-825">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="1a581-826">Если <xref:System.Windows.UIElement.IsMeasureValid%2A> параметр `false`имеет <xref:System.Windows.UIElement.IsArrangeValid%2A> значение, то `false` также должен быть (принудительно примененной логикой процесса макета, размещение не может быть допустимым без предварительного измерения).</span><span class="sxs-lookup"><span data-stu-id="1a581-826">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-827">Получает или задает значение, указывающее, была ли мышь захвачена элементом управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-827">Gets a value indicating whether the mouse is captured to this element.</span></span>  <span data-ttu-id="1a581-828">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-828">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-829">Значение <see langword="true" />, если элемент имеет захват мыши; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-829"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-830">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-830">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-831">Состояние захвата мыши связано с выполняемыми в процессе операциями перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-831">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-832">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-832">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-833">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-833">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="1a581-834">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-834">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-835">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-835">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-836">В следующем примере состояние захвата мыши включается или отключается в зависимости от того, захвачена ли мышь для элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-836">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="1a581-837">Если захват мыши находится в других местах, захват мыши задается для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-837">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="1a581-838">Если элемент получил захват мыши, он удаляется путем вызова <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> со входом со значением NULL.</span><span class="sxs-lookup"><span data-stu-id="1a581-838">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-839">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-839">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-840">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-840">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-841">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsMouseCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-841">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-842">Возвращает значение, определяющее, удерживается ли захват мыши данным элементом или дочерними элементами его визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="1a581-842">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span> <span data-ttu-id="1a581-843">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-843">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-844">Значение <see langword="true" />, если элемент или содержащийся в нем элемент получил захват мыши; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-844"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-845">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-845">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-846">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-846">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="1a581-847">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-847">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-848">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-848">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-849">Происходит при изменении значения поля <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-849">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-850">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-850">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-851">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-851">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-852">Возвращает значение, указывающее, соответствует ли позиция указателя мыши результатам проверки нажатия, при которой учитывается компоновка элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-852">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="1a581-853">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-853">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-854">Значение <see langword="true" />, если указатель мыши находится над тем же элементом, что и результат проверки нажатия; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-854"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-855">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-855">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-856">В отличие <xref:System.Windows.UIElement.IsMouseOver%2A>от этого свойство используется только `true` в том случае, если указатель мыши находится над элементом литерала, как для проверки попадания.</span><span class="sxs-lookup"><span data-stu-id="1a581-856">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="1a581-857">Если указатель мыши находится вместо дочернего элемента, в частности над элементами, которые являются частью более глубокого шаблона элемента и компоновки, это свойство будет иметь `false`значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-857">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="1a581-858">Если вы не знакомы с составным элементом управления (например, это свойство можно использовать в пользовательском шаблоне элемента управления для определяемого элемента управления), это свойство может возвращать непредвиденные результаты.</span><span class="sxs-lookup"><span data-stu-id="1a581-858">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="1a581-859">В большинстве сценариев, где вы не создаете элементы управления <xref:System.Windows.UIElement.IsMouseOver%2A> , используйте вместо него.</span><span class="sxs-lookup"><span data-stu-id="1a581-859">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="1a581-860">Если мышь захвачена этим элементом, и это свойство находится `true` на момент записи, это свойство будет продолжать возвращаться `true` до тех пор, пока захват мыши не будет потерян и указатель не поверх его границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-860">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-861">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-861">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-862">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-862">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="1a581-863">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-863">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-864">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-864">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-865">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-865">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-866">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-866">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-867">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-867">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-868">Получает значение, указывающее, находится ли указатель мыши над данным элементом (включая дочерние элементы в визуальном дереве).</span><span class="sxs-lookup"><span data-stu-id="1a581-868">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span>  <span data-ttu-id="1a581-869">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-869">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-870">Значение <see langword="true" />, если указатель мыши находится над элементом или его дочерними элементами; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-870"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-871">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-871">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-872">Как правило, элементы управления являются составными, так что различные элементы внутри элемента управления (визуальное дерево) будут сообщать о состоянии мыши для содержащего его элемента управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-872">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="1a581-873">Например, <xref:System.Windows.Controls.ListBox> элемент управления "стиль" будет <xref:System.Windows.UIElement.IsMouseOver%2A> сообщать, как `true` если бы мышь находилась в любом <xref:System.Windows.Controls.ListBoxItem>месте над его геометрической фигурой, включая любые.</span><span class="sxs-lookup"><span data-stu-id="1a581-873">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="1a581-874">Хотя аналогичное событие «Исмаусеоверчанжед» не существует, выполняется несколько аналогичных событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-874">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="1a581-875">Например, можно выполнять обработку <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>и <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="1a581-875">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="1a581-876">Если этот элемент захватывает мышь, это свойство сохраняется `true` до тех пор, пока захват мыши не будет потерян и указатель мыши покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-876">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="1a581-877">Некоторые элементы управления намеренно захватывают мышь над определенными действиями, которые не связаны непосредственно с мышью.</span><span class="sxs-lookup"><span data-stu-id="1a581-877">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="1a581-878">Это может привести к <xref:System.Windows.UIElement.IsMouseOver%2A> тому `true` , что мышь не перемещалась.</span><span class="sxs-lookup"><span data-stu-id="1a581-878">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-879">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-879">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-880">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-880">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="1a581-881">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-881">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-882">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-882">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-883">Следующий пример ссылается на это свойство как на тип <xref:System.Windows.Trigger>свойства, часть \<Style. triggers > блоке.</span><span class="sxs-lookup"><span data-stu-id="1a581-883">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="1a581-884">Если указатель мыши находится над элементом управления, то текст элемента управления становится синим, а курсор — рукой.</span><span class="sxs-lookup"><span data-stu-id="1a581-884">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-885">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsMouseOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-885">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-886">Получает значение, указывающее, захвачено ли перо эти элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-886">Gets a value indicating whether the stylus is captured by this element.</span></span>  <span data-ttu-id="1a581-887">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-887">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-888">Значение <see langword="true" />, если элемент имеет захват пера; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-888"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-889">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-889">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-890">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-890">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-891">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-891">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-892">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-892">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-893">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-893">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="1a581-894">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-894">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-895">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-895">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-896">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-896">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-897">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-897">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-898">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsStylusCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-898">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-899">Возвращает значение, определяющее, удерживается ли захват пера данным элементом или элементом в пределах его границ и визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="1a581-899">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span> <span data-ttu-id="1a581-900">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-900">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-901">Значение <see langword="true" />, если этот элемент или содержащийся в нем элемент произвел захват пера; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-901"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-902">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-902">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-903">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-903">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-904">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-904">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-905">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-905">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-906">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-906">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="1a581-907">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-907">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-908">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-908">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-909">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-909">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-910">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Это событие, а не перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-910">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-911">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-911">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-912">Возвращает значение, указывающее, соответствует ли позиция пера результатам проверки нажатия, при которой учитывается компоновка элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-912">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="1a581-913">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-913">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-914">Значение <see langword="true" />, если указатель пера находится над тем же элементом, что и результат проверки нажатия; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-914"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-915">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-915">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-916">В отличие <xref:System.Windows.UIElement.IsStylusOver%2A>от, это свойство используется `true` только в том случае, если перо находится над элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-916">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="1a581-917">Если перо вместо дочернего элемента или над элементами, которые являются частью более глубокой компоновки элемента (визуальное дерево), это свойство будет иметь `false`значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-917">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="1a581-918">Если вы не знакомы с составным элементом управления (например, это свойство можно использовать в пользовательском шаблоне элемента управления для определяемого элемента управления), это свойство может возвращать непредвиденные результаты.</span><span class="sxs-lookup"><span data-stu-id="1a581-918">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="1a581-919">В большинстве сценариев, где вы не создаете элементы управления <xref:System.Windows.UIElement.IsStylusOver%2A> , используйте вместо него.</span><span class="sxs-lookup"><span data-stu-id="1a581-919">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="1a581-920">Если этот элемент имеет захват пера и это свойство находится `true` на момент записи, это свойство остается `true` до тех пор, пока перо не будет потеряно, а перо не поверх его границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-920">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="1a581-921">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-921">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-922">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-922">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-923">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-923">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-924">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-924">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="1a581-925">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-925">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-926">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-926">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-927">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-927">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-928">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-928">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-929">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-929">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-930">Возвращает значение, указывающее, наведен ли курсор пера на этот элемент (включая визуальные дочерние элементы).</span><span class="sxs-lookup"><span data-stu-id="1a581-930">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span>  <span data-ttu-id="1a581-931">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-931">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-932">Значение <see langword="true" />, если курсор пера наведен на элемент или его дочерние элементы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-932"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-933">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-933">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-934">Если этот элемент имеет захват пера, это свойство будет продолжать возвращаться `true` до тех пор, пока захват пера не будет потерян и указатель не покинет его границы.</span><span class="sxs-lookup"><span data-stu-id="1a581-934">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="1a581-935">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-935">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-936">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-936">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-937">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-937">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-938">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-938">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="1a581-939">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-939">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-940">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-940">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-941">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsStylusOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-941">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-942">Получает значение, указывающее, видим ли данный элемент в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a581-942">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="1a581-943">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-943">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-944">Значение <see langword="true" />, если элемент видим; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-944"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-945">При определении значения учитываются все коэффициенты макета. <xref:System.Windows.UIElement.IsVisible%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-945">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="1a581-946">Напротив <xref:System.Windows.UIElement.Visibility%2A>,, которое является устанавливаемым свойством, указывает намерение сделать элемент видимым или невидимым только в программном коде.</span><span class="sxs-lookup"><span data-stu-id="1a581-946">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="1a581-947">Элементы, <xref:System.Windows.UIElement.IsVisible%2A> где `false` не участвуют в событиях ввода (или командах), не влияют ни на меру, ни на последовательность проходов разметки, не могут быть в последовательности табуляции и не будут выводиться при проверке нажатия.</span><span class="sxs-lookup"><span data-stu-id="1a581-947">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="1a581-948">В отличие от этого, <xref:System.Windows.UIElement.IsEnabled%2A> элементы `false` , где, по-прежнему будут участвовать в событиях и командах, и проверку нажатия, но также не могут сосредоточиться.</span><span class="sxs-lookup"><span data-stu-id="1a581-948">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-949">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-949">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-950">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-950">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="1a581-951">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-951">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-952">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-952">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-953">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement.IsVisible" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-953">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-954">Это событие не возникает, если элемент не подготавливается к просмотру системой макета по причинам, отличным от значения <xref:System.Windows.UIElement.IsVisible%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-954">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="1a581-955">Например, элемент может не иметь связанного визуального элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-955">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="1a581-956">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-956">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-957">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.IsVisible" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-957">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-958">Возникает при нажатии клавиши, если фокус установлен на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-958">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-959">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="1a581-959">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="1a581-960"><xref:System.Windows.UIElement.KeyDown> Событие является событием текстового ввода нижнего уровня, которое может работать не так, как ожидалось в некоторых элементах управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-960">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="1a581-961">Это связано с тем, что некоторые элементы управления имеют компоновку элементов управления или обработку класса, которая предоставляет версию обработки текстового ввода и связанные события более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="1a581-961">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="1a581-962">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.KeyDown> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-962">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-963">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.KeyDown> событию, присоединяются к <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-963">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-964">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-964">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-965">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-965">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="1a581-966">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-966">Routing strategy</span></span>|<span data-ttu-id="1a581-967">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-967">Bubbling</span></span>|  
|<span data-ttu-id="1a581-968">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-968">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="1a581-969">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-969">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="1a581-970">Переопределение <xref:System.Windows.UIElement.OnKeyDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-970">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-971">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-971">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-972">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-972">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-973">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-973">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-974">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-974">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-975">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-975">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-976">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-976">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-977">Происходит при отпускании клавиши, если фокус находится на этом элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-977">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-978">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> присоединенного события для этого класса, чтобы он был частью списка членов класса, <xref:System.Windows.UIElement.KeyUp> если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-978">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-979">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.KeyUp> событию, присоединяются к <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-979">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-980">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-980">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-981">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-981">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="1a581-982">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-982">Routing strategy</span></span>|<span data-ttu-id="1a581-983">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-983">Bubbling</span></span>|  
|<span data-ttu-id="1a581-984">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-984">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="1a581-985">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-985">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="1a581-986">Переопределение <xref:System.Windows.UIElement.OnKeyUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-986">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-987">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-987">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-988">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-988">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-989">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-989">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-990">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-990">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-991">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-991">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-992">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-992">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberSignature Language="F#" Value="member this.LayoutUpdated : EventHandler " Usage="member this.LayoutUpdated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-993">Происходит при изменении структуры различных визуальных элементов, связанных с текущим <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-993">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-994">Обновление макета может произойти в результате изменения свойства, изменения размера окна или явного запроса пользователя.</span><span class="sxs-lookup"><span data-stu-id="1a581-994">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="1a581-995">Этот элемент является [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] событием, а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-995">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-996">Происходит при потере данным элементом логического фокуса.</span><span class="sxs-lookup"><span data-stu-id="1a581-996">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-997">Логический фокус отличается от фокуса ввода, если фокус был намеренно вытеснен посредством вызова метода, но на другом уровне существует предыдущий фокус ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-997">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="1a581-998">В этом сценарии фокус клавиатуры остается там, где он находится, а элемент, в <xref:System.Windows.UIElement.Focus%2A> котором вызывается метод, по-прежнему получает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-998">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="1a581-999">Более точная интерпретация этого события заключается в том, что оно возникает, когда значение <xref:System.Windows.UIElement.IsFocused%2A> свойства элемента в маршруте изменяется с `true` на `false`.</span><span class="sxs-lookup"><span data-stu-id="1a581-999">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="1a581-1000">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-1000">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-1001"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, получивший фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-1001">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1002">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1002">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1003">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1003">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="1a581-1004">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1004">Routing strategy</span></span>|<span data-ttu-id="1a581-1005">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1005">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1006">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1006">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="1a581-1007">Нет соответствующего события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-1007">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-1008">Переопределение <xref:System.Windows.UIElement.OnLostFocus%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1008">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1009">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1009">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1010">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1010">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1011">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1011">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1012">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1012">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1013">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1013">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1014">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1014">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1015">Происходит при потере данным элементом фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-1015">Occurs when the keyboard is no longer focused on this element,.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1016">Так как в этом событии используется восходящая маршрутизация, элемент, который потерял фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-1016">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-1017"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-1017">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="1a581-1018">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.LostKeyboardFocus> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1018">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1019">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.LostKeyboardFocus> событию, присоединяются к <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1019">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1020">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1020">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1021">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1021">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="1a581-1022">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1022">Routing strategy</span></span>|<span data-ttu-id="1a581-1023">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1023">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1024">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1024">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="1a581-1025">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1025">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="1a581-1026">Переопределение <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1026">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1027">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1027">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1028">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1028">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1029">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1029">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1030">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1030">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1031">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1031">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1032">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1032">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1033">Происходит при потере элементом захвата мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1033">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1034">Когда элемент захватывает мышь, он получает ввод с клавиатуры, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-1034">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="1a581-1035">Мышь обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-1035">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="1a581-1036">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-1036">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-1037"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, который потерял захват.</span><span class="sxs-lookup"><span data-stu-id="1a581-1037">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="1a581-1038">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.LostMouseCapture> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1038">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1039">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.LostMouseCapture> событию, присоединяются к <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1039">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1040">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1040">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1041">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1041">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="1a581-1042">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1042">Routing strategy</span></span>|<span data-ttu-id="1a581-1043">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1043">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1044">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1044">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="1a581-1045">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-1045">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-1046">Переопределение <xref:System.Windows.UIElement.OnLostMouseCapture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1046">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1047">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1047">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1048">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1048">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1049">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1049">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1050">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1050">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1051">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1051">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1052">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1052">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1053">Происходит при потере элементом захвата пера.</span><span class="sxs-lookup"><span data-stu-id="1a581-1053">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1054">Когда элемент захватывает перо, он получает входные данные пера, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="1a581-1054">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="1a581-1055">Перо обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-1055">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="1a581-1056">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-1056">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-1057"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-1057">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="1a581-1058">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.LostStylusCapture> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1058">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1059">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.LostStylusCapture> событию, присоединяются к <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1059">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1060">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1060">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1061">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1061">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="1a581-1062">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1062">Routing strategy</span></span>|<span data-ttu-id="1a581-1063">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1063">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1064">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1064">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-1065">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-1065">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-1066">Переопределение <xref:System.Windows.UIElement.OnLostStylusCapture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1066">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1067">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1067">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1068">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1068">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1069">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1069">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1070">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1070">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1071">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1071">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1072">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1072">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1073">Происходит, когда элемент теряет касание.</span><span class="sxs-lookup"><span data-stu-id="1a581-1073">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1074">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1074">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1075">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1075">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="1a581-1076">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1076">Routing strategy</span></span>|<span data-ttu-id="1a581-1077">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1077">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1078">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1078">Delegate</span></span>|<span data-ttu-id="1a581-1079"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1079"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-1080">Переопределение <xref:System.Windows.UIElement.OnLostTouchCapture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1080">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1081">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.LostTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1081">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberSignature Language="F#" Value="member this.ManipulationBoundaryFeedback : EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " Usage="member this.ManipulationBoundaryFeedback : System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1082">Происходит, когда манипуляция сталкивается с границей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1082">Occurs when the manipulation encounters a boundary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1083">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1084">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1084">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="1a581-1085">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1085">Routing strategy</span></span>|<span data-ttu-id="1a581-1086">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1086">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1087">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1087">Delegate</span></span>|<span data-ttu-id="1a581-1088"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1088"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationBoundaryFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1089">Идентифицирует событие <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1089">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationCompleted : EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " Usage="member this.ManipulationCompleted : System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1090">Происходит, когда манипуляция над объектом <see cref="T:System.Windows.UIElement" /> и инерция завершены.</span><span class="sxs-lookup"><span data-stu-id="1a581-1090">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1091">Это событие можно использовать для получения сведений об манипуляции по завершении.</span><span class="sxs-lookup"><span data-stu-id="1a581-1091">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="1a581-1092">Например, <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> свойство можно использовать для определения общего объема изменяемой должности.</span><span class="sxs-lookup"><span data-stu-id="1a581-1092">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="1a581-1093">Дополнительные сведения об операциях см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-1093">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1a581-1094">Пример приложения, реагирующего на манипуляции, см. в разделе [пошаговое руководство. Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1094">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1095">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1095">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1096">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1096">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="1a581-1097">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1097">Routing strategy</span></span>|<span data-ttu-id="1a581-1098">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1098">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1099">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1099">Delegate</span></span>|<span data-ttu-id="1a581-1100"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1100"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationCompletedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1101">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1101">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberSignature Language="F#" Value="member this.ManipulationDelta : EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " Usage="member this.ManipulationDelta : System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1102">Происходит, когда устройство ввода меняет положение в процессе манипуляции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1102">Occurs when the input device changes position during a manipulation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1103"><xref:System.Windows.UIElement.ManipulationDelta> Событие возникает несколько раз, когда пользователь перетаскивает пальци по экрану во время манипуляции и снова при инерции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1103">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="1a581-1104"><xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> Свойство можно использовать для проверки того, происходит ли событие во время инерции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1104">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="1a581-1105">При возникновении события <xref:System.Windows.UIElement.ManipulationDelta> элемент в с событием не затрагивается каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1105">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="1a581-1106">Необходимо предоставить логику для элемента, который будет обрабатываться.</span><span class="sxs-lookup"><span data-stu-id="1a581-1106">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="1a581-1107">Свойства <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> <xref:System.Windows.Input.ManipulationDelta>и <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> , имеющие тип, содержат данные об изменении порядка манипуляций и их интерпретации как перемещение, изменение размера или вращение объекта.</span><span class="sxs-lookup"><span data-stu-id="1a581-1107">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="1a581-1108">Эти сведения применяются к элементу, который будет обрабатываться.</span><span class="sxs-lookup"><span data-stu-id="1a581-1108">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="1a581-1109">Дополнительные сведения об операциях см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-1109">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1a581-1110">Пример приложения, реагирующего на манипуляции, см. в разделе [пошаговое руководство. Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1110">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1111">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1111">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1112">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1112">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="1a581-1113">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1113">Routing strategy</span></span>|<span data-ttu-id="1a581-1114">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1114">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1115">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1115">Delegate</span></span>|<span data-ttu-id="1a581-1116"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1116"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-1117">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationDelta> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1117">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="1a581-1118">В примере <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> свойство используется для перемещения, изменения размера и <xref:System.Windows.Shapes.Rectangle>поворота.</span><span class="sxs-lookup"><span data-stu-id="1a581-1118">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="1a581-1119">В примере также проверяется, <xref:System.Windows.UIElement.ManipulationDelta> произошло ли событие во время инерции, а также находится ли прямоугольник в границах окна.</span><span class="sxs-lookup"><span data-stu-id="1a581-1119">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="1a581-1120">Если эти случаи истинны, приложение останавливает манипуляцию, чтобы прямоугольник не отображал видимую область приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-1120">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="1a581-1121">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1121">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationDeltaEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1122">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1122">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationInertiaStarting : EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " Usage="member this.ManipulationInertiaStarting : System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1123">Происходит, когда устройство ввода теряет контакт с объектом <see cref="T:System.Windows.UIElement" /> в процессе манипуляции и начинается инерция.</span><span class="sxs-lookup"><span data-stu-id="1a581-1123">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1124">Это <xref:System.Windows.UIElement.ManipulationInertiaStarting> событие возникает, когда пользователь убирает все пальцы с экрана во время манипуляции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1124">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="1a581-1125">Например, если пользователь "выдает" <xref:System.Windows.UIElement> через поверхность, он будет <xref:System.Windows.UIElement> затрагивать, чтобы начать действие, перемещать палец по экрану на короткое расстояние <xref:System.Windows.UIElement>, а затем выпустить.</span><span class="sxs-lookup"><span data-stu-id="1a581-1125">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="1a581-1126">Когда пользователь отпускает элемент, начинается инерция и <xref:System.Windows.UIElement.ManipulationInertiaStarting> происходит событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1126">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="1a581-1127">Объект <xref:System.Windows.UIElement> продолжит принимать <xref:System.Windows.UIElement.ManipulationDelta> события, чтобы указать, что инерция выполняется над элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1127">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="1a581-1128">Это событие можно использовать для указания поведения инерции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1128">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="1a581-1129">Например, можно задать начальную скорость, используемую при начале инерции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1129">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="1a581-1130">Можно также указать объем инерции, задав нужное значение замедления или задав нужное размещение.</span><span class="sxs-lookup"><span data-stu-id="1a581-1130">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="1a581-1131">Эти значения можно задать для каждого типа манипуляции (преобразование, расширение или вращение) независимо друг от друга.</span><span class="sxs-lookup"><span data-stu-id="1a581-1131">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="1a581-1132">Для получения дополнительной информации см. <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1132">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="1a581-1133">Дополнительные сведения об операциях см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-1133">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1a581-1134">Пример приложения, реагирующего на манипуляции, см. в разделе [пошаговое руководство. Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1134">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1135">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1136">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1136">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="1a581-1137">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1137">Routing strategy</span></span>|<span data-ttu-id="1a581-1138">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1138">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1139">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1139">Delegate</span></span>|<span data-ttu-id="1a581-1140"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1140"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-1141">В следующем примере показан <xref:System.Windows.UIElement.ManipulationInertiaStarting> обработчик событий и задается нужное замедление для перевода, расширения и поворота, используемого во время инерции.</span><span class="sxs-lookup"><span data-stu-id="1a581-1141">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="1a581-1142">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1142">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationInertiaStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1143">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1143">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarted : EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " Usage="member this.ManipulationStarted : System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1144">Происходит, когда устройство ввода начинает совершать манипуляцию над объектом <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1144">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1145">Это <xref:System.Windows.UIElement.ManipulationStarted> событие возникает <xref:System.Windows.UIElement.ManipulationStarting> после события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1145">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="1a581-1146">Можно выполнить следующие <xref:System.Windows.Input.ManipulationStartedEventArgs>действия с помощью:</span><span class="sxs-lookup"><span data-stu-id="1a581-1146">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="1a581-1147">Получите элемент, относительно которого задается расположение манипуляции, с помощью <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-1147">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="1a581-1148">Получение источника манипуляции с помощью <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-1148">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="1a581-1149">Отмените манипуляцию, вызвав <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1a581-1149">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="1a581-1150">Дополнительные сведения об операциях см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-1150">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1a581-1151">Пример приложения, реагирующего на манипуляции, см. в разделе [пошаговое руководство. Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1151">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1152">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1152">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1153">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1153">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="1a581-1154">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1154">Routing strategy</span></span>|<span data-ttu-id="1a581-1155">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1155">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1156">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1156">Delegate</span></span>|<span data-ttu-id="1a581-1157"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1157"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1158">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.ManipulationStarted" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1158">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarting : EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " Usage="member this.ManipulationStarting : System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1159">Происходит при первоначальном создании процессора манипулирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-1159">Occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1160">Это <xref:System.Windows.UIElement.ManipulationStarting> событие возникает для элемента, <xref:System.Windows.UIElement.IsManipulationEnabled%2A> свойство которого имеет значение `true` , когда пользователь наводит на него палец.</span><span class="sxs-lookup"><span data-stu-id="1a581-1160">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="1a581-1161">По умолчанию последующие события манипуляции сообщают о положении манипуляции относительно элемента, <xref:System.Windows.UIElement.IsManipulationEnabled%2A> для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-1161">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="1a581-1162">Можно указать, что расположение должно относиться к другому элементу, задав <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1a581-1162">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="1a581-1163">Например, можно сделать обработку относительно родителя элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1163">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="1a581-1164">В обработчике <xref:System.Windows.UIElement.ManipulationStarting>событий можно также выполнить следующие действия:</span><span class="sxs-lookup"><span data-stu-id="1a581-1164">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="1a581-1165">Укажите, требуется ли пользователю больше одного пальца для выполнения манипуляций, задав <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="1a581-1165">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1a581-1166">Укажите, какие типы манипуляции включены, задав <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> <xref:System.Windows.Input.ManipulationModes> для свойства перечисление.</span><span class="sxs-lookup"><span data-stu-id="1a581-1166">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="1a581-1167">Укажите центр вращения с одним пальцем, задав <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="1a581-1167">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1a581-1168">Отмените манипуляцию, вызвав <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1a581-1168">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1a581-1169">Дополнительные сведения об операциях см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-1169">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1a581-1170">Пример приложения, реагирующего на манипуляции, см. в разделе [пошаговое руководство. Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1170">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1171">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1171">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1172">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1172">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="1a581-1173">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1173">Routing strategy</span></span>|<span data-ttu-id="1a581-1174">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1174">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1175">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1175">Delegate</span></span>|<span data-ttu-id="1a581-1176"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1176"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-1177">В следующем примере показан обработчик событий для <xref:System.Windows.UIElement.ManipulationStarting> события и <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> устанавливается в родительский элемент, который получает события манипуляции, чтобы координаты манипуляции были относительно родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1177">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="1a581-1178">Этот пример является частью более крупного примера в [пошаговом руководстве: Создание первого приложения](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)Touch.</span><span class="sxs-lookup"><span data-stu-id="1a581-1178">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1179">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.ManipulationStarting" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1179">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="member this.Measure : System.Windows.Size -&gt; unit" Usage="uIElement.Measure availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="1a581-1180">Доступное пространство, которое родительский элемент может выделить дочернему элементу.</span><span class="sxs-lookup"><span data-stu-id="1a581-1180">The available space that a parent element can allocate a child element.</span></span> <span data-ttu-id="1a581-1181">Дочерний элемент может запросить больше пространства, чем доступно; указанный размер может быть размещен, если для текущего элемента в модели содержимого возможна прокрутка.</span><span class="sxs-lookup"><span data-stu-id="1a581-1181">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span></span></param>
        <summary><span data-ttu-id="1a581-1182">Обновляет <see cref="P:System.Windows.UIElement.DesiredSize" /> элемента <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1182">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="1a581-1183">Родительские элементы вызывают этот метод из своей собственной реализации <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> для формирования рекурсивного обновление макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-1183">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span></span> <span data-ttu-id="1a581-1184">Вызов этого метода составляет первый проход (проход "Мера") обновления макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-1184">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1185">Вычисление позиционирования макета в [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] состоит <xref:System.Windows.UIElement.Measure%2A> из вызова и <xref:System.Windows.UIElement.Arrange%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="1a581-1185">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="1a581-1186">Во время `availableSize` вызова элемент определяет требования к размеру, используя входные данные. <xref:System.Windows.UIElement.Measure%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-1186">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="1a581-1187">Во время <xref:System.Windows.UIElement.Arrange%2A> вызова размер элемента завершается.</span><span class="sxs-lookup"><span data-stu-id="1a581-1187">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="1a581-1188">`availableSize`может быть любым числом от нуля до бесконечности.</span><span class="sxs-lookup"><span data-stu-id="1a581-1188">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="1a581-1189">Элементы, участвующие в макете, <xref:System.Windows.Size> должны возвращать минимум, `availableSize`необходимый для заданного значения.</span><span class="sxs-lookup"><span data-stu-id="1a581-1189">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="1a581-1190">При первом создании экземпляра макета он всегда получает <xref:System.Windows.UIElement.Measure%2A> <xref:System.Windows.UIElement.Arrange%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1190">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="1a581-1191">Однако после <xref:System.Windows.UIElement.Arrange%2A> первого прохода макета он может получить вызов <xref:System.Windows.UIElement.Measure%2A>без; это может произойти, когда изменяется свойство, влияющее только <xref:System.Windows.UIElement.Arrange%2A> на изменение (например, выравнивание), или когда родительский объект получает исключение <xref:System.Windows.UIElement.Arrange%2A> без <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1191">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="1a581-1192">Вызов автоматически сделает <xref:System.Windows.UIElement.Arrange%2A> вызов недействительным. <xref:System.Windows.UIElement.Measure%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-1192">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="1a581-1193">Обновление макета происходит асинхронно, так что основной поток не ожидает каждого возможного изменения макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-1193">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="1a581-1194">Запрос элемента с помощью проверки значений свойств может не сразу отражать изменения свойств, взаимодействующих с характеристиками размера или компоновки ( <xref:System.Windows.FrameworkElement.Width%2A> например, свойства).</span><span class="sxs-lookup"><span data-stu-id="1a581-1194">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a581-1195">Обновления макета можно принудительно использовать с помощью <xref:System.Windows.UIElement.UpdateLayout%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1195">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="1a581-1196">Однако вызов этого метода обычно не нужен и может привести к снижению производительности.</span><span class="sxs-lookup"><span data-stu-id="1a581-1196">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="1a581-1197">Система макета хранит две отдельные очереди недопустимых макетов: одна <xref:System.Windows.UIElement.Measure%2A> для и одна <xref:System.Windows.UIElement.Arrange%2A>для.</span><span class="sxs-lookup"><span data-stu-id="1a581-1197">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="1a581-1198">Очередь макета сортируется в соответствии с порядком элементов в визуальном дереве элемента, выполняющего компоновку. элементы, расположенные выше в дереве, находятся в верхней части очереди, чтобы избежать избыточных макетов, вызванных повторяющимися изменениями в родительских элементах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1198">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="1a581-1199">Дубликаты записей автоматически удаляются из очереди, а элементы автоматически удаляются из очереди, если они уже проверены макетом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1199">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="1a581-1200">При обновлении макета <xref:System.Windows.UIElement.Measure%2A> сначала очищается очередь, а затем <xref:System.Windows.UIElement.Arrange%2A> очередь.</span><span class="sxs-lookup"><span data-stu-id="1a581-1200">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="1a581-1201">Элемент в <xref:System.Windows.UIElement.Arrange%2A> очереди никогда не будет упорядочен, если <xref:System.Windows.UIElement.Measure%2A> в очереди есть элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1201">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureCore : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="uIElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="1a581-1202">Доступный размер, который может быть выделен родительским элементом для дочернего.</span><span class="sxs-lookup"><span data-stu-id="1a581-1202">The available size that the parent element can allocate for the child.</span></span></param>
        <summary><span data-ttu-id="1a581-1203">При переопределении в производном классе предоставляет логику измерений для правильного определения размеров данного элемента, с учетом размера каждого из содержащихся в нем дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1203">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span></span></summary>
        <returns><span data-ttu-id="1a581-1204">Желательный размер этого элемента в макете.</span><span class="sxs-lookup"><span data-stu-id="1a581-1204">The desired size of this element in layout.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1205">Чаще всего элемент наследуется от <xref:System.Windows.FrameworkElement> , <xref:System.Windows.UIElement>а не от.</span><span class="sxs-lookup"><span data-stu-id="1a581-1205">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="1a581-1206">Если вы наследуете от <xref:System.Windows.FrameworkElement>, обратите внимание, что <xref:System.Windows.UIElement.MeasureCore%2A> переопределение в <xref:System.Windows.UIElement.MeasureCore%2A> <xref:System.Windows.FrameworkElement> запечатывает метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1206">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="1a581-1207">Таким образом, вы переопределяете <xref:System.Windows.UIElement.MeasureCore%2A> как средство для изменения характеристик меры макета, если вы наследуете от <xref:System.Windows.UIElement> через наследование, <xref:System.Windows.FrameworkElement>которое не включает.</span><span class="sxs-lookup"><span data-stu-id="1a581-1207">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="1a581-1208">Это может быть так, если вы пытаетесь создать собственную реализацию на [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] уровне ядра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1208">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="1a581-1209">В противном случае, если выполняется наследование от <xref:System.Windows.FrameworkElement>, шаблон реализации для поведения меры <xref:System.Windows.FrameworkElement> является реализацией.<xref:System.Windows.FrameworkElement.MeasureOverride%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-1209">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="1a581-1210">Родительский элемент с дочерними элементами <xref:System.Windows.UIElement.Measure%2A> должен вызываться для каждого дочернего элемента; в противном случае эти дочерние элементы не имеют размеров или упорядочены и будут фактически исчезнут из макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-1210">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-1211">Типичное переопределение <xref:System.Windows.UIElement.MeasureCore%2A> следует за этим приблизительным шаблоном (отсутствует встроенная коллекция с именем `VisualChildren`; `VisualChildren` заполнитель, представляющий любую дочернюю коллекцию, которую обслуживает элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1211">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="1a581-1212">Необходимо вызвать <xref:System.Windows.UIElement.Measure%2A> для каждого дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1212">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="1a581-1213">Как правило, ваша реализация должна кэшировать данные измерения между <xref:System.Windows.UIElement.MeasureCore%2A> вызовами методов и <xref:System.Windows.UIElement.ArrangeCore%2A> в одном и том же элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-1213">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="1a581-1214">Вызов базовых реализаций <xref:System.Windows.UIElement.MeasureCore%2A> не требуется, но может быть уместным, если базовая реализация предоставляет требуемую возможность макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-1214">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="1a581-1215">Вызовы к <xref:System.Windows.UIElement.Measure%2A> дочерним элементам должны передавать то же `availableSize` значение, что и родительский элемент, или подмножество области, в зависимости от типа макета, поддерживаемого родительским элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1215">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="1a581-1216">Например, можно удалить область для границы или заполнения элемента, полосы прокрутки или пользовательского элемента управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1216">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1217">Реализации должны иметь возможность обрабатывать предоставленное для <paramref name="availableSize" /> него значение бесконечно.</span><span class="sxs-lookup"><span data-stu-id="1a581-1217">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span></span> <span data-ttu-id="1a581-1218">Бесконечное значение указывает на отсутствие запрошенных ограничений и эффективно откладывает выбора измерения на родительский элемент с помощью рекурсивных вызовов меры.</span><span class="sxs-lookup"><span data-stu-id="1a581-1218">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span></span>  
  
<span data-ttu-id="1a581-1219">Реализации могут рассматривать значение, предоставляемое для <paramref name="availableSize" /> , как мягкое ограничение.</span><span class="sxs-lookup"><span data-stu-id="1a581-1219">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span></span> <span data-ttu-id="1a581-1220">Дочерний элемент может указать больший размер, даже если другие аспекты кода приложения смогли определить текущий фактический размер родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1220">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span></span> <span data-ttu-id="1a581-1221">Запрос крупного размера — это соглашение, указывающее, что дочерний элемент запрашивает, может ли родительский элемент поддерживать прокрутку содержимого в пределах области отображения содержимого.</span><span class="sxs-lookup"><span data-stu-id="1a581-1221">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1222">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1222">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1223">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.MouseDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1223">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1224">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.MouseDown> событию, присоединяются к <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1224">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-1225">Событие часто возникает вместе <xref:System.Windows.UIElement.MouseLeftButtonDown> с или <xref:System.Windows.UIElement.MouseRightButtonDown>, что соответствует нажатию одной из двух стандартных кнопок мыши. <xref:System.Windows.UIElement.MouseDown></span><span class="sxs-lookup"><span data-stu-id="1a581-1225">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="1a581-1226"><xref:System.Windows.UIElement.MouseLeftButtonDown>и <xref:System.Windows.UIElement.MouseRightButtonDown> являются также перенаправленными событиями, но они являются прямыми перенаправленными событиями, и <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> при достижении события этим элементом в маршруте события возникает соответствующее событие, связанное с кнопкой.</span><span class="sxs-lookup"><span data-stu-id="1a581-1226"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="1a581-1227">См. раздел <xref:System.Windows.UIElement.MouseLeftButtonDown> примечания <xref:System.Windows.UIElement.MouseRightButtonDown>для или.</span><span class="sxs-lookup"><span data-stu-id="1a581-1227">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a581-1228">Некоторые элементы управления могут иметь встроенную обработку классов для событий кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1228">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="1a581-1229">Событие нажатия левой кнопки мыши является наиболее вероятным событием для обработки класса в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1229">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="1a581-1230">Обработка класса часто помечает событие базового <xref:System.Windows.Input.Mouse> класса как обработанное.</span><span class="sxs-lookup"><span data-stu-id="1a581-1230">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="1a581-1231">После того как событие помечено как обработанное, другие обработчики экземпляров, присоединенные к этому элементу, обычно не вызываются.</span><span class="sxs-lookup"><span data-stu-id="1a581-1231">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="1a581-1232">Другие обработчики классов или экземпляров, присоединенные к элементам в направлении восходящей маршрутизации к корню в дереве пользовательского интерфейса, также не вызываются.</span><span class="sxs-lookup"><span data-stu-id="1a581-1232">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="1a581-1233">Проблему, описанную выше <xref:System.Windows.UIElement.MouseDown> , можно устранить, выполнив события нажатия левой кнопки мыши в производном классе, который обрабатывает классы с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="1a581-1233">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="1a581-1234">Присоединение обработчиков <xref:System.Windows.UIElement.PreviewMouseDown> для события, которое не помечено как обработанное элементами управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1234">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="1a581-1235">Обратите внимание, что поскольку это событие предварительного просмотра, маршрут начинается с корневого каталога и подключается к элементу управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1235">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="1a581-1236">Зарегистрируйте обработчик в элементе управления процедурно, вызвав <xref:System.Windows.UIElement.AddHandler%2A> и выбрав параметр Signature, который позволяет обработчикам прослушивать события, даже если они уже помечены как обработанные в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1236">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1237">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1238">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1238">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="1a581-1239">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1239">Routing strategy</span></span>|<span data-ttu-id="1a581-1240">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1240">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1241">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1241">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-1242">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1242">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="1a581-1243">Переопределение <xref:System.Windows.UIElement.OnMouseDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1243">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1244">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1244">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1245">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1245">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1246">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1246">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1247">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1247">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1248">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1248">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1249">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1249">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1250">Происходит, когда указатель мыши попадает внутрь границ данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1250">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1251"><xref:System.Windows.UIElement.MouseEnter>— Это [перенаправленное событие](~/docs/framework/wpf/advanced/routed-events-overview.md) , использующее стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-1251"><xref:System.Windows.UIElement.MouseEnter> is a [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="1a581-1252">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="1a581-1252">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="1a581-1253">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="1a581-1253">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="1a581-1254">Несмотря <xref:System.Windows.UIElement.MouseEnter> на то, <xref:System.Windows.UIElement.IsMouseOver%2A> что отслеживается, когда указатель мыши входит в границы элемента, это событие более буквально сообщает, что `true` значение свойства изменилось с `false` на в данном элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-1254">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="1a581-1255">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.MouseEnter> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1255">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1256">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.MouseEnter> событию, присоединяются к <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1256">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-1257">(Или любой <xref:System.Windows.Controls.Primitives.ButtonBase> производный класс) <xref:System.Windows.UIElement.KeyDown> имеет собственную обработку события, когда кнопка имеет фокус, а нажатая клавиша — ПРОБЕЛ. <xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="1a581-1257">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="1a581-1258">Собственная обработка создает <xref:System.Windows.Controls.Primitives.ButtonBase.Click> событие с кнопкой в качестве источника, а также захватывает мышь, даже если указатель мыши не перемещается.</span><span class="sxs-lookup"><span data-stu-id="1a581-1258">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="1a581-1259">В результате захвата <xref:System.Windows.UIElement.MouseEnter> мыши событие также инициируется с помощью кнопки в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="1a581-1259">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="1a581-1260">Как правило, если элемент захватывает мышь, то <xref:System.Windows.UIElement.MouseEnter> вызывается, а <xref:System.Windows.UIElement.GotMouseCapture> также и, возможно, другими событиями конкретного элемента управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1260">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1261">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1261">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1262">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1262">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="1a581-1263">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1263">Routing strategy</span></span>|<span data-ttu-id="1a581-1264">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-1264">Direct</span></span>|  
|<span data-ttu-id="1a581-1265">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1265">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="1a581-1266">Переопределение <xref:System.Windows.UIElement.OnMouseEnter%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1266">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1267">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1267">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1268">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1268">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1269">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1269">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1270">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1270">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1271">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1271">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1272">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1272">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1273">Происходит, когда указатель мыши покидает границы данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1273">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1274"><xref:System.Windows.UIElement.MouseLeave>— Это [перенаправленное событие](~/docs/framework/wpf/advanced/routed-events-overview.md) , использующее стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-1274"><xref:System.Windows.UIElement.MouseLeave> is a [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="1a581-1275">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="1a581-1275">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="1a581-1276">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="1a581-1276">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="1a581-1277">Несмотря <xref:System.Windows.UIElement.MouseLeave> на то, <xref:System.Windows.UIElement.IsMouseOver%2A> что отслеживается, когда указатель мыши выходит за пределы элемента, это событие более буквально `true` сообщает `false` , что значение свойства изменилось с на в данном элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-1277">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="1a581-1278">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.MouseLeave> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1278">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1279">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.MouseLeave> событию, присоединяются к <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1279">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1280">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1280">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1281">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1281">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="1a581-1282">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1282">Routing strategy</span></span>|<span data-ttu-id="1a581-1283">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-1283">Direct</span></span>|  
|<span data-ttu-id="1a581-1284">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1284">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="1a581-1285">Переопределение <xref:System.Windows.UIElement.OnMouseLeave%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1285">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1286">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1286">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1287">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1287">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1288">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1288">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1289">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1289">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1290">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1290">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1291">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1291">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1292">Происходит при нажатии левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1292">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1293">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направленному маршруту через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым из них <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1293">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-1294">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1294">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-1295">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1295">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-1296">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1296">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-1297">Если пометить <xref:System.Windows.UIElement.MouseLeftButtonDown> как обработанный, то вы <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-1297">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="1a581-1298">Это может включать события, созданные обработчиком класса, <xref:System.Windows.Controls.Control.MouseDoubleClick>такие как.</span><span class="sxs-lookup"><span data-stu-id="1a581-1298">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="1a581-1299">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-1299">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-1300">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1300">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-1301">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1301">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a581-1302">Некоторые классы элементов управления могут иметь встроенную обработку классов для событий кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1302">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="1a581-1303">Событие нажатия левой кнопки мыши является наиболее вероятным событием для обработки класса в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1303">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="1a581-1304">Обработка класса часто помечает событие базового <xref:System.Windows.Input.Mouse> класса как обработанное.</span><span class="sxs-lookup"><span data-stu-id="1a581-1304">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="1a581-1305">После того как событие помечено как обработанное, другие обработчики экземпляров, присоединенные к этому элементу, обычно не вызываются.</span><span class="sxs-lookup"><span data-stu-id="1a581-1305">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="1a581-1306">Другие обработчики классов или экземпляров, присоединенные к элементам в направлении восходящей маршрутизации к корню в дереве пользовательского интерфейса, также не вызываются.</span><span class="sxs-lookup"><span data-stu-id="1a581-1306">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="1a581-1307">Проблему, описанную выше <xref:System.Windows.UIElement.MouseLeftButtonDown> , можно устранить, выполнив события нажатия левой кнопки мыши в производном классе, который обрабатывает классы с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="1a581-1307">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="1a581-1308">Присоединение обработчиков <xref:System.Windows.UIElement.PreviewMouseDown> для события, которое не помечено как обработанное элементами управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1308">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="1a581-1309">Обратите внимание, что поскольку это событие предварительного просмотра, маршрут начинается с корневого каталога и подключается к элементу управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1309">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="1a581-1310">Зарегистрируйте обработчик в элементе управления процедурно, вызвав <xref:System.Windows.UIElement.AddHandler%2A> и выбрав параметр Signature, который позволяет обработчикам прослушивать события, даже если они уже помечены как обработанные в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1310">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1311">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1312">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1312">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="1a581-1313">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1313">Routing strategy</span></span>|<span data-ttu-id="1a581-1314">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-1314">Direct</span></span>|  
|<span data-ttu-id="1a581-1315">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1315">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-1316">Переопределение <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1316">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1317">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1317">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1318">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1318">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1319">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1319">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1320">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1320">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1321">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1321">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1322">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1322">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1323">Происходит при отпускании левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1323">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1324">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направленному маршруту через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым из них <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1324">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-1325">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1325">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-1326">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1326">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-1327">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1327">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-1328">Если пометить <xref:System.Windows.UIElement.MouseLeftButtonUp> как обработанный, то вы <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-1328">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="1a581-1329">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-1329">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-1330">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1330">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-1331">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1331">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1332">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1332">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1333">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1333">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="1a581-1334">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1334">Routing strategy</span></span>|<span data-ttu-id="1a581-1335">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-1335">Direct</span></span>|  
|<span data-ttu-id="1a581-1336">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1336">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-1337">Переопределение <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1337">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1338">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1338">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1339">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1339">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1340">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1340">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1341">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1341">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1342">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1342">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1343">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1343">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1344">Происходит при перемещении указателя мыши над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1344">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1345">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.MouseMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1345">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1346">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.MouseMove> событию, присоединяются к <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1346">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1347">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1347">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1348">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1348">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="1a581-1349">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1349">Routing strategy</span></span>|<span data-ttu-id="1a581-1350">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1350">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1351">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1351">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="1a581-1352">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1352">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="1a581-1353">Переопределение <xref:System.Windows.UIElement.OnMouseMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1353">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1354">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1354">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1355">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1355">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1356">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1356">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1357">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1357">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1358">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1358">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1359">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1359">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1360">Происходит при нажатии правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1360">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1361">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направленному маршруту через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым из них <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1361">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-1362">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1362">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-1363">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1363">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-1364">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1364">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-1365">Если пометить <xref:System.Windows.UIElement.MouseRightButtonDown> как обработанный, то вы <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-1365">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="1a581-1366">Это может включать события, созданные обработчиком класса, <xref:System.Windows.Controls.Control.MouseDoubleClick>такие как.</span><span class="sxs-lookup"><span data-stu-id="1a581-1366">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="1a581-1367">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-1367">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-1368">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1368">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-1369">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1369">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-1370">События мыши в правой кнопке часто имеют собственную обработку в сценариях приложений.</span><span class="sxs-lookup"><span data-stu-id="1a581-1370">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="1a581-1371">Например, щелчок правой кнопкой мыши может отобразить контекстное меню.</span><span class="sxs-lookup"><span data-stu-id="1a581-1371">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="1a581-1372">См. [Общие сведения о ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-1372">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1373">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1374">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1374">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="1a581-1375">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1375">Routing strategy</span></span>|<span data-ttu-id="1a581-1376">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-1376">Direct</span></span>|  
|<span data-ttu-id="1a581-1377">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1377">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-1378">Переопределение <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1378">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1379">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1379">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1380">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1380">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1381">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1382">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1382">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1383">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1383">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1384">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1384">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1385">Происходит при отпускании правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1385">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1386">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направленному маршруту через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым из них <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1386">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-1387">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1387">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-1388">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1388">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-1389">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1389">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-1390">Если пометить <xref:System.Windows.UIElement.MouseRightButtonUp> как обработанный, то вы <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-1390">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="1a581-1391">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-1391">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-1392">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1392">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-1393">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1393">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1394">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1394">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1395">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1395">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="1a581-1396">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1396">Routing strategy</span></span>|<span data-ttu-id="1a581-1397">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-1397">Direct</span></span>|  
|<span data-ttu-id="1a581-1398">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1398">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-1399">Переопределение <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1399">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1400">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1400">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1401">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1401">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1402">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1402">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1403">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1403">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1404">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1404">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1405">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1405">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1406">Происходит при отпускании любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1406">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1407">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.MouseUp> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1407">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1408">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.MouseUp> событию, присоединяются к <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1408">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-1409">Событие часто создается вместе <xref:System.Windows.UIElement.MouseLeftButtonUp> с или <xref:System.Windows.UIElement.MouseRightButtonUp>, которое соответствует выпуску одной из двух стандартных кнопок мыши. <xref:System.Windows.UIElement.MouseUp></span><span class="sxs-lookup"><span data-stu-id="1a581-1409">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="1a581-1410"><xref:System.Windows.UIElement.MouseLeftButtonUp>и <xref:System.Windows.UIElement.MouseRightButtonUp> являются также перенаправленными событиями, но они являются прямыми перенаправленными событиями, и <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> при достижении события этим элементом в маршруте события возникает соответствующее событие, связанное с кнопкой.</span><span class="sxs-lookup"><span data-stu-id="1a581-1410"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="1a581-1411">См. раздел <xref:System.Windows.UIElement.MouseLeftButtonUp> примечания <xref:System.Windows.UIElement.MouseRightButtonUp>для или.</span><span class="sxs-lookup"><span data-stu-id="1a581-1411">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1412">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1413">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1413">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="1a581-1414">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1414">Routing strategy</span></span>|<span data-ttu-id="1a581-1415">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1415">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1416">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1416">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-1417">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1417">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="1a581-1418">Переопределение <xref:System.Windows.UIElement.OnMouseUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1418">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1419">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1419">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1420">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1421">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1422">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1423">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1424">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1425">Происходит при вращении колесика мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1425">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1426">Фокус или захват мыши имеют приоритет над местом, где находится указатель мыши; Таким образом, если вы получаете <xref:System.Windows.UIElement.MouseWheel> событие из элемента с закрестным или захваченным элементом, указатель мыши на самом деле может находиться над другим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1426">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="1a581-1427">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.MouseWheel> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-1427">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-1428">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.MouseWheel> событию, присоединяются к <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1428">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-1429">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-1429">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-1430">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-1430">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="1a581-1431">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1431">Routing strategy</span></span>|<span data-ttu-id="1a581-1432">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-1432">Bubbling</span></span>|  
|<span data-ttu-id="1a581-1433">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-1433">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="1a581-1434">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1434">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="1a581-1435">Переопределение <xref:System.Windows.UIElement.OnMouseWheel%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-1435">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-1436">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1436">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1437">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1437">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-1438">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1438">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-1439">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1439">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-1440">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1440">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-1441">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1441">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="1a581-1442">Запрос перемещения, содержащий свойство, которое определяет способ перемещения в соответствующем порядке по вкладкам, или направление для визуального перемещения.</span><span class="sxs-lookup"><span data-stu-id="1a581-1442">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="1a581-1443">Предпринимает попытки переместить фокус с данного элемента на иной.</span><span class="sxs-lookup"><span data-stu-id="1a581-1443">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="1a581-1444">Направления для перемещения фокуса задается указанием направления, которое обрабатывается внутри видимого родительского элемента данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1444">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="1a581-1445"><see langword="true" />, если запрос на перемещение выполнен; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1445"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1446">Убедитесь, что проверяется возвращаемое значение этого метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1446">Make sure you check the return value of this method.</span></span> <span data-ttu-id="1a581-1447">Возвращаемое значение `false` может быть возвращено, если обход выполняется в позицию табуляции, определяемую композицией элемента управления, а запрос обхода не запрашивает создание оболочки.</span><span class="sxs-lookup"><span data-stu-id="1a581-1447">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1448">Данные события для события клавиши доступа.</span><span class="sxs-lookup"><span data-stu-id="1a581-1448">The event data to the access key event.</span></span> <span data-ttu-id="1a581-1449">Данные события сообщают о вызываемой клавише и указывают, передал ли объект <see cref="T:System.Windows.Input.AccessKeyManager" />, управляющий передачей данных событий, вызов данной клавиши доступа на другие элементы.</span><span class="sxs-lookup"><span data-stu-id="1a581-1449">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="1a581-1450">Предоставляет обработку класса при вызове клавиши доступа, имеющей значение для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1450">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1451">Отсутствует фактическое событие AccessKey в <xref:System.Windows.UIElement> классе или в других местах, которые можно вызывать или присоединять к обработчику.</span><span class="sxs-lookup"><span data-stu-id="1a581-1451">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="1a581-1452">Вместо этого событие создается с помощью выделенного класса диспетчера, <xref:System.Windows.Input.AccessKeyManager>который выполняет обработку всех входных данных для поиска ключей доступа, применимых ко всей входной модели.</span><span class="sxs-lookup"><span data-stu-id="1a581-1452">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1453">Реализация этого метода по умолчанию в <see cref="T:System.Windows.UIElement" /> устанавливает фокус клавиатуры на этот элемент (путем вызова <see cref="M:System.Windows.UIElement.Focus" />).</span><span class="sxs-lookup"><span data-stu-id="1a581-1453">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span></span> <span data-ttu-id="1a581-1454">Реализации должны постоянно иметь такое поведение, если они могут сосредоточиться, так как это ожидаемое поведение для сценариев специальных возможностей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1454">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="1a581-1455">Обратите внимание, что базовая реализация не выполняет никаких действий с переданными событиями и не создает дальнейших событий. Он просто устанавливает фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-1455">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit&#xA;override this.OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="uIElement.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="1a581-1456">Дочерний элемент, размер которого изменяется.</span><span class="sxs-lookup"><span data-stu-id="1a581-1456">The child element that is being resized.</span></span></param>
        <summary><span data-ttu-id="1a581-1457">Поддерживает поведение структуры при изменении размеров дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1457">Supports layout behavior when a child element is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1458">Этот метод обычно не вызывается кодом приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-1458">This method is typically not called by your application code.</span></span> <span data-ttu-id="1a581-1459">Он предоставляется таким образом, что производные классы элементов могут выполнять дальнейшую проверку своих собственных, возможно недопустимых состояний макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-1459">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="1a581-1460">Классы также могут попытаться оптимизировать, чтобы максимально сокращать время обработки для прохода макета на основе изменения размера дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-1460">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="1a581-1461"><xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> Примером<xref:System.Windows.Controls.Grid> является класс производного элемента, реализующий элемент управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-1461">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1462">Метод имеет реализацию по умолчанию для вызова <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> по самому себе. <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /></span><span class="sxs-lookup"><span data-stu-id="1a581-1462">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span></span> <span data-ttu-id="1a581-1463">Типичная реализация — сделать то, что поддерживает ваш собственный элемент, а затем, как правило, <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> вызывайте Base по крайней мере из одной ветви кода (то есть, которая указывала «грязное» состояние на собственную логику кэширования мер).</span><span class="sxs-lookup"><span data-stu-id="1a581-1463">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span></span>  
  
<span data-ttu-id="1a581-1464">Этот метод вызывается в обработке макета только в том случае, если он был дочерним элементом, который изменил размер.</span><span class="sxs-lookup"><span data-stu-id="1a581-1464">This method is only called in the layout processing if it was the child itself that originated the size changes.</span></span> <span data-ttu-id="1a581-1465">В противном случае, если родительский элемент <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> инициирует проход, в соответствии с правилами системы макета, родитель пересчитывает макет уже.</span><span class="sxs-lookup"><span data-stu-id="1a581-1465">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span></span> <span data-ttu-id="1a581-1466">Система макета обрабатывает макет в порядке дочернего элемента в родительский элемент, поэтому нет необходимости возвращаться к размерам родительских элементов из вызова макета дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1466">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-1467">Возвращает определяющиеся классом <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> реализации для [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-1467">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="1a581-1468">Реализация <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, зависящая от конкретного типа.</span><span class="sxs-lookup"><span data-stu-id="1a581-1468">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1469">Реализация этого метода обычно вызывает конструктор определенной <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> реализации и возвращает его в качестве возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="1a581-1469">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="1a581-1470">Все <see cref="T:System.Windows.UIElement" /> производные классы должны реализовывать этот метод, чтобы предоставить [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] инфраструктуре <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> собственные реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1470">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="1a581-1471">Дополнительные сведения о реализации этого шаблона см. <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />в разделе.</span><span class="sxs-lookup"><span data-stu-id="1a581-1471">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1472">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1472">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1473">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1473">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1474">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1474">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1475">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1475">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1476">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1476">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1477">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1477">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1478">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1478">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1479">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1479">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1480">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1480">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1481">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1481">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1482">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1482">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1483">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1483">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1484">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1484">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1485">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragLeave" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1485">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1486">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1486">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1487">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1487">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1488">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1488">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1489">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1489">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1490">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1490">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1491">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1491">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1492">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1492">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1493">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1493">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1494">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1494">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1495">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1495">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1496">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1496">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1497">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragOver" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1497">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1498">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1498">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1499">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1499">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1500">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1500">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1501">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1501">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1502">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1502">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1503">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1503">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1504">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1504">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1505">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1505">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1506">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1506">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1507">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1507">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1508">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1508">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1509">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.DragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1509">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1510">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1510">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1511">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1511">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1512">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1512">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1513">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1513">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1514">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1514">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1515">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1515">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1516">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1516">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1517">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1517">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1518">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1518">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1519">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1519">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1520">Объект класса <see cref="T:System.Windows.GiveFeedbackEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1520">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1521">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.GiveFeedback" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1521">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1522">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1522">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1523">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1523">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1524">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1524">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1525">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1525">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1526">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1526">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1527">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1527">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1528">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1528">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1529">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1529">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1530">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1530">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1531">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1531">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1532">Объект <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1532">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="1a581-1533">Данные о событии должны содержать идентификатор для события <see cref="E:System.Windows.UIElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1533">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="1a581-1534">Вызывает перенаправленное событие <see cref="E:System.Windows.UIElement.GotFocus" /> с помощью предоставленных данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1534">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1535">Этот метод, хотя Virtual, имеет реализацию по умолчанию, которая вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1535">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="1a581-1536">Эта реализация метода \* предназначена для вызова события, и эта же реализация метода вызывается внутренним образом для вызова события при <xref:System.Windows.UIElement.IsFocused%2A> изменении значения свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-1536">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="1a581-1537">Реализация отличается от некоторых других [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] реализаций \*, которые предоставляют удобный способ добавления обработки класса для этого события. <xref:System.Windows.UIElement.OnGotFocus%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-1537">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1538">Если у вас нет намеренных и необычных необходимости создавать события фокуса, убедитесь, что реализация вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1538">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="1a581-1539">В противном случае событие не возникает во время обычных операций пользователя, которые обычно устанавливают фокус на этот элемент. <see cref="E:System.Windows.UIElement.GotFocus" /></span><span class="sxs-lookup"><span data-stu-id="1a581-1539">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="1a581-1540">Если не нужно, чтобы элемент был доступен для фокусировки, можно запретить фокус, задав для <see cref="P:System.Windows.UIElement.Focusable" /> <see langword="false" />элемента значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-1540">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1541">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1541">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1542">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1542">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1543">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1543">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1544">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1544">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1545">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1545">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1546">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1546">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1547">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1547">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1548">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1548">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1549">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1549">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1550">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1550">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1551">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1551">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1552">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1552">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1553">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1553">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1554">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1554">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1555">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1555">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1556">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1556">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1557">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1557">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1558">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1558">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1559">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1559">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1560">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1560">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1561">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1561">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1562">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1562">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1563">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1563">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1564">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1564">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1565">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1565">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1566">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1566">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1567">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1567">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1568">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1568">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1569">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1569">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1570">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1570">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1571">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1571">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1572">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1572">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1573">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1573">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1574">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1574">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1575">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1575">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1576">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1576">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1577">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1577">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1578">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.GotTouchCapture" />, которое происходит при захвате сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1578">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1579"><xref:System.Windows.UIElement.OnGotTouchCapture%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1579">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1580">Переопределите <xref:System.Windows.UIElement.OnGotTouchCapture%2A> в производном классе на <xref:System.Windows.UIElement.GotTouchCapture> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1580">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="1a581-1581">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnGotTouchCapture%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1581">Be sure to call the base class' <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1582">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1582">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1583">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1583">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1584">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1584">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1585">Этот виртуальный метод вызывается при изменении значения <xref:System.Windows.UIElement.IsKeyboardFocused%2A> свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1585">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="1a581-1586">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1586">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1587"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1587">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1588">Обратите внимание <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> , что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="1a581-1588">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="1a581-1589">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1589">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1590">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1590">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1591">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1591">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1592">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1592">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1593">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1593">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1594">Вызывается непосредственно перед вызовом события <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1594">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="1a581-1595">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1595">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1596">Этот виртуальный метод вызывается при изменении значения <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1596">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="1a581-1597">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1597">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1598"><xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1598">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1599">Обратите внимание <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> , что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="1a581-1599">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="1a581-1600">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1600">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1601">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1601">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1602">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1602">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1603">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1603">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1604">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1604">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1605">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1605">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1606">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1606">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1607">Этот виртуальный метод вызывается при <xref:System.Windows.UIElement.IsMouseCaptured%2A> изменении значения свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1607">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="1a581-1608">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1608">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1609"><xref:System.Windows.UIElement.IsMouseCapturedChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1609">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1610">Обратите внимание <xref:System.Windows.UIElement.IsMouseCapturedChanged> , что это событие не является перенаправленным. Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1610">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1611">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1611">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1612">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1612">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1613">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1613">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1614">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1614">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1615">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1615">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1616">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1616">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1617">Этот виртуальный метод вызывается при <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> изменении значения свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1617">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="1a581-1618">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1618">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1619"><see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1619">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1620">Обратите внимание, что это событие не является перенаправленным. Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1620">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="1a581-1621">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1621">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1622">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1622">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1623">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1623">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1624">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1624">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1625">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1625">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1626">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1626">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1627">Этот виртуальный метод вызывается при <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> изменении значения свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1627">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="1a581-1628">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1628">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1629"><xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1629">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1630">Обратите внимание <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> , что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="1a581-1630">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="1a581-1631">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1631">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1632">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1632">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1633">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1633">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1634">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1634">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1635">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1635">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1636">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1636">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1637">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1637">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1638">Этот виртуальный метод вызывается при <xref:System.Windows.UIElement.IsStylusCaptured%2A> изменении значения свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1638">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="1a581-1639">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1639">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1640"><xref:System.Windows.UIElement.IsStylusCapturedChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1640">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1641">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="1a581-1641">Notice that the event is not a routed event.</span></span> <span data-ttu-id="1a581-1642">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1642">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1643">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1643">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1644">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1644">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1645">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1645">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1646">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1646">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1647">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1647">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1648">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1648">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1649">Этот виртуальный метод вызывается при <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> изменении значения свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1649">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="1a581-1650">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1650">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1651"><xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1651">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1652">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="1a581-1652">Notice that the event is not a routed event.</span></span> <span data-ttu-id="1a581-1653">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1653">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1654">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1654">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1655">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1655">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1656">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1656">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1657">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1657">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1658">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1658">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="1a581-1659">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1659">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1660">Этот виртуальный метод вызывается при <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> изменении значения свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-1660">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="1a581-1661">Виртуальный метод создается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="1a581-1661">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="1a581-1662"><xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> Затем событие вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1662">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="1a581-1663">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="1a581-1663">Notice that the event is not a routed event.</span></span> <span data-ttu-id="1a581-1664">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1664">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="1a581-1665">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1665">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1666">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1666">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1667">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1667">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1668">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1668">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1669">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1669">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1670">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1670">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1671">Нажатия клавиш обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1671">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="1a581-1672">Другие функции программирования, использующие нажатия клавиш, например входные и командные привязки, могут обменяться нажатием клавиши, прежде чем она будет представлена как общее нажатие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1672">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="1a581-1673">Если эти входные функции системы помечают событие как обработанное <xref:System.Windows.UIElement.OnKeyDown%2A> , то не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1a581-1673">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="1a581-1674">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1674">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1675">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1675">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1676">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1676">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1677">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1677">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1678">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1678">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1679">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1679">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1680">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1680">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1681">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1681">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1682">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1682">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1683">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1683">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1684">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1684">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1685">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1685">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1686">Нажатия клавиш обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1686">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="1a581-1687">Другие функции программирования, использующие нажатия клавиш, например входные и командные привязки, могут обменяться нажатием клавиши, прежде чем она будет представлена как общее нажатие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1687">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="1a581-1688">Если эти входные функции системы помечают событие как обработанное <xref:System.Windows.UIElement.OnKeyUp%2A> , то не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1a581-1688">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="1a581-1689">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1689">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1690">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1690">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1691">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1691">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1692">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1692">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1693">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1693">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1694">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1694">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1695">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1695">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1696">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1696">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1697">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1697">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1698">Объект <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1698">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="1a581-1699">Данные о событии должны содержать идентификатор для события <see cref="E:System.Windows.UIElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1699">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="1a581-1700">Вызывает перенаправленное событие <see cref="E:System.Windows.UIElement.LostFocus" /> с помощью предоставленных данных о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1700">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1701">Этот метод, хотя Virtual, имеет реализацию по умолчанию, которая вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1701">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="1a581-1702">Эта реализация метода \* предназначена для вызова события, и эта же реализация метода вызывается внутренним образом для вызова события при <xref:System.Windows.UIElement.IsFocused%2A> изменении значения свойства.</span><span class="sxs-lookup"><span data-stu-id="1a581-1702">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="1a581-1703">Эта реализация отличается от некоторых других [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] реализаций \*, которые предоставляют удобный способ добавления обработки класса для этого события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1703">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-1704">Если у вас нет намеренных и необычных необходимости создавать события фокуса, убедитесь, что реализация вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1704">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="1a581-1705">В противном случае событие не возникает во время обычных операций пользователя, которые обычно устанавливают фокус на этот элемент. <see cref="E:System.Windows.UIElement.LostFocus" /></span><span class="sxs-lookup"><span data-stu-id="1a581-1705">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="1a581-1706">Если не нужно, чтобы элемент был доступен для фокусировки, можно запретить фокус, задав для <see cref="P:System.Windows.UIElement.Focusable" /> <see langword="false" />элемента значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-1706">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1707">Объект <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1707">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1708">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1708">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1709">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1709">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1710">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1710">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1711">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1711">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1712">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1712">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1713">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1713">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1714">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1714">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1715">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1715">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1716">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1716">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1717">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1717">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1718">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1718">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1719">Объект <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1719">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1720">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1720">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1721">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1721">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1722">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1722">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1723">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1723">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1724">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1724">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1725">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1725">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1726">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1726">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1727">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1727">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1728">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1728">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1729">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1729">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1730">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1730">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1731">Объект <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1731">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1732">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1732">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1733">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1733">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1734">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1734">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1735">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1735">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1736">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1736">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1737">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1737">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1738">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1738">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1739">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1739">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1740">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1740">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1741">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1741">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1742">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1742">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1743">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1743">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1744">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.LostTouchCapture" />, которое происходит при потере захвата сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1744">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1745"><xref:System.Windows.UIElement.OnLostTouchCapture%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1745">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1746">Переопределите <xref:System.Windows.UIElement.OnLostTouchCapture%2A> в производном классе на <xref:System.Windows.UIElement.LostTouchCapture> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1746">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="1a581-1747">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnLostTouchCapture%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1747">Be sure to call the base class' <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit&#xA;override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="uIElement.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1748">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1748">The data for the event.</span></span></param>
        <summary><span data-ttu-id="1a581-1749">Вызывается, когда происходит событие <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1749">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1750"><xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1750">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1751">Переопределите <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> в производном классе на <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1751">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="1a581-1752">Не забудьте вызвать <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> метод базового класса, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1752">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit&#xA;override this.OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit" Usage="uIElement.OnManipulationCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1753">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1753">The data for the event.</span></span></param>
        <summary><span data-ttu-id="1a581-1754">Вызывается, когда происходит событие <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1754">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1755"><xref:System.Windows.UIElement.OnManipulationCompleted%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1755">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1756">Переопределите <xref:System.Windows.UIElement.OnManipulationCompleted%2A> в производном классе на <xref:System.Windows.UIElement.ManipulationCompleted> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1756">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="1a581-1757">Не забудьте вызвать <xref:System.Windows.UIElement.OnManipulationCompleted%2A> метод базового класса, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1757">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit&#xA;override this.OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit" Usage="uIElement.OnManipulationDelta e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1758">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1758">The data for the event.</span></span></param>
        <summary><span data-ttu-id="1a581-1759">Вызывается, когда происходит событие <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1759">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1760"><xref:System.Windows.UIElement.OnManipulationDelta%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1760">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1761">Переопределите <xref:System.Windows.UIElement.OnManipulationDelta%2A> в производном классе на <xref:System.Windows.UIElement.ManipulationDelta> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1761">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="1a581-1762">Не забудьте вызвать <xref:System.Windows.UIElement.OnManipulationDelta%2A> метод базового класса, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1762">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit&#xA;override this.OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationInertiaStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1763">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1763">The data for the event.</span></span></param>
        <summary><span data-ttu-id="1a581-1764">Вызывается, когда происходит событие <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1764">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1765"><xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1765">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1766">Переопределите <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> в производном классе на <xref:System.Windows.UIElement.ManipulationInertiaStarting> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1766">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="1a581-1767">Не забудьте вызвать <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> метод базового класса, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1767">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit&#xA;override this.OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1768">Данные для события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1768">The data for the event.</span></span></param>
        <summary><span data-ttu-id="1a581-1769">Вызывается, когда происходит событие <see cref="E:System.Windows.UIElement.ManipulationStarted" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-1769">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1770"><xref:System.Windows.UIElement.OnManipulationStarted%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1770">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1771">Переопределите <xref:System.Windows.UIElement.OnManipulationStarted%2A> в производном классе на <xref:System.Windows.UIElement.ManipulationStarted> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1771">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="1a581-1772">Не забудьте вызвать <xref:System.Windows.UIElement.OnManipulationStarted%2A> метод базового класса, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1772">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit&#xA;override this.OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1773">Объект <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1773">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1774">Обеспечивает обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.ManipulationStarting" />, происходящего при первоначальном создании процессора манипулирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-1774">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1775"><xref:System.Windows.UIElement.OnManipulationStarting%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1775">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-1776">Переопределите <xref:System.Windows.UIElement.OnManipulationStarting%2A> в производном классе на <xref:System.Windows.UIElement.ManipulationStarting> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1776">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="1a581-1777">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnManipulationStarting%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1777">Be sure to call the base class' <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1778">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1778">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-1779">Данные этого события содержат сведения о нажатой кнопке мыши и состоянии обработки.</span><span class="sxs-lookup"><span data-stu-id="1a581-1779">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="1a581-1780">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.MouseDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1780">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1781">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1781">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1782">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1782">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="1a581-1783">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1783">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="1a581-1784">Если эти входные функции системы помечают <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> событие как обработанное, <xref:System.Windows.UIElement.OnMouseDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1a581-1784">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="1a581-1785">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события <xref:System.Windows.UIElement.MouseLeftButtonDown> : <xref:System.Windows.UIElement.MouseRightButtonDown>и.</span><span class="sxs-lookup"><span data-stu-id="1a581-1785">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="1a581-1786">Любое из этих событий может возникнуть в принимающем элементе при <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> получении.</span><span class="sxs-lookup"><span data-stu-id="1a581-1786">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="1a581-1787">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1787">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="1a581-1788">Если событие обрабатывается в обработке класса, обработчики экземпляров для подсобытий не вызываются, если явно не используется <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true` для присоединения обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-1788">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="1a581-1789">Обработчики классов также не вызываются, если эти обработчики классов не зарегистрированы <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> в сигнатуре с `handledEventsToo` `true`помощью.</span><span class="sxs-lookup"><span data-stu-id="1a581-1789">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="1a581-1790">Обрабатывая <xref:System.Windows.UIElement.OnMouseDown%2A>, вы предполагаете, что обработка класса учитывает все возможные действия нажатия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1790">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="1a581-1791">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="1a581-1791">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="1a581-1792">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="1a581-1792">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="1a581-1793">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1793">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1794">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1794">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1795">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1795">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1796">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1796">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1797">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1797">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1798">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1798">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1799">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1799">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1800">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1800">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1801">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1801">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1802">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1802">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1803">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1803">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="1a581-1804">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1804">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1805">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1805">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1806">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1806">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1807">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1807">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="1a581-1808">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1808">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1809">В этом случае сопоставленное событие — это перенаправленное событие с стратегией прямой маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1809">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="1a581-1810">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (которые `handledEventsToo`не указывают).</span><span class="sxs-lookup"><span data-stu-id="1a581-1810">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1811">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1811">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1812">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1812">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="1a581-1813">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1813">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1814">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1814">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1815">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1815">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-1816">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-1816">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="1a581-1817">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1817">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1818">В этом случае сопоставленное событие — это перенаправленное событие с стратегией прямой маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1818">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="1a581-1819">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (которые `handledEventsToo`не указывают).</span><span class="sxs-lookup"><span data-stu-id="1a581-1819">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1820">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1820">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-1821">В данных события сообщается о том, что была нажата левая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1821">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="1a581-1822">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-1822">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="1a581-1823">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1823">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1824"><xref:System.Windows.UIElement.MouseLeftButtonDown> Событие, по сути, перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1824">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-1825"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>является базовым событием, которое пересылается пузырьковым <xref:System.Windows.UIElement> , и каждый в маршруте события использует идентичную обработку для вызова прямого <xref:System.Windows.UIElement.MouseLeftButtonDown>перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1825"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="1a581-1826">Несмотря на то, что <xref:System.Windows.UIElement.MouseLeftButtonDown> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1826">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-1827">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-1827">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-1828">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1828">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-1829">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-1829">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-1830">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1830">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-1831">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1831">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="1a581-1832">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1832">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="1a581-1833">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="1a581-1833">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="1a581-1834">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>ожидает вызова.</span><span class="sxs-lookup"><span data-stu-id="1a581-1834">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="1a581-1835">Например, можно создать производный от <xref:System.Windows.Controls.Button> класса и переопределить <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> в производном классе, не вызывая базовую реализацию <xref:System.Windows.Controls.Primitives.ButtonBase.Click> , однако это переопределение отключает событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1835">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1836">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1836">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-1837">Данные о событии информируют об отжатии левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1837">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="1a581-1838">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1838">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1839">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1839">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1840"><xref:System.Windows.UIElement.MouseLeftButtonUp> Событие, по сути, перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1840">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-1841"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>является базовым событием, которое пересылается пузырьковым <xref:System.Windows.UIElement> , и каждый в маршруте события использует идентичную обработку для вызова прямого <xref:System.Windows.UIElement.MouseLeftButtonUp>перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1841"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="1a581-1842">Несмотря на то, что <xref:System.Windows.UIElement.MouseLeftButtonUp> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1842">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-1843">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-1843">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-1844">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1844">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-1845">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-1845">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-1846">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1846">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-1847">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1847">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1848">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1848">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1849">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1849">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1850">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1850">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1851">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1851">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1852">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1852">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1853">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1853">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1854">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1854">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1855">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1855">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1856">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1856">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1857">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1857">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1858">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1858">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1859">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1859">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1860">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1860">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-1861">Данные о событии информируют о нажатии правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1861">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="1a581-1862">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1862">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1863">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1863">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1864"><xref:System.Windows.UIElement.MouseRightButtonDown> Событие, по сути, перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1864">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-1865"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>является базовым событием, которое пересылается пузырьковым <xref:System.Windows.UIElement> , и каждый в маршруте события использует идентичную обработку для вызова прямого <xref:System.Windows.UIElement.MouseRightButtonDown>перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1865"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="1a581-1866">Несмотря на то, что <xref:System.Windows.UIElement.MouseRightButtonDown> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1866">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-1867">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-1867">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-1868">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1868">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-1869">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-1869">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-1870">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1870">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-1871">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1871">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="1a581-1872">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1872">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="1a581-1873">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="1a581-1873">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="1a581-1874">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>ожидает вызова.</span><span class="sxs-lookup"><span data-stu-id="1a581-1874">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="1a581-1875">Например, можно создать производный от <xref:System.Windows.Controls.Control> класса и переопределить <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> в производном классе, не вызывая Base. Однако это переопределение отключает службы контекстного меню элемента управления, которые являются частью <xref:System.Windows.Controls.Control> поведения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1875">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1876">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1876">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-1877">Данные о событии информируют об отпускании правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1877">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="1a581-1878">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1878">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1879">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1879">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1880"><xref:System.Windows.UIElement.MouseRightButtonUp> Событие, по сути, перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-1880">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-1881"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>является базовым событием, которое пересылается пузырьковым <xref:System.Windows.UIElement> , и каждый в маршруте события использует идентичную обработку для вызова прямого <xref:System.Windows.UIElement.MouseRightButtonUp>перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1881"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="1a581-1882">Несмотря на то, что <xref:System.Windows.UIElement.MouseRightButtonUp> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1882">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-1883">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-1883">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-1884">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1884">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-1885">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-1885">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-1886">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1886">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-1887">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-1887">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1888">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1888">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-1889">Данные о событии информируют об отжатии кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1889">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="1a581-1890">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.Input.Mouse.MouseUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1890">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1891">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1891">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1892">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-1892">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="1a581-1893">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1893">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="1a581-1894">Если эти входные функции системы помечают <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> событие как обработанное, <xref:System.Windows.UIElement.OnMouseUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1a581-1894">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="1a581-1895">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события <xref:System.Windows.UIElement.MouseLeftButtonUp> : <xref:System.Windows.UIElement.MouseRightButtonUp>и.</span><span class="sxs-lookup"><span data-stu-id="1a581-1895">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="1a581-1896">Любое из этих событий может возникнуть в принимающем элементе при <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> получении.</span><span class="sxs-lookup"><span data-stu-id="1a581-1896">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="1a581-1897">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1897">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="1a581-1898">Если событие обрабатывается в обработке класса, обработчики экземпляров для подсобытий не вызываются, если явно не используется <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true` для присоединения обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-1898">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="1a581-1899">Обработчики классов также не вызываются, если эти обработчики классов не зарегистрированы <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> в сигнатуре с `handledEventsToo` `true`помощью.</span><span class="sxs-lookup"><span data-stu-id="1a581-1899">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="1a581-1900">Обрабатывая <xref:System.Windows.UIElement.OnMouseUp%2A>, вы предполагаете, что обработка класса учитывает все возможные действия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-1900">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="1a581-1901">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="1a581-1901">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="1a581-1902">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="1a581-1902">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="1a581-1903">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1903">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1904">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1904">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1905">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1905">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1906">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1906">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1907">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1907">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1908">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1908">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1909">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1909">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1910">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1910">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1911">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1911">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1912">Объект класса <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1912">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1913">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1913">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1914">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1914">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1915">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1915">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1916">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1916">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1917">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1917">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1918">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1918">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1919">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1919">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1920">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1920">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1921">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1921">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1922">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1922">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1923">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1923">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1924">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1924">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1925">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1925">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1926">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1926">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1927">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1927">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1928">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1928">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1929">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1929">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1930">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1930">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1931">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1931">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1932">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1932">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1933">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1933">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1934">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1934">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1935">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1935">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-1936">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-1936">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1937">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1937">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1938">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1938">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1939">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1939">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1940">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1940">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1941">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1941">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1942">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1942">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1943">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1943">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1944">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1944">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1945">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1945">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1946">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1946">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1947">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1947">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1948">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1948">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-1949">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-1949">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1950">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1950">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1951">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1951">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1952">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1952">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1953">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1953">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1954">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1954">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1955">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1955">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1956">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1956">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1957">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1957">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1958">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1958">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1959">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1959">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1960">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1960">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1961">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1961">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-1962">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-1962">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1963">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1963">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1964">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewDrop" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1964">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1965">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1965">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1966">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1966">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1967">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1967">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1968">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1968">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1969">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1969">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1970">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1970">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1971">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1971">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1972">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1972">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1973">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1973">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1974">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1974">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-1975">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-1975">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1976">Объект класса <see cref="T:System.Windows.GiveFeedbackEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1976">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1977">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1977">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1978">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1978">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1979">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1979">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1980">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1980">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1981">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1981">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1982">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1982">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1983">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1983">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1984">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1984">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1985">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1985">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1986">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1986">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-1987">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-1987">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-1988">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-1988">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-1989">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-1989">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-1990">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-1990">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-1991">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1991">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-1992">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-1992">This method has no default implementation.</span></span> <span data-ttu-id="1a581-1993">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-1993">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-1994">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-1994">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-1995">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-1995">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-1996">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-1996">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-1997">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1997">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-1998">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-1998">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-1999">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-1999">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2000">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2000">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2001">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2001">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2002">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2002">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2003">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2003">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2004">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2004">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2005">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2005">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2006">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2006">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2007">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2007">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2008">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2008">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2009">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2009">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2010">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2010">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2011">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2011">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2012">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2012">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2013">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2013">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2014">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2014">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2015">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2015">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2016">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2016">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2017">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2017">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2018">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2018">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2019">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2019">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2020">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2020">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2021">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2021">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2022">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2022">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2023">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2023">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2024">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2024">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2025">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2025">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2026">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2026">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2027">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2027">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2028">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2028">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2029">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2029">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2030">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2030">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2031">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2031">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2032">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2032">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2033">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2033">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2034">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2034">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2035">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2035">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2036">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2036">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2037">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2037">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2038">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2038">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2039">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2039">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2040">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2040">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2041">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2041">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-2042">Данные о событии информируют о нажатии одной или нескольких кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2042">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="1a581-2043">Вызывается, когда необработанное присоединенное перенаправленное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2043">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2044">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2044">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2045">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-2045">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="1a581-2046">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2046">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="1a581-2047">Если эти входные функции системы помечают <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> событие как обработанное, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1a581-2047">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="1a581-2048">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> : <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>и.</span><span class="sxs-lookup"><span data-stu-id="1a581-2048">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="1a581-2049">Любое из этих событий может возникнуть в принимающем элементе при <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> получении.</span><span class="sxs-lookup"><span data-stu-id="1a581-2049">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="1a581-2050">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2050">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="1a581-2051">Если событие обрабатывается в обработке класса, обработчики экземпляров для подсобытий не вызываются, если явно не используется <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true` для присоединения обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-2051">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="1a581-2052">Обработчики классов также не вызываются, если эти обработчики классов не зарегистрированы <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> в сигнатуре с `handledEventsToo` `true`помощью.</span><span class="sxs-lookup"><span data-stu-id="1a581-2052">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="1a581-2053">Обрабатывая <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, вы предполагаете, что обработка класса учитывает все возможные действия нажатия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2053">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="1a581-2054">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="1a581-2054">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="1a581-2055">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="1a581-2055">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="1a581-2056">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2056">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2057">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2057">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2058">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2058">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2059">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2059">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2060">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2060">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2061">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2061">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2062">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2062">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2063">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2063">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2064">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2064">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2065">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2065">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2066">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2066">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-2067">В данных события сообщается о том, что была нажата левая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2067">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="1a581-2068">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2068">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2069">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2069">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2070"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Событие отображается для перемещения маршрута туннелирования, но фактически перемещается косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2070">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-2071"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>является базовым событием, направляемым по туннелю, <xref:System.Windows.UIElement> и каждый в маршруте события использует идентичную обработку для вызова прямого перенаправленного события. <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown></span><span class="sxs-lookup"><span data-stu-id="1a581-2071"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="1a581-2072">Несмотря на то, что <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2072">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-2073">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-2073">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-2074">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2074">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-2075">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-2075">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-2076">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2076">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-2077">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2077">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="1a581-2078">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2078">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="1a581-2079">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="1a581-2079">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="1a581-2080">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>ожидает вызова.</span><span class="sxs-lookup"><span data-stu-id="1a581-2080">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="1a581-2081">Например, можно создать производный от <xref:System.Windows.Controls.Button> класса и переопределить <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> в производном классе, не вызывая базовую реализацию <xref:System.Windows.Controls.Primitives.ButtonBase.Click> , однако это переопределение отключает событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2081">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2082">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2082">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-2083">Данные о событии информируют об отжатии левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2083">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="1a581-2084">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2084">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2085">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2085">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2086"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Событие отображается для перемещения маршрута туннелирования, но фактически перемещается косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2086">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-2087"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>является базовым событием, направляемым по туннелю, <xref:System.Windows.UIElement> и каждый в маршруте события использует идентичную обработку для вызова прямого перенаправленного события. <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp></span><span class="sxs-lookup"><span data-stu-id="1a581-2087"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="1a581-2088">Несмотря на то, что <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2088">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-2089">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-2089">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-2090">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2090">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-2091">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-2091">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-2092">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2092">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-2093">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2093">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2094">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2094">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2095">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2095">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2096">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2096">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2097">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2097">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2098">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2098">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2099">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2099">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2100">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2100">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2101">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2101">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2102">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2102">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2103">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2103">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2104">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2104">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2105">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2105">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2106">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2106">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2107">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2107">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-2108">Данные о событии информируют о нажатии правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2108">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="1a581-2109">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2109">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2110">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2110">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2111"><xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Событие отображается для перемещения маршрута туннелирования, но фактически перемещается косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2111">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-2112"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>является базовым событием, направляемым по туннелю, <xref:System.Windows.UIElement> и каждый в маршруте события использует идентичную обработку для вызова прямого перенаправленного события. <xref:System.Windows.UIElement.MouseRightButtonDown></span><span class="sxs-lookup"><span data-stu-id="1a581-2112"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="1a581-2113">Несмотря на то, что <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2113">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-2114">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-2114">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-2115">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2115">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-2116">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-2116">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-2117">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2117">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-2118">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2118">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="1a581-2119">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2119">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="1a581-2120">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="1a581-2120">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="1a581-2121">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>ожидает вызова.</span><span class="sxs-lookup"><span data-stu-id="1a581-2121">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="1a581-2122">Например, можно создать производный от <xref:System.Windows.Controls.Control> класса и переопределить <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> в производном классе, не вызывая Base. Однако это переопределение отключает службы контекстного меню элемента управления, которые являются частью <xref:System.Windows.Controls.Control> поведения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2122">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2123">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2123">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-2124">Данные о событии информируют об отпускании правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2124">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="1a581-2125">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2125">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2126">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2126">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2127"><xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Событие отображается для перемещения маршрута туннелирования, но фактически перемещается косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2127">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="1a581-2128"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>является базовым событием, направляемым по туннелю, <xref:System.Windows.UIElement> и каждый в маршруте события использует идентичную обработку для вызова прямого перенаправленного события. <xref:System.Windows.UIElement.PreviewMouseRightButtonUp></span><span class="sxs-lookup"><span data-stu-id="1a581-2128"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="1a581-2129">Несмотря на то, что <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> событие можно пометить как обработанное для данного элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2129">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="1a581-2130">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не были указаны `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="1a581-2130">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="1a581-2131">Реализация по умолчанию для общей обработки событий мыши <xref:System.Windows.UIElement> в прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2131">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="1a581-2132">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="1a581-2132">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="1a581-2133">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2133">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a581-2134">Поведение <xref:System.Windows.UIElement> обработки мыши нельзя изменить путем переопределения <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2134">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2135">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2135">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="1a581-2136">Данные о событии информируют об отжатии одной или нескольких кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2136">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="1a581-2137">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2137">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2138">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2138">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2139">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-2139">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="1a581-2140">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2140">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="1a581-2141">Если эти входные функции системы помечают <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> событие как обработанное, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1a581-2141">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="1a581-2142">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> : <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>и.</span><span class="sxs-lookup"><span data-stu-id="1a581-2142">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="1a581-2143">Любое из этих событий может возникнуть в принимающем элементе при <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> получении.</span><span class="sxs-lookup"><span data-stu-id="1a581-2143">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="1a581-2144">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2144">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="1a581-2145">Если событие обрабатывается в обработке класса, обработчики экземпляров для подсобытий не вызываются, если явно не используется <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true` для присоединения обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-2145">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="1a581-2146">Обработчики классов также не вызываются, если эти обработчики классов не зарегистрированы <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> в сигнатуре с `handledEventsToo` `true`помощью.</span><span class="sxs-lookup"><span data-stu-id="1a581-2146">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="1a581-2147">Обрабатывая <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, вы предполагаете, что обработка класса учитывает все возможные действия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-2147">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="1a581-2148">Такое поведение может быть нежелательным; Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="1a581-2148">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="1a581-2149">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="1a581-2149">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="1a581-2150">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2150">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2151">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2151">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2152">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2152">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2153">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2153">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2154">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2154">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2155">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2155">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2156">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2156">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2157">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2157">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2158">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2158">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2159">Объект класса <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2159">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2160">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2160">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2161">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2161">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2162">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2162">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2163">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2163">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2164">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2164">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2165">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2165">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2166">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2166">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2167">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2167">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2168">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2168">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2169">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2169">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2170">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2170">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2171">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2171">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2172">Объект класса <see cref="T:System.Windows.QueryContinueDragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2172">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2173">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2173">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2174">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2174">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2175">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2175">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2176">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2176">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2177">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2177">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2178">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2178">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2179">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2179">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2180">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2180">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2181">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2181">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2182">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2182">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2183">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2183">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2184">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2184">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2185">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2185">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2186">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2186">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2187">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2187">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2188">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2188">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2189">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2189">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2190">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2190">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2191">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2191">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2192">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2192">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2193">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2193">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2194">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2194">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2195">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2195">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2196">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2196">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2197">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2197">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2198">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2198">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2199">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2199">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2200">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2200">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2201">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2201">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2202">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2202">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2203">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2203">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2204">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2204">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2205">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2205">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2206">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2206">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2207">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2207">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2208">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2208">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2209">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2209">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2210">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2210">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2211">Объект класса <see cref="T:System.Windows.Input.StylusDownEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2211">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2212">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2212">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2213">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2213">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2214">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2214">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2215">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2215">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2216">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2216">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2217">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2217">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2218">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2218">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2219">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2219">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2220">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2220">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2221">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2221">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2222">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2222">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2223">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2223">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2224">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2224">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2225">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2225">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2226">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2226">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2227">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2227">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2228">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2228">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2229">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2229">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2230">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2230">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2231">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2231">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2232">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2232">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2233">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2233">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2234">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2234">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2235">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2235">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2236">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2236">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2237">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2237">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2238">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2238">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2239">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2239">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2240">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2240">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2241">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2241">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2242">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2242">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2243">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2243">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2244">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2244">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2245">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2245">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2246">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2246">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2247">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2247">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2248">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2248">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2249">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2249">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2250">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2250">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2251">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2251">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2252">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2252">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2253">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2253">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2254">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2254">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2255">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2255">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2256">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2256">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2257">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2257">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2258">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2258">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2259">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2259">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2260">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2260">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2261">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2261">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2262">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2262">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2263">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2263">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2264">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2264">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2265">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2265">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2266">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2266">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2267">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2267">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2268">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2268">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2269">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2269">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2270">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2270">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2271">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2271">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2272">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2272">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2273">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2273">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2274">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2274">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2275">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2275">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2276">Объект класса <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2276">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2277">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2277">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2278">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2278">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2279">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2279">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2280">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2280">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2281">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2281">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2282">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2282">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2283">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2283">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2284">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2284">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2285">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2285">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2286">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2286">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2287">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2287">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2288">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2288">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2289">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2289">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2290">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2290">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2291">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2291">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2292">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2292">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2293">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2293">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2294">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2294">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2295">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2295">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2296">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2296">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2297">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2297">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2298">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2298">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2299">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2299">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2300">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2300">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2301">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2301">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2302">Объект класса <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2302">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2303">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2303">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2304">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2304">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2305">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2305">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2306">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2306">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2307">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2307">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2308">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2308">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2309">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2309">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2310">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2310">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2311">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2311">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2312">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2312">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2313">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2313">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="1a581-2314">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="1a581-2314">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2315">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2315">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2316">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.PreviewTouchDown" />, которое происходит при сенсорном нажатии данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2316">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2317"><xref:System.Windows.UIElement.OnPreviewTouchDown%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2317">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2318">Переопределите <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> в производном классе на <xref:System.Windows.UIElement.PreviewTouchDown> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2318">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="1a581-2319">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2319">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2320">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2320">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2321">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.UIElement.PreviewTouchMove" />, которое происходит при перемещении касания внутри этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2321">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2322"><xref:System.Windows.UIElement.OnPreviewTouchMove%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2322">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2323">Переопределите <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> в производном классе на <xref:System.Windows.UIElement.PreviewTouchMove> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2323">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="1a581-2324">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2324">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2325">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2325">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2326">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.PreviewTouchUp" />, которое происходит при прекращении сенсорного нажатия внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2326">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2327"><xref:System.Windows.UIElement.OnPreviewTouchUp%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2327">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2328">Переопределите <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> в производном классе на <xref:System.Windows.UIElement.PreviewTouchUp> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2328">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="1a581-2329">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2329">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2330">Объект класса <see cref="T:System.Windows.QueryContinueDragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2330">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2331">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2331">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2332">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2332">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2333">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2333">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2334">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2334">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2335">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2335">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2336">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2336">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2337">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2337">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2338">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2338">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2339">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2339">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2340">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2340">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2341">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2341">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2342">Объект класса <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2342">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2343">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2343">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2344">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2344">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2345">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2345">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2346">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2346">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2347">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2347">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2348">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2348">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2349">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2349">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2350">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2350">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2351">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2351">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2352">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2352">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2353">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2353">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="abstract member OnRender : System.Windows.Media.DrawingContext -&gt; unit&#xA;override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="uIElement.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext"><span data-ttu-id="1a581-2354">Инструкции по рисованию конкретного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2354">The drawing instructions for a specific element.</span></span> <span data-ttu-id="1a581-2355">Данный контекст предоставляется системе структуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-2355">This context is provided to the layout system.</span></span></param>
        <summary><span data-ttu-id="1a581-2356">При переопределении в производном классе участвует в операциях отрисовки, направляемых системой макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-2356">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="1a581-2357">Инструкции отрисовки для данного элемента не используются непосредственно при вызове данного метода, а вместо этого сохраняются для последующего асинхронного использования при структурировании и рисовании.</span><span class="sxs-lookup"><span data-stu-id="1a581-2357">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2358">Этот метод не имеет реализации по умолчанию <xref:System.Windows.UIElement> в классе.</span><span class="sxs-lookup"><span data-stu-id="1a581-2358">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-2359">В следующем примере кода показана возможная реализация для производного класса Panel.</span><span class="sxs-lookup"><span data-stu-id="1a581-2359">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-2360"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> Метод можно переопределить для добавления дополнительных графических элементов (не определенных ранее в логическом дереве) к отображаемому элементу, например к эффектам или декоративным элементам.</span><span class="sxs-lookup"><span data-stu-id="1a581-2360">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span></span> <span data-ttu-id="1a581-2361"><see cref="T:System.Windows.Media.DrawingContext" /> Объект передается в качестве аргумента, который предоставляет методы для рисования фигур, текста, изображений или видео.</span><span class="sxs-lookup"><span data-stu-id="1a581-2361">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberSignature Language="F#" Value="abstract member OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit&#xA;override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="uIElement.OnRenderSizeChanged info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="1a581-2362">Упакованные параметры (<see cref="T:System.Windows.SizeChangedInfo" />), включающие старый и новый размеры и измерение, которое фактически изменяется.</span><span class="sxs-lookup"><span data-stu-id="1a581-2362">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span></span></param>
        <summary><span data-ttu-id="1a581-2363">При переопределении в производном классе участвует в операциях отрисовки, направляемых системой макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-2363">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="1a581-2364">Этот метод вызывается после обновления макета и перед отрисовкой, если <see cref="P:System.Windows.UIElement.RenderSize" /> элемента изменился в результате обновления макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-2364">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2365">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2365">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2366">Типичный элемент уровня среды WPF использует реализацию переопределения из <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2366">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="1a581-2367">Реализация делает недействительными <xref:System.Windows.FrameworkElement.Width%2A> свойства и <xref:System.Windows.FrameworkElement.Height%2A> и обрабатывает основы повторного создания макета. <xref:System.Windows.FrameworkElement></span><span class="sxs-lookup"><span data-stu-id="1a581-2367">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="1a581-2368"><xref:System.Windows.UIElement.OnRenderSizeChanged%2A> Переопределение<xref:System.Windows.UIElement> на уровне предполагает, что реализация элемента намеренно не использует реализацию на уровне среды WPF, поэтому элемент должен более прямо управлять логикой макета, обычно путем записи Замена системы макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-2368">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2369">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2369">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2370">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2370">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2371">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2371">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2372">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2372">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2373">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2373">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2374">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2374">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2375">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2375">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2376">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2376">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2377">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2377">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2378">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2378">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2379">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2379">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2380">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2380">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2381">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2381">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2382">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2382">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2383">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2383">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2384">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2384">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2385">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2385">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2386">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2386">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2387">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2387">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2388">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2388">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2389">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2389">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2390">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2390">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2391">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2391">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2392">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2392">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2393">Объект класса <see cref="T:System.Windows.Input.StylusDownEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2393">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2394">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2394">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2395">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2395">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2396">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2396">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2397">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2397">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2398">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2398">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2399">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2399">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2400">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2400">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2401">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2401">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2402">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2402">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2403">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2403">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2404">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2404">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2405">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2405">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2406">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> вызывается этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2406">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="1a581-2407">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2407">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2408">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2408">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2409">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2409">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-2410">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-2410">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="1a581-2411">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону события для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2411">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2412">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2412">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2413">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров ( `handledEventsToo`которые не указывают).</span><span class="sxs-lookup"><span data-stu-id="1a581-2413">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2414">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2414">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2415">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2415">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2416">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2416">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2417">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2417">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2418">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2418">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2419">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2419">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2420">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2420">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2421">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2421">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2422">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2422">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2423">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2423">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2424">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2424">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2425">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2425">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2426">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2426">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2427">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2427">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2428">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2428">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2429">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2429">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2430">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2430">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2431">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2431">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2432">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2432">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2433">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2433">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2434">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2434">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2435">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2435">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2436">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2436">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2437">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2437">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2438">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2438">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2439">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> вызывается этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2439">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="1a581-2440">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2440">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2441">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2441">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2442">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2442">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="1a581-2443">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="1a581-2443">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="1a581-2444">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону события для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2444">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2445">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2445">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2446">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров ( `handledEventsToo`которые не указывают).</span><span class="sxs-lookup"><span data-stu-id="1a581-2446">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2447">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2447">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2448">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2448">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2449">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2449">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2450">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2450">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2451">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2451">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2452">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2452">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2453">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2453">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2454">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2454">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2455">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2455">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2456">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2456">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2457">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2457">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2458">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2458">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2459">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2459">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2460">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2460">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2461">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2461">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2462">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2462">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2463">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2463">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2464">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2464">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2465">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2465">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2466">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2466">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2467">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2467">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2468">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2468">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2469">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2469">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2470">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2470">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2471">Объект класса <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2471">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2472">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2472">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2473">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2473">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2474">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2474">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2475">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2475">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2476">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2476">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2477">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2477">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2478">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2478">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2479">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2479">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2480">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2480">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2481">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2481">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2482">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2482">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2483">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2483">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2484">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Stylus.StylusUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2484">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2485">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2485">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2486">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2486">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2487">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2488">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2489">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2490">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2491">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2492">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2493">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2494">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2495">Объект класса <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="1a581-2495">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2496">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2496">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="1a581-2497">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2497">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2498">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2498">This method has no default implementation.</span></span> <span data-ttu-id="1a581-2499">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2499">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="1a581-2500">Назначение этого метода аналогично [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблону событий для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2500">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="1a581-2501">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2501">In this case the matching event is a routed event.</span></span> <span data-ttu-id="1a581-2502">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="1a581-2502">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="1a581-2503">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2503">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="1a581-2504">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2504">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="1a581-2505">Переопределяя этот метод или зарегистрировав обработчики класса с <xref:System.Windows.EventManager.RegisterClassHandler%2A>помощью, производные <xref:System.Windows.UIElement> классы могут вызывать закрытые методы обработчика класса, если событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2505">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="1a581-2506">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="1a581-2506">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2507">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2507">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2508">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.TouchDown" />, которое происходит при сенсорном нажатии внутри данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2508">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2509"><xref:System.Windows.UIElement.OnTouchDown%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2509">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2510">Переопределите <xref:System.Windows.UIElement.OnTouchDown%2A> в производном классе на <xref:System.Windows.UIElement.TouchDown> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2510">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="1a581-2511">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnTouchDown%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2511">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2512">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2512">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2513">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.TouchEnter" />, которое происходит при сенсорном перемещении внутрь данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2513">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2514"><xref:System.Windows.UIElement.OnTouchEnter%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2514">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2515">Переопределите <xref:System.Windows.UIElement.OnTouchEnter%2A> в производном классе на <xref:System.Windows.UIElement.TouchEnter> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2515">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="1a581-2516">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnTouchEnter%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2516">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2517">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2517">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2518">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.TouchLeave" />, которое происходит при сенсорном перемещении из данного элемента <see cref="T:System.Windows.UIElement" /> за его пределы.</span><span class="sxs-lookup"><span data-stu-id="1a581-2518">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2519"><xref:System.Windows.UIElement.OnTouchLeave%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2519">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2520">Переопределите <xref:System.Windows.UIElement.OnTouchLeave%2A> в производном классе на <xref:System.Windows.UIElement.TouchLeave> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2520">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="1a581-2521">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnTouchLeave%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2521">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2522">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2522">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2523">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.UIElement.TouchMove" />, которое происходит при перемещении касания внутри этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2523">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2524"><xref:System.Windows.UIElement.OnTouchMove%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2524">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2525">Переопределите <xref:System.Windows.UIElement.OnTouchMove%2A> в производном классе на <xref:System.Windows.UIElement.TouchMove> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2525">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="1a581-2526">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnTouchMove%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2526">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-2527">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2527">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1a581-2528">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.TouchUp" />, которое происходит при прекращении сенсорного нажатия внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2528">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2529"><xref:System.Windows.UIElement.OnTouchUp%2A> Метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2529">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="1a581-2530">Переопределите <xref:System.Windows.UIElement.OnTouchUp%2A> в производном классе на <xref:System.Windows.UIElement.TouchUp> обработку события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2530">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="1a581-2531">Обязательно вызовите метод базового класса " <xref:System.Windows.UIElement.OnTouchUp%2A> , чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-2531">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="1a581-2532">Предыдущий родительский элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2532">The previous parent.</span></span> <span data-ttu-id="1a581-2533">Может быть предоставлен в качестве <see langword="null" />, если <see cref="T:System.Windows.DependencyObject" /> не имел родительский элемент ранее.</span><span class="sxs-lookup"><span data-stu-id="1a581-2533">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="1a581-2534">Вызывается, когда родительский элемент данного <see cref="T:System.Windows.UIElement" /> сообщает об изменении в его базовом визуальном родителе.</span><span class="sxs-lookup"><span data-stu-id="1a581-2534">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a581-2535">При переопределении этого метода всегда вызывайте базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="1a581-2535">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="1a581-2536">Базовая реализация по умолчанию выполняет определенное внутреннее обслуживание состояния свойства, наследуемого с обратным наследованием.</span><span class="sxs-lookup"><span data-stu-id="1a581-2536">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="1a581-2537">Если не вызвать базовую реализацию, это состояние станет недействительным.</span><span class="sxs-lookup"><span data-stu-id="1a581-2537">Failing to call the base implementation will invalidate this state.</span></span>  
  
<span data-ttu-id="1a581-2538">Этот метод переопределяет метод <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2538">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="1a581-2539"><see cref="T:System.Windows.FrameworkElement" />и <see cref="T:System.Windows.Window" /> обе версии <see cref="T:System.Windows.UIElement" /> <see cref="T:System.Windows.Window" /> также переопределяют реализацию и запечатывает ее. <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" /></span><span class="sxs-lookup"><span data-stu-id="1a581-2539"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.UIElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2540">Получает или задает коэффициент непрозрачности, применяемый ко всему элементу <see cref="T:System.Windows.UIElement" /> при его отрисовке в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a581-2540">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="1a581-2541">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-2541">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-2542">Коэффициент непрозрачности.</span><span class="sxs-lookup"><span data-stu-id="1a581-2542">The opacity factor.</span></span> <span data-ttu-id="1a581-2543">По умолчанию непрозрачность равна 1,0.</span><span class="sxs-lookup"><span data-stu-id="1a581-2543">Default opacity is 1.0.</span></span> <span data-ttu-id="1a581-2544">Ожидаемые значения должны находиться в диапазоне от 0,0 до 1,0.</span><span class="sxs-lookup"><span data-stu-id="1a581-2544">Expected values are between 0.0 and 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2545">Значение по умолчанию 1,0 является значением по умолчанию, предоставленным исходными метаданными этого <xref:System.Windows.UIElement> свойства зависимостей в классе.</span><span class="sxs-lookup"><span data-stu-id="1a581-2545">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="1a581-2546">Другие производные классы потенциально могут изменить это значение по умолчанию, переопределив метаданные в своем конструкторе класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2546">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="1a581-2547">Значение параметра <xref:System.Windows.UIElement.Opacity%2A> не будет применяться к фактическому макету, если элемент также не является<xref:System.Windows.UIElement.IsVisible%2A> видимым `true`(значение).</span><span class="sxs-lookup"><span data-stu-id="1a581-2547">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="1a581-2548"><xref:System.Windows.UIElement.Opacity%2A>применяется из родительских элементов в дереве элементов вниз к дочерним элементам, но видимые эффекты вложенных параметров непрозрачности не указываются в значении свойства отдельных дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2548"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="1a581-2549">Например, если список имеет непрозрачность 50% (0,5), а один из его элементов списка имеет собственную прозрачность, равную 20% (0,2), то непрозрачность, видимая для этого элемента списка, будет отображаться так, как если бы это было 10% (0,1), но <xref:System.Windows.UIElement.Opacity%2A> значение свойства элемента списка по-прежнему будет  0,2 при запросе.</span><span class="sxs-lookup"><span data-stu-id="1a581-2549">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="1a581-2550">Даже если объявленная или оцененная непрозрачность равна 0, элемент все еще участвует в событиях и командах ввода и потенциально может сосредоточиться.</span><span class="sxs-lookup"><span data-stu-id="1a581-2550">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="1a581-2551">Этот аспект может быть полезен, например, можно использовать объект непрозрачности (например, фигуру) для маскирования базовых объектов с прозрачными элементами.</span><span class="sxs-lookup"><span data-stu-id="1a581-2551">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="1a581-2552">Объект непрозрачности — ноль может обрабатывать всю обработку входных событий для базовой области.</span><span class="sxs-lookup"><span data-stu-id="1a581-2552">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="1a581-2553">Однако для объекта или фигуры должно быть задано значение <xref:System.Windows.Media.Brushes.Transparent%2A>, даже если это так, в противном случае проверка попадания не включена и никакие события не принимаются. `Background` `Fill`</span><span class="sxs-lookup"><span data-stu-id="1a581-2553">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-2554">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-2554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2555">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2555">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="1a581-2556">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-2556">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-2557">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-2557">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.UIElement.OpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2558">Возвращает или задает маску непрозрачности в виде реализации элемента <see cref="T:System.Windows.Media.Brush" />, которая применяется при маскировании отображаемого содержимого элемента с помощью любого альфа-канала.</span><span class="sxs-lookup"><span data-stu-id="1a581-2558">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span></span>  <span data-ttu-id="1a581-2559">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-2559">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-2560">Кисть для маски непрозрачности.</span><span class="sxs-lookup"><span data-stu-id="1a581-2560">The brush to use for opacity masking.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2561">Это свойство использует только значение альфа-канала для предоставляемого <xref:System.Windows.Media.Brush>значения.</span><span class="sxs-lookup"><span data-stu-id="1a581-2561">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="1a581-2562">Другие каналы <xref:System.Windows.Media.Brush>отображаемого содержимого (красный, зеленый или синий) игнорируются.</span><span class="sxs-lookup"><span data-stu-id="1a581-2562">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="1a581-2563">Наиболее типичным <xref:System.Windows.Media.Brush> для этой цели <xref:System.Windows.Media.ImageBrush>является, который можно использовать для различных методов маскировки фотографий, таких как вигнетте.</span><span class="sxs-lookup"><span data-stu-id="1a581-2563">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="1a581-2564">Но можно использовать <xref:System.Windows.Media.Brush> любые определенные ( <xref:System.Windows.Media.LinearGradientBrush>например,).</span><span class="sxs-lookup"><span data-stu-id="1a581-2564">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="1a581-2565">В [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]значение этого свойства может использовать встроенный синтаксис, относящийся к каждой реализации <xref:System.Windows.Media.Brush> абстрактного класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2565">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="1a581-2566">Дополнительные сведения см. [в статье Общие сведения о рисовании с помощью сплошных цветов и градиентов](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-2566">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-2567">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-2567">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2568">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2568">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="1a581-2569">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-2569">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-2570">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-2570">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-2571">В следующем примере разметки показана <xref:System.Windows.Media.ImageBrush> маска непрозрачности, примененная к другой. <xref:System.Windows.Controls.Image></span><span class="sxs-lookup"><span data-stu-id="1a581-2571">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityMaskProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityMaskProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2572">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.OpacityMask" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2572">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2573">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.Opacity" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2573">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistId : int" Usage="System.Windows.UIElement.PersistId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2574">Возвращает значение, уникальным образом идентифицирующее данный элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2574">Gets a value that uniquely identifies this element.</span></span></summary>
        <value><span data-ttu-id="1a581-2575">Уникальный идентификатор данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2575">The unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2576"><xref:System.Windows.UIElement.PersistId%2A>уникально идентифицирует каждый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2576"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="1a581-2577">Каждый раз, когда загружается один и [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] тот же элемент (включая двоичные представления), он остается прежним <xref:System.Windows.UIElement.PersistId%2A> .</span><span class="sxs-lookup"><span data-stu-id="1a581-2577">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="1a581-2578">Этот идентификатор используется для внутренних требований загрузки, анализа и сериализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2578">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="1a581-2579">Он не предназначен для использования в коде приложения.</span><span class="sxs-lookup"><span data-stu-id="1a581-2579">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="1a581-2580">Это свойство не имеет связи с <xref:System.Object.GetHashCode%2A> результатом для любого заданного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a581-2580">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="1a581-2581">Главное направление запроса на перемещение фокуса.</span><span class="sxs-lookup"><span data-stu-id="1a581-2581">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="1a581-2582">При переопределении в производном классе возвращает элемент, который должен получить фокус для указанного направления перемещения фокуса без перемещения фокуса на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2582">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="1a581-2583">Элемент, который мог получить фокус при фактическом вызове <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2583">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2584">Реализация по умолчанию этого метода в этом классе является неполной и всегда возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="1a581-2584">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2585">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2585">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2586">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewDragEnter> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2586">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2587">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewDragEnter> событию, присоединяются к <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2587">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2588">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2588">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2589">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2589">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="1a581-2590">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2590">Routing strategy</span></span>|<span data-ttu-id="1a581-2591">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2591">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2592">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2592">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-2593">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2593">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="1a581-2594">Переопределение <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2594">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2595">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewDragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2595">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2596">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2596">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2597">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2597">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2598">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2598">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2599">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2599">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2600">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2600">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2601">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2601">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2602">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewDragLeave> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2602">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2603">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewDragLeave> событию, присоединяются к <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2603">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2604">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2604">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2605">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2605">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="1a581-2606">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2606">Routing strategy</span></span>|<span data-ttu-id="1a581-2607">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2607">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2608">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2608">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-2609">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2609">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="1a581-2610">Переопределение <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2610">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2611">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewDragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2611">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2612">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2612">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2613">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2613">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2614">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2614">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2615">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2615">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2616">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2616">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2617">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели данный элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2617">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2618">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewDragOver> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2618">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2619">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewDragOver> событию, присоединяются к <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2619">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2620">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2620">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2621">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2621">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="1a581-2622">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2622">Routing strategy</span></span>|<span data-ttu-id="1a581-2623">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2623">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2624">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2624">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-2625">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2625">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="1a581-2626">Переопределение <xref:System.Windows.UIElement.OnPreviewDragOver%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2626">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2627">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewDragOver" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2627">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2628">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2628">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2629">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2629">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2630">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2630">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2631">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2631">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2632">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2632">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2633">Происходит, когда система ввода сообщает о базовом событии удаления с этим элементом в качестве цели удаления.</span><span class="sxs-lookup"><span data-stu-id="1a581-2633">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2634">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewDrop> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2634">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2635">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewDrop> событию, присоединяются к <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2635">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2636">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2636">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2637">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2637">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="1a581-2638">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2638">Routing strategy</span></span>|<span data-ttu-id="1a581-2639">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2639">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2640">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2640">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="1a581-2641">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2641">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="1a581-2642">Переопределение <xref:System.Windows.UIElement.OnPreviewDrop%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2642">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2643">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewDrop" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2643">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2644">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2644">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2645">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2645">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2646">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2646">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2647">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2647">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2648">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2648">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2649">Происходит при начале операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-2649">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2650"><xref:System.Windows.UIElement.PreviewGiveFeedback> Событие позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы предоставить пользователю визуальную обратную связь во время операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-2650">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="1a581-2651">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewGiveFeedback> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2651">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2652">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewGiveFeedback> событию, присоединяются к <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2652">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2653">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2653">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2654">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2654">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="1a581-2655">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2655">Routing strategy</span></span>|<span data-ttu-id="1a581-2656">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2656">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2657">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2657">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="1a581-2658">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2658">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="1a581-2659">Переопределение <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2659">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2660">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2660">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2661">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2661">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2662">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2662">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2663">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2663">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2664">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2664">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2665">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2665">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2666">Происходит при получении данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-2666">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2667">Так как это событие использует маршрутизацию нисходящей маршрутизации, элемент, имеющий фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-2667">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-2668"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-2668">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="1a581-2669">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2669">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2670">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> событию, присоединяются к <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2670">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2671">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2671">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2672">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2672">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="1a581-2673">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2673">Routing strategy</span></span>|<span data-ttu-id="1a581-2674">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2674">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2675">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2675">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="1a581-2676">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2676">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="1a581-2677">Переопределение <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2677">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2678">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2678">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2679">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2679">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2680">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2680">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2681">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2681">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2682">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2682">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2683">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2683">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2684">Возникает при нажатии клавиши, если фокус установлен на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-2684">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2685">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="1a581-2685">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="1a581-2686"><xref:System.Windows.UIElement.KeyDown> Событие является событием текстового ввода нижнего уровня, которое может работать не так, как ожидалось в некоторых элементах управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-2686">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="1a581-2687">Это связано с тем, что некоторые элементы управления имеют компоновку элементов управления или обработку класса, которая предоставляет версию обработки текстового ввода и связанные события более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="1a581-2687">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="1a581-2688">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewKeyDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2688">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2689">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewKeyDown> событию, присоединяются к <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2689">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2690">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2690">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2691">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2691">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="1a581-2692">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2692">Routing strategy</span></span>|<span data-ttu-id="1a581-2693">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2693">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2694">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2694">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="1a581-2695">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2695">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="1a581-2696">Переопределение <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2696">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2697">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2697">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2698">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2698">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2699">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2699">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2700">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2700">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2701">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2701">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2702">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2702">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2703">Происходит при отпускании клавиши, если фокус находится на этом элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-2703">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2704">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="1a581-2704">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="1a581-2705"><xref:System.Windows.UIElement.KeyUp> Событие является событием текстового ввода нижнего уровня, которое может работать не так, как ожидалось в некоторых элементах управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-2705">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="1a581-2706">Это связано с тем, что некоторые элементы управления имеют компоновку элементов управления или обработку класса, которая предоставляет версию обработки текстового ввода и связанные события более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="1a581-2706">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="1a581-2707">Дополнительные сведения см. в документации по отдельным элементам управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-2707">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="1a581-2708">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewKeyUp> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2708">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2709">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewKeyUp> событию, присоединяются к <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2709">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2710">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2710">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2711">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2711">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="1a581-2712">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2712">Routing strategy</span></span>|<span data-ttu-id="1a581-2713">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2713">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2714">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2714">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="1a581-2715">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2715">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="1a581-2716">Переопределение <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2716">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2717">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2717">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2718">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2718">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2719">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2719">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2720">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2720">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2721">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2721">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2722">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2722">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2723">Происходит при потере данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-2723">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2724">Так как это событие использует маршрутизацию нисходящей маршрутизации, элемент, который потерял фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-2724">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="1a581-2725"><xref:System.Windows.RoutedEventArgs.Source%2A> Проверьте данные события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="1a581-2725">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="1a581-2726">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2726">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2727">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> событию, присоединяются к <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2727">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2728">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2728">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2729">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2729">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="1a581-2730">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2730">Routing strategy</span></span>|<span data-ttu-id="1a581-2731">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2731">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2732">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2732">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="1a581-2733">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2733">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="1a581-2734">Переопределение <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2734">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2735">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2735">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2736">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2736">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2737">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2737">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2738">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2738">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2739">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2739">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2740">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2740">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2741">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2741">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2742">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewMouseDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2742">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2743">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewMouseDown> событию, присоединяются к <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2743">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2744">Событие часто возникает вместе <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> с или <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, что соответствует нажатию одной из двух стандартных кнопок мыши. <xref:System.Windows.UIElement.PreviewMouseDown></span><span class="sxs-lookup"><span data-stu-id="1a581-2744">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="1a581-2745"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>и <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> являются также перенаправленными событиями, но они являются прямыми перенаправленными событиями, и <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> при достижении события этим элементом в маршруте события возникает соответствующее событие, связанное с кнопкой.</span><span class="sxs-lookup"><span data-stu-id="1a581-2745"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="1a581-2746">См. раздел <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> примечания <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>для или.</span><span class="sxs-lookup"><span data-stu-id="1a581-2746">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2747">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2747">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2748">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2748">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="1a581-2749">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2749">Routing strategy</span></span>|<span data-ttu-id="1a581-2750">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2750">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2751">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2751">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2752">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2752">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="1a581-2753">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2753">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2754">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2754">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2755">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2755">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2756">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2756">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2757">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2757">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2758">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2758">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2759">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2759">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2760">Происходит при нажатии левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2760">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2761">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направлению нисходящей маршрутизации через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по <xref:System.Windows.UIElement>дереву элементов каждым из них.</span><span class="sxs-lookup"><span data-stu-id="1a581-2761">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-2762">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2762">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-2763">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2763">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-2764">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2764">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-2765">Если пометить <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> как обработанный, то вы <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-2765">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="1a581-2766">Это может включать события, созданные обработчиком класса, <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>такие как.</span><span class="sxs-lookup"><span data-stu-id="1a581-2766">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="1a581-2767">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-2767">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-2768">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2768">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-2769">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2769">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2770">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2770">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2771">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2771">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="1a581-2772">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2772">Routing strategy</span></span>|<span data-ttu-id="1a581-2773">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-2773">Direct</span></span>|  
|<span data-ttu-id="1a581-2774">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2774">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2775">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2775">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2776">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2776">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2777">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2777">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2778">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2778">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2779">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2779">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2780">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2780">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2781">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2781">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2782">Происходит при отпускании левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2782">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2783">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направлению нисходящей маршрутизации через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по <xref:System.Windows.UIElement>дереву элементов каждым из них.</span><span class="sxs-lookup"><span data-stu-id="1a581-2783">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-2784">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2784">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-2785">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2785">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-2786">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2786">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-2787">Если пометить <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> как обработанный, то вы <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-2787">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="1a581-2788">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-2788">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-2789">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2789">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-2790">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2790">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2791">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2791">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2792">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2792">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="1a581-2793">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2793">Routing strategy</span></span>|<span data-ttu-id="1a581-2794">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-2794">Direct</span></span>|  
|<span data-ttu-id="1a581-2795">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2795">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2796">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2796">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2797">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2797">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2798">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2798">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2799">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2799">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2800">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2800">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2801">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2801">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2802">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2802">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2803">Происходит при перемещении указателя мыши, когда он находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2803">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2804">Это событие возникает, когда указатель мыши впервые попадает в границы элемента, а также когда указатель мыши перемещается, пока остается в пределах границ элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-2804">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="1a581-2805">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewMouseMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2805">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2806">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewMouseMove> событию, присоединяются к <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2806">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2807">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2807">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2808">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2808">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="1a581-2809">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2809">Routing strategy</span></span>|<span data-ttu-id="1a581-2810">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2810">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2811">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2811">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="1a581-2812">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2812">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="1a581-2813">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2813">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2814">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2814">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2815">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2815">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2816">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2816">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2817">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2817">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2818">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2818">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2819">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2819">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2820">Происходит при нажатии правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2820">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2821">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направлению нисходящей маршрутизации через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по <xref:System.Windows.UIElement>дереву элементов каждым из них.</span><span class="sxs-lookup"><span data-stu-id="1a581-2821">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-2822">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2822">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-2823">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2823">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-2824">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2824">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-2825">Если пометить <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> как обработанный, то вы <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-2825">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="1a581-2826">Это может включать события, созданные обработчиком класса, <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>такие как.</span><span class="sxs-lookup"><span data-stu-id="1a581-2826">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="1a581-2827">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-2827">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-2828">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2828">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-2829">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2829">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2830">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2830">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2831">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2831">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="1a581-2832">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2832">Routing strategy</span></span>|<span data-ttu-id="1a581-2833">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-2833">Direct</span></span>|  
|<span data-ttu-id="1a581-2834">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2834">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2835">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2835">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2836">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2836">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2837">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2837">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2838">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2838">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2839">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2839">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2840">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2840">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2841">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2841">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2842">Происходит при отпускании правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2842">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2843">Несмотря на то, что перенаправленное [событие](~/docs/framework/wpf/advanced/routed-events-overview.md) кажется следовать направлению нисходящей маршрутизации через дерево элементов, оно фактически является прямым перенаправленным событием, которое вызывается и передается по <xref:System.Windows.UIElement>дереву элементов каждым из них.</span><span class="sxs-lookup"><span data-stu-id="1a581-2843">Although this [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-2844">Это событие является одним из нескольких связанных событий, которые сообщают о специфических для кнопки мыши базовом <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> событии, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2844">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="1a581-2845">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2845">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1a581-2846">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны быть добавлены путем явного <xref:System.Windows.UIElement.AddHandler%2A>вызова с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2846">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="1a581-2847">Если пометить <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> как обработанный, то вы <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> , по сути, помечаем обработку для всех последующих прослушивателей в маршруте и на всех связанных событиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-2847">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="1a581-2848">По сути, подумайте об этом событии (и других событиях <xref:System.Windows.UIElement>кнопки мыши) в качестве службы мыши (с определением службы, предоставленным <xref:System.Windows.Input.Mouse> классом).</span><span class="sxs-lookup"><span data-stu-id="1a581-2848">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="1a581-2849">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2849">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="1a581-2850">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> класс в классе, а не в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2850">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2851">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2851">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2852">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2852">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="1a581-2853">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2853">Routing strategy</span></span>|<span data-ttu-id="1a581-2854">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-2854">Direct</span></span>|  
|<span data-ttu-id="1a581-2855">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2855">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2856">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2856">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2857">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2857">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2858">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2858">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2859">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2859">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2860">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2860">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2861">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2861">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2862">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2862">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2863">Происходит при отпускании любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2863">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2864">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewMouseUp> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2864">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2865">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewMouseUp> событию, присоединяются к <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2865">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2866">Событие часто возникает вместе <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> с или <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, что соответствует нажатию одной из двух стандартных кнопок мыши. <xref:System.Windows.UIElement.PreviewMouseUp></span><span class="sxs-lookup"><span data-stu-id="1a581-2866">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="1a581-2867"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>и <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> являются также перенаправленными событиями, но они являются прямыми перенаправленными событиями, и <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> при достижении события этим элементом в маршруте события возникает соответствующее событие, связанное с кнопкой.</span><span class="sxs-lookup"><span data-stu-id="1a581-2867"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="1a581-2868">См. раздел <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> примечания <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>для или.</span><span class="sxs-lookup"><span data-stu-id="1a581-2868">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2869">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2869">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2870">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2870">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="1a581-2871">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2871">Routing strategy</span></span>|<span data-ttu-id="1a581-2872">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2872">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2873">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2873">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2874">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2874">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="1a581-2875">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2875">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2876">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2876">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2877">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2877">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2878">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2878">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2879">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2879">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2880">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2880">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2881">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2881">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2882">Происходит при вращении колесика мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2882">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2883">Фокус или захват мыши имеют приоритет над местом, где находится указатель мыши; Таким образом, если это событие получится от элемента с заданным или захваченным элементом, то указатель мыши на самом деле может находиться над другим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2883">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="1a581-2884">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewMouseMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2884">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2885">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewMouseMove> событию, присоединяются к <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2885">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2886">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2886">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2887">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2887">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="1a581-2888">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2888">Routing strategy</span></span>|<span data-ttu-id="1a581-2889">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2889">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2890">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2890">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="1a581-2891">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2891">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="1a581-2892">Переопределение <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2892">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2893">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2893">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2894">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2894">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2895">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2895">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2896">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2896">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2897">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2897">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2898">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2898">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2899">Происходит, когда состояние клавиши или кнопки мыши изменяется в ходе операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-2899">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2900">Это <xref:System.Windows.UIElement.PreviewQueryContinueDrag> событие позволяет источнику перетаскивания объявить, следует ли отменить операцию перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-2900">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="1a581-2901">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewQueryContinueDrag> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2901">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2902">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewQueryContinueDrag> событию, присоединяются к <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2902">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2903">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2903">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2904">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2904">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="1a581-2905">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2905">Routing strategy</span></span>|<span data-ttu-id="1a581-2906">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2906">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2907">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2907">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="1a581-2908">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2908">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="1a581-2909">Переопределение <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2909">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2910">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2910">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2911">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2911">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2912">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2912">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2913">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2913">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2914">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2914">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2915">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2915">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2916">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2916">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2917">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusButtonDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2917">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2918">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusButtonDown> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2918">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2919">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-2919">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-2920">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-2920">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2921">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2922">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2922">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="1a581-2923">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2923">Routing strategy</span></span>|<span data-ttu-id="1a581-2924">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2924">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2925">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2925">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2926">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2926">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="1a581-2927">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2927">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2928">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2928">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2929">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2929">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2930">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2930">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2931">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2931">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2932">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2932">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2933">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2933">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2934">Происходит при отпускании кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2934">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2935">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusButtonUp> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2935">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2936">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusButtonUp> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2936">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2937">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-2937">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-2938">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-2938">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2939">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2939">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2940">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2940">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="1a581-2941">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2941">Routing strategy</span></span>|<span data-ttu-id="1a581-2942">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2942">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2943">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2943">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-2944">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2944">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="1a581-2945">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2945">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2946">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2946">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2947">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2947">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2948">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2948">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2949">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2949">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2950">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2950">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2951">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2951">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2952">Происходит при касании дигитайзера пером в тот момент, когда оно находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-2952">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2953">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2953">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2954">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusDown> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2954">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2955">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-2955">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-2956">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-2956">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2957">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2957">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2958">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2958">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="1a581-2959">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2959">Routing strategy</span></span>|<span data-ttu-id="1a581-2960">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2960">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2961">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2961">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="1a581-2962">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2962">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="1a581-2963">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2963">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2964">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2964">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2965">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2965">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2966">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2966">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2967">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2967">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2968">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2968">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2969">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2969">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2970">Происходит при движении пера над элементом без касания дигитайзера.</span><span class="sxs-lookup"><span data-stu-id="1a581-2970">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2971">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusInAirMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2971">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2972">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusInAirMove> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2972">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2973">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-2973">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-2974">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-2974">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2975">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2975">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2976">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2976">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="1a581-2977">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2977">Routing strategy</span></span>|<span data-ttu-id="1a581-2978">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2978">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2979">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2979">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-2980">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2980">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="1a581-2981">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2981">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2982">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-2982">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2983">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-2983">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-2984">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2984">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-2985">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-2985">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-2986">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2986">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-2987">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2987">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-2988">Происходит при нахождении пера над данным элементом достаточно близко для того, чтобы перо было обнаружено дигитайзером.</span><span class="sxs-lookup"><span data-stu-id="1a581-2988">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-2989">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusInRange> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-2989">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-2990">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusInRange> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-2990">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-2991">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-2991">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-2992">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-2992">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-2993">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-2993">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-2994">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-2994">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="1a581-2995">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-2995">Routing strategy</span></span>|<span data-ttu-id="1a581-2996">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-2996">Tunneling</span></span>|  
|<span data-ttu-id="1a581-2997">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-2997">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-2998">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="1a581-2998">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="1a581-2999">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-2999">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3000">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3000">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3001">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3001">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3002">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3002">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3003">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3003">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3004">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3004">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3005">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3005">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3006">Происходит при перемещении пера над элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3006">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="1a581-3007">Для вызова этого события перемещаемое перо должно быть обнаружено дигитайзером; в противном случае вызывается <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3007">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3008">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3008">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3009">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusMove> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3009">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3010">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3010">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3011">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3011">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3012">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3012">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3013">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3013">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="1a581-3014">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3014">Routing strategy</span></span>|<span data-ttu-id="1a581-3015">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3015">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3016">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3016">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3017">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3017">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="1a581-3018">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3018">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3019">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3019">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3020">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3020">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3021">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3021">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3022">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3022">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3023">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3023">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3024">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3024">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3025">Происходит, когда перо находится слишком далеко от дигитайзера, чтобы быть обнаруженным.</span><span class="sxs-lookup"><span data-stu-id="1a581-3025">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3026">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusOutOfRange> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3026">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3027">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusOutOfRange> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3027">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3028">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3028">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3029">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3029">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3030">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3030">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3031">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3031">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="1a581-3032">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3032">Routing strategy</span></span>|<span data-ttu-id="1a581-3033">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3033">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3034">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3034">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3035">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3035">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="1a581-3036">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3036">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3037">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3037">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3038">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3038">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3039">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3039">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3040">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3040">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3041">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3041">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3042">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3042">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3043">Происходит при использовании пользователем одного из жестов пером.</span><span class="sxs-lookup"><span data-stu-id="1a581-3043">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3044">Дополнительные сведения о жестах пера см. <xref:System.Windows.Input.SystemGesture>в разделе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3044">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="1a581-3045">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusSystemGesture> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3045">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3046">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusSystemGesture> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3046">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3047">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3047">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3048">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3048">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3049">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3049">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3050">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3050">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="1a581-3051">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3051">Routing strategy</span></span>|<span data-ttu-id="1a581-3052">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3052">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3053">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3053">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="1a581-3054">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3054">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="1a581-3055">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3055">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3056">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3056">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3057">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3057">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3058">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3058">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3059">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3059">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3060">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3060">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3061">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3061">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3062">Происходит, когда пользователь отрывает перо от поверхности дигитайзера в тот момент, когда оно находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3062">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3063">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewStylusDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3063">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3064">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewStylusDown> событию, присоединяются к <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3064">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3065">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3065">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3066">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3066">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3067">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3067">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3068">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3068">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="1a581-3069">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3069">Routing strategy</span></span>|<span data-ttu-id="1a581-3070">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3070">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3071">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3071">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3072">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3072">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="1a581-3073">Переопределение <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3073">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3074">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3074">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3075">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3075">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3076">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3076">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3077">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3077">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3078">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3078">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3079">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3079">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3080">Происходит при получении этим элементом текста аппаратно-независимым способом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3080">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3081">Это <xref:System.Windows.UIElement.PreviewTextInput> событие позволяет компоненту или приложению ожидать ввода текста независимым от устройства образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3081">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="1a581-3082">Клавиатура является основным средством <xref:System.Windows.UIElement.PreviewTextInput>, но также может создаваться <xref:System.Windows.UIElement.PreviewTextInput>речь, рукописный ввод и другие устройства ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3082">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="1a581-3083">Из-за сочетаний клавиш — либо на клавиатуре по умолчанию, либо с помощью редакторов методов ввода. несколько ключевых событий могут вызывать только одно событие текстового ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3083">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="1a581-3084">Это событие создает псевдоним для <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.PreviewTextInput> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3084">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3085">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.PreviewTextInput> событию, присоединяются к <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3085">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3086">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3086">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3087">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3087">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="1a581-3088">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3088">Routing strategy</span></span>|<span data-ttu-id="1a581-3089">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3089">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3090">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3090">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="1a581-3091">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3091">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="1a581-3092">Переопределение <xref:System.Windows.UIElement.OnPreviewTextInput%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3092">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3093">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewTextInput" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3093">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3094">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3094">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3095">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3095">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3096">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3096">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3097">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3097">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3098">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3098">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3099">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3099">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3100">По умолчанию события <xref:System.Windows.UIElement.PreviewTouchDown> и <xref:System.Windows.UIElement.TouchDown> не возникают, пока палец не касается экрана и не перемещается.</span><span class="sxs-lookup"><span data-stu-id="1a581-3100">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="1a581-3101">Нажатие пальца на экране и удерживания его без перемещения приводит к поведению <xref:System.Windows.Input.Stylus>нажатия и удерживания.</span><span class="sxs-lookup"><span data-stu-id="1a581-3101">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="1a581-3102">Поведение нажатия и удерживания эквивалентно щелчку правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-3102">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="1a581-3103">Чтобы события <xref:System.Windows.UIElement.TouchDown> `false` и происходили, как только палец касается экрана, установите <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> для присоединенного свойства значение для этого элемента. <xref:System.Windows.UIElement.PreviewTouchDown></span><span class="sxs-lookup"><span data-stu-id="1a581-3103">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3104">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3104">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3105">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3105">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="1a581-3106">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3106">Routing strategy</span></span>|<span data-ttu-id="1a581-3107">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3107">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3108">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3108">Delegate</span></span>|<span data-ttu-id="1a581-3109"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3109"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3110">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3110">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="1a581-3111">Переопределение <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3111">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3112">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewTouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3112">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3113">Возникает при перемещении пальца по экрану при условии, если палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3113">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3114">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3114">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3115">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3115">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="1a581-3116">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3116">Routing strategy</span></span>|<span data-ttu-id="1a581-3117">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3117">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3118">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3118">Delegate</span></span>|<span data-ttu-id="1a581-3119"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3119"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3120">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3120">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="1a581-3121">Переопределение <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3121">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3122">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewTouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3122">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3123">Возникает, когда палец отрывается от экрана при условии, что палец находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3123">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3124">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3125">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3125">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="1a581-3126">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3126">Routing strategy</span></span>|<span data-ttu-id="1a581-3127">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="1a581-3127">Tunneling</span></span>|  
|<span data-ttu-id="1a581-3128">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3128">Delegate</span></span>|<span data-ttu-id="1a581-3129"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3129"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3130">Соответствующее событие восходящей маршрутизации — <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3130">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="1a581-3131">Переопределение <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3131">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3132">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.PreviewTouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3132">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3133">Происходит, когда состояние клавиши или кнопки мыши изменяется в ходе операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-3133">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3134">Это <xref:System.Windows.UIElement.QueryContinueDrag> событие позволяет источнику перетаскивания определить, следует ли отменить операцию перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="1a581-3134">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="1a581-3135">Это событие создает псевдоним для <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.QueryContinueDrag> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3135">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3136">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.QueryContinueDrag> событию, присоединяются к <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3136">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3137">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3137">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3138">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3138">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="1a581-3139">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3139">Routing strategy</span></span>|<span data-ttu-id="1a581-3140">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3140">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3141">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3141">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="1a581-3142">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3142">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="1a581-3143">Переопределение <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3143">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3144">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3144">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3145">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3145">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3146">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3146">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3147">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3147">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3148">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3148">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3149">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3149">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3150">Происходит при запросе отображения курсора.</span><span class="sxs-lookup"><span data-stu-id="1a581-3150">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="1a581-3151">Это событие возникает для элемента каждый раз, когда указатель мыши перемещается в новое положение, что может послужить причиной изменения его внешнего вида.</span><span class="sxs-lookup"><span data-stu-id="1a581-3151">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3152">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.QueryCursor> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3152">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3153">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.QueryCursor> событию, присоединяются к <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3153">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3154">Курсор, на который ссылается это имя события, не обязательно является текстовым курсором (иногда называемым точкой вставки).</span><span class="sxs-lookup"><span data-stu-id="1a581-3154">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="1a581-3155">Вместо этого курсор в этом контексте представляет собой объект, объявляющий графическое изображение на экране, связанное с несколькими возможными устройствами ввода или понятиями, связанными с вводом в программировании Windows.</span><span class="sxs-lookup"><span data-stu-id="1a581-3155">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="1a581-3156">Этот объект представлен <xref:System.Windows.Input.Cursor> классом в WPF.</span><span class="sxs-lookup"><span data-stu-id="1a581-3156">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="1a581-3157">Система ввода WPF позволяет изменить этот курсор, если он представляет позицию указателя мыши на экране.</span><span class="sxs-lookup"><span data-stu-id="1a581-3157">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="1a581-3158">Можно использовать предопределенные значения из <xref:System.Windows.Input.Cursors> перечисления или объявить пользовательский курсор в качестве файла изображения.</span><span class="sxs-lookup"><span data-stu-id="1a581-3158">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="1a581-3159">Прослушивание <xref:System.Windows.UIElement.QueryCursor> события не является эффективным приемом для управления курсорами.</span><span class="sxs-lookup"><span data-stu-id="1a581-3159">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="1a581-3160">Вместо этого каждый элемент должен определять собственное поведение курсора с <xref:System.Windows.FrameworkContentElement.Cursor%2A> помощью <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>и.</span><span class="sxs-lookup"><span data-stu-id="1a581-3160">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="1a581-3161">Следует полагаться только <xref:System.Windows.UIElement.QueryCursor> на то, что базовые элементы уровня среды WPF не используются, или в исключительных обстоятельствах, когда определение поведения курсора для отдельных элементов не соответствует вашим потребностям.</span><span class="sxs-lookup"><span data-stu-id="1a581-3161">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="1a581-3162">Дополнительные сведения о реализации поведения курсора в ответ на <xref:System.Windows.UIElement.QueryCursor>см. <xref:System.Windows.Input.QueryCursorEventHandler>в разделе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3162">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3163">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3163">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3164">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3164">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="1a581-3165">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3165">Routing strategy</span></span>|<span data-ttu-id="1a581-3166">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3166">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3167">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3167">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="1a581-3168">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="1a581-3168">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="1a581-3169">Переопределение <xref:System.Windows.UIElement.OnQueryCursor%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3169">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3170">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3170">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3171">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3171">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3172">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3172">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3173">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3173">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3174">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3174">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3175">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3175">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1a581-3176">Объект <see cref="T:System.Windows.RoutedEventArgs" />, который содержит данные события, а также определяет инициируемое событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-3176">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="1a581-3177">Инициирует определенное перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-3177">Raises a specific routed event.</span></span> <span data-ttu-id="1a581-3178">Инициируемое событие <see cref="T:System.Windows.RoutedEvent" /> указывается в предоставленном экземпляре <see cref="T:System.Windows.RoutedEventArgs" /> (как свойство <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> данных этого события).</span><span class="sxs-lookup"><span data-stu-id="1a581-3178">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3179">Параметр типизирован как общий базовый тип для всех перенаправленных данных события, однако данные события должны быть заданы как наиболее конкретный тип данных события, доступный для создаваемого события, поскольку <xref:System.Windows.RoutedEventArgs> производные классы содержат `e` фактические свойства данных, предназначенные для конкретного события при его возникновении.</span><span class="sxs-lookup"><span data-stu-id="1a581-3179">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="1a581-3180"><xref:System.Windows.RoutedEventArgs>не только свойства состояния для события; Он также определяет, какое перенаправленное событие следует вызывать.</span><span class="sxs-lookup"><span data-stu-id="1a581-3180"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="1a581-3181">Этот шаблон генерации событий и данные перенаправленного события отличаются от [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] событий и классов данных, которые обычно содержат только свойства, связанные с событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-3181">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-3182">В следующем примере создаются данные события, добавляется идентификатор события к данным, а затем используется экземпляр данных события для вызова пользовательского перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3182">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-3183">Освобождает все полученные сенсорные устройства для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3183">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-3184">Освобождает мышь, если элемент произвел ее захват.</span><span class="sxs-lookup"><span data-stu-id="1a581-3184">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3185">Если этот элемент не удерживает записи, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="1a581-3185">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="1a581-3186">Рассмотрите возможность проверки значения <xref:System.Windows.UIElement.IsMouseCaptured%2A> перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3186">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-3187">Следующий пример является параллельным с примером, заданным для <xref:System.Windows.UIElement.CaptureMouse%2A>: он обрабатывает кнопку мыши, чтобы освободить захват мыши, и снова включите перемещение мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-3187">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-3188">Освобождает перо, если элемент произвел его захват.</span><span class="sxs-lookup"><span data-stu-id="1a581-3188">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3189">Если этот элемент не удерживает записи, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="1a581-3189">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="1a581-3190">Рассмотрите возможность проверки значения <xref:System.Windows.UIElement.IsStylusCaptured%2A> перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3190">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="1a581-3191">Освобождаемое устройство.</span><span class="sxs-lookup"><span data-stu-id="1a581-3191">The device to release.</span></span></param>
        <summary><span data-ttu-id="1a581-3192">Предпринимает попытку освободить заданное сенсорное устройство из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3192">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="1a581-3193">Значение <see langword="true" />, если устройство сенсорного ввода освобождено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3193"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a581-3194">Свойство <paramref name="touchDevice" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3194"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="1a581-3195">Идентификатор перенаправленного события, к которому прикреплен обработчик.</span><span class="sxs-lookup"><span data-stu-id="1a581-3195">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="1a581-3196">Конкретная реализация удаляемого обработчика из коллекции обработчиков событий этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3196">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="1a581-3197">Удаляет указанный обработчик маршрутизируемого события из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3197">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3198">Чаще всего это [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] происходит при [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] реализации события "оболочки", связанного с пользовательским перенаправленным событием, особенно при реализации [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] логики "Удалить" для обработчиков на уровне.</span><span class="sxs-lookup"><span data-stu-id="1a581-3198">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="1a581-3199">Этот сценарий проиллюстрирован в приведенном ниже разделе «Примечания».</span><span class="sxs-lookup"><span data-stu-id="1a581-3199">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="1a581-3200">Вызов этого метода не оказывает никакого влияния, если отсутствуют обработчики, зарегистрированные с критериями, которые соответствуют входным параметрам для вызова метода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3200">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="1a581-3201">Если присоединено несколько обработчиков, соответствующих критериям, удаляется только первый обработчик в хранилище обработчиков событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-3201">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="1a581-3202">Это поведение согласуется с [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] поведением `-=` оператора.</span><span class="sxs-lookup"><span data-stu-id="1a581-3202">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="1a581-3203">Ни `routedEvent` один `handler` , ни `null`не может быть.</span><span class="sxs-lookup"><span data-stu-id="1a581-3203">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="1a581-3204">Попытка предоставить любое значение как `null` вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="1a581-3204">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="1a581-3205">Этот метод игнорирует `handledEventsToo` сведения о параметрах, которые предоставляются, если обработчик впервые был добавлен <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с подписью, которая позволяет обрабатывать уже обработанные события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3205">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="1a581-3206">Удаляется любой из типов обработчиков.</span><span class="sxs-lookup"><span data-stu-id="1a581-3206">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-3207">В следующем примере используется <xref:System.Windows.UIElement.RemoveHandler%2A> как часть определения оболочки событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-3207">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.RenderSize : System.Windows.Size with get, set" Usage="System.Windows.UIElement.RenderSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3208">Возвращает (или задает) окончательный размер отрисовки этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3208">Gets (or sets) the final render size of this element.</span></span></summary>
        <value><span data-ttu-id="1a581-3209">Отрисовываемый размер этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3209">The rendered size for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a581-3210">Не пытайтесь задать это свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] или в коде при использовании системы макета уровня платформы WPF.</span><span class="sxs-lookup"><span data-stu-id="1a581-3210">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="1a581-3211">Почти все типичные сценарии применения будут использовать эту систему макета.</span><span class="sxs-lookup"><span data-stu-id="1a581-3211">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="1a581-3212">Система макета не учитывает размеры, <xref:System.Windows.UIElement.RenderSize%2A> заданные непосредственно в свойстве.</span><span class="sxs-lookup"><span data-stu-id="1a581-3212">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="1a581-3213">Свойство объявлено как доступное для записи, чтобы обеспечить определенные межуровневые варианты моста WPF, которые намеренно обойти стандартные протоколы макета, такие как поддержка <xref:System.Windows.Documents.Adorner> класса. <xref:System.Windows.UIElement.RenderSize%2A></span><span class="sxs-lookup"><span data-stu-id="1a581-3213">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="1a581-3214">Это свойство можно использовать для проверки применимого размера отрисовки в рамках переопределений системы макета <xref:System.Windows.UIElement.OnRender%2A> , <xref:System.Windows.UIElement.GetLayoutClip%2A>таких как или.</span><span class="sxs-lookup"><span data-stu-id="1a581-3214">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="1a581-3215">Более распространенным сценарием является обработка <xref:System.Windows.FrameworkElement.SizeChanged> события с переопределением обработчика класса <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> или событием.</span><span class="sxs-lookup"><span data-stu-id="1a581-3215">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="1a581-3216">В следующем примере показано, как пользовательский декоративный элемент использует <xref:System.Windows.UIElement.RenderSize%2A> значение для создания и изменения размера прямоугольника, определяющего декоративный элемент, в рамках его <xref:System.Windows.UIElement.OnRender%2A> реализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3216">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.UIElement.RenderTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3217">Получает или задает информацию о преобразовании, которая влияет на позицию отрисовки данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3217">Gets or sets transform information that affects the rendering position of this element.</span></span>  <span data-ttu-id="1a581-3218">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-3218">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-3219">Описывает специфику желаемого преобразования визуализации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3219">Describes the specifics of the desired render transform.</span></span> <span data-ttu-id="1a581-3220">Значение по умолчанию — <see cref="P:System.Windows.Media.Transform.Identity" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3220">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3221">Преобразование «прорисовка» не создает повторно размер макета или сведения о размере отрисовки.</span><span class="sxs-lookup"><span data-stu-id="1a581-3221">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="1a581-3222">Преобразования прорисовки обычно предназначены для анимации или применения временного действия к элементу.</span><span class="sxs-lookup"><span data-stu-id="1a581-3222">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="1a581-3223">Например, элемент может быть крупнее, когда наводится курсор мыши или навестися на нее, или может нагружаться на нагрузку [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], чтобы привлечь внимание к этой части.</span><span class="sxs-lookup"><span data-stu-id="1a581-3223">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-3224">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-3224">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3225">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3225">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="1a581-3226">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-3226">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-3227">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-3227">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransformOrigin : System.Windows.Point with get, set" Usage="System.Windows.UIElement.RenderTransformOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3228">Получает или задает центральную точку любого возможного преобразования при прорисовке, объявленного <see cref="P:System.Windows.UIElement.RenderTransform" /> относительно границ элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3228">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span></span>  <span data-ttu-id="1a581-3229">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-3229">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-3230">Значение, объявляющее преобразование при прорисовке.</span><span class="sxs-lookup"><span data-stu-id="1a581-3230">The value that declares the render transform.</span></span> <span data-ttu-id="1a581-3231">Значение по умолчанию — <see cref="T:System.Windows.Point" /> с координатами (0,0).</span><span class="sxs-lookup"><span data-stu-id="1a581-3231">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3232"><xref:System.Windows.UIElement.RenderTransformOrigin%2A>имеет довольно нестандартное использование <xref:System.Windows.Point> значения Structure, в <xref:System.Windows.Point> котором не представляет абсолютное расположение в системе координат.</span><span class="sxs-lookup"><span data-stu-id="1a581-3232"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="1a581-3233">Вместо этого значения от 0 до 1 обрабатываются как коэффициент для диапазона текущего элемента в каждой оси x, y.</span><span class="sxs-lookup"><span data-stu-id="1a581-3233">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="1a581-3234">Например, значение (0,5, 0,5) приведет к центрированию преобразования прорисовки в элементе, или (1, 1) поместит преобразование прорисовки в нижний правый угол элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3234">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="1a581-3235"><xref:System.Double.NaN>не является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="1a581-3235"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="1a581-3236">Значения, превышающие 0 и 1, также принимаются, и это приводит к более нестандартным эффектам преобразования.</span><span class="sxs-lookup"><span data-stu-id="1a581-3236">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="1a581-3237">Например, если задано значение <xref:System.Windows.UIElement.RenderTransformOrigin%2A> (5, 5), а затем <xref:System.Windows.Media.RotateTransform>применено, точка вращения будет находиться вне границ самого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3237">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="1a581-3238">Преобразование будет вращать элемент вокруг элемента в большом кружке, порожденном снизу справа.</span><span class="sxs-lookup"><span data-stu-id="1a581-3238">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="1a581-3239">Источник может находиться где-либо внутри родительского элемента и, возможно, находится вне рамки или представления.</span><span class="sxs-lookup"><span data-stu-id="1a581-3239">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="1a581-3240">Отрицательные значения точек похожи, они выходят за пределы верхней левой границы.</span><span class="sxs-lookup"><span data-stu-id="1a581-3240">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="1a581-3241">Преобразования прорисовки не влияют на макет и обычно используются для анимации или применения временного воздействия на элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3241">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1a581-3242">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-3242">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="1a581-3243">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-3243">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="1a581-3244">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="1a581-3244">XAML Values</span></span>  
 <span data-ttu-id="1a581-3245">*ксоригин*</span><span class="sxs-lookup"><span data-stu-id="1a581-3245">*xOrigin*</span></span>  
 <span data-ttu-id="1a581-3246">Коэффициент горизонтального источника.</span><span class="sxs-lookup"><span data-stu-id="1a581-3246">The horizontal origin factor.</span></span> <span data-ttu-id="1a581-3247">Обычно это значение указывается в диапазоне от 0 до 1.</span><span class="sxs-lookup"><span data-stu-id="1a581-3247">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="1a581-3248">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="1a581-3248">See Remarks.</span></span>  
  
 <span data-ttu-id="1a581-3249">*йоригин*</span><span class="sxs-lookup"><span data-stu-id="1a581-3249">*yOrigin*</span></span>  
 <span data-ttu-id="1a581-3250">Вертикальный коэффициент источника.</span><span class="sxs-lookup"><span data-stu-id="1a581-3250">The vertical origin factor.</span></span> <span data-ttu-id="1a581-3251">Обычно это значение указывается в диапазоне от 0 до 1.</span><span class="sxs-lookup"><span data-stu-id="1a581-3251">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="1a581-3252">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="1a581-3252">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-3253">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-3253">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3254">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3254">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="1a581-3255">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-3255">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-3256">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-3256">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-3257">Следующий пример создает элементы в коде, применяет <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, а затем <xref:System.Windows.UIElement.RenderTransform%2A>применяет.</span><span class="sxs-lookup"><span data-stu-id="1a581-3257">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformOriginProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3258">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.RenderTransformOrigin" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3258">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3259">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.RenderTransform" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3259">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-3260">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.UIElement.CommandBindings" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-3260">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="1a581-3261">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.UIElement.CommandBindings" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3261"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3262">Это приведет к `true` возврату, если <xref:System.Windows.UIElement.CommandBindings%2A> установлен локально.</span><span class="sxs-lookup"><span data-stu-id="1a581-3262">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="1a581-3263">Этот `ShouldSerialize` метод предоставляется, <xref:System.Windows.UIElement.CommandBindings%2A> поскольку свойство не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-3263">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="1a581-3264">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-3264">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="1a581-3265">Этот метод обычно вызывается при разработке конструктора или при разработке собственного элемента управления, <xref:System.Windows.UIElement>включающего.</span><span class="sxs-lookup"><span data-stu-id="1a581-3265">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-3266">Дополнительные сведения см. [в разделе Определение значений по умолчанию с помощью методов ShouldSerialize и Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3266">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-3267">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.UIElement.InputBindings" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="1a581-3267">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="1a581-3268">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.UIElement.InputBindings" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3268"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3269">Это приведет к `true` возврату, если <xref:System.Windows.UIElement.InputBindings%2A> установлен локально.</span><span class="sxs-lookup"><span data-stu-id="1a581-3269">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="1a581-3270">Этот `ShouldSerialize` метод предоставляется, <xref:System.Windows.UIElement.InputBindings%2A> поскольку свойство не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-3270">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="1a581-3271">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a581-3271">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="1a581-3272">Этот метод обычно вызывается при разработке конструктора или при разработке собственного элемента управления, <xref:System.Windows.UIElement>включающего.</span><span class="sxs-lookup"><span data-stu-id="1a581-3272">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a581-3273">Дополнительные сведения см. [в разделе Определение значений по умолчанию с помощью методов ShouldSerialize и Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3273">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3274">Получает или задает значение, определяющее, должны ли использоваться параметры пикселей для определенного устройства при отрисовке.</span><span class="sxs-lookup"><span data-stu-id="1a581-3274">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span></span>  <span data-ttu-id="1a581-3275">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-3275">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-3276">Значение <see langword="true" />, если элемент должен отрисовываться соответствии с пикселями устройства; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3276"><see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a581-3277">Значение по умолчанию, объявленное в <see cref="T:System.Windows.UIElement" />, — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3277">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3278">Для этого свойства `true` можно задать значение в корневом элементе, чтобы включить отрисовку привязки пикселей в пользовательском интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3278">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="1a581-3279">Для устройств, работающих на более чем [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]96, отрисовка привязки пикселей может привести к минимуму визуальных артефактов для сглаживания в одномодульных сплошных линиях.</span><span class="sxs-lookup"><span data-stu-id="1a581-3279">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="1a581-3280">При наследовании <xref:System.Windows.FrameworkElement> с помощью или любых возможных производных <xref:System.Windows.FrameworkElement> классов переопределяет метаданные для этого свойства <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> зависимостей, чтобы задать для `true`свойства метаданных значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-3280">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="1a581-3281">Это достигается тем, что только внешний элемент в <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> поддереве должен указываться как `true`, а все дочерние элементы этого `true` поддерева будут <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> получать <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> визуальный результат.</span><span class="sxs-lookup"><span data-stu-id="1a581-3281">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-3282">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-3282">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3283">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3283">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="1a581-3284">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-3284">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-3285">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-3285">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/aa970908(v=vs.90)"><span data-ttu-id="1a581-3286">Привязка пикселей в приложениях WPF</span><span class="sxs-lookup"><span data-stu-id="1a581-3286">Pixel Snapping in WPF Applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3287">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3287">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3288">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3288">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3289">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusButtonDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3289">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3290">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusButtonDown> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3290">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3291">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3291">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3292">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3292">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3293">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3293">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3294">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3294">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="1a581-3295">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3295">Routing strategy</span></span>|<span data-ttu-id="1a581-3296">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3296">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3297">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3297">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-3298">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3298">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="1a581-3299">Переопределение <xref:System.Windows.UIElement.OnStylusButtonDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3299">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3300">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3300">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3301">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3301">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3302">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3303">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3303">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3304">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3304">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3305">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3305">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3306">Происходит при отпускании кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3306">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3307">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusButtonUp> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3307">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3308">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusButtonUp> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3308">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3309">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3309">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3310">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3310">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3311">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3312">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3312">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="1a581-3313">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3313">Routing strategy</span></span>|<span data-ttu-id="1a581-3314">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3314">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3315">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3315">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="1a581-3316">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3316">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="1a581-3317">Переопределение <xref:System.Windows.UIElement.OnStylusButtonUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3317">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3318">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3318">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3319">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3319">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3320">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3320">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3321">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3321">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3322">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3322">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3323">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3323">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3324">Происходит при касании дигитайзера пером в тот момент, когда оно находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3324">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3325">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusDown> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3325">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3326">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusDown> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3326">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3327">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3327">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3328">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3328">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3329">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3330">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3330">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="1a581-3331">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3331">Routing strategy</span></span>|<span data-ttu-id="1a581-3332">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3332">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3333">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="1a581-3334">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3334">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="1a581-3335">Переопределение <xref:System.Windows.UIElement.OnStylusDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3335">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3336">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3336">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3337">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3337">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3338">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3338">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3339">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3339">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3340">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3340">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3341">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3341">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3342">Происходит, когда перо попадает внутрь границ данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3342">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3343"><xref:System.Windows.UIElement.StylusEnter>— Это [перенаправленное событие](~/docs/framework/wpf/advanced/routed-events-overview.md) , использующее стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-3343"><xref:System.Windows.UIElement.StylusEnter> is a [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="1a581-3344">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="1a581-3344">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="1a581-3345">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="1a581-3345">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="1a581-3346">Несмотря <xref:System.Windows.UIElement.StylusEnter> на то, <xref:System.Windows.UIElement.IsStylusOver%2A> что отслеживается, когда перо входит в границы элемента, это событие более буквально сообщает, что `true` значение свойства изменилось с `false` на в данном элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3346">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="1a581-3347">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusEnter> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3347">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3348">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusEnter> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3348">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3349">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3349">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3350">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3350">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3351">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3351">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3352">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3352">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="1a581-3353">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3353">Routing strategy</span></span>|<span data-ttu-id="1a581-3354">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-3354">Direct</span></span>|  
|<span data-ttu-id="1a581-3355">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3355">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3356">Переопределение <xref:System.Windows.UIElement.OnStylusEnter%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3356">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3357">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3357">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3358">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3358">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3359">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3359">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3360">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3360">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3361">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3361">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3362">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3362">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3363">Происходит при движении пера над элементом без касания дигитайзера.</span><span class="sxs-lookup"><span data-stu-id="1a581-3363">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3364">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusInAirMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3364">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3365">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusInAirMove> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3365">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3366">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3366">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3367">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3367">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3368">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3368">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3369">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3369">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="1a581-3370">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3370">Routing strategy</span></span>|<span data-ttu-id="1a581-3371">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3371">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3372">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3372">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3373">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3373">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="1a581-3374">Переопределение <xref:System.Windows.UIElement.OnStylusInAirMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3374">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3375">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3375">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3376">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3376">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3377">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3377">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3378">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3378">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3379">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3379">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3380">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3380">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3381">Происходит при нахождении пера над данным элементом достаточно близко для того, чтобы перо было обнаружено дигитайзером.</span><span class="sxs-lookup"><span data-stu-id="1a581-3381">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3382">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusInRange> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3382">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3383">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusInRange> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3383">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3384">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3384">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3385">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3385">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3386">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3386">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3387">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3387">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="1a581-3388">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3388">Routing strategy</span></span>|<span data-ttu-id="1a581-3389">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3389">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3390">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3390">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3391">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3391">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="1a581-3392">Переопределение <xref:System.Windows.UIElement.OnStylusInRange%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3392">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3393">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3393">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3394">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3394">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3395">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3395">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3396">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3396">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3397">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3397">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3398">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3398">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3399">Происходит, когда перо покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3399">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3400"><xref:System.Windows.UIElement.StylusLeave>— Это [перенаправленное событие](~/docs/framework/wpf/advanced/routed-events-overview.md) , использующее стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="1a581-3400"><xref:System.Windows.UIElement.StylusLeave> is a [routed event](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="1a581-3401">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="1a581-3401">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="1a581-3402">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="1a581-3402">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="1a581-3403">Несмотря <xref:System.Windows.UIElement.StylusLeave> на то, <xref:System.Windows.UIElement.IsStylusOver%2A> что отслеживается, когда перо покидает границы элемента, это событие более буквально сообщает, что `false` значение свойства изменилось с `true` на в данном элементе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3403">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="1a581-3404">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusLeave> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3404">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3405">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusLeave> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3405">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3406">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3406">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3407">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3407">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3408">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3408">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3409">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3409">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="1a581-3410">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3410">Routing strategy</span></span>|<span data-ttu-id="1a581-3411">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-3411">Direct</span></span>|  
|<span data-ttu-id="1a581-3412">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3412">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3413">Переопределение <xref:System.Windows.UIElement.OnStylusLeave%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3413">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3414">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3414">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3415">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3415">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3416">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3416">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3417">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3417">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3418">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3418">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3419">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3419">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3420">Происходит при движении пера над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3420">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="1a581-3421">Для вызова этого события перо должно перемещаться по дигитайзеру.</span><span class="sxs-lookup"><span data-stu-id="1a581-3421">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="1a581-3422">В противном случае вызывается событие <see cref="E:System.Windows.UIElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3422">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3423">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusMove> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3423">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3424">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusMove> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3424">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3425">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3425">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3426">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3426">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3427">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3428">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3428">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="1a581-3429">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3429">Routing strategy</span></span>|<span data-ttu-id="1a581-3430">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3430">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3431">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3431">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3432">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3432">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="1a581-3433">Переопределение <xref:System.Windows.UIElement.OnStylusMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3433">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3434">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3434">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3435">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3435">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3436">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3436">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3437">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3437">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3438">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3438">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3439">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3439">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3440">Возникает, когда расстояние между пером и дигитайзером слишком велико для обнаружения пера при условии, что перо находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3440">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3441">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusOutOfRange> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3441">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3442">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusOutOfRange> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3442">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3443">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3443">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3444">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3444">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3445">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3445">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3446">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3446">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="1a581-3447">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3447">Routing strategy</span></span>|<span data-ttu-id="1a581-3448">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3448">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3449">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3449">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3450">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3450">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="1a581-3451">Переопределение <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3451">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3452">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3452">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3453">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3453">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3454">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3454">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3455">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3455">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3456">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3456">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3457">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3457">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StylusPlugIns : System.Windows.Input.StylusPlugIns.StylusPlugInCollection" Usage="System.Windows.UIElement.StylusPlugIns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3458">Возвращает коллекцию всех подключаемых (настраиваемых) объектов пера, связанных с данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3458">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="1a581-3459">Коллекция подключаемых объектов пера, как специализированная коллекция.</span><span class="sxs-lookup"><span data-stu-id="1a581-3459">The collection of stylus plug-ins, as a specialized collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3460">Примером элемента управления, который заполняет эту коллекцию, является <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3460">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="1a581-3461"><xref:System.Windows.Controls.InkCanvas>Добавляет объект в <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> качествеэлементаколлекции,которыйпозволяеткомпонентувзаимодействоватьсвводомспомощьюпераисоздаватьуникальнуюотрисовкувответнасобытия<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> , управляемые пером.</span><span class="sxs-lookup"><span data-stu-id="1a581-3461"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="1a581-3462">Сведения о создании пользовательских подключаемых модулей, которые могут принимать и интерпретировать ввод с помощью пера, см. в разделе [перехват входных данных пера](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3462">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a581-3463">В следующем примере создается <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> экземпляр и добавляется <xref:System.Windows.UIElement.StylusPlugIns%2A> в коллекцию для пользовательского элемента управления обработки рукописного ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3463">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3464">Происходит при использовании пользователем одного из жестов пером.</span><span class="sxs-lookup"><span data-stu-id="1a581-3464">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3465">Дополнительные сведения о жестах пера см. в <xref:System.Windows.Input.SystemGesture>разделе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3465">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="1a581-3466">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusSystemGesture> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3466">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3467">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusSystemGesture> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3467">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3468">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3468">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3469">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3469">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3470">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3470">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3471">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3471">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="1a581-3472">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3472">Routing strategy</span></span>|<span data-ttu-id="1a581-3473">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3473">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3474">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3474">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="1a581-3475">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3475">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="1a581-3476">Переопределение <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3476">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3477">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3477">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3478">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3478">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3479">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3479">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3480">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3480">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3481">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3481">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3482">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3482">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3483">Происходит, когда пользователь отрывает перо от поверхности дигитайзера в тот момент, когда оно находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3483">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3484">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.StylusUp> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3484">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3485">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.StylusUp> событию, присоединяются к <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3485">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="1a581-3486">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="1a581-3486">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="1a581-3487">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a581-3487">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3488">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3488">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3489">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3489">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="1a581-3490">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3490">Routing strategy</span></span>|<span data-ttu-id="1a581-3491">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3491">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3492">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3492">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="1a581-3493">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3493">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="1a581-3494">Переопределение <xref:System.Windows.UIElement.OnStylusUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3494">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3495">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3495">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3496">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3496">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3497">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3497">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3498">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3498">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3499">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3499">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3500">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3500">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3501">Происходит при получении этим элементом текста аппаратно-независимым способом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3501">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a581-3502">Это событие может уже быть помечено как обработанное внутренними реализациями составных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-3502">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="1a581-3503">См. Примечание ниже.</span><span class="sxs-lookup"><span data-stu-id="1a581-3503">See Remark below.</span></span>  
  
 <span data-ttu-id="1a581-3504"><xref:System.Windows.UIElement.TextInput> Событие может уже быть помечено как обработанное внутренними реализациями составных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-3504">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="1a581-3505">Например, <xref:System.Windows.Controls.TextBox> представляет собой составной элемент управления, в <xref:System.Windows.UIElement.TextInput> котором событие уже помечено как обработанное; в его композиции.</span><span class="sxs-lookup"><span data-stu-id="1a581-3505">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="1a581-3506">Это делается потому, что элемент управления должен интерпретировать некоторые типы входных данных, например клавиши со стрелками, которые имеют специальное значение для этого элемента управления.</span><span class="sxs-lookup"><span data-stu-id="1a581-3506">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="1a581-3507">Если вы используете <xref:System.Windows.UIElement.PreviewTextInput> в качестве события, когда вы подключаете обработчики для ввода текста, вы можете получить лучшие результаты.</span><span class="sxs-lookup"><span data-stu-id="1a581-3507">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="1a581-3508">Этот метод обходит большинство случаев, когда композиция элементов управления уже пометила это событие как обработанное и не дает обработчику получать событие в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3508">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="1a581-3509">Это <xref:System.Windows.UIElement.TextInput> событие позволяет компоненту или приложению ожидать ввода текста независимым от устройства образом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3509">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="1a581-3510">Клавиатура является основным средством <xref:System.Windows.UIElement.TextInput>, но также может вызываться <xref:System.Windows.UIElement.TextInput>распознавание речи, рукописного текста и другие устройства ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3510">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="1a581-3511">Из-за сочетаний клавиш — либо на клавиатуре по умолчанию, либо с помощью редакторов методов ввода. несколько ключевых событий могут вызывать только одно событие текстового ввода.</span><span class="sxs-lookup"><span data-stu-id="1a581-3511">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="1a581-3512">Это событие создает псевдоним для <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> присоединенного события для этого класса, так что <xref:System.Windows.UIElement.TextInput> является частью списка членов класса, если <xref:System.Windows.UIElement> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3512">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="1a581-3513">Обработчики событий, присоединенные к <xref:System.Windows.UIElement.TextInput> событию, присоединяются к <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> базовому присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3513">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3514">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3515">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3515">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="1a581-3516">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3516">Routing strategy</span></span>|<span data-ttu-id="1a581-3517">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3517">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3518">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3518">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="1a581-3519">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3519">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="1a581-3520">Переопределение <xref:System.Windows.UIElement.OnTextInput%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3520">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3521">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.TextInput" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3521">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3522">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="1a581-3522">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="1a581-3523">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="1a581-3523">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="1a581-3524">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3524">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="1a581-3525">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3525">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="1a581-3526">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3526">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3527">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3527">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3528">По умолчанию события <xref:System.Windows.UIElement.PreviewTouchDown> и <xref:System.Windows.UIElement.TouchDown> не возникают, пока палец не касается экрана и не перемещается.</span><span class="sxs-lookup"><span data-stu-id="1a581-3528">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="1a581-3529">Нажатие пальца на экране и удерживания его без перемещения приводит к поведению <xref:System.Windows.Input.Stylus>нажатия и удерживания.</span><span class="sxs-lookup"><span data-stu-id="1a581-3529">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="1a581-3530">Поведение нажатия и удерживания эквивалентно щелчку правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="1a581-3530">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="1a581-3531">Чтобы события <xref:System.Windows.UIElement.TouchDown> `false` и происходили, как только палец касается экрана, установите <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> для присоединенного свойства значение для этого элемента. <xref:System.Windows.UIElement.PreviewTouchDown></span><span class="sxs-lookup"><span data-stu-id="1a581-3531">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3532">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3532">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3533">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3533">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="1a581-3534">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3534">Routing strategy</span></span>|<span data-ttu-id="1a581-3535">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3535">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3536">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3536">Delegate</span></span>|<span data-ttu-id="1a581-3537"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3537"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3538">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3538">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="1a581-3539">Переопределение <xref:System.Windows.UIElement.OnTouchDown%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3539">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3540">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.TouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3540">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3541">Происходит при перемещении касания внутрь данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3541">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3542">Это событие всегда вызывается, независимо от того, захвачено ли сенсорное устройство данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3542">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3543">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3543">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3544">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3544">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="1a581-3545">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3545">Routing strategy</span></span>|<span data-ttu-id="1a581-3546">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-3546">Direct</span></span>|  
|<span data-ttu-id="1a581-3547">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3547">Delegate</span></span>|<span data-ttu-id="1a581-3548"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3548"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3549">Переопределение <xref:System.Windows.UIElement.OnTouchEnter%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3549">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3550">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.TouchEnter" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3550">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3551">Получает все сенсорные устройства, переданные в данный элемент.</span><span class="sxs-lookup"><span data-stu-id="1a581-3551">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="1a581-3552">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, полученных этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3553">Получает все сенсорные устройства, переданные в этот элемент или какой-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-3553">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="1a581-3554">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, полученных этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3555">Получает все сенсорные устройства, находящиеся над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3555">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="1a581-3556">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, находящихся над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3556">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3557">Получает все сенсорные устройства, находящиеся над этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-3557">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="1a581-3558">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, которые находятся над этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="1a581-3558">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3559">Происходит при перемещении касания за границы элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3559">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3560">Это событие всегда вызывается, независимо от того, захвачено ли сенсорное устройство данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3560">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3561">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3561">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3562">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3562">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="1a581-3563">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3563">Routing strategy</span></span>|<span data-ttu-id="1a581-3564">Direct</span><span class="sxs-lookup"><span data-stu-id="1a581-3564">Direct</span></span>|  
|<span data-ttu-id="1a581-3565">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3565">Delegate</span></span>|<span data-ttu-id="1a581-3566"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3566"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3567">Переопределение <xref:System.Windows.UIElement.OnTouchLeave%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3567">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3568">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.TouchLeave" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3568">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3569">Возникает при перемещении пальца по экрану при условии, если палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3569">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3570">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3571">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3571">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="1a581-3572">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3572">Routing strategy</span></span>|<span data-ttu-id="1a581-3573">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3573">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3574">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3574">Delegate</span></span>|<span data-ttu-id="1a581-3575"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3575"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3576">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3576">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="1a581-3577">Переопределение <xref:System.Windows.UIElement.OnTouchMove%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3577">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3578">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.TouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3578">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3579">Возникает, когда палец отрывается от экрана при условии, что палец находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="1a581-3579">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="1a581-3580">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="1a581-3580">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3581">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3581">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="1a581-3582">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3582">Routing strategy</span></span>|<span data-ttu-id="1a581-3583">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="1a581-3583">Bubbling</span></span>|  
|<span data-ttu-id="1a581-3584">делегат</span><span class="sxs-lookup"><span data-stu-id="1a581-3584">Delegate</span></span>|<span data-ttu-id="1a581-3585"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3585"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="1a581-3586">Соответствующее событие туннелирования — <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3586">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="1a581-3587">Переопределение <xref:System.Windows.UIElement.OnTouchUp%2A> для реализации обработки класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="1a581-3587">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3588">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement.TouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3588">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.TranslatePoint : System.Windows.Point * System.Windows.UIElement -&gt; System.Windows.Point" Usage="uIElement.TranslatePoint (point, relativeTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="1a581-3589">Значение точки относительно данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3589">The point value, as relative to this element.</span></span></param>
        <param name="relativeTo"><span data-ttu-id="1a581-3590">Элемент, в который преобразуется данная точка.</span><span class="sxs-lookup"><span data-stu-id="1a581-3590">The element to translate the given point into.</span></span></param>
        <summary><span data-ttu-id="1a581-3591">Преобразует точку относительно данного элемента в координаты относительно указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3591">Translates a point relative to this element to coordinates that are relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="1a581-3592">Значение точки, которое теперь задано относительно целевого элемента, а не исходного.</span><span class="sxs-lookup"><span data-stu-id="1a581-3592">A point value, now relative to the target element rather than this source element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3593">Передача `null`в разрешена и указывает, что координаты должны относиться к корневому элементу логического дерева, к которому принадлежит этот элемент. `relativeTo`</span><span class="sxs-lookup"><span data-stu-id="1a581-3593">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="1a581-3594">Этот метод используется для преобразования значений точки проверки попадания.</span><span class="sxs-lookup"><span data-stu-id="1a581-3594">This method is used for translating hit test point values.</span></span> <span data-ttu-id="1a581-3595">Вызов этого метода в основном применяется при разработке элемента управления и необходимости обрабатывать входные данные на более низком уровне.</span><span class="sxs-lookup"><span data-stu-id="1a581-3595">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="1a581-3596">Если используются существующие элементы управления, можно предположить, что завершенные элементы управления будут сообщать о результатах проверки нажатия правильно.</span><span class="sxs-lookup"><span data-stu-id="1a581-3596">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uid : string with get, set" Usage="System.Windows.UIElement.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3597">Возвращает или задает уникальный идентификатор (в целях локализации) для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3597">Gets or sets the unique identifier (for localization) for this element.</span></span> <span data-ttu-id="1a581-3598">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-3598">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-3599">Строка, представляющая уникальный идентификатор для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3599">A string that is the unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3600">Используется конструкторами для получения `x:Uid` значения (Дополнительные сведения см. в разделе Общие сведения [о глобализации и локализации WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) ).</span><span class="sxs-lookup"><span data-stu-id="1a581-3600">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-3601">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-3601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3602">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3602">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="1a581-3603">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-3603">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-3604">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-3604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/81defade-483b-4a89-b76d-9b25bba34010"><span data-ttu-id="1a581-3605">Атрибут x:Uid</span><span class="sxs-lookup"><span data-stu-id="1a581-3605">x:Uid Attribute</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UidProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.UidProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3606">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.Uid" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3606">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberSignature Language="F#" Value="member this.UpdateLayout : unit -&gt; unit" Usage="uIElement.UpdateLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a581-3607">Обеспечивает правильное обновление всех визуальных дочерних элементов данного элемента для структуры.</span><span class="sxs-lookup"><span data-stu-id="1a581-3607">Ensures that all visual child elements of this element are properly updated for layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3608">При вызове этого метода элементы с или <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` <xref:System.Windows.UIElement.IsArrangeValid%2A> будут вызывать методы и <xref:System.Windows.UIElement.ArrangeCore%2A> для конкретного <xref:System.Windows.UIElement.MeasureCore%2A> элемента, что приводит к `false` пометке обновления макета, и все вычисленные размеры будут проверены.</span><span class="sxs-lookup"><span data-stu-id="1a581-3608">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="1a581-3609">Вызов этого метода не оказывает никакого влияния, если макет не изменяется, или если ни расположение, ни состояние измерения макета не являются допустимыми.</span><span class="sxs-lookup"><span data-stu-id="1a581-3609">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="1a581-3610">Однако если макет недействителен в отношении, <xref:System.Windows.UIElement.UpdateLayout%2A> вызов будет повторять весь макет.</span><span class="sxs-lookup"><span data-stu-id="1a581-3610">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="1a581-3611">Поэтому следует избегать вызова <xref:System.Windows.UIElement.UpdateLayout%2A> после каждого добавочного и незначительного изменения в дереве элементов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3611">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="1a581-3612">Система макета будет выполнять компоновку элементов отложенным способом, используя алгоритм, который распределяет производительность и валюту, а также стратегию взвешивания, которая откладывает изменения в корни, пока все дочерние элементы не станут допустимыми.</span><span class="sxs-lookup"><span data-stu-id="1a581-3612">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="1a581-3613">Следует вызывать <xref:System.Windows.UIElement.UpdateLayout%2A> только в том случае, если вам совершенно нужны обновленные размеры и позиции, и только после того, как вы уверены, что все изменения свойств, которые вы управляете и которые могут повлиять на макет, завершены.</span><span class="sxs-lookup"><span data-stu-id="1a581-3613">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3614">Возвращает или задает видимость [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] данного элемента.</span><span class="sxs-lookup"><span data-stu-id="1a581-3614">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span>  <span data-ttu-id="1a581-3615">Это свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="1a581-3615">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="1a581-3616">Значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="1a581-3616">A value of the enumeration.</span></span> <span data-ttu-id="1a581-3617">Значение по умолчанию — <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3617">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a581-3618">Установка этого свойства влияет на значение <xref:System.Windows.UIElement.IsVisible%2A>, которое, в свою очередь, может <xref:System.Windows.UIElement.IsVisibleChanged> вызвать событие.</span><span class="sxs-lookup"><span data-stu-id="1a581-3618">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="1a581-3619"><xref:System.Windows.UIElement.IsVisible%2A> Однако имеет другие факторы, влияющие на него, например параметры видимости родительских элементов, содержащих его.</span><span class="sxs-lookup"><span data-stu-id="1a581-3619">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="1a581-3620">Элементы, <xref:System.Windows.UIElement.Visibility%2A> где <xref:System.Windows.Visibility.Visible> не участвуют в событиях ввода (или командах), не влияют ни на меру, ни на перекомпоновку макета, а не на последовательность табуляции и не будут выводиться при проверке нажатия.</span><span class="sxs-lookup"><span data-stu-id="1a581-3620">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="1a581-3621">Если наследуется от <xref:System.Windows.Window> или его производными классами, <xref:System.Windows.Window> переопределяет значение этого свойства по умолчанию на <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3621">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="1a581-3622">Это влияет на то, что не выполняет проход меры Layout в изначально созданном <xref:System.Windows.Window>экземпляре, и <xref:System.Windows.UIElement.RenderSize%2A> возвращает (0, 0).</span><span class="sxs-lookup"><span data-stu-id="1a581-3622">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="1a581-3623">Дополнительные сведения см. в разделе <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="1a581-3623">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="1a581-3624"><xref:System.Windows.Controls.Primitives.Popup>также переопределяет значение по умолчанию на <xref:System.Windows.Visibility.Collapsed>, аналогичное результирующее поведение для <xref:System.Windows.Controls.Primitives.Popup> и его производных классов.</span><span class="sxs-lookup"><span data-stu-id="1a581-3624"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a581-3625">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="1a581-3625">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a581-3626">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="1a581-3626">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="1a581-3627">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="1a581-3627">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a581-3628">Нет</span><span class="sxs-lookup"><span data-stu-id="1a581-3628">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a581-3629">В следующем примере реализуется обработчик, который ссылается на две различные именованные кнопки, которые должны быть взаимоисключающими парами в пользовательском интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="1a581-3629">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="1a581-3630">Перед выполнением фактической логики программы, связанной с кнопкой, сама кнопка имеет значение <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, а вторая кнопка в паре имеет <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="1a581-3630">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a581-3631">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement.Visibility" />.</span><span class="sxs-lookup"><span data-stu-id="1a581-3631">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
