<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2affaffb58c8ad42bd8dd92cf2c42183f7a9fa26" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64184936" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="f8b0f-101">Объект, к которому присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="f8b0f-102">Данные события.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-102">The event data.</span></span></param>
    <summary><span data-ttu-id="f8b0f-103">Представляет метод обработки перенаправленного события <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-103">Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b0f-104">Обработка этого события обычно доступен только в элементах, которые поддерживают прокручиваемую область, или в противном случае намеренно задать их размер отрисовки меньше, чем объединенным требуемого размера своих дочерних элементов и выполняется только с помощью намеренно обработки событие после его направил вверх в дереве элементов и был достигнут первый родительский элемент, который поддерживает прокрутки области.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-104">Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</span></span> <span data-ttu-id="f8b0f-105">Существующую реализацию, обрабатывающем области прокрутки таким образом, обычно желательно для пользовательских элементов управления является <xref:System.Windows.Controls.ScrollViewer>.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-105">An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is <xref:System.Windows.Controls.ScrollViewer>.</span></span> <span data-ttu-id="f8b0f-106">Если вы наследуете от <xref:System.Windows.Controls.ScrollViewer>, вы можете зарегистрировать обработчик класса для <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> и дополнять обработку базового класса события.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-106">If you derive from <xref:System.Windows.Controls.ScrollViewer>, you can register a class handler for <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> and supplement the base class handling of the event.</span></span> <span data-ttu-id="f8b0f-107">Также следует рассмотреть использование или обработку класса, определенный классом <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> событий вместо <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-107">You should also consider using or class-handling the class-defined <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> event instead of <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f8b0f-108">Кроме того при создании полностью пользовательского класса, который является производным от <xref:System.Windows.Controls.ScrollViewer>, по-прежнему можно добавить обработку путем вызова класса <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> при создании экземпляра вашего класса.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-108">Alternatively, if you create an entirely custom class that does not derive from <xref:System.Windows.Controls.ScrollViewer>, you can still add class handling by calling <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in your class instantiation.</span></span>  <span data-ttu-id="f8b0f-109">Дополнительные сведения об обработке классов, см. в разделе [маркировка перенаправленных событий как обработанных и обработка классов](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="f8b0f-109">For details on class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="f8b0f-110">Элементы содержимого может вызвать событие, которое инициируется их содержимого узлами (через вызов метода <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> и вызов <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> от узла содержимого).</span><span class="sxs-lookup"><span data-stu-id="f8b0f-110">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="f8b0f-111">Аналогичным образом, вы можете запросить логическое дерево элементов можно сделать с помощью вспомогательного метода <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-111">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8b0f-112">Объект <xref:System.Windows.Controls.ListBox> реализует метод родственная, но разные <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8b0f-112">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>