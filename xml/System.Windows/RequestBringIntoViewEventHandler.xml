<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b2bebc4347724651ad241b6ae267701b98787ca" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69433660" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Объект, к которому присоединен обработчик событий.</param>
    <param name="e">Данные события.</param>
    <summary>Представляет метод обработки перенаправленного события <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обработка этого события обычно выполняется только в элементах, поддерживающих прокручиваемую область, или, в противном случае, намеренно устанавливает размер отрисовки меньше, чем Общий требуемый размер их содержимого дочернего элемента, и выполняется только намеренно обрабатывая событие после того, как оно направляется вверх в дереве элементов и достиг первого родителя, который обеспечивает поддержку области прокрутки. Существующая реализация, которая обрабатывает области прокрутки способом, который обычно желательно для пользовательских элементов управления <xref:System.Windows.Controls.ScrollViewer>. Если вы наследуете <xref:System.Windows.Controls.ScrollViewer>от, можно зарегистрировать обработчик класса для <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> и дополнить обработку события базовым классом. Следует также рассмотреть возможность использования или обработки класса события, определенного <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> классом, <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>а не. Кроме того, при создании полностью настраиваемого класса, который не является производным <xref:System.Windows.Controls.ScrollViewer>от, можно по-прежнему добавлять обработку класса <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> путем вызова в экземпляре класса.  Дополнительные сведения об обработке классов см. в разделе Маркировка перенаправленных [событий как обработанных и обработка классов](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Элементы содержимого могут вызвать событие в узлах содержимого (путем вызова <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> и вызова <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> из узла содержимого). Аналогичным образом можно запросить элементы логического дерева, которые будут добавлены в представление с помощью вспомогательного метода <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.  
  
 В <xref:System.Windows.Controls.ListBox> реализуется связанный, но другой <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>метод.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>
