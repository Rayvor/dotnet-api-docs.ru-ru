<Type Name="ValidateValueCallback" FullName="System.Windows.ValidateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f7b3e0030b2c43f1eb9000ae8a892ad64d5e686" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64184104" /></Metadata><TypeSignature Language="C#" Value="public delegate bool ValidateValueCallback(object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValidateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateValueCallback(value As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool ValidateValueCallback(System::Object ^ value);" />
  <TypeSignature Language="F#" Value="type ValidateValueCallback = delegate of obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="value">Значение, подлежащий проверке.</param>
    <summary>Представляет метод, используемый как обратный вызов, проверяющий фактическое значение свойства зависимостей.</summary>
    <returns><see langword="true" /> если значение допустимо; <see langword="false" /> если значение не является допустимым.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратные вызовы, на основе этого делегата используются определенные подписи <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> и связанные методы, такие как <xref:System.Windows.DependencyProperty.RegisterAttached%2A> и эквиваленты только для чтения. Следует использовать сигнатуры, принимающие `validateValueCallback` параметр, если требуется, чтобы специальные проверочные значения свойства при каждом его эффективного. Затем следует реализовать этот обратный вызов, таким образом, что он выполняет непосредственной проверки предложенное значение. Обратный вызов должен возвращать `true` Если допустимо значение, переданное методу обратного вызова, и `false` в противном случае. Объект `false` значение будет создавать исключение в конкретную часть системы свойств, где была предпринята попытка присвоить недопустимое значение, поэтому приложения должны быть готовы обрабатывать эти исключения.  
  
 Обратные вызовы проверки, хранятся на идентификаторов свойств зависимостей, а не метаданные свойства зависимостей. Ответ проверки не имеет доступа к определенному экземпляру <xref:System.Windows.DependencyObject> на это свойство и может влиять только на какие значения допустимы для свойства в целом. Если вам требуется обратный вызов, который можно изменить значения свойств, в зависимости от конкретного экземпляра, следует использовать сочетание <xref:System.Windows.CoerceValueCallback> и <xref:System.Windows.PropertyChangedCallback> обратные вызовы, применительно к метаданные свойства. Можно также применить эти обратные вызовы к свойствам, которые должны влиять на значения свойства. Дополнительные сведения см. в разделе [проверка и обратные вызовы свойства зависимостей](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).  
  
   
  
## Examples  
 Следующий пример содержит реализацию этого обратного вызова для проверки диапазона значений для настраиваемого свойства зависимостей. В этом случае значение свойства принимает перечисление, а проверка гарантирует, что переданное значение имеет значение члена этого перечисления.  
  
 [!code-csharp[DPCustom#ValidateValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#validatevaluecallback)]
 [!code-vb[DPCustom#ValidateValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#validatevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>