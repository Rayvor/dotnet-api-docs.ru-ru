<Type Name="ValidateValueCallback" FullName="System.Windows.ValidateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91ca1881aba0deefdb0e9f4bcc39f934f0cab1d5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432877" /></Metadata><TypeSignature Language="C#" Value="public delegate bool ValidateValueCallback(object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValidateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateValueCallback(value As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool ValidateValueCallback(System::Object ^ value);" />
  <TypeSignature Language="F#" Value="type ValidateValueCallback = delegate of obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="value"><span data-ttu-id="7ca3f-101">Значение, подлежащий проверке.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-101">The value to be validated.</span></span></param>
    <summary><span data-ttu-id="7ca3f-102">Представляет метод, используемый как обратный вызов, проверяющий фактическое значение свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-102">Represents a method used as a callback that validates the effective value of a  dependency property.</span></span></summary>
    <returns><span data-ttu-id="7ca3f-103"><see langword="true" /> если значение допустимо; <see langword="false" /> если значение не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-103"><see langword="true" /> if the value was validated; <see langword="false" /> if the submitted value was invalid.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca3f-104">Обратные вызовы, основанные на этом делегате, используются <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> определенными сигнатурами и связанными методами, такими как <xref:System.Windows.DependencyProperty.RegisterAttached%2A> и эквивалентами только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-104">Callbacks based on this delegate are used by certain signatures of <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> and related methods, such as <xref:System.Windows.DependencyProperty.RegisterAttached%2A> and read-only equivalents.</span></span> <span data-ttu-id="7ca3f-105">Следует использовать сигнатуры, которые принимают `validateValueCallback` параметр, если требуется определенная проверка значения свойства каждый раз, когда задано его эффективное значение.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-105">You should use signatures that take the `validateValueCallback` parameter if you want specific validation of the property value each time that its effective is set.</span></span> <span data-ttu-id="7ca3f-106">Затем следует реализовать этот обратный вызов таким же, чтобы он выполнял фактическую проверку предложенного значения.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-106">You should then implement this callback such that it performs the actual validation of the proposed value.</span></span> <span data-ttu-id="7ca3f-107">Обратный вызов должен возвращать `true` , если значение, переданное в обратный вызов, является допустимым, и `false` в противном случае.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-107">The callback should return `true` if the value submitted to the callback is valid, and `false` otherwise.</span></span> <span data-ttu-id="7ca3f-108">`false` Значение приведет к возникновению исключения в определенной части системы свойств, в которой была предпринята попытка недопустимого набора свойств, поэтому приложение должно быть подготовлено к обработке этих исключений.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-108">A `false` value will produce an exception in the specific portion of the property system where the invalid property set was attempted, so your application should be prepared to handle these exceptions.</span></span>  
  
 <span data-ttu-id="7ca3f-109">Обратные вызовы проверки хранятся в идентификаторах свойств зависимостей, а не в метаданных свойств зависимостей.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-109">Validation callbacks are stored on dependency property identifiers, rather than dependency property metadata.</span></span> <span data-ttu-id="7ca3f-110">Обратный вызов проверки не имеет доступа к определенному экземпляру, <xref:System.Windows.DependencyObject> на котором задано свойство, и может влиять только на то, какие значения принимаются для свойства в целом.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-110">Your validation callback does not have access to a specific instance of a <xref:System.Windows.DependencyObject> on which the property is set, and can only influence what values are accepted for the property in general.</span></span> <span data-ttu-id="7ca3f-111">Если требуется обратный вызов, который может изменять значения свойств на основе конкретного экземпляра, следует использовать сочетание <xref:System.Windows.CoerceValueCallback> обратных вызовов и <xref:System.Windows.PropertyChangedCallback> , как применено к метаданным свойства свойства.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-111">If you need a callback that can change property values based on a specific instance, you should use a combination of a <xref:System.Windows.CoerceValueCallback> and <xref:System.Windows.PropertyChangedCallback> callbacks as applied to the property metadata of your property.</span></span> <span data-ttu-id="7ca3f-112">Эти обратные вызовы также можно применить к связанным свойствам, которые должны влиять на значение свойства.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-112">You might also apply these callbacks to related properties that should influence your property's value.</span></span> <span data-ttu-id="7ca3f-113">Дополнительные сведения см. в разделе [обратные вызовы и проверка свойства зависимостей](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span><span class="sxs-lookup"><span data-stu-id="7ca3f-113">For details, see [Dependency Property Callbacks and Validation](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ca3f-114">Следующий пример включает реализацию этого обратного вызова для проверки диапазона значений для пользовательского свойства зависимости.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-114">The following example includes an implementation of this callback to validate a range of values for a custom dependency property.</span></span> <span data-ttu-id="7ca3f-115">В этом случае значение свойства принимает перечисление, а проверка гарантирует, что предоставленное значение является членом этого перечисления.</span><span class="sxs-lookup"><span data-stu-id="7ca3f-115">In this case the property value expects an enumeration, and the validation assures that the provided value evaluates to a member of that enumeration.</span></span>  
  
 [!code-csharp[DPCustom#ValidateValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#validatevaluecallback)]
 [!code-vb[DPCustom#ValidateValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#validatevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>
