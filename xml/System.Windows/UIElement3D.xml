<Type Name="UIElement3D" FullName="System.Windows.UIElement3D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2be4c3605710c694753de024829eaba3e8a08c94" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180023" /></Metadata><TypeSignature Language="C#" Value="public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract UIElement3D extends System.Windows.Media.Media3D.Visual3D implements class System.Windows.IInputElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement3D" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UIElement3D&#xA;Inherits Visual3D&#xA;Implements IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement3D abstract : System::Windows::Media::Media3D::Visual3D, System::Windows::IInputElement" />
  <TypeSignature Language="F#" Value="type UIElement3D = class&#xA;    inherit Visual3D&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Visual3D</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a8478-101"><see cref="T:System.Windows.UIElement3D" /> — это базовый класс для реализаций уровня ядра WPF, которые основаны на элементах Windows Presentation Foundation (WPF) и базовых характеристиках представления.</span><span class="sxs-lookup"><span data-stu-id="a8478-101"><see cref="T:System.Windows.UIElement3D" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-102"><xref:System.Windows.UIElement3D> является абстрактным базовым классом, из которого можно создавать классы для представления конкретных трехмерных элементов.</span><span class="sxs-lookup"><span data-stu-id="a8478-102"><xref:System.Windows.UIElement3D> is an abstract base class from which you can derive classes to represent specific 3D elements.</span></span>  
  
 <span data-ttu-id="a8478-103">Большая часть поведения ввода, фокусировки и событий для трехмерных элементов в целом определяется в классе <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-103">Much of the input, focusing, and eventing behavior for 3D elements in general is defined in the <xref:System.Windows.UIElement3D> class.</span></span> <span data-ttu-id="a8478-104">Сюда входят события ввода с клавиатуры, мыши и пера, а также связанные свойства состояния.</span><span class="sxs-lookup"><span data-stu-id="a8478-104">This includes the events for keyboard, mouse, and stylus input, and related status properties.</span></span> <span data-ttu-id="a8478-105">Многие из этих событий являются перенаправленными событиями, и многие из событий, связанных с входом, имеют как версию маршрутизации с восходящей маршрутизацией, так и версию события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="a8478-106">Эти парные события обычно являются событиями, наиболее важными для разработчиков элементов управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="a8478-107"><xref:System.Windows.UIElement3D> также включает API-интерфейсы, связанные с моделью событий [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], включая методы, которые могут вызывать указанные перенаправленные события, источником которых являются экземпляры элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-107"><xref:System.Windows.UIElement3D> also includes APIs that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="a8478-108"><xref:System.Windows.UIElement3D> имеет следующие возможности, определяемые классом <xref:System.Windows.UIElement3D>:</span><span class="sxs-lookup"><span data-stu-id="a8478-108">A <xref:System.Windows.UIElement3D> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement3D> class:</span></span>  
  
-   <span data-ttu-id="a8478-109">Может отвечать на введенные пользователем данные (включая контроль над тем, где входные данные отправляются посредством обработки маршрутизации событий или маршрутизации команд).</span><span class="sxs-lookup"><span data-stu-id="a8478-109">Can respond to user input (including control of where input is sent via handling of event routing or routing of commands).</span></span>  
  
-   <span data-ttu-id="a8478-110">Может создавать перенаправленные события, которые проходят маршрут через дерево логических элементов.</span><span class="sxs-lookup"><span data-stu-id="a8478-110">Can raise routed events that travel a route through the logical element tree.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8478-111"><xref:System.Windows.UIElement3D.Visibility%2A> состояние влияет на всю обработку ввода этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-111"><xref:System.Windows.UIElement3D.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="a8478-112">Невидимые элементы не участвуют в проверке попадания и не получают входные события, даже если мышь находится над границами места, где элемент был бы видимым.</span><span class="sxs-lookup"><span data-stu-id="a8478-112">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds of where the element would be if were visible.</span></span>  
  
 <span data-ttu-id="a8478-113">В отличие от класса <xref:System.Windows.UIElement>, класс <xref:System.Windows.UIElement3D> не включает макет.</span><span class="sxs-lookup"><span data-stu-id="a8478-113">Unlike the <xref:System.Windows.UIElement> class, the <xref:System.Windows.UIElement3D> class does not include layout.</span></span> <span data-ttu-id="a8478-114">Таким образом, класс <xref:System.Windows.UIElement3D> не включает методы **Measure** и **упорядочива** .</span><span class="sxs-lookup"><span data-stu-id="a8478-114">Therefore, the <xref:System.Windows.UIElement3D> class does not include **Measure** or **Arrange** methods.</span></span>  
  
 <span data-ttu-id="a8478-115">Класс, производный от <xref:System.Windows.UIElement3D> и сохраняющий собственную коллекцию объектов <xref:System.Windows.Media.Media3D.Visual3D> путем переопределения <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> и <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> должны по-прежнему передавать новые <xref:System.Windows.Media.Media3D.Visual3D> объекты <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-115">A class that derives from <xref:System.Windows.UIElement3D> and maintains its own collection of <xref:System.Windows.Media.Media3D.Visual3D> objects by overriding <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> and <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> must still pass new <xref:System.Windows.Media.Media3D.Visual3D> objects to <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.</span></span>  
  
 <span data-ttu-id="a8478-116"><xref:System.Windows.UIElement3D> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-116"><xref:System.Windows.UIElement3D> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-117">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-117">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8478-118">В следующем примере показано, как выполнить наследование от класса <xref:System.Windows.UIElement3D>, чтобы создать `Sphere` класс:</span><span class="sxs-lookup"><span data-stu-id="a8478-118">The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:</span></span>  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 <span data-ttu-id="a8478-119">Полный пример см. в разделе [Пример UIElement3D Sphere](https://go.microsoft.com/fwlink/?LinkID=160044).</span><span class="sxs-lookup"><span data-stu-id="a8478-119">For the complete sample, see [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-120">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-120">Handling Events in 3-D Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIElement3D ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UIElement3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-121">Инициализирует новый экземпляр класса <see cref="T:System.Windows.UIElement3D" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-121">Initializes a new instance of the <see cref="T:System.Windows.UIElement3D" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-122"><xref:System.Windows.UIElement3D.%23ctor%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-122"><xref:System.Windows.UIElement3D.%23ctor%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-123">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-123">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8478-124">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-124">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement3D.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="a8478-125">Идентификатор маршрутизируемого события для обработки.</span><span class="sxs-lookup"><span data-stu-id="a8478-125">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="a8478-126">Ссылка на реализацию обработчика.</span><span class="sxs-lookup"><span data-stu-id="a8478-126">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="a8478-127">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-127">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-128">Один и тот же обработчик можно добавить для одного и того же события несколько раз, не создавая исключение.</span><span class="sxs-lookup"><span data-stu-id="a8478-128">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="a8478-129">Однако обработчик в действительности вызывается несколько раз при обработке события.</span><span class="sxs-lookup"><span data-stu-id="a8478-129">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="a8478-130">Поэтому рассмотрите, как это поведение может иметь побочные эффекты, которые следует учитывать в реализации обработчика.</span><span class="sxs-lookup"><span data-stu-id="a8478-130">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="a8478-131">Обычно этот метод используется для предоставления реализации метода доступа Add для [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] шаблона доступа к событию пользовательского перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-131">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 <span data-ttu-id="a8478-132"><xref:System.Windows.UIElement3D.AddHandler%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-132"><xref:System.Windows.UIElement3D.AddHandler%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-133">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-133">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement3D.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="a8478-134">Идентификатор маршрутизируемого события для обработки.</span><span class="sxs-lookup"><span data-stu-id="a8478-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="a8478-135">Ссылка на реализацию обработчика.</span><span class="sxs-lookup"><span data-stu-id="a8478-135">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="a8478-136"><see langword="true" /> для регистрации обработчика, чтобы он вызывался даже в том случае, если перенаправленное событие помечено как обработанное в его данных события. <see langword="false" /> для регистрации обработчика с условием по умолчанию, что он не будет вызываться, если перенаправленное событие уже помечено как обработанное.</span><span class="sxs-lookup"><span data-stu-id="a8478-136"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="a8478-137">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-137">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="a8478-138">Не следует постоянно прибегать к повторной обработке перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-138">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="a8478-139">Добавляет обработчик перенаправленного события для указанного перенаправленного события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-139">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="a8478-140">Укажите <paramref name="handledEventsToo" /> как <see langword="true" />, чтобы предоставленный обработчик вызывался для перенаправленного события, которое уже было отмечено как обработанное другим элементом на маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-140">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-141">Обработка событий ввода низкого уровня практическим образом является сложной задачей.</span><span class="sxs-lookup"><span data-stu-id="a8478-141">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="a8478-142">Многие элементы управления реализуют поведение, при котором определенное событие помечается как обработанное и заменяется другим интуитивно понятным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-142">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="a8478-143">Как правило, элемент управления помечает событие ввода платформы как обработанное только при наличии некоторой намеренности по проектированию.</span><span class="sxs-lookup"><span data-stu-id="a8478-143">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="a8478-144">В некоторых сценариях эти действия по проектированию могут быть не теми, которые необходимы для конкретной обработки события ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-144">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="a8478-145">Это относится к таким сценариям, которые регистрируют обработчики с `handledEventsToo`, так как `true` подходит.</span><span class="sxs-lookup"><span data-stu-id="a8478-145">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="a8478-146">Но делать это не следует.</span><span class="sxs-lookup"><span data-stu-id="a8478-146">But you should not do this routinely.</span></span> <span data-ttu-id="a8478-147">Вызов обработчиков в ответ на все события, даже если они были обработаны, усложняет логику обработки событий приложения.</span><span class="sxs-lookup"><span data-stu-id="a8478-147">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="a8478-148">Если логика обработчика очень значительна, производительность может снизиться.</span><span class="sxs-lookup"><span data-stu-id="a8478-148">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="a8478-149">Следует зарезервировать использование присоединяемых обработчиков для уже обработанных событий в тех ситуациях, когда вы уже обнаружили в процессе разработки, что определенные элементы управления обрабатывают события, которые все же нужно обработать с помощью логики приложения.</span><span class="sxs-lookup"><span data-stu-id="a8478-149">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="a8478-150">Другой способ избежать поведения обработки класса определенных сочетаний управления событиями — использовать альтернативу предварительного просмотра этого события.</span><span class="sxs-lookup"><span data-stu-id="a8478-150">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="a8478-151">Например, если <xref:System.Windows.UIElement3D.MouseLeftButtonDown> помечена как обработанная обработкой класса, можно добавить обработчики для <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-151">For example, if <xref:System.Windows.UIElement3D.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="a8478-152">Один и тот же обработчик можно добавить для одного и того же события несколько раз, не создавая исключение.</span><span class="sxs-lookup"><span data-stu-id="a8478-152">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="a8478-153">Однако обработчик в действительности вызывается несколько раз при обработке события.</span><span class="sxs-lookup"><span data-stu-id="a8478-153">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="a8478-154">Поэтому рассмотрите, как это поведение может иметь побочные эффекты, которые следует учитывать в реализации обработчика.</span><span class="sxs-lookup"><span data-stu-id="a8478-154">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="a8478-155">Обычно этот метод используется для предоставления реализации метода доступа Add для [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] шаблона доступа к событию пользовательского перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-155">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 <span data-ttu-id="a8478-156"><xref:System.Windows.UIElement3D.AddHandler%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-156"><xref:System.Windows.UIElement3D.AddHandler%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-157">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-157">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="a8478-158">Маршрут события, к которому добавляются обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-158">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="a8478-159">Информация о событии, используемая для добавления обработчиков.</span><span class="sxs-lookup"><span data-stu-id="a8478-159">The event data that is used to add the handlers.</span></span> <span data-ttu-id="a8478-160">Данный метод использует свойство <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> данных события для создания обработчиков.</span><span class="sxs-lookup"><span data-stu-id="a8478-160">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="a8478-161">Добавляет обработчики в указанный <see cref="T:System.Windows.EventRoute" /> для настоящего коллекции обработчиков событий <see cref="T:System.Windows.UIElement3D" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-161">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement3D" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-162">Этот метод может использоваться элементами узла содержимого (либо, которые реализуют <xref:System.Windows.IContentHost>, либо без них) для добавления обработчиков для дочерних элементов в <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="a8478-162">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span>  
  
 <span data-ttu-id="a8478-163"><xref:System.Windows.UIElement3D.AddToEventRoute%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-163"><xref:System.Windows.UIElement3D.AddToEventRoute%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-164">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-164">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement3D.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-165">Получение или установка значения, определяющего возможность использования элемента в качестве целевого объекта для операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-165">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="a8478-166">Значение <see langword="true" />, если этот элемент можно использовать в качестве целевого объекта для операции перетаскивания; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-166"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-167">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-167">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-168">Операции перетаскивания не включены по умолчанию, и их необходимо включить намеренно, установив для параметра <xref:System.Windows.UIElement3D.AllowDrop%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-168">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement3D.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="a8478-169">Помимо этого базового параметра, поведение перетаскивания полностью зависит от реализации и не определяется <xref:System.Windows.UIElement3D> или любым другим классом базового элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-169">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement3D> or any other base element class.</span></span> <span data-ttu-id="a8478-170">Некоторые элементы управления, например <xref:System.Windows.Controls.RichTextBox>, имеют поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-170">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="a8478-171">Дополнительные сведения о перетаскивании см. в разделе [Общие сведения о](~/docs/framework/wpf/advanced/drag-and-drop-overview.md)перетаскивании.</span><span class="sxs-lookup"><span data-stu-id="a8478-171">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-172"><xref:System.Windows.UIElement3D.AllowDrop%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-172"><xref:System.Windows.UIElement3D.AllowDrop%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-173">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-173">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-174">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-174">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-175">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-175">Identifier field</span></span>|<xref:System.Windows.UIElement3D.AllowDropProperty>|  
|<span data-ttu-id="a8478-176">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-176">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-177">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-177">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-178">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.AllowDrop" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-178">Identifies the <see cref="P:System.Windows.UIElement3D.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-179"><xref:System.Windows.UIElement3D.AllowDropProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-179"><xref:System.Windows.UIElement3D.AllowDropProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-180">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-180">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-181">Получает значение, которое указывает, была ли хотя бы одна операция сенсорного ввода передана в данный элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-181">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="a8478-182">Значение <see langword="true" />, если хотя бы одна операция сенсорного ввода получена данным элементом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-182"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-183">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-183">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-184">Получает значение, указывающее, была ли хотя бы одна операция сенсорного ввода передана в данный элемент или в какой-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-184">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a8478-185">Значение <see langword="true" />, если хотя бы одна операция сенсорного ввода получена данным элементом или каким-либо из его дочерних элементов в визуальном дереве; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-185"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-186">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-186">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-187">Получает значение, которое указывает, произошло ли хотя бы одно сенсорное нажатие данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-187">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="a8478-188">Значение <see langword="true" />, если произошло хотя бы одно сенсорное нажатие данного элемента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-188"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-189">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-189">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-190">Получает значение, указывающее, произошло ли хотя бы одно сенсорное нажатие данного элемента или какого-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-190">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a8478-191">Значение <see langword="true" />, если произошло хотя бы одно сенсорное нажатие данного элемента или какого-либо из его дочерних элементов в визуальном дереве; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-191"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-192">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.AreAnyTouchesOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-192">Identifies the <see cref="P:System.Windows.UIElement3D.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement3D.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-193">Пытается принудительно захватить мышь данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-193">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="a8478-194">Значение <see langword="true" />, если мышь успешно захвачена, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-194"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-195">Для записи необходимо включить элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-195">To be captured, an element must be enabled.</span></span> <span data-ttu-id="a8478-196">Перед вызовом <xref:System.Windows.UIElement3D.CaptureMouse%2A>проверьте, `true` ли <xref:System.Windows.UIElement3D.IsEnabled%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-196">Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement3D.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="a8478-197">Если вызов <xref:System.Windows.UIElement3D.CaptureMouse%2A> возвращает `true`, то <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> также `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-197">If calling <xref:System.Windows.UIElement3D.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="a8478-198">Если вызов <xref:System.Windows.UIElement3D.CaptureMouse%2A> возвращает `true`, то возникают события <xref:System.Windows.UIElement3D.GotMouseCapture> и <xref:System.Windows.UIElement3D.IsMouseCapturedChanged>, <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> в данных события, сообщаемых как элемент, где вызывается метод <xref:System.Windows.UIElement3D.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-198">If calling <xref:System.Windows.UIElement3D.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement3D.GotMouseCapture> and <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement3D.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="a8478-199">При принудительном захвате может возникнуть конфликт с существующими захватами, особенно с захватами, которые связаны с перетаскиванием мышью.</span><span class="sxs-lookup"><span data-stu-id="a8478-199">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="a8478-200">Чтобы снять захват с мыши из всех элементов, вызовите <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> с параметром `element`, предоставленным как `null`.</span><span class="sxs-lookup"><span data-stu-id="a8478-200">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
 <span data-ttu-id="a8478-201"><xref:System.Windows.UIElement3D.CaptureMouse%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-201"><xref:System.Windows.UIElement3D.CaptureMouse%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-202">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-202">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement3D.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-203">Пытается принудительно захватить перо данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-203">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="a8478-204">Значение <see langword="true" />, если перо успешно захвачено, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-204"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-205">Реализация по умолчанию, основанная на базовом устройстве пера по умолчанию, всегда возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-205">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="a8478-206">Однако при расширении устройств ввода, предоставляющих реализацию устройства для входной системы, можно создать систему с альтернативной реализацией устройства пера, которая может возвращать различные результаты.</span><span class="sxs-lookup"><span data-stu-id="a8478-206">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="a8478-207">Когда элемент захватывает перо, он получает входные данные пера, даже если оно находится за пределами границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-207">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="a8478-208">Перо обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-208">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8478-209">При вызове этого метода вызывается базовый статический метод <xref:System.Windows.Input.Stylus> <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-209">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="a8478-210">Фактическое поведение отслеживания реализуется реализацией активного устройства пера.</span><span class="sxs-lookup"><span data-stu-id="a8478-210">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="a8478-211">Для записи необходимо включить элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-211">To be captured, an element must be enabled.</span></span> <span data-ttu-id="a8478-212">Перед вызовом <xref:System.Windows.UIElement3D.CaptureStylus%2A>проверьте, `true` ли <xref:System.Windows.UIElement3D.IsEnabled%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-212">Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement3D.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="a8478-213">Если вызов <xref:System.Windows.UIElement3D.CaptureStylus%2A> возвращает `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> также `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-213">If calling <xref:System.Windows.UIElement3D.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="a8478-214"><xref:System.Windows.UIElement3D.CaptureStylus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-214"><xref:System.Windows.UIElement3D.CaptureStylus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-215">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-215">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement3D.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="a8478-216">Захватываемое устройство.</span><span class="sxs-lookup"><span data-stu-id="a8478-216">The device to capture.</span></span></param>
        <summary><span data-ttu-id="a8478-217">Предпринимает попытку принудительного получения операции сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-217">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="a8478-218">Значение <see langword="true" />, если указанная операция сенсорного ввода была получена данным элементом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-218"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-219"><xref:System.Windows.UIElement3D.CaptureTouch%2A> будет возвращать `false`, если <xref:System.Windows.Input.TouchDevice> в данный момент захватывается другим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-219"><xref:System.Windows.UIElement3D.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="a8478-220">Если <xref:System.Windows.UIElement3D.CaptureTouch%2A> возвращает `true`, возникает событие <xref:System.Windows.UIElement3D.GotTouchCapture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-220">If <xref:System.Windows.UIElement3D.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement3D.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="a8478-221">Чтобы освободить запись одного касания от этого элемента, используйте метод <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> и укажите устройство сенсорного ввода для выпуска.</span><span class="sxs-lookup"><span data-stu-id="a8478-221">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="a8478-222">Чтобы освободить все касания от этого элемента, используйте метод <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-222">To release all touches from this element, use the <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8478-223"><paramref name="touchDevice" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-223"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement3D.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-224">Получает коллекцию объектов <see cref="T:System.Windows.Input.CommandBinding" />, сопоставленных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-224">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="a8478-225">Коллекция всех объектов <see cref="T:System.Windows.Input.CommandBinding" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-225">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-226"><xref:System.Windows.Input.CommandBinding> обеспечивает обработку команд определенной команды для данного элемента и объявляет связь между командой, ее событиями и обработчиками, присоединенными этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-226">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span>  
  
 <span data-ttu-id="a8478-227">Другой типичный способ заполнения <xref:System.Windows.UIElement3D.CommandBindings%2A> коллекции — использование <xref:System.Windows.Input.CommandManager> методов программным способом.</span><span class="sxs-lookup"><span data-stu-id="a8478-227">Another typical way to populate the <xref:System.Windows.UIElement3D.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
 <span data-ttu-id="a8478-228"><xref:System.Windows.UIElement3D.CommandBindings%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-228"><xref:System.Windows.UIElement3D.CommandBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-229">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-229">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a8478-230">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="a8478-230">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8478-231">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="a8478-231">XAML Values</span></span>  
 <span data-ttu-id="a8478-232">*онеорморекоммандбиндингс*</span><span class="sxs-lookup"><span data-stu-id="a8478-232">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="a8478-233">Один или несколько элементов <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="a8478-233">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="a8478-234">Каждый из них должен иметь атрибут <xref:System.Windows.Input.CommandBinding.Command%2A>, для которого задана известная команда, и атрибуты, заданные для реализаций обработчика <xref:System.Windows.Input.CommandBinding.CanExecute> и <xref:System.Windows.Input.CommandBinding.Executed>.</span><span class="sxs-lookup"><span data-stu-id="a8478-234">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="a8478-235">Дополнительные сведения см. в разделе <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="a8478-235">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-236">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-236">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-237">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.DragEnter?displayProperty=nameWithType> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-237">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-238">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.DragEnter>, присоединяются к базовому <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-238">Event handlers that are attached to the <xref:System.Windows.UIElement3D.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-239"><xref:System.Windows.UIElement3D.DragEnter> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-239"><xref:System.Windows.UIElement3D.DragEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-240">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-240">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-241">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-241">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-242">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-242">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DragEnterEvent>|  
|<span data-ttu-id="a8478-243">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-243">Routing strategy</span></span>|<span data-ttu-id="a8478-244">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-244">Bubbling</span></span>|  
|<span data-ttu-id="a8478-245">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-245">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-246">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="a8478-246">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="a8478-247">Переопределите <xref:System.Windows.UIElement3D.OnDragEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-247">Override <xref:System.Windows.UIElement3D.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-248">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-248">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-249">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-249">Identifies the <see cref="E:System.Windows.UIElement3D.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-250">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-250">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-251">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-251">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-252">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-252">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-253">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-253">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-254">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-254">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-255"><xref:System.Windows.UIElement3D.DragEnterEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-255"><xref:System.Windows.UIElement3D.DragEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-256">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-256">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-257">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-257">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-258">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.DragLeave?displayProperty=nameWithType> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-258">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-259">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.DragLeave>, присоединяются к базовому <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-259">Event handlers that are attached to the <xref:System.Windows.UIElement3D.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-260"><xref:System.Windows.UIElement3D.DragLeave> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-260"><xref:System.Windows.UIElement3D.DragLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-261">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-261">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-262">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-262">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-263">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-263">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DragLeaveEvent>|  
|<span data-ttu-id="a8478-264">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-264">Routing strategy</span></span>|<span data-ttu-id="a8478-265">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-265">Bubbling</span></span>|  
|<span data-ttu-id="a8478-266">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-266">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-267">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="a8478-267">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="a8478-268">Переопределите <xref:System.Windows.UIElement3D.OnDragLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-268">Override <xref:System.Windows.UIElement3D.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-269">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-269">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-270">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-270">Identifies the <see cref="E:System.Windows.UIElement3D.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-271">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-271">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-272">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-272">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-273">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-273">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-274">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-274">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-275">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-275">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-276"><xref:System.Windows.UIElement3D.DragLeaveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-276"><xref:System.Windows.UIElement3D.DragLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-277">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-277">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-278">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели данный элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-278">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-279">Это событие происходит, даже если перетаскивание происходит в границах элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-279">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="a8478-280">Если перетаскивание начинается за пределы границ и затем перемещается внутрь, это событие также вызывается, а также <xref:System.Windows.UIElement3D.DragEnter> и связанных событий предварительного просмотра.</span><span class="sxs-lookup"><span data-stu-id="a8478-280">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement3D.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="a8478-281">Это событие создает псевдоним для <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.DragOver?displayProperty=nameWithType> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-281">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-282">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.DragOver>, присоединяются к базовому <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-282">Event handlers that are attached to the <xref:System.Windows.UIElement3D.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-283"><xref:System.Windows.UIElement3D.DragOver> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-283"><xref:System.Windows.UIElement3D.DragOver> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-284">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-284">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-285">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-286">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-286">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DragOverEvent>|  
|<span data-ttu-id="a8478-287">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-287">Routing strategy</span></span>|<span data-ttu-id="a8478-288">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-288">Bubbling</span></span>|  
|<span data-ttu-id="a8478-289">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-290">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="a8478-290">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="a8478-291">Переопределите <xref:System.Windows.UIElement3D.OnDragOver%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-291">Override <xref:System.Windows.UIElement3D.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-292">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-292">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-293">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-293">Identifies the <see cref="E:System.Windows.UIElement3D.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-294">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-295">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-296">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-297">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-298">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-299"><xref:System.Windows.UIElement3D.DragOverEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-299"><xref:System.Windows.UIElement3D.DragOverEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-300">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-300">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-301">Происходит, когда система ввода сообщает о базовом событии удаления с этим элементом в качестве цели удаления.</span><span class="sxs-lookup"><span data-stu-id="a8478-301">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-302">Это событие создает псевдоним для <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.Drop?displayProperty=nameWithType> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-302">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-303">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.Drop>, присоединяются к базовому <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-303">Event handlers that are attached to the <xref:System.Windows.UIElement3D.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-304"><xref:System.Windows.UIElement3D.Drop> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-304"><xref:System.Windows.UIElement3D.Drop> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-305">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-305">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-306">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-306">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-307">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-307">Identifier field</span></span>|<xref:System.Windows.UIElement3D.DropEvent>|  
|<span data-ttu-id="a8478-308">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-308">Routing strategy</span></span>|<span data-ttu-id="a8478-309">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-309">Bubbling</span></span>|  
|<span data-ttu-id="a8478-310">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-310">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-311">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="a8478-311">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="a8478-312">Переопределите <xref:System.Windows.UIElement3D.OnDrop%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-312">Override <xref:System.Windows.UIElement3D.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-313">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-313">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-314">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.Drop" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-314">Identifies the <see cref="E:System.Windows.UIElement3D.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-315">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-316">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-317">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-318">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-319">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-320"><xref:System.Windows.UIElement3D.DropEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-320"><xref:System.Windows.UIElement3D.DropEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-321">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-321">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement3D.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-322">Производит попытку установки логического фокуса на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="a8478-322">Attempts to set the logical focus on this element.</span></span></summary>
        <returns><span data-ttu-id="a8478-323">Значение <see langword="true" />, если логический фокус и фокус клавиатуры были установлены на этот элемент; значение <see langword="false" />, если был установлен только логический фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-323"><see langword="true" /> if both logical and keyboard focus were set to this element; <see langword="false" /> if only logical focus was set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-324">Чтобы быть в фокусе, <xref:System.Windows.UIElement3D.Focusable%2A> и <xref:System.Windows.UIElement3D.IsEnabled%2A> должны быть `true`ы.</span><span class="sxs-lookup"><span data-stu-id="a8478-324">To be focusable, <xref:System.Windows.UIElement3D.Focusable%2A> and <xref:System.Windows.UIElement3D.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="a8478-325">Даже если элемент поддается фокусу и включен, обработка событий в определенном дереве (например, для составного элемента управления) может реагировать на события фокуса предварительного просмотра, не разрешая в ней фокус, поэтому этот метод возвратит `false`.</span><span class="sxs-lookup"><span data-stu-id="a8478-325">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="a8478-326">Если вызов <xref:System.Windows.UIElement3D.Focus%2A> возвращает `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> и <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> также `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-326">If calling  <xref:System.Windows.UIElement3D.Focus%2A> returns `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="a8478-327">Если связанные свойства еще не `true`, то при вызове <xref:System.Windows.UIElement3D.Focus%2A>одно или несколько из следующих событий вызываются в следующем порядке: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (источник — это новый целевой объект фокуса), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (источник — это новый целевой объект фокуса).</span><span class="sxs-lookup"><span data-stu-id="a8478-327">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement3D.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="a8478-328">Чтобы этот вызов был успешным, другой элемент в приложении должен был получить фокус ранее.</span><span class="sxs-lookup"><span data-stu-id="a8478-328">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
 <span data-ttu-id="a8478-329">Фокус в целом регулируется двумя отдельными концепциями: фокус клавиатуры и логический фокус, которые не всегда идентичны.</span><span class="sxs-lookup"><span data-stu-id="a8478-329">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="a8478-330">Этот метод задает логический фокус, а также пытается установить фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-330">This method sets the logical focus, and also attempts to set the keyboard focus.</span></span> <span data-ttu-id="a8478-331">Нет программных средств для установки фокуса клавиатуры в частности, это происходит из-за ввода данных пользователем.</span><span class="sxs-lookup"><span data-stu-id="a8478-331">There is no programmatic means to set keyboard focus specifically, this happens due to user input.</span></span> <span data-ttu-id="a8478-332">Дополнительные сведения см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-332">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-333"><xref:System.Windows.UIElement3D.Focus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-333"><xref:System.Windows.UIElement3D.Focus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-334">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-334">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement3D.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-335">Получение или установка значения, определяющего возможность получения фокуса элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-335">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="a8478-336">Значение <see langword="true" />, если данный элемент может иметь фокус; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-336"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a8478-337">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-337">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-338">Ввод с клавиатуры получает только элемент с фокусом ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-338">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="a8478-339"><xref:System.Windows.UIElement3D.Focusable%2A> — это метод доступа [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] свойства для того, что в действительности является свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="a8478-339"><xref:System.Windows.UIElement3D.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="a8478-340">Это конкретное свойство зависимости довольно часто имеет свое видимое значение по умолчанию по-разному в производных классах элементов.</span><span class="sxs-lookup"><span data-stu-id="a8478-340">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes.</span></span> <span data-ttu-id="a8478-341">Обычно это происходит одним из двух способов:</span><span class="sxs-lookup"><span data-stu-id="a8478-341">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="a8478-342">Свойство зависимостей наследуется определенным производным классом, но этот производный класс переопределяет метаданные свойства зависимостей и изменяет значение свойства по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-342">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
 <span data-ttu-id="a8478-343"><xref:System.Windows.UIElement3D.Focusable%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-343"><xref:System.Windows.UIElement3D.Focusable%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-344">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-344">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-345">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-345">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-346">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-346">Identifier field</span></span>|<xref:System.Windows.UIElement3D.FocusableProperty>|  
|<span data-ttu-id="a8478-347">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-347">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-348">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-348">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-349">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-349">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-350">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-350">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-351"><xref:System.Windows.UIElement3D.FocusableChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-351"><xref:System.Windows.UIElement3D.FocusableChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-352">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-352">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-353">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-353">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-354">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-354">Identifies the <see cref="P:System.Windows.UIElement3D.Focusable" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-355"><xref:System.Windows.UIElement3D.FocusableProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-355"><xref:System.Windows.UIElement3D.FocusableProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-356">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-356">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="member this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement3D.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-357">При переопределении в производном классе возвращает альтернативный родительский элемент [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] при условии отсутствия видимого родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-357">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="a8478-358">Объект, если реализация производного класса сообщает об альтернативном родительском подключении.</span><span class="sxs-lookup"><span data-stu-id="a8478-358">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-359">Виртуальная реализация по умолчанию этого метода возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="a8478-359">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="a8478-360"><xref:System.Windows.FrameworkElement> предоставляет практическую реализацию.</span><span class="sxs-lookup"><span data-stu-id="a8478-360"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="a8478-361">Альтернативные родительские элементы используются для маршрутизации событий, в случаях, когда элемент создает альтернативную родительскую структуру, чтобы ее события направлялись таким образом, что рассылается из стандартного шаблона маршрутизации визуального дерева к стандартному родителю или вниз в Предварительная версия стратегии маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="a8478-361">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 <span data-ttu-id="a8478-362"><xref:System.Windows.UIElement3D.GetUIParentCore%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-362"><xref:System.Windows.UIElement3D.GetUIParentCore%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-363">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-363">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-364">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, в котором участвует данный элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-364">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-365">Событие <xref:System.Windows.UIElement3D.GiveFeedback> позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы дать пользователю визуальную обратную связь во время операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-365">The <xref:System.Windows.UIElement3D.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="a8478-366">Визуальная обратная связь помещает в действие процесс перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-366">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="a8478-367">Это событие создает псевдоним для <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.GiveFeedback> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-367">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-368">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.GiveFeedback>, присоединяются к базовому <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-368">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-369"><xref:System.Windows.UIElement3D.GiveFeedback> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-369"><xref:System.Windows.UIElement3D.GiveFeedback> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-370">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-370">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-371">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-372">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-372">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|  
|<span data-ttu-id="a8478-373">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-373">Routing strategy</span></span>|<span data-ttu-id="a8478-374">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-374">Bubbling</span></span>|  
|<span data-ttu-id="a8478-375">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-375">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="a8478-376">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="a8478-376">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="a8478-377">Переопределите <xref:System.Windows.UIElement3D.OnGiveFeedback%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-377">Override <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-378">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-378">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-379">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-379">Identifies the <see cref="E:System.Windows.UIElement3D.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-380">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-380">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-381">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-382">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-382">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-383">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-383">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-384">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-384">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-385"><xref:System.Windows.UIElement3D.GiveFeedbackEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-385"><xref:System.Windows.UIElement3D.GiveFeedbackEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-386">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-386">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-387">Происходит при получении данным элементом логического фокуса.</span><span class="sxs-lookup"><span data-stu-id="a8478-387">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-388">Логический фокус отличается от фокуса клавиатуры, если фокус намеренно принудительно задается с помощью вызова метода, но предыдущий фокус клавиатуры существует в другой области.</span><span class="sxs-lookup"><span data-stu-id="a8478-388">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="a8478-389">В этом сценарии фокус клавиатуры остается там, где он находится, и элемент, где вызывается метод <xref:System.Windows.UIElement3D.Focus%2A>, по-прежнему получает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-389">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="a8478-390">Более точная интерпретация этого события заключается в том, что это событие возникает при изменении значения свойства <xref:System.Windows.UIElement3D.IsFocused%2A> элемента в маршруте с `false` на `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-390">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="a8478-391">Так как в этом событии используется восходящая маршрутизация, элемент, получивший фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-391">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-392">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, получивший фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-392">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
 <span data-ttu-id="a8478-393"><xref:System.Windows.UIElement3D.GotFocus> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-393"><xref:System.Windows.UIElement3D.GotFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-394">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-394">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-395">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-395">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-396">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-396">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotFocusEvent>|  
|<span data-ttu-id="a8478-397">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-397">Routing strategy</span></span>|<span data-ttu-id="a8478-398">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-398">Bubbling</span></span>|  
|<span data-ttu-id="a8478-399">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-399">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="a8478-400">Нет соответствующего события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-400">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-401">Переопределите <xref:System.Windows.UIElement3D.OnGotFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-401">Override <xref:System.Windows.UIElement3D.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-402">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-402">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-403">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-403">Identifies the <see cref="E:System.Windows.UIElement3D.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-404">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-404">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-405">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-405">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-406">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-406">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-407">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-407">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-408">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-408">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-409"><xref:System.Windows.UIElement3D.GotFocusEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-409"><xref:System.Windows.UIElement3D.GotFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-410">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-410">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-411">Происходит при получении данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-411">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-412"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> — это аналогичное событие, которое отслеживает изменения состояния в свойстве, которое поддерживает состояние фокуса для элемента; событие <xref:System.Windows.UIElement3D.GotKeyboardFocus> возникает во многих из тех же случаев.</span><span class="sxs-lookup"><span data-stu-id="a8478-412"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement3D.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="a8478-413">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-413">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-414">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-414">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="a8478-415">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.GotKeyboardFocus> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-415">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-416">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.GotKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-416">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-417"><xref:System.Windows.UIElement3D.GotKeyboardFocus> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-417"><xref:System.Windows.UIElement3D.GotKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-418">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-418">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-419">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-420">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-420">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|  
|<span data-ttu-id="a8478-421">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-421">Routing strategy</span></span>|<span data-ttu-id="a8478-422">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-422">Bubbling</span></span>|  
|<span data-ttu-id="a8478-423">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-423">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8478-424">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8478-424">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8478-425">Переопределите <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-425">Override <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-426">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-426">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-427">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-427">Identifies the <see cref="E:System.Windows.UIElement3D.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-428">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-428">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-429">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-429">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-430">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-430">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-431">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-431">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-432">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-432">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-433"><xref:System.Windows.UIElement3D.GotKeyboardFocusEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-433"><xref:System.Windows.UIElement3D.GotKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-434">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-434">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-435">Происходит при захвате мыши данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-435">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-436">Когда элемент захватывает мышь, он получает ввод с клавиатуры, даже если указатель мыши находится за пределами границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-436">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="a8478-437">Мышь обычно захватывается только во время операций перетаскивания и остается захваченной до тех пор, пока не произойдет действие перетаскивания операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-437">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="a8478-438">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-438">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-439">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент с захватом мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-439">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="a8478-440">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.GotMouseCapture> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-440">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement3D.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-441">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.GotMouseCapture>, присоединяются к базовому <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-441">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-442"><xref:System.Windows.UIElement3D.GotMouseCapture> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-442"><xref:System.Windows.UIElement3D.GotMouseCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-443">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-443">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-444">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-444">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-445">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-445">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|  
|<span data-ttu-id="a8478-446">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-446">Routing strategy</span></span>|<span data-ttu-id="a8478-447">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-447">Bubbling</span></span>|  
|<span data-ttu-id="a8478-448">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-448">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8478-449">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-449">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-450">Переопределите <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-450">Override <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-451">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-451">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-452">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-452">Identifies the <see cref="E:System.Windows.UIElement3D.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-453">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-453">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-454">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-454">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-455">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-455">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-456">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-456">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-457">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-457">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-458"><xref:System.Windows.UIElement3D.GotMouseCaptureEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-458"><xref:System.Windows.UIElement3D.GotMouseCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-459">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-459">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-460">Происходит при захвате пера данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-460">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-461">Когда элемент захватывает перо, он получает входные данные пера, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-461">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a8478-462">Перо обычно захватывается только во время операций перетаскивания и сохраняет захват до тех пор, пока не произойдет действие Drop операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-462">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="a8478-463">Так как в этом событии используется восходящая маршрутизация, элемент, имеющий захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-463">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-464">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который содержит запись.</span><span class="sxs-lookup"><span data-stu-id="a8478-464">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="a8478-465">Это событие создает псевдоним для присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.GotStylusCapture> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-465">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement3D.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-466">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.GotStylusCapture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-466">Event handlers that are attached to the <xref:System.Windows.UIElement3D.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-467"><xref:System.Windows.UIElement3D.GotStylusCapture> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-467"><xref:System.Windows.UIElement3D.GotStylusCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-468">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-468">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-469">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-469">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-470">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-470">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|  
|<span data-ttu-id="a8478-471">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-471">Routing strategy</span></span>|<span data-ttu-id="a8478-472">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-472">Bubbling</span></span>|  
|<span data-ttu-id="a8478-473">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-473">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-474">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-474">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-475">Переопределите <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-475">Override <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-476">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-476">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-477">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-477">Identifies the <see cref="E:System.Windows.UIElement3D.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-478">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-478">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-479">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-479">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-480">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-480">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-481">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-481">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-482">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-482">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-483"><xref:System.Windows.UIElement3D.GotStylusCaptureEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-483"><xref:System.Windows.UIElement3D.GotStylusCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-484">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-484">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-485">Происходит при получении данным элементом операции сенсорного ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-485">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-486">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-487">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-487">Identifier field</span></span>|<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|  
|<span data-ttu-id="a8478-488">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-488">Routing strategy</span></span>|<span data-ttu-id="a8478-489">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-489">Bubbling</span></span>|  
|<span data-ttu-id="a8478-490">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-490">Delegate</span></span>|<span data-ttu-id="a8478-491"><xref:System.EventHandler%601> типа <xref:System.Windows.Input.TouchEventArgs></span><span class="sxs-lookup"><span data-stu-id="a8478-491"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs></span></span>|  
  
-   <span data-ttu-id="a8478-492">Переопределите <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-492">Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-493">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.GotTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-493">Identifies the <see cref="E:System.Windows.UIElement3D.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement3D.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-494">Получение коллекции привязок ввода, связанных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-494">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="a8478-495">Коллекция привязок ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-495">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-496">Входные привязки поддерживают привязку команд к входным устройствам.</span><span class="sxs-lookup"><span data-stu-id="a8478-496">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="a8478-497">Например, <xref:System.Windows.Input.MouseBinding> реализует входные привязки, включающие свойства, определенные для устройств мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-497">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="a8478-498">Коллекция входных привязок будет включать входные привязки, относящиеся к типу, а также входные привязки, объявленные в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="a8478-498">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="a8478-499">Связанное свойство, <xref:System.Windows.UIElement3D.CommandBindings%2A>, поддерживает коллекцию привязок команд.</span><span class="sxs-lookup"><span data-stu-id="a8478-499">A related property, <xref:System.Windows.UIElement3D.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="a8478-500">Они отличаются от входных привязок тем, что они представляют следующий уровень обработки команд — действия, привязанные к известным командам.</span><span class="sxs-lookup"><span data-stu-id="a8478-500">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
 <span data-ttu-id="a8478-501"><xref:System.Windows.UIElement3D.InputBindings%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-501"><xref:System.Windows.UIElement3D.InputBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-502">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-502">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a8478-503">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="a8478-503">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8478-504">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="a8478-504">XAML Values</span></span>  
 <span data-ttu-id="a8478-505">*онеормореинпутбиндингс*</span><span class="sxs-lookup"><span data-stu-id="a8478-505">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="a8478-506">Один или несколько элементов <xref:System.Windows.Input.InputBinding> (как правило, <xref:System.Windows.Input.KeyBinding> или <xref:System.Windows.Input.MouseBinding> производных классах).</span><span class="sxs-lookup"><span data-stu-id="a8478-506">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="a8478-507">Предполагается, что для каждого из них установлен атрибут <xref:System.Windows.Input.InputBinding.Command%2A> и <xref:System.Windows.Input.InputBinding.Gesture%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-507">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateModel">
      <MemberSignature Language="C#" Value="public void InvalidateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.InvalidateModel" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateModel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateModel();" />
      <MemberSignature Language="F#" Value="member this.InvalidateModel : unit -&gt; unit" Usage="uIElement3D.InvalidateModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-508">Делает недействительным модель, представляющую элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-508">Invalidates the model that represents the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-509">При наследовании класса от <xref:System.Windows.UIElement3D> класса этот метод можно использовать вместе с методом <xref:System.Windows.UIElement3D.OnUpdateModel%2A> для обновления модели элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-509">When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method to refresh the model of the element.</span></span>  
  
 <span data-ttu-id="a8478-510">Этот метод нужно вызывать только в сложных сценариях.</span><span class="sxs-lookup"><span data-stu-id="a8478-510">You only need to call this method in advanced scenarios.</span></span> <span data-ttu-id="a8478-511">Один из таких сложных сценариев состоит в том, что производный класс имеет несколько свойств, влияющих на внешний вид, и вы хотите обновить базовую модель только один раз.</span><span class="sxs-lookup"><span data-stu-id="a8478-511">One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.</span></span>  
  
 <span data-ttu-id="a8478-512"><xref:System.Windows.UIElement3D.InvalidateModel%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-512"><xref:System.Windows.UIElement3D.InvalidateModel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-513">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-513">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8478-514">В следующем примере показано, как выполнить наследование от класса <xref:System.Windows.UIElement3D>, чтобы создать `Sphere` класс:</span><span class="sxs-lookup"><span data-stu-id="a8478-514">The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:</span></span>  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 <span data-ttu-id="a8478-515">Полный пример см. в разделе [Пример UIElement3D Sphere](https://go.microsoft.com/fwlink/?LinkID=160044).</span><span class="sxs-lookup"><span data-stu-id="a8478-515">For the complete sample, see [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement3D.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-516">Получает или задает значение, указывающее, включен ли этот элемент в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8478-516">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="a8478-517">Значение <see langword="true" />, если данный элемент включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-517"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-518">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-518">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-519">Обратите внимание, что на это свойство влияют реализации <xref:System.Windows.UIElement3D.IsEnabledCore%2A> определенных элементов, часто во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="a8478-519">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement3D.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="a8478-520">Таким образом, значение по умолчанию, указанное здесь, иногда не действует.</span><span class="sxs-lookup"><span data-stu-id="a8478-520">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="a8478-521">Попытка задать это значение также может быть переопределена значением, возвращаемым <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-521">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="a8478-522">Элементы, которые не включены, не участвуют в проверке нажатия или фокусе и поэтому не будут источниками событий ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-522">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
 <span data-ttu-id="a8478-523"><xref:System.Windows.UIElement3D.IsEnabled%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-523"><xref:System.Windows.UIElement3D.IsEnabled%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-524">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-524">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-525">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-525">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-526">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-526">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsEnabledProperty>|  
|<span data-ttu-id="a8478-527">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-527">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-528">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-528">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-529">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsEnabled" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-529">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-530">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-530">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-531"><xref:System.Windows.UIElement3D.IsEnabledChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-531"><xref:System.Windows.UIElement3D.IsEnabledChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-532">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-532">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-533">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-533">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement3D.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-534">Возвращает значение, которое становится возвращаемым значением свойства <see cref="P:System.Windows.UIElement3D.IsEnabled" /> в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-534">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement3D.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="a8478-535">Значение <see langword="true" />, если данный элемент включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-535"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-536"><xref:System.Windows.UIElement3D.IsEnabledCore%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-536"><xref:System.Windows.UIElement3D.IsEnabledCore%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-537">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-537">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-538">Реализация этого свойства по умолчанию кэширует значение, а также вычисляет, включен ли родительский элемент этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-538">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="a8478-539">(Если родитель не включен, дочерний элемент нельзя эффективно включить на практике [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Если вы решили переопределить эту реализацию, убедитесь, что вы вызываете базовую реализацию, чтобы сохранить это поведение.</span><span class="sxs-lookup"><span data-stu-id="a8478-539">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span></para></block>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement3D.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-540">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-540">Identifies the <see cref="P:System.Windows.UIElement3D.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-541"><xref:System.Windows.UIElement3D.IsEnabledProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-541"><xref:System.Windows.UIElement3D.IsEnabledProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-542">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-542">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement3D.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-543">Получает значение, определяющее, имеет ли элемент логический фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-543">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="a8478-544">Значение <see langword="true" />, если элемент имеет логический фокус; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-544"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-545">Логический фокус может отличаться от фокуса клавиатуры, если приложение имеет несколько разделений фокуса, например, между содержимым меню и оставшейся частью приложения.</span><span class="sxs-lookup"><span data-stu-id="a8478-545">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="a8478-546">В этом сценарии фокус клавиатуры может находиться только на одном элементе пользовательского интерфейса приложения, однако определенные элементы в других фокусах могут по-прежнему сохранить логический фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-546">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="a8478-547">Дополнительные сведения о логическом фокусе см. в разделе [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-547">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-548">Вы не устанавливаете фокус, настроив это свойство (оно доступно только для чтения).</span><span class="sxs-lookup"><span data-stu-id="a8478-548">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="a8478-549">Обычно это свойство используется как свойство зависимостей для <xref:System.Windows.Setter> или <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="a8478-549">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="a8478-550">Чтобы установить фокус программно, вызовите <xref:System.Windows.UIElement3D.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-550">To set focus programmatically, call <xref:System.Windows.UIElement3D.Focus%2A>.</span></span> <span data-ttu-id="a8478-551">Фокус также можно задать с помощью действий пользователя или реализаций элементов управления, которые могут включать режим захвата мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-551">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
 <span data-ttu-id="a8478-552"><xref:System.Windows.UIElement3D.IsFocused%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-552"><xref:System.Windows.UIElement3D.IsFocused%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-553">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-553">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-554">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-555">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-555">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsFocusedProperty>|  
|<span data-ttu-id="a8478-556">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-556">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-557">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-557">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-558">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsFocused" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-558">Identifies the <see cref="P:System.Windows.UIElement3D.IsFocused" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-559"><xref:System.Windows.UIElement3D.IsFocusedProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-559"><xref:System.Windows.UIElement3D.IsFocusedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-560">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-560">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-561">Получение или установка значения, определяющего возможность возврата этого элемента в качестве результата проверки нажатия в какой-либо части его отображаемого содержимого.</span><span class="sxs-lookup"><span data-stu-id="a8478-561">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span></summary>
        <value><span data-ttu-id="a8478-562">Значение <see langword="true" />, если этот элемент может возвращаться в результате проверки нажатия из по меньшей мере одной точки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-562"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-563">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-563">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-564">На эффективное значение этого свойства влияют относительные позиции элементов, проверяемых на попадание в логическом дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-564">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="a8478-565">Например, если элемент является дочерним элементом элемента, который не является видимым для проверки попадания, то эффективное значение свойства в дочернем элементе останется `false`, даже если попытка задать это значение локально.</span><span class="sxs-lookup"><span data-stu-id="a8478-565">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="a8478-566">По этой причине важно не устанавливать <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> для `false` в составном элементе управления, если не требуется выполнять входные данные или проверку нажатия для этого элемента управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-566">For this reason, it is important that you do not set <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="a8478-567">Дополнительные сведения о проверке нажатия см. в разделе [Проверка нажатия на визуальном уровне](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-567">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
 <span data-ttu-id="a8478-568"><xref:System.Windows.UIElement3D.IsHitTestVisible%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-568"><xref:System.Windows.UIElement3D.IsHitTestVisible%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-569">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-569">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-570">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-570">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-571">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-571">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|  
|<span data-ttu-id="a8478-572">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-572">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-573">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-573">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-574">Происходит при изменении значения свойства зависимостей <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-574">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-575">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-575">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-576"><xref:System.Windows.UIElement3D.IsHitTestVisibleChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-576"><xref:System.Windows.UIElement3D.IsHitTestVisibleChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-577">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-577">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-578">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-578">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-579">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-579">Identifies the <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-580"><xref:System.Windows.UIElement3D.IsHitTestVisibleProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-580"><xref:System.Windows.UIElement3D.IsHitTestVisibleProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-581">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-581">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-582">Возвращает значение, указывающее, включена ли обработка входящих данных в этот элемент в системе метода ввода, например [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8478-582">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="a8478-583">Значение <see langword="true" />, если метод ввода активен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-583"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-584">Значение по умолчанию базового прикрепленного свойства — <see langword="true;" />, однако на него повлияет фактическое состояние методов ввода в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="a8478-584">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-585">Это свойство возвращает значение, возвращаемое присоединенным свойством <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> для текущих включенных методов ввода (клавиатура, речь, другие устройства ввода).</span><span class="sxs-lookup"><span data-stu-id="a8478-585">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, other input devices).</span></span>  
  
 <span data-ttu-id="a8478-586"><xref:System.Windows.UIElement3D.IsInputMethodEnabled%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-586"><xref:System.Windows.UIElement3D.IsInputMethodEnabled%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-587">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-587">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-588">Получает значение, указывающее, имеет ли данный элемент фокус ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-588">Gets a value indicating whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="a8478-589">Значение <see langword="true" />, если элемент имеет фокус клавиатуры; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-589"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-590">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-590">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-591">Изменения в определенном значении этого свойства могут сопровождаться событиями, связанными с фокусом.</span><span class="sxs-lookup"><span data-stu-id="a8478-591">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="a8478-592"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> и <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> часто используются в обработчиках событий класса для других событий, связанных с входом, например для определения того, имеет ли элемент фокус клавиатуры, или для определения того, когда события мыши и клавиатуры происходят в связке.</span><span class="sxs-lookup"><span data-stu-id="a8478-592"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
 <span data-ttu-id="a8478-593"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-593"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-594">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-594">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-595">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-595">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-596">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-596">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="a8478-597">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-597">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-598">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-598">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-599">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-599">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-600">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-600">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-601"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-601"><xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-602">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-602">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-603">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-603">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-604">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-604">Identifies the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-605"><xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-605"><xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-606">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-606">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-607">Получает значение, указывающее, находится ли фокус клавиатуры где-либо в элементе или в его дочерних элементах визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="a8478-607">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span></summary>
        <value><span data-ttu-id="a8478-608">Значение <see langword="true" />, если фокус клавиатуры находится в элементе или в его дочерних элементах; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-608"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-609">Изменения значения этого свойства обычно вызывают событие <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, если производный класс не был переопределен <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> для подавления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-609">Changes to the value of this property typically raise the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="a8478-610">Это свойство не задается напрямую, но можно установить фокус на элемент, вызвав <xref:System.Windows.UIElement3D.Focus%2A>или выполнив запрос <xref:System.Windows.UIElement3D.MoveFocus%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-610">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement3D.Focus%2A>, or by making a <xref:System.Windows.UIElement3D.MoveFocus%2A> request.</span></span> <span data-ttu-id="a8478-611">Любой из этих вызовов метода может изменить это значение свойства.</span><span class="sxs-lookup"><span data-stu-id="a8478-611">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="a8478-612"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> и <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> обычно используются в обработчиках событий класса для других событий, связанных с входом, например для определения того, имеет ли элемент фокус клавиатуры, или для определения того, когда события мыши и клавиатуры происходят в связке.</span><span class="sxs-lookup"><span data-stu-id="a8478-612"><xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
 <span data-ttu-id="a8478-613"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-613"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-614">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-614">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-615">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-615">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-616">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-616">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="a8478-617">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-617">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-618">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-618">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-619">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-619">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-620">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-620">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-621"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-621"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-622">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-622">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-623">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-623">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-624">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-624">Identifies the <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-625"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-625"><xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-626">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-626">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-627">Получает или задает значение, указывающее, была ли мышь захвачена элементом управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-627">Gets a value indicating whether the mouse is captured to this element.</span></span></summary>
        <value><span data-ttu-id="a8478-628">Значение <see langword="true" />, если элемент имеет захват мыши; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-628"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-629">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-629">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-630">Состояние захвата мыши связано с выполняемыми в процессе операциями перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-630">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8478-631"><xref:System.Windows.UIElement3D.IsMouseCaptured%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-631"><xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-632">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-632">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-633">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-633">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-634">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-634">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|  
|<span data-ttu-id="a8478-635">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-635">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-636">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-636">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-637">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-637">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-638">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-638">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-639"><xref:System.Windows.UIElement3D.IsMouseCapturedChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-639"><xref:System.Windows.UIElement3D.IsMouseCapturedChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-640">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-640">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-641">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-641">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-642">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-642">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-643"><xref:System.Windows.UIElement3D.IsMouseCapturedProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-643"><xref:System.Windows.UIElement3D.IsMouseCapturedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-644">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-644">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-645">Возвращает значение, определяющее, удерживается ли захват мыши данным элементом или дочерними элементами его визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="a8478-645">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a8478-646">Значение <see langword="true" />, если элемент или содержащийся в нем элемент получил захват мыши; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-646"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-647"><xref:System.Windows.UIElement3D.IsMouseCaptureWithin%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-647"><xref:System.Windows.UIElement3D.IsMouseCaptureWithin%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-648">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-648">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-649">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-649">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-650">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-650">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="a8478-651">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-651">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-652">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-652">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-653">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-653">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-654">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-654">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-655"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-655"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-656">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-656">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-657">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-657">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-658"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-658"><xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-659">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-659">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-660">Возвращает значение, указывающее, соответствует ли позиция указателя мыши результатам проверки нажатия, при которой учитывается компоновка элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-660">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="a8478-661">Значение <see langword="true" />, если указатель мыши находится над тем же элементом, что и результат проверки нажатия; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-661"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-662">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-662">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-663">В отличие от <xref:System.Windows.UIElement3D.IsMouseOver%2A>это свойство `true` только в том случае, если указатель мыши находится над элементом литерала, как для проверки попадания.</span><span class="sxs-lookup"><span data-stu-id="a8478-663">Unlike <xref:System.Windows.UIElement3D.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="a8478-664">Если указатель мыши находится вместо дочернего элемента, это свойство будет `false`.</span><span class="sxs-lookup"><span data-stu-id="a8478-664">If the mouse pointer is instead over a child element, this property will be `false`.</span></span> <span data-ttu-id="a8478-665">В большинстве случаев, когда вы не создаете элементы управления, используйте вместо этого <xref:System.Windows.UIElement3D.IsMouseOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-665">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="a8478-666">Если мышь захватывается данным элементом и это свойство `true` на момент записи, это свойство будет продолжать возвращать `true` до тех пор, пока захват мыши не будет потерян и указатель не поверх его границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-666">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
 <span data-ttu-id="a8478-667"><xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-667"><xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-668">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-668">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-669">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-669">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-670">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-670">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="a8478-671">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-671">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-672">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-672">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-673">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-673">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-674">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-674">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-675"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-675"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-676">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-676">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-677">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-677">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-678"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-678"><xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-679">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-679">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement3D.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-680">Получает значение, указывающее, находится ли указатель мыши над данным элементом (включая дочерние элементы в визуальном дереве).</span><span class="sxs-lookup"><span data-stu-id="a8478-680">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span></summary>
        <value><span data-ttu-id="a8478-681">Значение <see langword="true" />, если указатель мыши находится над элементом или его дочерними элементами; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-681"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-682">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-682">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-683">Как правило, элементы управления являются составными, так что различные элементы внутри элемента управления (визуальное дерево) будут сообщать о состоянии мыши для содержащего его элемента управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-683">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="a8478-684">Например, элемент управления стиля <xref:System.Windows.Controls.ListBox> будет сообщать <xref:System.Windows.UIElement3D.IsMouseOver%2A> как `true`, если мышь находится в любом месте над геометрической фигурой, включая любые <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="a8478-684">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement3D.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="a8478-685">Хотя аналогичное событие «Исмаусеоверчанжед» не существует, выполняется несколько аналогичных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-685">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="a8478-686">Например, можно выполнять обработку <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>и <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="a8478-686">For example, you can handle <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, and <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="a8478-687">Если этот элемент захватывает мышь, это свойство остается `true` до тех пор, пока захват мыши не будет потерян и указатель мыши покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-687">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="a8478-688">Некоторые элементы управления намеренно захватывают мышь над определенными действиями, которые не связаны непосредственно с мышью.</span><span class="sxs-lookup"><span data-stu-id="a8478-688">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="a8478-689">Это может привести к <xref:System.Windows.UIElement3D.IsMouseOver%2A> `true` даже несмотря на то, что мышь не была перемещена.</span><span class="sxs-lookup"><span data-stu-id="a8478-689">This can lead to <xref:System.Windows.UIElement3D.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
 <span data-ttu-id="a8478-690"><xref:System.Windows.UIElement3D.IsMouseOver%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-690"><xref:System.Windows.UIElement3D.IsMouseOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-691">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-691">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-692">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-692">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-693">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-693">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|  
|<span data-ttu-id="a8478-694">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-694">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-695">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-695">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-696">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsMouseOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-696">Identifies the <see cref="P:System.Windows.UIElement3D.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-697"><xref:System.Windows.UIElement3D.IsMouseOverProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-697"><xref:System.Windows.UIElement3D.IsMouseOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-698">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-698">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-699">Получает значение, указывающее, захвачено ли перо эти элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-699">Gets a value indicating whether the stylus is captured by this element.</span></span></summary>
        <value><span data-ttu-id="a8478-700">Значение <see langword="true" />, если элемент имеет захват пера; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-700"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-701">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-701">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-702">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-702">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-703">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-703">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-704"><xref:System.Windows.UIElement3D.IsStylusCaptured%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-704"><xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-705">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-705">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-706">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-706">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-707">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-707">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|  
|<span data-ttu-id="a8478-708">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-708">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-709">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-709">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-710">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-710">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-711">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-711">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-712"><xref:System.Windows.UIElement3D.IsStylusCapturedChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-712"><xref:System.Windows.UIElement3D.IsStylusCapturedChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-713">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-713">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-714">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-714">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-715"><xref:System.Windows.UIElement3D.IsStylusCapturedProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-715"><xref:System.Windows.UIElement3D.IsStylusCapturedProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-716">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-716">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-717">Возвращает значение, определяющее, удерживается ли захват пера данным элементом или элементом в пределах его границ и визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="a8478-717">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span></summary>
        <value><span data-ttu-id="a8478-718">Значение <see langword="true" />, если этот элемент или содержащийся в нем элемент произвел захват пера; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-718"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-719">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-719">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-720">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-720">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-721">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-721">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-722"><xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-722"><xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-723">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-723">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-724">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-724">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-725">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-725">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="a8478-726">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-726">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-727">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-727">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement3D.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-728">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-728">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-729">Это событие [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-729">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-730"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-730"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-731">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-731">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-732">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-732">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-733"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-733"><xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-734">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-734">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-735">Возвращает значение, указывающее, соответствует ли позиция пера результатам проверки нажатия, при которой учитывается компоновка элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-735">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="a8478-736">Значение <see langword="true" />, если указатель пера находится над тем же элементом, что и результат проверки нажатия; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-736"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-737">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-737">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-738">В отличие от <xref:System.Windows.UIElement3D.IsStylusOver%2A>это свойство `true` только в том случае, если перо находится над элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-738">Unlike <xref:System.Windows.UIElement3D.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="a8478-739">Если перо вместо дочернего элемента или над элементами, которые являются частью более глубокой компоновки элемента (визуальное дерево), это свойство будет `false`.</span><span class="sxs-lookup"><span data-stu-id="a8478-739">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="a8478-740">Если вы не знакомы с составным элементом управления (например, это свойство можно использовать в пользовательском шаблоне элемента управления для определяемого элемента управления), это свойство может возвращать непредвиденные результаты.</span><span class="sxs-lookup"><span data-stu-id="a8478-740">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="a8478-741">В большинстве случаев, когда вы не создаете элементы управления, используйте вместо этого <xref:System.Windows.UIElement3D.IsStylusOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-741">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="a8478-742">Если этот элемент имеет захват пера и это свойство `true` во время записи, это свойство остается `true` до тех пор, пока перо не будет потеряно и перо не поверх границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-742">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="a8478-743">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-743">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-744">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-744">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-745"><xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-745"><xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-746">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-746">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-747">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-747">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-748">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-748">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="a8478-749">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-749">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-750">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-750">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-751">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-751">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-752">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-752">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-753"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-753"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-754">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-754">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-755">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-755">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-756"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-756"><xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-757">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-757">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement3D.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-758">Возвращает значение, указывающее, наведен ли курсор пера на этот элемент (включая визуальные дочерние элементы).</span><span class="sxs-lookup"><span data-stu-id="a8478-758">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="a8478-759">Значение <see langword="true" />, если курсор пера наведен на элемент или его дочерние элементы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-759"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a8478-760">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-760">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-761">Если этот элемент имеет захват пера, это свойство будет продолжать возвращать `true` до тех пор, пока не будет снят захват пера и указатель не покинет его границы.</span><span class="sxs-lookup"><span data-stu-id="a8478-761">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="a8478-762">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-762">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-763">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-763">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-764"><xref:System.Windows.UIElement3D.IsStylusOver%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-764"><xref:System.Windows.UIElement3D.IsStylusOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-765">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-765">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-766">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-766">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-767">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-767">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|  
|<span data-ttu-id="a8478-768">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-768">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-769">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-769">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-770">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsStylusOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-770">Identifies the <see cref="P:System.Windows.UIElement3D.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-771"><xref:System.Windows.UIElement3D.IsStylusOverProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-771"><xref:System.Windows.UIElement3D.IsStylusOverProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-772">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-772">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement3D.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-773">Получает значение, указывающее, видим ли данный элемент в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8478-773">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="a8478-774">Значение <see langword="true" />, если элемент видим; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-774"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-775">При определении <xref:System.Windows.UIElement3D.IsVisible%2A> значения учитывается много факторов.</span><span class="sxs-lookup"><span data-stu-id="a8478-775">Determination of the <xref:System.Windows.UIElement3D.IsVisible%2A> value takes many factors into account.</span></span> <span data-ttu-id="a8478-776">Напротив, <xref:System.Windows.UIElement3D.Visibility%2A>, которое является устанавливаемым свойством, указывает намерение сделать элемент видимым или невидимым только в программном коде.</span><span class="sxs-lookup"><span data-stu-id="a8478-776">In contrast, <xref:System.Windows.UIElement3D.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="a8478-777">Изменение значения этого свойства, как правило, вызывает событие <xref:System.Windows.UIElement3D.IsVisibleChanged>.</span><span class="sxs-lookup"><span data-stu-id="a8478-777">Changes to the value of this property will typically raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event.</span></span> <span data-ttu-id="a8478-778">Не существует соответствующего [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] метод переопределения класса "on \*", позволяющий некоторым производным классам переопределить это поведение и обработать событие, но обработчик класса все равно можно присоединить непосредственно с <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-778">There is no matching [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] "On\*" class handling override method that would allow some derived class to override that behavior and handle the event, but a class handler could still be attached directly with <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-779">Элементы, где <xref:System.Windows.UIElement3D.IsVisible%2A> `false` не участвуют в событиях ввода (или командах), не влияют ни на меру, ни на переупорядочение проходов по макету, не находятся в последовательности табуляции и не будут выводиться при проверке нажатия.</span><span class="sxs-lookup"><span data-stu-id="a8478-779">Elements where <xref:System.Windows.UIElement3D.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="a8478-780">В отличие от этого, элементы, где <xref:System.Windows.UIElement3D.IsEnabled%2A> `false`, по-прежнему будут участвовать в событиях и командах, а также проверке нажатия, но не могут сосредоточиться.</span><span class="sxs-lookup"><span data-stu-id="a8478-780">In contrast, elements where <xref:System.Windows.UIElement3D.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
 <span data-ttu-id="a8478-781"><xref:System.Windows.UIElement3D.IsVisible%2A> не предназначен для использования в качестве триггера стиля.</span><span class="sxs-lookup"><span data-stu-id="a8478-781"><xref:System.Windows.UIElement3D.IsVisible%2A> is not intended to be used as a style trigger.</span></span> <span data-ttu-id="a8478-782">Использование <xref:System.Windows.UIElement3D.IsVisible%2A> в качестве триггера стиля может привести к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="a8478-782">Using <xref:System.Windows.UIElement3D.IsVisible%2A> as a style trigger might have unpredictable results.</span></span> <span data-ttu-id="a8478-783"><xref:System.Windows.UIElement3D.IsVisible%2A> предназначен для проверки состояния с помощью реализаций ввода более низкого уровня.</span><span class="sxs-lookup"><span data-stu-id="a8478-783"><xref:System.Windows.UIElement3D.IsVisible%2A> is intended for state checking by lower level input implementations.</span></span>  
  
 <span data-ttu-id="a8478-784"><xref:System.Windows.UIElement3D.IsVisible%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-784"><xref:System.Windows.UIElement3D.IsVisible%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-785">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-785">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-786">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-786">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-787">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-787">Identifier field</span></span>|<xref:System.Windows.UIElement3D.IsVisibleProperty>|  
|<span data-ttu-id="a8478-788">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-788">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-789">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-789">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-790">Происходит при изменении значения свойства <see cref="P:System.Windows.UIElement3D.IsVisible" /> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-790">Occurs when the value of the <see cref="P:System.Windows.UIElement3D.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-791">Этот элемент является событием [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)], а не перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-791">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 <span data-ttu-id="a8478-792"><xref:System.Windows.UIElement3D.IsVisibleChanged> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-792"><xref:System.Windows.UIElement3D.IsVisibleChanged> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-793">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-793">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-794">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.IsVisible" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-794">Identifies the <see cref="P:System.Windows.UIElement3D.IsVisible" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-795"><xref:System.Windows.UIElement3D.IsVisibleProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-795"><xref:System.Windows.UIElement3D.IsVisibleProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-796">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-796">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-797">Происходит при нажатии клавиши, если фокус ввода с клавиатуры находится на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="a8478-797">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-798">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.KeyDown> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-798">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.KeyDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-799">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.KeyDown>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-799">Event handlers that are attached to the <xref:System.Windows.UIElement3D.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-800"><xref:System.Windows.UIElement3D.KeyDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-800"><xref:System.Windows.UIElement3D.KeyDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-801">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-801">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-802">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-802">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-803">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-803">Identifier field</span></span>|<xref:System.Windows.UIElement3D.KeyDownEvent>|  
|<span data-ttu-id="a8478-804">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-804">Routing strategy</span></span>|<span data-ttu-id="a8478-805">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-805">Bubbling</span></span>|  
|<span data-ttu-id="a8478-806">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-806">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8478-807">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-807">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="a8478-808">Переопределите <xref:System.Windows.UIElement3D.OnKeyDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-808">Override <xref:System.Windows.UIElement3D.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-809">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-809">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-810">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-810">Identifies the <see cref="E:System.Windows.UIElement3D.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-811">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-811">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-812">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-812">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-813">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-813">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-814">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-814">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-815">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-815">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-816"><xref:System.Windows.UIElement3D.KeyDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-816"><xref:System.Windows.UIElement3D.KeyDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-817">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-817">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-818">Происходит при отпускании клавиши, если фокус ввода с клавиатуры находится на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="a8478-818">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-819">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> присоединенного события для этого класса, чтобы <xref:System.Windows.UIElement3D.KeyUp> быть частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-819">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement3D.KeyUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-820">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.KeyUp>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-820">Event handlers that are attached to the <xref:System.Windows.UIElement3D.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-821"><xref:System.Windows.UIElement3D.KeyUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-821"><xref:System.Windows.UIElement3D.KeyUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-822">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-822">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-823">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-823">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-824">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-824">Identifier field</span></span>|<xref:System.Windows.UIElement3D.KeyUpEvent>|  
|<span data-ttu-id="a8478-825">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-825">Routing strategy</span></span>|<span data-ttu-id="a8478-826">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-826">Bubbling</span></span>|  
|<span data-ttu-id="a8478-827">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-827">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8478-828">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-828">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="a8478-829">Переопределите <xref:System.Windows.UIElement3D.OnKeyUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-829">Override <xref:System.Windows.UIElement3D.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-830">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-830">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-831">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-831">Identifies the <see cref="E:System.Windows.UIElement3D.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-832">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-832">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-833">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-833">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-834">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-834">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-835">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-835">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-836">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-836">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-837"><xref:System.Windows.UIElement3D.KeyUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-837"><xref:System.Windows.UIElement3D.KeyUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-838">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-838">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-839">Происходит при потере данным элементом логического фокуса.</span><span class="sxs-lookup"><span data-stu-id="a8478-839">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-840">Логический фокус отличается от фокуса ввода, если фокус был намеренно вытеснен посредством вызова метода, но на другом уровне существует предыдущий фокус ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-840">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="a8478-841">В этом сценарии фокус клавиатуры остается там, где он находится, а элемент, где вызывается метод <xref:System.Windows.UIElement3D.Focus%2A>, по-прежнему получает логический фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-841">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="a8478-842">Более точная интерпретация этого события заключается в том, что это событие возникает, когда значение свойства <xref:System.Windows.UIElement3D.IsFocused%2A> элемента в маршруте изменяется с `true` на `false`.</span><span class="sxs-lookup"><span data-stu-id="a8478-842">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="a8478-843">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-843">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-844">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, получивший фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-844">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
 <span data-ttu-id="a8478-845"><xref:System.Windows.UIElement3D.LostFocus> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-845"><xref:System.Windows.UIElement3D.LostFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-846">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-846">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-847">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-847">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-848">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-848">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostFocusEvent>|  
|<span data-ttu-id="a8478-849">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-849">Routing strategy</span></span>|<span data-ttu-id="a8478-850">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-850">Bubbling</span></span>|  
|<span data-ttu-id="a8478-851">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-851">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="a8478-852">Нет соответствующего события туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-852">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-853">Переопределите <xref:System.Windows.UIElement3D.OnLostFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-853">Override <xref:System.Windows.UIElement3D.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-854">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-854">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-855">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-855">Identifies the <see cref="E:System.Windows.UIElement3D.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-856">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-856">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-857">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-857">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-858">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-858">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-859">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-859">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-860">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-860">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-861"><xref:System.Windows.UIElement3D.LostFocusEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-861"><xref:System.Windows.UIElement3D.LostFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-862">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-862">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-863">Происходит при потере данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-863">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-864">Так как в этом событии используется восходящая маршрутизация, элемент, который потерял фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-864">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-865">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-865">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a8478-866">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.LostKeyboardFocus> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-866">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-867">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.LostKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-867">Event handlers that are attached to the <xref:System.Windows.UIElement3D.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-868"><xref:System.Windows.UIElement3D.LostKeyboardFocus> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-868"><xref:System.Windows.UIElement3D.LostKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-869">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-869">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-870">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-870">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-871">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-871">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|  
|<span data-ttu-id="a8478-872">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-872">Routing strategy</span></span>|<span data-ttu-id="a8478-873">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-873">Bubbling</span></span>|  
|<span data-ttu-id="a8478-874">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-874">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8478-875">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8478-875">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8478-876">Переопределите <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-876">Override <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-877">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-877">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-878">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-878">Identifies the <see cref="E:System.Windows.UIElement3D.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-879">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-879">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-880">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-880">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-881">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-881">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-882">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-882">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-883">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-883">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-884"><xref:System.Windows.UIElement3D.LostKeyboardFocusEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-884"><xref:System.Windows.UIElement3D.LostKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-885">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-885">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-886">Происходит при потере элементом захвата мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-886">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-887">Когда элемент захватывает мышь, он получает ввод с клавиатуры, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-887">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a8478-888">Мышь обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-888">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8478-889">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет захват, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-889">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-890">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял захват.</span><span class="sxs-lookup"><span data-stu-id="a8478-890">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="a8478-891">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.LostMouseCapture> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-891">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-892">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.LostMouseCapture>, присоединяются к базовому <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-892">Event handlers that are attached to the <xref:System.Windows.UIElement3D.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-893"><xref:System.Windows.UIElement3D.LostMouseCapture> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-893"><xref:System.Windows.UIElement3D.LostMouseCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-894">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-894">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-895">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-895">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-896">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-896">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|  
|<span data-ttu-id="a8478-897">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-897">Routing strategy</span></span>|<span data-ttu-id="a8478-898">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-898">Bubbling</span></span>|  
|<span data-ttu-id="a8478-899">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-899">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8478-900">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-900">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-901">Переопределите <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-901">Override <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-902">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-902">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-903">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-903">Identifies the <see cref="E:System.Windows.UIElement3D.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-904">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-904">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-905">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-905">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-906">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-906">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-907">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-907">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-908">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-908">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-909"><xref:System.Windows.UIElement3D.LostMouseCaptureEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-909"><xref:System.Windows.UIElement3D.LostMouseCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-910">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-910">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-911">Происходит при потере элементом захвата пера.</span><span class="sxs-lookup"><span data-stu-id="a8478-911">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-912">Когда элемент захватывает перо, он получает входные данные пера, даже если указатель находится за пределами его границ.</span><span class="sxs-lookup"><span data-stu-id="a8478-912">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a8478-913">Перо обычно захватывается только во время операций перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-913">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a8478-914">Так как в этом событии используется восходящая маршрутизация, элемент, который теряет фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-914">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-915">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-915">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a8478-916">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.LostStylusCapture> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-916">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-917">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.LostStylusCapture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-917">Event handlers that are attached to the <xref:System.Windows.UIElement3D.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-918"><xref:System.Windows.UIElement3D.LostStylusCapture> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-918"><xref:System.Windows.UIElement3D.LostStylusCapture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-919">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-919">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-920">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-920">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-921">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-921">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|  
|<span data-ttu-id="a8478-922">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-922">Routing strategy</span></span>|<span data-ttu-id="a8478-923">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-923">Bubbling</span></span>|  
|<span data-ttu-id="a8478-924">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-924">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-925">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-925">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-926">Переопределите <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-926">Override <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-927">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-927">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-928">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-928">Identifies the <see cref="E:System.Windows.UIElement3D.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-929">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-929">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-930">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-930">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-931">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-931">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-932">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-932">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-933">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-933">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-934"><xref:System.Windows.UIElement3D.LostStylusCaptureEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-934"><xref:System.Windows.UIElement3D.LostStylusCaptureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-935">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-935">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-936">Происходит, когда элемент теряет касание.</span><span class="sxs-lookup"><span data-stu-id="a8478-936">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-937">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-937">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-938">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-938">Identifier field</span></span>|<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|  
|<span data-ttu-id="a8478-939">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-939">Routing strategy</span></span>|<span data-ttu-id="a8478-940">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-940">Bubbling</span></span>|  
|<span data-ttu-id="a8478-941">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-941">Delegate</span></span>|<span data-ttu-id="a8478-942"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-942"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-943">Переопределите <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-943">Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-944">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.LostTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-944">Identifies the <see cref="E:System.Windows.UIElement3D.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-945">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-945">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-946">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.MouseDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-946">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-947">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.MouseDown>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-947">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-948">Событие <xref:System.Windows.UIElement3D.MouseDown> часто возникает вместе с <xref:System.Windows.UIElement3D.MouseLeftButtonDown> или <xref:System.Windows.UIElement3D.MouseRightButtonDown>, которое соответствует нажатию одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-948">The <xref:System.Windows.UIElement3D.MouseDown> event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8478-949"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> и <xref:System.Windows.UIElement3D.MouseRightButtonDown> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-949"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8478-950">См. раздел Примечания для <xref:System.Windows.UIElement3D.MouseLeftButtonDown> или <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-950">See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8478-951">Некоторые элементы управления могут иметь встроенную обработку классов для событий кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-951">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="a8478-952">Событие нажатия левой кнопки мыши является наиболее вероятным событием для обработки класса в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-952">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="a8478-953">Обработка класса часто помечает базовое событие <xref:System.Windows.Input.Mouse> класса как обработанное.</span><span class="sxs-lookup"><span data-stu-id="a8478-953">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="a8478-954">После того как событие помечено как обработанное, другие обработчики экземпляров, присоединенные к этому элементу, обычно не вызываются.</span><span class="sxs-lookup"><span data-stu-id="a8478-954">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="a8478-955">Другие обработчики классов или экземпляров, присоединенные к элементам в направлении восходящей маршрутизации к корню в дереве пользовательского интерфейса, также не вызываются.</span><span class="sxs-lookup"><span data-stu-id="a8478-955">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="a8478-956">Проблему, описанную выше, можно устранить, выполнив события <xref:System.Windows.UIElement3D.MouseDown> для событий левой кнопки мыши в производном классе, который обрабатывает классы с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="a8478-956">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement3D.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="a8478-957">Присоединение обработчиков для события <xref:System.Windows.UIElement3D.PreviewMouseDown>, которое не помечено как обработанное элементами управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-957">Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="a8478-958">Обратите внимание, что поскольку это событие предварительного просмотра, маршрут начинается с корневого каталога и подключается к элементу управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-958">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="a8478-959">Зарегистрируйте обработчик в элементе управления процедурно, вызвав <xref:System.Windows.UIElement3D.AddHandler%2A> и выбрав параметр Signature, который позволяет обработчикам прослушивать события, даже если они уже помечены как обработанные в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-959">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="a8478-960"><xref:System.Windows.UIElement3D.MouseDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-960"><xref:System.Windows.UIElement3D.MouseDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-961">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-961">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-962">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-962">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-963">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-963">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseDownEvent>|  
|<span data-ttu-id="a8478-964">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-964">Routing strategy</span></span>|<span data-ttu-id="a8478-965">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-965">Bubbling</span></span>|  
|<span data-ttu-id="a8478-966">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-966">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-967">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-967">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="a8478-968">Переопределите <xref:System.Windows.UIElement3D.OnMouseDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-968">Override <xref:System.Windows.UIElement3D.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-969">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-969">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-970">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-970">Identifies the <see cref="E:System.Windows.UIElement3D.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-971">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-971">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-972">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-972">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-973">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-973">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-974">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-974">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-975">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-975">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-976"><xref:System.Windows.UIElement3D.MouseDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-976"><xref:System.Windows.UIElement3D.MouseDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-977">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-977">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-978">Происходит, когда указатель мыши попадает внутрь границ данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-978">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-979"><xref:System.Windows.UIElement3D.MouseEnter> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-979"><xref:System.Windows.UIElement3D.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8478-980">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="a8478-980">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span>  
  
 <span data-ttu-id="a8478-981">Хотя <xref:System.Windows.UIElement3D.MouseEnter> отслеживает, когда указатель мыши попадает в границы элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.UIElement3D.IsMouseOver%2A> изменилось с `false` на `true` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-981">Although <xref:System.Windows.UIElement3D.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="a8478-982">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.MouseEnter> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-982">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-983">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.MouseEnter>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-983">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-984"><xref:System.Windows.UIElement3D.MouseEnter> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-984"><xref:System.Windows.UIElement3D.MouseEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-985">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-985">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-986">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-986">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-987">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-987">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseEnterEvent>|  
|<span data-ttu-id="a8478-988">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-988">Routing strategy</span></span>|<span data-ttu-id="a8478-989">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-989">Direct</span></span>|  
|<span data-ttu-id="a8478-990">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-990">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8478-991">Переопределите <xref:System.Windows.UIElement3D.OnMouseEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-991">Override <xref:System.Windows.UIElement3D.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-992">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-992">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-993">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-993">Identifies the <see cref="E:System.Windows.UIElement3D.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-994">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-994">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-995">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-995">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-996">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-996">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-997">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-997">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-998">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-998">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-999"><xref:System.Windows.UIElement3D.MouseEnterEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-999"><xref:System.Windows.UIElement3D.MouseEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1000">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1000">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1001">Происходит, когда указатель мыши покидает границы данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1001">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1002"><xref:System.Windows.UIElement3D.MouseLeave> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-1002"><xref:System.Windows.UIElement3D.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8478-1003">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="a8478-1003">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span>  
  
 <span data-ttu-id="a8478-1004">Хотя <xref:System.Windows.UIElement3D.MouseLeave> отслеживает, когда указатель мыши выходит за пределы элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.UIElement3D.IsMouseOver%2A> изменилось с `true` на `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1004">Although <xref:System.Windows.UIElement3D.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="a8478-1005">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.MouseLeave> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-1005">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-1006">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.MouseLeave>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1006">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-1007"><xref:System.Windows.UIElement3D.MouseLeave> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1007"><xref:System.Windows.UIElement3D.MouseLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1008">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1008">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1009">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1009">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1010">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1010">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|  
|<span data-ttu-id="a8478-1011">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1011">Routing strategy</span></span>|<span data-ttu-id="a8478-1012">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-1012">Direct</span></span>|  
|<span data-ttu-id="a8478-1013">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1013">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8478-1014">Переопределите <xref:System.Windows.UIElement3D.OnMouseLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1014">Override <xref:System.Windows.UIElement3D.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1015">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1015">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1016">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1016">Identifies the <see cref="E:System.Windows.UIElement3D.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1017">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1017">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1018">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1018">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1019">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1019">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1020">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1020">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1021">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1021">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1022"><xref:System.Windows.UIElement3D.MouseLeaveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1022"><xref:System.Windows.UIElement3D.MouseLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1023">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1023">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1024">Происходит при нажатии левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1024">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1025">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1025">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1026">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1026">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-1027">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1027">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-1028">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1028">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-1029">Если пометить <xref:System.Windows.UIElement3D.MouseLeftButtonDown> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-1029">If you mark <xref:System.Windows.UIElement3D.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8478-1030">Это может быть событие, созданное обработчиком класса, например <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1030">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8478-1031">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-1031">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-1032">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1032">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-1033">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1033">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8478-1034">Обработка класса часто помечает базовое событие <xref:System.Windows.Input.Mouse> класса как обработанное.</span><span class="sxs-lookup"><span data-stu-id="a8478-1034">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="a8478-1035">После того как событие помечено как обработанное, другие обработчики экземпляров, присоединенные к этому элементу, обычно не вызываются.</span><span class="sxs-lookup"><span data-stu-id="a8478-1035">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="a8478-1036">Другие обработчики классов или экземпляров, присоединенные к элементам в направлении восходящей маршрутизации к корню в дереве пользовательского интерфейса, также не вызываются.</span><span class="sxs-lookup"><span data-stu-id="a8478-1036">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="a8478-1037">Проблему, описанную выше, можно устранить, выполнив события <xref:System.Windows.UIElement3D.MouseLeftButtonDown> для событий левой кнопки мыши в производном классе, который обрабатывает классы с помощью любого из следующих решений:</span><span class="sxs-lookup"><span data-stu-id="a8478-1037">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement3D.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="a8478-1038">Присоединение обработчиков для события <xref:System.Windows.UIElement3D.PreviewMouseDown>, которое не помечено как обработанное элементами управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-1038">Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="a8478-1039">Обратите внимание, что поскольку это событие предварительного просмотра, маршрут начинается с корневого каталога и подключается к элементу управления.</span><span class="sxs-lookup"><span data-stu-id="a8478-1039">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="a8478-1040">Зарегистрируйте обработчик в элементе управления процедурно, вызвав <xref:System.Windows.UIElement3D.AddHandler%2A> и выбрав параметр Signature, который позволяет обработчикам прослушивать события, даже если они уже помечены как обработанные в данных перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1040">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="a8478-1041"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1041"><xref:System.Windows.UIElement3D.MouseLeftButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1042">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1042">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1043">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1043">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1044">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1044">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="a8478-1045">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1045">Routing strategy</span></span>|<span data-ttu-id="a8478-1046">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-1046">Direct</span></span>|  
|<span data-ttu-id="a8478-1047">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1047">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-1048">Переопределите <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1048">Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1049">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1049">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1050">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1050">Identifies the <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1051">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1051">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1052">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1052">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1053">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1053">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1054">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1054">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1055">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1055">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1056"><xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1056"><xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1057">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1057">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1058">Происходит при отпускании левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1058">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1059">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1059">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1060">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1060">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-1061">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1061">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-1062">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1062">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-1063">Если пометить <xref:System.Windows.UIElement3D.MouseLeftButtonUp> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-1063">If you mark <xref:System.Windows.UIElement3D.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8478-1064">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-1064">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-1065">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1065">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-1066">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1066">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1067"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1067"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1068">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1068">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1069">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1069">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1070">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1070">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="a8478-1071">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1071">Routing strategy</span></span>|<span data-ttu-id="a8478-1072">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-1072">Direct</span></span>|  
|<span data-ttu-id="a8478-1073">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1073">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-1074">Переопределите <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1074">Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1075">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1075">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1076">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1076">Identifies the <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1077">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1077">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1078">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1078">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1079">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1079">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1080">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1080">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1081">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1081">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1082"><xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1082"><xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1083">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1083">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1084">Происходит при перемещении указателя мыши над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1084">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1085">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.MouseMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-1085">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-1086">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.MouseMove>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1086">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-1087"><xref:System.Windows.UIElement3D.MouseMove> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1087"><xref:System.Windows.UIElement3D.MouseMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1088">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1088">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1089">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1089">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1090">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1090">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseMoveEvent>|  
|<span data-ttu-id="a8478-1091">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1091">Routing strategy</span></span>|<span data-ttu-id="a8478-1092">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1092">Bubbling</span></span>|  
|<span data-ttu-id="a8478-1093">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1093">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8478-1094">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1094">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="a8478-1095">Переопределите <xref:System.Windows.UIElement3D.OnMouseMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1095">Override <xref:System.Windows.UIElement3D.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1096">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1096">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1097">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1097">Identifies the <see cref="E:System.Windows.UIElement3D.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1098">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1098">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1099">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1099">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1100">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1100">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1101">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1101">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1102">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1102">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1103"><xref:System.Windows.UIElement3D.MouseMoveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1103"><xref:System.Windows.UIElement3D.MouseMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1104">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1104">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1105">Происходит при нажатии правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1105">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1106">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1106">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1107">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1107">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-1108">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1108">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-1109">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1109">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-1110">Если пометить <xref:System.Windows.UIElement3D.MouseRightButtonDown> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-1110">If you mark <xref:System.Windows.UIElement3D.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8478-1111">Это может быть событие, созданное обработчиком класса, например <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1111">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8478-1112">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-1112">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-1113">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1113">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-1114">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1114">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1115">События мыши в правой кнопке часто имеют собственную обработку в сценариях приложений.</span><span class="sxs-lookup"><span data-stu-id="a8478-1115">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="a8478-1116">Например, щелчок правой кнопкой мыши может отобразить контекстное меню.</span><span class="sxs-lookup"><span data-stu-id="a8478-1116">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="a8478-1117">См. [Общие сведения о ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1117">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-1118"><xref:System.Windows.UIElement3D.MouseRightButtonDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1118"><xref:System.Windows.UIElement3D.MouseRightButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1119">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1119">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1120">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1121">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1121">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|  
|<span data-ttu-id="a8478-1122">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1122">Routing strategy</span></span>|<span data-ttu-id="a8478-1123">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-1123">Direct</span></span>|  
|<span data-ttu-id="a8478-1124">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1124">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-1125">Переопределите <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1125">Override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1126">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1126">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1127">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1127">Identifies the <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1128">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1128">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1129">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1129">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1130">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1130">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1131">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1131">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1132">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1132">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1133"><xref:System.Windows.UIElement3D.MouseRightButtonDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1133"><xref:System.Windows.UIElement3D.MouseRightButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1134">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1134">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1135">Происходит при отпускании правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1135">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1136">Несмотря на то, что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) обычно используется маршрут с восходящей маршрутизацией через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1136">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1137">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1137">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-1138">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1138">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-1139">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1139">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-1140">Если пометить <xref:System.Windows.UIElement3D.MouseRightButtonUp> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-1140">If you mark <xref:System.Windows.UIElement3D.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8478-1141">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-1141">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-1142">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1142">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-1143">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1143">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-1144"><xref:System.Windows.UIElement3D.MouseRightButtonUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1144"><xref:System.Windows.UIElement3D.MouseRightButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1145">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1145">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1146">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1146">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1147">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1147">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|  
|<span data-ttu-id="a8478-1148">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1148">Routing strategy</span></span>|<span data-ttu-id="a8478-1149">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-1149">Direct</span></span>|  
|<span data-ttu-id="a8478-1150">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1150">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-1151">Переопределите <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1151">Override <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1152">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1152">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1153">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1153">Identifies the <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1154">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1154">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1155">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1155">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1156">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1156">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1157">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1157">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1158">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1158">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1159"><xref:System.Windows.UIElement3D.MouseRightButtonUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1159"><xref:System.Windows.UIElement3D.MouseRightButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1160">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1160">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1161">Происходит при отпускании любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1161">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1162">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.MouseUp> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-1162">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-1163">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.MouseUp>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1163">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-1164">Событие <xref:System.Windows.UIElement3D.MouseUp> часто возникает вместе с <xref:System.Windows.UIElement3D.MouseLeftButtonUp> или <xref:System.Windows.UIElement3D.MouseRightButtonUp>, которое соответствует выпуску одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1164">The <xref:System.Windows.UIElement3D.MouseUp> event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8478-1165"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> и <xref:System.Windows.UIElement3D.MouseRightButtonUp> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1165"><xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8478-1166">См. раздел Примечания для <xref:System.Windows.UIElement3D.MouseLeftButtonUp> или <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1166">See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span></span>  
  
 <span data-ttu-id="a8478-1167"><xref:System.Windows.UIElement3D.MouseUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1167"><xref:System.Windows.UIElement3D.MouseUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1168">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1168">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1169">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1169">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1170">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1170">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseUpEvent>|  
|<span data-ttu-id="a8478-1171">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1171">Routing strategy</span></span>|<span data-ttu-id="a8478-1172">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1172">Bubbling</span></span>|  
|<span data-ttu-id="a8478-1173">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1173">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-1174">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1174">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="a8478-1175">Переопределите <xref:System.Windows.UIElement3D.OnMouseUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1175">Override <xref:System.Windows.UIElement3D.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1176">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1176">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1177">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1177">Identifies the <see cref="E:System.Windows.UIElement3D.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1178">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1178">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1179">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1179">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1180">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1180">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1181">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1181">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1182">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1182">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1183"><xref:System.Windows.UIElement3D.MouseUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1183"><xref:System.Windows.UIElement3D.MouseUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1184">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1184">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1185">Происходит при вращении колесика мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1185">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1186">Фокус или захват мыши имеют приоритет над местом, где находится указатель мыши; Таким образом, если вы получаете событие <xref:System.Windows.UIElement3D.MouseWheel> из элемента с закрестным или захваченным элементом, указатель мыши на самом деле может находиться над другим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1186">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement3D.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="a8478-1187">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.MouseWheel> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-1187">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-1188">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.MouseWheel>, присоединяются к базовому <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1188">Event handlers that are attached to the <xref:System.Windows.UIElement3D.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-1189"><xref:System.Windows.UIElement3D.MouseWheel> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1189"><xref:System.Windows.UIElement3D.MouseWheel> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1190">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1190">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-1191">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-1191">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-1192">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-1192">Identifier field</span></span>|<xref:System.Windows.UIElement3D.MouseWheelEvent>|  
|<span data-ttu-id="a8478-1193">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1193">Routing strategy</span></span>|<span data-ttu-id="a8478-1194">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-1194">Bubbling</span></span>|  
|<span data-ttu-id="a8478-1195">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-1195">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="a8478-1196">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1196">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="a8478-1197">Переопределите <xref:System.Windows.UIElement3D.OnMouseWheel%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-1197">Override <xref:System.Windows.UIElement3D.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992"><span data-ttu-id="a8478-1198">Обработка событий в трехмерном примере</span><span class="sxs-lookup"><span data-stu-id="a8478-1198">Handling Events in 3-D Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-1199">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1199">Identifies the <see cref="E:System.Windows.UIElement3D.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1200">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1200">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-1201">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1201">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-1202">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-1202">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-1203">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1203">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-1204">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1204">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1205"><xref:System.Windows.UIElement3D.MouseWheelEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1205"><xref:System.Windows.UIElement3D.MouseWheelEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1206">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1206">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement3D.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="a8478-1207">Запрос перемещения, содержащий свойство, которое определяет способ перемещения в соответствующем порядке по вкладкам, или направление для визуального перемещения.</span><span class="sxs-lookup"><span data-stu-id="a8478-1207">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="a8478-1208">Предпринимает попытки переместить фокус с данного элемента на иной.</span><span class="sxs-lookup"><span data-stu-id="a8478-1208">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="a8478-1209">Направления для перемещения фокуса задается указанием направления, которое обрабатывается внутри видимого родительского элемента данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1209">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="a8478-1210"><see langword="true" />, если запрос на перемещение выполнен; иначе, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1210"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1211">Убедитесь, что проверяется возвращаемое значение этого метода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1211">Make sure you check the return value of this method.</span></span> <span data-ttu-id="a8478-1212">Возвращаемое значение `false` может быть возвращено, если обход выполняется в позицию табуляции, определяемую композицией элемента управления, а запрос обхода не запрашивается для переноса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1212">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 <span data-ttu-id="a8478-1213"><xref:System.Windows.UIElement3D.MoveFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1213"><xref:System.Windows.UIElement3D.MoveFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1214">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1214">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement3D.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1215">Данные события для события клавиши доступа.</span><span class="sxs-lookup"><span data-stu-id="a8478-1215">The event data to the access key event.</span></span> <span data-ttu-id="a8478-1216">Данные события сообщают о вызываемой клавише и указывают, передал ли объект <see cref="T:System.Windows.Input.AccessKeyManager" />, управляющий передачей данных событий, вызов данной клавиши доступа на другие элементы.</span><span class="sxs-lookup"><span data-stu-id="a8478-1216">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="a8478-1217">Предоставляет обработку класса при вызове клавиши доступа, имеющей значение для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1217">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1218">Отсутствует фактическое событие AccessKey в <xref:System.Windows.UIElement3D> классе или в других местах, которые можно вызывать или присоединять к обработчику.</span><span class="sxs-lookup"><span data-stu-id="a8478-1218">There is no actual AccessKey event in the <xref:System.Windows.UIElement3D> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="a8478-1219">Вместо этого событие создается с помощью выделенного класса диспетчера, <xref:System.Windows.Input.AccessKeyManager>, который обрабатывает все входные данные для поиска ключей доступа, применимых ко всей входной модели.</span><span class="sxs-lookup"><span data-stu-id="a8478-1219">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 <span data-ttu-id="a8478-1220"><xref:System.Windows.UIElement3D.OnAccessKey%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1220"><xref:System.Windows.UIElement3D.OnAccessKey%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1221">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1221">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-1222">Реализация этого метода по умолчанию в <see cref="T:System.Windows.UIElement3D" /> устанавливает фокус клавиатуры на этот элемент (путем вызова <see cref="M:System.Windows.UIElement3D.Focus" />).</span><span class="sxs-lookup"><span data-stu-id="a8478-1222">The default implementation of this method in <see cref="T:System.Windows.UIElement3D" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement3D.Focus" />).</span></span> <span data-ttu-id="a8478-1223">Реализации должны постоянно иметь такое поведение, если они могут сосредоточиться, так как это ожидаемое поведение для сценариев специальных возможностей.</span><span class="sxs-lookup"><span data-stu-id="a8478-1223">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="a8478-1224">Обратите внимание, что базовая реализация не выполняет никаких действий с переданными событиями и не создает дальнейших событий. Он просто устанавливает фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-1224">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement3D.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-1225">Возвращает определяющиеся классом <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> реализации для [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-1225">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="a8478-1226">Реализация <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, зависящая от конкретного типа.</span><span class="sxs-lookup"><span data-stu-id="a8478-1226">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1227"><xref:System.Windows.UIElement3D.OnCreateAutomationPeer%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1227"><xref:System.Windows.UIElement3D.OnCreateAutomationPeer%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1228">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1228">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-1229">Реализация этого метода обычно вызывает конструктор определенной реализации <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> и возвращает его в качестве возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="a8478-1229">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="a8478-1230">Все производные классы <see cref="T:System.Windows.UIElement3D" /> должны реализовывать этот метод, чтобы предоставить собственную конкретную реализацию <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> инфраструктуре [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8478-1230">All <see cref="T:System.Windows.UIElement3D" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="a8478-1231">Дополнительные сведения о реализации этого шаблона см. в разделе <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1231">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1232">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1232">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1233">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.DragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1233">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1234">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1234">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1235">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1235">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1236">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1236">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1237">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1237">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1238">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1238">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1239">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1239">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1240">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1240">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1241">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1241">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1242">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1242">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1243">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1243">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1244"><xref:System.Windows.UIElement3D.OnDragEnter%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1244"><xref:System.Windows.UIElement3D.OnDragEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1245">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1245">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1246">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1246">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1247">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.DragLeave" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1247">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1248">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1248">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1249">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1249">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1250">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1250">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1251">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1251">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1252">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1252">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1253">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1253">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1254">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1254">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1255">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1255">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1256">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1256">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1257">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1257">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1258"><xref:System.Windows.UIElement3D.OnDragLeave%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1258"><xref:System.Windows.UIElement3D.OnDragLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1259">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1259">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1260">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1260">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1261">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.DragOver" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1261">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1262">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1262">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1263">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1263">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1264">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1264">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1265">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1265">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1266">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1266">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1267">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1267">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1268">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1268">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1269">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1269">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1270">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1270">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1271">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1271">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1272"><xref:System.Windows.UIElement3D.OnDragOver%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1272"><xref:System.Windows.UIElement3D.OnDragOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1273">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1273">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1274">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1274">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1275">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.Drop" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1275">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.Drop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1276">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1276">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1277">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1277">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1278">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1278">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1279">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1279">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1280">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1280">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1281">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1281">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1282">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1282">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1283">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1283">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1284">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1284">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1285">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1285">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1286"><xref:System.Windows.UIElement3D.OnDrop%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1286"><xref:System.Windows.UIElement3D.OnDrop%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1287">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1287">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement3D.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1288">Объект класса <see cref="T:System.Windows.GiveFeedbackEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1288">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1289">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.GiveFeedback" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1289">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1290">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1290">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1291">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1291">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1292">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1292">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1293">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1293">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1294">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1294">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1295">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1295">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1296">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1296">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1297">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1297">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1298">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1298">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1299">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1299">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1300"><xref:System.Windows.UIElement3D.OnGiveFeedback%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1300"><xref:System.Windows.UIElement3D.OnGiveFeedback%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1301">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1301">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1302">Объект <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1302">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="a8478-1303">Данные о событии должны содержать идентификатор для события <see cref="E:System.Windows.UIElement3D.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1303">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement3D.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="a8478-1304">Вызывает перенаправленное событие <see cref="E:System.Windows.UIElement3D.GotFocus" /> с помощью предоставленных данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1304">Raises the <see cref="E:System.Windows.UIElement3D.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1305">Этот метод, хотя Virtual, имеет реализацию по умолчанию, которая вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1305">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="a8478-1306">Эта реализация метода \* предназначена для вызова события, и эта же реализация метода вызывается внутренним образом для вызова события при изменении значения свойства <xref:System.Windows.UIElement3D.IsFocused%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1306">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="a8478-1307">Реализация <xref:System.Windows.UIElement3D.OnGotFocus%2A> отличается от других [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] реализаций \*, которые предоставляют удобный способ добавления обработки класса для этого события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1307">The <xref:System.Windows.UIElement3D.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 <span data-ttu-id="a8478-1308"><xref:System.Windows.UIElement3D.OnGotFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1308"><xref:System.Windows.UIElement3D.OnGotFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1309">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1309">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-1310">Если у вас нет намеренных и необычных необходимости создавать события фокуса, убедитесь, что реализация вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1310">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="a8478-1311">В противном случае событие <see cref="E:System.Windows.UIElement3D.GotFocus" /> не вызывается во время обычных пользовательских операций, которые обычно устанавливают фокус на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-1311">Otherwise, the <see cref="E:System.Windows.UIElement3D.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="a8478-1312">Если не требуется, чтобы элемент был доступен для фокусировки, можно запретить фокус, установив для <see cref="P:System.Windows.UIElement3D.Focusable" /> значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1312">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement3D.Focusable" /> to <see langword="false" />.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1313">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1313">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1314">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1314">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1315">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1315">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1316">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1316">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1317">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1317">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1318">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1318">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1319">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1319">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1320">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1320">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1321">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1321">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1322">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1322">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1323">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1323">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1324">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1324">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1325"><xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1325"><xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1326">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1326">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1327">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1327">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1328">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1328">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1329">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1329">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1330">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1330">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1331">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1331">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1332">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1332">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1333">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1333">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1334">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1334">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1335">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1335">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1336">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1336">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1337">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1337">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1338">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1338">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1339"><xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1339"><xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1340">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1340">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1341">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1341">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1342">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1342">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1343">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1343">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1344">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1344">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1345">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1345">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1346">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1346">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1347">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1347">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1348">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1348">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1349">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1349">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1350">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1350">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1351">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1351">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1352">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1352">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1353"><xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1353"><xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1354">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1354">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1355">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1355">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1356">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.GotTouchCapture" />, которое происходит при захвате сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1356">Provides class handling for the <see cref="E:System.Windows.UIElement3D.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1357">Метод <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1357">The <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-1358">Переопределите <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.GotTouchCapture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1358">Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.GotTouchCapture> event.</span></span> <span data-ttu-id="a8478-1359">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1359">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1360">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1360">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1361">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1361">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1362">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1362">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1363">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1363">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="a8478-1364">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1364">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1365">Затем событие <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1365">Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1366">Обратите внимание, что событие <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1366">Notice that the  <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="a8478-1367">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1367">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1368">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1368">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1369">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1369">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1370">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1370">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1371"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1371"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1372">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1372">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1373">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1373">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1374">Вызывается непосредственно перед вызовом события <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" /> данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1374">Invoked just before the <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="a8478-1375">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1375">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1376">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1376">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1377">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1377">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1378">Затем событие <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1378">Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1379">Обратите внимание, что событие <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1379">Notice that the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="a8478-1380">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1380">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1381">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1381">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1382">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1382">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1383">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1383">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1384"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1384"><xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1385">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1385">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1386">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1386">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1387">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsMouseCapturedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1387">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1388">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1388">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1389">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsMouseCaptured%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1389">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1390">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1390">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1391">Затем событие <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1391">Then the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1392">Обратите внимание, что событие <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1392">Notice that the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="a8478-1393">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1393">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1394">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1394">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1395">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1395">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1396">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1396">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1397"><xref:System.Windows.UIElement3D.OnIsMouseCapturedChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1397"><xref:System.Windows.UIElement3D.OnIsMouseCapturedChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1398">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1398">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1399">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1399">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1400">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1400">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1401">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1401">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1402"><xref:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1402"><xref:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1403">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1403">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-1404">Этот виртуальный метод вызывается при изменении значения свойства зависимости <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1404">This virtual method is called when the value of the <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1405">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1405">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1406">Затем событие <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1406">Then the <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1407">Обратите внимание, что это событие не является перенаправленным. Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1407">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="a8478-1408">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1408">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1409">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1409">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1410">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1410">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1411">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1411">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1412">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1412">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1413">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1413">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1414">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1414">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1415">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1415">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1416">Затем событие <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1416">Then the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1417">Обратите внимание, что событие <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> не является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1417">Notice that the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="a8478-1418">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1418">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1419">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1419">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1420">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1420">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1421">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1421">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1422"><xref:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1422"><xref:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1423">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1423">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1424">Объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1424">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1425">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsStylusCapturedChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1425">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1426">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1426">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1427">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsStylusCaptured%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1427">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1428">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1428">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1429">Затем событие <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1429">Then the <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1430">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1430">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a8478-1431">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1431">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1432">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1432">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1433">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1433">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1434">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1434">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1435"><xref:System.Windows.UIElement3D.OnIsStylusCapturedChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1435"><xref:System.Windows.UIElement3D.OnIsStylusCapturedChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1436">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1436">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1437">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1437">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1438">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1438">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1439">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1439">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1440">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1440">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1441">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1441">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1442">Затем событие <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1442">Then the <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1443">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1443">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a8478-1444">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1444">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1445">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1445">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1446">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1446">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1447">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1447">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1448"><xref:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1448"><xref:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1449">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1449">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1450">Объект класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1450">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1451">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1451">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a8478-1452">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1452">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1453">Этот виртуальный метод вызывается при изменении значения свойства зависимости <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1453">This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="a8478-1454">Виртуальный метод вызывается первым и может манипулировать данными события по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="a8478-1454">The virtual method is called first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a8478-1455">Затем событие <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> вызывается с тем же экземпляром данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1455">Then the <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a8478-1456">Обратите внимание, что это событие не является перенаправленным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1456">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a8478-1457">Поэтому его нельзя пометить как обработанный в обработчике класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1457">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a8478-1458">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1458">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1459">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1459">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1460">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1460">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1461"><xref:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1461"><xref:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1462">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1462">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1463">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1463">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1464">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1464">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1465">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1465">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1466">Нажатия клавиш обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1466">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="a8478-1467">Другие функции программирования, использующие нажатия клавиш, например входные и командные привязки, могут обменяться нажатием клавиши, прежде чем она будет представлена как общее нажатие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1467">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="a8478-1468">Если эти входные функции системы помечают событие как обработанное, то <xref:System.Windows.UIElement3D.OnKeyDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="a8478-1468">If these input system features mark the event as handled, then <xref:System.Windows.UIElement3D.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1469">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1469">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1470">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1470">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1471">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1471">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1472">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1472">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1473">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1473">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1474">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1474">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1475">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1475">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1476">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1476">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1477">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1477">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1478"><xref:System.Windows.UIElement3D.OnKeyDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1478"><xref:System.Windows.UIElement3D.OnKeyDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1479">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1479">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1480">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1480">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1481">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1481">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1482">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1482">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1483">Нажатия клавиш обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1483">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="a8478-1484">Другие функции программирования, использующие нажатия клавиш, например входные и командные привязки, могут обменяться нажатием клавиши, прежде чем она будет представлена как общее нажатие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1484">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="a8478-1485">Если эти входные функции системы помечают событие как обработанное, то <xref:System.Windows.UIElement3D.OnKeyUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="a8478-1485">If these input system features mark the event as handled, then <xref:System.Windows.UIElement3D.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1486">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1486">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1487">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1488">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1489">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1490">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1491">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1492">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1493">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1494">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1495"><xref:System.Windows.UIElement3D.OnKeyUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1495"><xref:System.Windows.UIElement3D.OnKeyUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1496">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1496">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1497">Объект <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1497">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="a8478-1498">Данные о событии должны содержать идентификатор для события <see cref="E:System.Windows.UIElement3D.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1498">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement3D.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="a8478-1499">Вызывает перенаправленное событие <see cref="E:System.Windows.UIElement3D.LostFocus" /> с помощью предоставленных данных о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1499">Raises the <see cref="E:System.Windows.UIElement3D.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1500">Этот метод, хотя Virtual, имеет реализацию по умолчанию, которая вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1500">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="a8478-1501">Эта реализация метода \* предназначена для вызова события, и эта же реализация метода вызывается внутренним образом для вызова события при изменении значения свойства <xref:System.Windows.UIElement3D.IsFocused%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1501">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="a8478-1502">Эта реализация отличается от других [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] реализаций \*, которые предоставляют удобный способ добавления обработки класса для этого события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1502">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 <span data-ttu-id="a8478-1503"><xref:System.Windows.UIElement3D.OnLostFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1503"><xref:System.Windows.UIElement3D.OnLostFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1504">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1504">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-1505">Если у вас нет намеренных и необычных необходимости создавать события фокуса, убедитесь, что реализация вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1505">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="a8478-1506">В противном случае событие <see cref="E:System.Windows.UIElement3D.LostFocus" /> не вызывается во время обычных пользовательских операций, которые обычно устанавливают фокус на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-1506">Otherwise, the <see cref="E:System.Windows.UIElement3D.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="a8478-1507">Если не требуется, чтобы элемент был доступен для фокусировки, можно запретить фокус, установив для <see cref="P:System.Windows.UIElement3D.Focusable" /> значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-1507">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement3D.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1508">Объект <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1508">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1509">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1509">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1510">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1510">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1511">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1511">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1512">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1512">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1513">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1513">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1514">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1514">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1515">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1515">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1516">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1516">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1517">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1517">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1518">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1518">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1519">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1519">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1520"><xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1520"><xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1521">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1521">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1522">Объект <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1522">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1523">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1523">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1524">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1524">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1525">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1525">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1526">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1526">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1527">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1527">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1528">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1528">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1529">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1529">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1530">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1530">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1531">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1531">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1532">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1532">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1533">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1533">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1534"><xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1534"><xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1535">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1535">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1536">Объект <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1536">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1537">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1537">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1538">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1538">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1539">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1539">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1540">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1540">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1541">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1541">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1542">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1542">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1543">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1543">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1544">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1544">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1545">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1545">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1546">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1546">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1547">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1547">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1548"><xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1548"><xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1549">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1549">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1550">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1550">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1551">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.LostTouchCapture" />, которое происходит при потере захвата сенсорного ввода данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1551">Provides class handling for the <see cref="E:System.Windows.UIElement3D.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1552">Метод <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1552">The <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-1553">Переопределите <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.LostTouchCapture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1553">Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.LostTouchCapture> event.</span></span> <span data-ttu-id="a8478-1554">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1554">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1555">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1555">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1556">Данные этого события содержат сведения о нажатой кнопке мыши и состоянии обработки.</span><span class="sxs-lookup"><span data-stu-id="a8478-1556">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="a8478-1557">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.MouseDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1557">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1558">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1558">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1559">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1559">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8478-1560">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1560">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8478-1561">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> как обработанное, <xref:System.Windows.UIElement3D.OnMouseDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="a8478-1561">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1562">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> и <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1562">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span> <span data-ttu-id="a8478-1563">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1563">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8478-1564">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1564">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8478-1565">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1565">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8478-1566">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-1566">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8478-1567">Обрабатывая <xref:System.Windows.UIElement3D.OnMouseDown%2A>, вы подразумеваете, что обработка класса учитывает все возможные действия нажатия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1567">By handling <xref:System.Windows.UIElement3D.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="a8478-1568">Такое поведение может быть нежелательным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1568">This behavior might be unwanted.</span></span> <span data-ttu-id="a8478-1569">Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="a8478-1569">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8478-1570">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="a8478-1570">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8478-1571">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1571">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1572">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1572">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1573">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1573">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1574">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1574">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1575">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1575">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1576">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1576">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1577">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1577">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1578">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1578">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1579">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1579">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1580"><xref:System.Windows.UIElement3D.OnMouseDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1580"><xref:System.Windows.UIElement3D.OnMouseDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1581">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1581">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1582">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1582">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1583">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1583">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="a8478-1584">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1584">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1585">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1585">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1586">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1586">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1587">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1587">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1588">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1588">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1589">В этом случае сопоставленное событие — это перенаправленное событие с стратегией прямой маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1589">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="a8478-1590">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1590">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1591"><xref:System.Windows.UIElement3D.OnMouseEnter%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1591"><xref:System.Windows.UIElement3D.OnMouseEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1592">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1592">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1593">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1593">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1594">Вызывается, когда необработанное присоединенное событие <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1594">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="a8478-1595">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1595">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1596">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1596">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1597">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1597">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-1598">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-1598">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-1599">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1599">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1600">В этом случае сопоставленное событие — это перенаправленное событие с стратегией прямой маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1600">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="a8478-1601">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1601">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1602"><xref:System.Windows.UIElement3D.OnMouseLeave%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1602"><xref:System.Windows.UIElement3D.OnMouseLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1603">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1603">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1604">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1604">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1605">В данных события сообщается о том, что была нажата левая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1605">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a8478-1606">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> возникает для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-1606">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="a8478-1607">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1607">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1608">Событие <xref:System.Windows.UIElement3D.MouseLeftButtonDown> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1608">The <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1609"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.MouseLeftButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1609"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonDown>.</span></span> <span data-ttu-id="a8478-1610">Хотя можно пометить событие <xref:System.Windows.UIElement3D.MouseLeftButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1610">Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1611">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1611">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1612">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1612">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1613">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1613">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1614">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1614">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1615">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1615">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1616">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1616">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8478-1617">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="a8478-1617">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8478-1618">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1618">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="a8478-1619">Например, можно создать производный от <xref:System.Windows.Controls.Button> и переопределить <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> в производном классе, не вызывая базовую реализацию. Однако это переопределение отключает событие <xref:System.Windows.Controls.Primitives.ButtonBase.Click>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1619">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="a8478-1620"><xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1620"><xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1621">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1621">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1622">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1622">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1623">Данные о событии информируют об отжатии левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1623">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a8478-1624">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1624">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1625">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1625">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1626">Событие <xref:System.Windows.UIElement3D.MouseLeftButtonUp> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1626">The <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1627"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.MouseLeftButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1627"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonUp>.</span></span> <span data-ttu-id="a8478-1628">Хотя можно пометить событие <xref:System.Windows.UIElement3D.MouseLeftButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1628">Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1629">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1629">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1630">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1630">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1631">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1631">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1632">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1632">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1633">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1633">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1634"><xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1634"><xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1635">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1635">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1636">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1636">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1637">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.MouseMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1637">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1638">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1638">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1639">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1639">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1640">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1640">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1641">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1641">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1642">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1642">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1643">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1643">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1644">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1644">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1645">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1645">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1646">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1646">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1647">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1647">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1648"><xref:System.Windows.UIElement3D.OnMouseMove%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1648"><xref:System.Windows.UIElement3D.OnMouseMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1649">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1649">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1650">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1650">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1651">Данные о событии информируют о нажатии правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1651">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a8478-1652">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1652">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1653">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1653">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1654">Событие <xref:System.Windows.UIElement3D.MouseRightButtonDown> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1654">The <xref:System.Windows.UIElement3D.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1655"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.MouseRightButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1655"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span> <span data-ttu-id="a8478-1656">Хотя можно пометить событие <xref:System.Windows.UIElement3D.MouseRightButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1656">Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1657">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1657">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1658">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1658">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1659">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1659">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1660">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1660">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1661">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1661">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1662">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1662">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8478-1663">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="a8478-1663">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8478-1664">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1664">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="a8478-1665">Например, можно создать производный от <xref:System.Windows.Controls.Control> и переопределить <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> в производном классе без вызова Base; Однако это переопределение отключает службы контекстного меню элемента управления, которые являются частью поведения по умолчанию <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1665">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 <span data-ttu-id="a8478-1666"><xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1666"><xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1667">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1667">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1668">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1668">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1669">Данные о событии информируют об отпускании правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1669">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a8478-1670">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1670">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1671">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1671">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1672">Событие <xref:System.Windows.UIElement3D.MouseRightButtonUp> перемещается в маршрут восходящей маршрутизации, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1672">The <xref:System.Windows.UIElement3D.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1673"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> — это базовое событие, которое пересылается пузырьковым, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.MouseRightButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1673"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span></span> <span data-ttu-id="a8478-1674">Хотя можно пометить событие <xref:System.Windows.UIElement3D.MouseRightButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1674">Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1675">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1675">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1676">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1676">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1677">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1677">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1678">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1678">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1679">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1679">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1680"><xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1680"><xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1681">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1681">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1682">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1682">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1683">Данные о событии информируют об отжатии кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1683">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a8478-1684">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.Input.Mouse.MouseUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1684">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1685">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1685">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1686">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1686">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8478-1687">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1687">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8478-1688">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> как обработанное, <xref:System.Windows.UIElement3D.OnMouseUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="a8478-1688">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1689">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> и <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1689">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp>.</span></span> <span data-ttu-id="a8478-1690">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1690">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8478-1691">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1691">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8478-1692">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1692">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8478-1693">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-1693">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8478-1694">Обрабатывая <xref:System.Windows.UIElement3D.OnMouseUp%2A>, вы подразумеваете, что обработка класса учитывается для всех возможных действий кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1694">By handling <xref:System.Windows.UIElement3D.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="a8478-1695">Такое поведение может быть нежелательным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1695">This behavior might be unwanted.</span></span> <span data-ttu-id="a8478-1696">Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="a8478-1696">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8478-1697">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="a8478-1697">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8478-1698">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1698">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1699">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1699">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1700">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1700">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1701">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1701">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1702">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1702">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1703">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1703">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1704">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1704">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1705">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1705">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1706">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1706">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1707"><xref:System.Windows.UIElement3D.OnMouseUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1707"><xref:System.Windows.UIElement3D.OnMouseUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1708">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1708">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement3D.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1709">Объект класса <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1709">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1710">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1710">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1711">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1711">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1712">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1712">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1713">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1713">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1714">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1714">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1715">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1715">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1716">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1716">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1717">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1717">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1718">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1718">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1719">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1719">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1720">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1720">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1721"><xref:System.Windows.UIElement3D.OnMouseWheel%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1721"><xref:System.Windows.UIElement3D.OnMouseWheel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1722">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1722">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1723">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1723">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1724">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1724">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1725">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1725">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1726">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1726">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1727">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1727">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1728">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1728">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1729">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1729">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1730">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1730">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1731">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1731">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1732">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1732">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1733">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1733">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1734">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1734">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1735">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1735">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1736"><xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1736"><xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1737">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1737">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1738">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1738">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1739">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1739">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1740">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1740">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1741">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1741">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1742">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1742">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1743">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1743">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1744">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1744">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1745">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1745">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1746">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1746">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1747">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1747">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1748">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1748">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1749">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1749">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1750">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1750">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1751"><xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1751"><xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1752">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1752">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1753">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1753">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1754">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1754">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1755">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1755">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1756">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1756">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1757">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1757">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1758">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1758">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1759">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1759">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1760">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1760">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1761">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1761">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1762">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1762">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1763">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1763">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1764">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1764">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1765">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1765">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1766"><xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1766"><xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1767">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1767">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1768">Объект класса <see cref="T:System.Windows.DragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1768">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1769">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.PreviewDrop" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1769">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1770">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1770">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1771">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1771">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1772">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1772">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1773">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1773">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1774">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1774">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1775">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1775">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1776">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1776">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1777">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1777">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1778">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1778">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1779">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1779">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1780">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1780">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1781"><xref:System.Windows.UIElement3D.OnPreviewDrop%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1781"><xref:System.Windows.UIElement3D.OnPreviewDrop%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1782">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1782">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1783">Объект класса <see cref="T:System.Windows.GiveFeedbackEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1783">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1784">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1784">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1785">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1785">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1786">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1786">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1787">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1787">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1788">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1788">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1789">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1789">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1790">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1790">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1791">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1791">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1792">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1792">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1793">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1793">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1794">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1794">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1795">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1795">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1796"><xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1796"><xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1797">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1797">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1798">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1798">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1799">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1799">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1800">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1800">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1801">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1801">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1802">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1802">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1803">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1803">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1804">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1804">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1805">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1805">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1806">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1806">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1807">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1807">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1808">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1808">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1809">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1809">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1810">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1810">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1811"><xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1811"><xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1812">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1812">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1813">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1813">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1814">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1814">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1815">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1815">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1816">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1816">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1817">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1817">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1818">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1818">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1819">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1819">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1820">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1820">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1821">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1821">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1822">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1822">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1823">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1823">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1824">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1824">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1825">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1825">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1826"><xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1826"><xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1827">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1827">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1828">Объект класса <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1828">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1829">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1829">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1830">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1830">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1831">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1831">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1832">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1832">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1833">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1833">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1834">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1834">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1835">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1835">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1836">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1836">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1837">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1837">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1838">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1838">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1839">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1839">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1840">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1840">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1841"><xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1841"><xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1842">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1842">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1843">Объект класса <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1843">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1844">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1844">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1845">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1845">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1846">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1846">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1847">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1847">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1848">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1848">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1849">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1849">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1850">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1850">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1851">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1851">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1852">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1852">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1853">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1853">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1854">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1854">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1855">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1855">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1856"><xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1856"><xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1857">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1857">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1858">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1858">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1859">Данные о событии информируют о нажатии одной или нескольких кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1859">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="a8478-1860">Вызывается, когда необработанное присоединенное перенаправленное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1860">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1861">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1861">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1862">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1862">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8478-1863">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1863">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8478-1864">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> как обработанное, <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="a8478-1864">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1865">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> и <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1865">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="a8478-1866">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1866">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8478-1867">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1867">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8478-1868">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1868">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8478-1869">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-1869">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8478-1870">Обрабатывая <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, вы подразумеваете, что обработка класса учитывает все возможные действия нажатия кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1870">By handling <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="a8478-1871">Такое поведение может быть нежелательным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1871">This behavior might be unwanted.</span></span> <span data-ttu-id="a8478-1872">Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="a8478-1872">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8478-1873">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="a8478-1873">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8478-1874">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1874">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1875">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1875">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1876">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1876">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1877">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1877">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1878">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1878">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1879">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1879">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1880">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1880">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1881">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1881">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1882">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1882">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1883">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1883">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1884"><xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1884"><xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1885">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1885">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1886">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1886">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1887">В данных события сообщается о том, что была нажата левая кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1887">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a8478-1888">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1888">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1889">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1889">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1890">Событие <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1890">The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1891"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1891"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="a8478-1892">Хотя можно пометить событие <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1892">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1893">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1893">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1894">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1894">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1895">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1895">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1896">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1896">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1897">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1897">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1898">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1898">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8478-1899">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="a8478-1899">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8478-1900">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1900">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="a8478-1901">Например, можно создать производный от <xref:System.Windows.Controls.Button> и переопределить <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> в производном классе, не вызывая базовую реализацию. Однако это переопределение отключает событие <xref:System.Windows.Controls.Primitives.ButtonBase.Click>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1901">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="a8478-1902"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1902"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1903">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1903">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1904">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1904">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1905">Данные о событии информируют об отжатии левой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1905">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a8478-1906">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1906">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1907">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1907">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1908">Событие <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1908">The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1909"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1909"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="a8478-1910">Хотя можно пометить событие <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1910">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1911">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1911">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1912">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1912">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1913">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1913">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1914">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1914">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1915">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1915">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1916"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1916"><xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1917">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1917">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1918">Объект класса <see cref="T:System.Windows.Input.MouseEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1918">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1919">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1919">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1920">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1920">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1921">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1921">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1922">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1922">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1923">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1923">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1924">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1924">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1925">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1925">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1926">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1926">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1927">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1927">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1928">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1928">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1929">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1929">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-1930">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-1930">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1931"><xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1931"><xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1932">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1932">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1933">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1933">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1934">Данные о событии информируют о нажатии правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1934">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a8478-1935">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1935">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1936">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1936">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1937">Событие <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1937">The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1938"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.MouseRightButtonDown>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1938"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>.</span></span> <span data-ttu-id="a8478-1939">Хотя можно пометить событие <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1939">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1940">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1940">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1941">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1941">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1942">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1942">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1943">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1943">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1944">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1944">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1945">Кроме того, этот метод можно переопределить, чтобы изменить обработку событий для определенного состояния мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1945">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a8478-1946">Выбор способа вызова базовой реализации зависит от вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="a8478-1946">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a8478-1947">Сбой вызова Base отключает обработку ввода по умолчанию для этого события мыши в классах предков, которые также предполагают вызов <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1947">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="a8478-1948">Например, можно создать производный от <xref:System.Windows.Controls.Control> и переопределить <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> в производном классе без вызова Base; Однако это переопределение отключает службы контекстного меню элемента управления, которые являются частью поведения по умолчанию <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1948">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 <span data-ttu-id="a8478-1949"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1949"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1950">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1950">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1951">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1951">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1952">Данные о событии информируют об отпускании правой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1952">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a8478-1953">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1953">Invoked when an unhandled <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1954">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1954">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1955">Событие <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> перемещает маршрут туннелирования, но фактически переносится косвенным образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-1955">The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a8478-1956"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> является базовым событием, направляемым по туннелю, и каждая <xref:System.Windows.UIElement3D> в маршруте события использует идентичную обработку для вызова <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>прямого перенаправления события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1956"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="a8478-1957">Хотя можно пометить событие <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> как обработанное для целей этого элемента, состояние обработки не является постоянным для других элементов в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1957">Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a8478-1958">Однако может потребоваться пометить событие как обработанное, чтобы предотвратить вызов общих обработчиков экземпляра (которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-1958">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-1959">Реализация по умолчанию для общей обработки событий мыши в <xref:System.Windows.UIElement3D> прослушивает <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> и преобразует ее в соответствующее локальное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1959">The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a8478-1960">Если вы хотите переопределить эту логику, необходимо создать производный класс.</span><span class="sxs-lookup"><span data-stu-id="a8478-1960">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a8478-1961">В статическом конструкторе производного класса Зарегистрируйте альтернативный обработчик класса для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1961">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8478-1962">Вы не можете изменить поведение обработки мыши <xref:System.Windows.UIElement3D>, переопределив <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1962">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 <span data-ttu-id="a8478-1963"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1963"><xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1964">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1964">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1965">Объект класса <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1965">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a8478-1966">Данные о событии информируют об отжатии одной или нескольких кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1966">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="a8478-1967">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1967">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1968">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1968">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1969">Действия кнопок мыши также обрабатываются выделенным диспетчером ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-1969">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a8478-1970">Другие функции программирования, основанные на действиях кнопок мыши, например вводе и привязках команд, могут вызывать обработчики для действия, прежде чем оно будет представлено как общее действие кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1970">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a8478-1971">Если эти входные функции системы помечают событие <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> как обработанное, <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="a8478-1971">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a8478-1972">При использовании этого обработчика класса для пометки события как обработанного вы потенциально повлияет на следующие события: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> и <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1972">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="a8478-1973">Любое из этих событий может возникнуть на принимающем элементе при получении <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8478-1973">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a8478-1974">Если пометить это событие как обработанное при обработке класса, подсобытия по-прежнему вызываются; Однако они передают обработанное состояние в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1974">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a8478-1975">Если событие обрабатывается в процессе обработки класса, обработчики экземпляров для подсобытий не вызываются, если только вы явно не используете <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`, чтобы присоединить обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1975">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a8478-1976">Обработчики классов также не вызываются, если эти обработчики класса не зарегистрированы в сигнатуре <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="a8478-1976">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a8478-1977">Обрабатывая <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, вы подразумеваете, что обработка класса учитывается для всех возможных действий кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-1977">By handling <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="a8478-1978">Такое поведение может быть нежелательным.</span><span class="sxs-lookup"><span data-stu-id="a8478-1978">This behavior might be unwanted.</span></span> <span data-ttu-id="a8478-1979">Поэтому следует соблюдать осторожность при использовании этого виртуального метода для пометки событий как обработанных.</span><span class="sxs-lookup"><span data-stu-id="a8478-1979">Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a8478-1980">Каждое из прямых событий, связанных с кнопками, также имеет виртуальный метод \*. Рассмотрите возможность более адекватного переопределения обработчиков классов, связанных с кнопками.</span><span class="sxs-lookup"><span data-stu-id="a8478-1980">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a8478-1981">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1981">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1982">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1982">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1983">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1983">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1984">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1984">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1985">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1985">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-1986">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1986">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-1987">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-1987">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-1988">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1988">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-1989">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-1989">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-1990"><xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-1990"><xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-1991">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-1991">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-1992">Объект класса <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-1992">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-1993">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-1993">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-1994">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-1994">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-1995">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-1995">This method has no default implementation.</span></span> <span data-ttu-id="a8478-1996">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-1996">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-1997">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-1997">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-1998">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-1998">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-1999">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-1999">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2000">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2000">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2001">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2001">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2002">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2002">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2003">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2003">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2004">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2004">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2005"><xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2005"><xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2006">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2006">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2007">Объект класса <see cref="T:System.Windows.QueryContinueDragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2007">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2008">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2008">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2009">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2009">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2010">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2010">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2011">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2011">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2012">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2012">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2013">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2013">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2014">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2014">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2015">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2015">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2016">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2016">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2017">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2017">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2018">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2018">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2019">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2019">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2020"><xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2020"><xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2021">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2021">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2022">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2022">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2023">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2023">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2024">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2024">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2025">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2025">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2026">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2026">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2027">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2027">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2028">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2028">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2029">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2029">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2030">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2030">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2031">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2031">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2032">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2032">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2033">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2033">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2034">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2034">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2035"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2035"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2036">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2036">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2037">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2037">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2038">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2038">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2039">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2039">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2040">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2040">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2041">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2041">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2042">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2042">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2043">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2043">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2044">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2044">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2045">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2045">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2046">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2046">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2047">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2047">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2048">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2048">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2049">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2049">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2050"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2050"><xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2051">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2051">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2052">Объект класса <see cref="T:System.Windows.Input.StylusDownEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2052">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2053">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2053">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2054">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2054">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2055">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2055">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2056">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2056">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2057">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2057">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2058">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2058">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2059">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2059">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2060">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2060">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2061">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2061">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2062">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2062">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2063">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2063">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2064">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2064">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2065"><xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2065"><xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2066">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2066">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2067">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2067">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2068">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2068">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2069">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2069">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2070">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2070">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2071">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2071">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2072">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2072">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2073">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2073">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2074">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2074">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2075">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2075">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2076">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2076">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2077">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2077">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2078">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2078">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2079">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2079">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2080"><xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2080"><xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2081">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2081">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2082">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2082">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2083">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2083">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2084">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2084">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2085">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2085">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2086">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2086">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2087">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2087">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2088">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2088">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2089">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2089">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2090">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2090">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2091">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2091">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2092">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2092">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2093">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2093">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2094">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2094">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2095"><xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2095"><xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2096">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2096">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2097">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2097">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2098">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2098">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2099">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2099">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2100">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2100">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2101">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2101">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2102">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2102">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2103">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2103">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2104">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2104">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2105">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2105">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2106">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2106">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2107">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2107">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2108">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2108">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2109">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2109">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2110"><xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2110"><xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2111">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2111">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2112">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2112">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2113">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2113">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2114">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2114">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2115">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2115">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2116">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2116">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2117">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2117">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2118">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2118">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2119">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2119">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2120">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2120">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2121">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2121">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2122">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2122">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2123">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2123">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2124">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2124">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2125"><xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2125"><xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2126">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2126">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2127">Объект класса <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2127">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2128">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2128">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2129">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2129">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2130">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2130">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2131">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2131">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2132">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2132">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2133">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2133">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2134">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2134">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2135">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2135">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2136">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2136">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2137">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2137">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2138">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2138">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2139">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2139">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2140"><xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2140"><xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2141">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2141">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2142">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2142">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2143">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2143">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2144">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2144">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2145">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2145">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2146">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2146">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2147">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2147">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2148">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2148">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2149">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2149">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2150">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2150">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2151">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2151">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2152">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2152">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2153">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2153">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2154">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2154">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2155"><xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2155"><xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2156">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2156">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2157">Объект класса <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2157">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2158">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2158">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2159">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2159">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2160">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2160">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2161">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2161">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2162">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2162">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2163">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2163">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2164">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2164">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2165">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2165">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2166">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2166">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2167">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2167">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2168">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2168">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a8478-2169">Другой сценарий, специально предназначенный для событий предварительного просмотра, заключается в том, чтобы пометить их как обработанные, чтобы соответствующие обработчики класса восходящей маршрутизации не вызывались.</span><span class="sxs-lookup"><span data-stu-id="a8478-2169">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 <span data-ttu-id="a8478-2170"><xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2170"><xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2171">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2171">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement3D.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2172">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2172">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2173">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" />, которое происходит при сенсорном нажатии данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2173">Provides class handling for the <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2174">Метод <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2174">The <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2175">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2175">Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchDown> event.</span></span> <span data-ttu-id="a8478-2176">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2176">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2177">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2177">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2178">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" />, которое происходит при перемещении касания внутри этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2178">Provides class handling for the <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2179">Метод <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2179">The <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2180">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2180">Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchMove> event.</span></span> <span data-ttu-id="a8478-2181">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2181">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2182">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2182">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2183">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" />, которое происходит при прекращении сенсорного нажатия внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2183">Provides class handling for the <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2184">Метод <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2184">The <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2185">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2185">Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchUp> event.</span></span> <span data-ttu-id="a8478-2186">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2186">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement3D.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2187">Объект класса <see cref="T:System.Windows.QueryContinueDragEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2187">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2188">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2188">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2189">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2189">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2190">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2190">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2191">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2191">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2192">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2192">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2193">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2193">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2194">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2194">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2195">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2195">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2196">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2196">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2197">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2197">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2198">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2198">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2199"><xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2199"><xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2200">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2200">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement3D.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2201">Объект класса <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2201">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2202">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2202">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2203">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2203">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2204">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2204">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2205">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2205">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2206">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2206">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2207">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2207">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2208">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2208">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2209">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2209">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2210">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2210">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2211">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2211">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2212">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2212">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2213"><xref:System.Windows.UIElement3D.OnQueryCursor%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2213"><xref:System.Windows.UIElement3D.OnQueryCursor%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2214">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2214">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2215">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2215">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2216">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2216">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2217">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2217">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2218">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2218">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2219">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2219">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2220">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2220">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2221">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2221">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2222">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2222">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2223">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2223">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2224">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2224">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2225">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2225">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2226">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2226">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2227"><xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2227"><xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2228">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2228">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2229">Объект класса <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2229">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2230">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2230">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2231">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2231">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2232">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2232">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2233">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2233">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2234">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2234">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2235">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2235">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2236">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2236">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2237">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2237">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2238">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2238">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2239">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2239">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2240">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2240">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2241"><xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2241"><xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2242">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2242">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement3D.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2243">Объект класса <see cref="T:System.Windows.Input.StylusDownEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2243">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2244">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusDown" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2244">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2245">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2245">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2246">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2246">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2247">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2247">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2248">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2248">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2249">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2249">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2250">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2250">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2251">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2251">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2252">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2252">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2253">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2253">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2254">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2254">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2255"><xref:System.Windows.UIElement3D.OnStylusDown%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2255"><xref:System.Windows.UIElement3D.OnStylusDown%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2256">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2256">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2257">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2257">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2258">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> вызывается этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2258">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="a8478-2259">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2259">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2260">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2260">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2261">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2261">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-2262">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-2262">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-2263">Цель этого метода аналогична шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2263">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2264">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2264">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2265">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-2265">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-2266"><xref:System.Windows.UIElement3D.OnStylusEnter%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2266"><xref:System.Windows.UIElement3D.OnStylusEnter%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2267">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2267">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2268">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2268">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2269">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2269">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2270">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2270">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2271">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2271">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2272">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2272">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2273">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2273">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2274">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2274">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2275">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2275">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2276">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2276">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2277">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2277">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2278">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2278">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2279">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2279">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2280"><xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2280"><xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2281">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2281">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2282">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2282">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2283">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2283">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2284">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2284">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2285">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2285">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2286">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2286">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2287">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2287">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2288">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2288">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2289">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2289">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2290">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2290">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2291">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2291">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2292">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2292">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2293">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2293">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2294"><xref:System.Windows.UIElement3D.OnStylusInRange%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2294"><xref:System.Windows.UIElement3D.OnStylusInRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2295">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2295">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2296">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2296">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2297">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> вызывается этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2297">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="a8478-2298">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2299">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2299">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2300">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2300">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a8478-2301">Вы можете вызвать base как до, так и после специальной обработки, в зависимости от ваших требований.</span><span class="sxs-lookup"><span data-stu-id="a8478-2301">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a8478-2302">Цель этого метода аналогична шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2302">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2303">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2303">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2304">Пометка события как обработанного по-прежнему полезно для предотвращения вызова типовых обработчиков экземпляров (тех, которые не задают `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a8478-2304">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a8478-2305"><xref:System.Windows.UIElement3D.OnStylusLeave%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2305"><xref:System.Windows.UIElement3D.OnStylusLeave%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2306">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2306">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2307">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2307">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2308">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusMove" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2308">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2309">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2309">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2310">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2310">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2311">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2311">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2312">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2312">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2313">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2313">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2314">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2314">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2315">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2315">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2316">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2316">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2317">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2317">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2318">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2318">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2319"><xref:System.Windows.UIElement3D.OnStylusMove%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2319"><xref:System.Windows.UIElement3D.OnStylusMove%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2320">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2320">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2321">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2321">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2322">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2322">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2323">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2323">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2324">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2324">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2325">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2325">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2326">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2326">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2327">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2327">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2328">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2328">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2329">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2329">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2330">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2330">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2331">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2331">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2332">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2332">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2333"><xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2333"><xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2334">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2334">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement3D.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2335">Объект класса <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2335">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2336">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2336">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2337">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2337">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2338">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2338">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2339">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2339">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2340">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2340">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2341">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2341">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2342">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2342">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2343">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2343">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2344">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2344">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2345">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2345">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2346">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2346">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2347"><xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2347"><xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2348">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2348">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2349">Объект класса <see cref="T:System.Windows.Input.StylusEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2349">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2350">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.Stylus.StylusUp" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2350">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2351">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2351">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2352">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2352">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2353">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2353">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2354">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2354">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2355">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2355">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2356">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2356">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2357">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2357">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2358">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2358">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2359">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2359">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2360">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2360">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2361"><xref:System.Windows.UIElement3D.OnStylusUp%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2361"><xref:System.Windows.UIElement3D.OnStylusUp%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2362">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2362">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement3D.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2363">Объект класса <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, содержащий данные о событии.</span><span class="sxs-lookup"><span data-stu-id="a8478-2363">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2364">Вызывается, когда необработанное вложенное событие <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> встречает на своем маршруте элемент, производный от этого класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2364">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a8478-2365">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2365">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2366">Этот метод не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2366">This method has no default implementation.</span></span> <span data-ttu-id="a8478-2367">Поскольку промежуточный класс в наследовании может реализовать этот метод, рекомендуется вызвать базовую реализацию в реализации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2367">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a8478-2368">Назначение этого метода аналогично шаблону событий [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] для методов \*: Этот метод предоставляет средства для обработки соответствующего события из производных классов путем установки обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a8478-2368">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a8478-2369">В этом случае сопоставленное событие является перенаправленным событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2369">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a8478-2370">Шаблон реализации методов On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерним элементом, который не обязательно должен вызывать обработчики.</span><span class="sxs-lookup"><span data-stu-id="a8478-2370">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a8478-2371">Поэтому в реализации необходимо изучить свойства источника данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2371">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a8478-2372">В большинстве случаев не следует пытаться повторно вызывать событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2372">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a8478-2373">Переопределяя этот метод или зарегистрировав обработчики класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>, производные классы <xref:System.Windows.UIElement3D> могут вызывать закрытые методы обработчика класса, когда событие получено в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2373">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a8478-2374">Одним из сценариев, где требуется обработка класса, является управление данными события и пометка перенаправленного события как обработанного.</span><span class="sxs-lookup"><span data-stu-id="a8478-2374">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 <span data-ttu-id="a8478-2375"><xref:System.Windows.UIElement3D.OnTextInput%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2375"><xref:System.Windows.UIElement3D.OnTextInput%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2376">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2376">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2377">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2377">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2378">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.TouchDown" />, которое происходит при сенсорном нажатии внутри данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2378">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2379">Метод <xref:System.Windows.UIElement3D.OnTouchDown%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2379">The <xref:System.Windows.UIElement3D.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2380">Переопределите <xref:System.Windows.UIElement3D.OnTouchDown%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2380">Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchDown> event.</span></span> <span data-ttu-id="a8478-2381">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnTouchDown%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2381">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2382">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2382">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2383">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.TouchEnter" />, которое происходит при сенсорном перемещении внутрь данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2383">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2384">Метод <xref:System.Windows.UIElement3D.OnTouchEnter%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2384">The <xref:System.Windows.UIElement3D.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2385">Переопределите <xref:System.Windows.UIElement3D.OnTouchEnter%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.TouchEnter>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2385">Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchEnter> event.</span></span> <span data-ttu-id="a8478-2386">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnTouchEnter%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2386">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2387">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2387">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2388">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.TouchLeave" />, которое происходит при сенсорном перемещении за границы данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2388">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2389">Метод <xref:System.Windows.UIElement3D.OnTouchLeave%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2389">The <xref:System.Windows.UIElement3D.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2390">Переопределите <xref:System.Windows.UIElement3D.OnTouchLeave%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.TouchLeave>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2390">Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchLeave> event.</span></span> <span data-ttu-id="a8478-2391">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnTouchLeave%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2391">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2392">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2392">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2393">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.UIElement3D.TouchMove" />, которое происходит при перемещении касания внутри этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2393">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2394">Метод <xref:System.Windows.UIElement3D.OnTouchMove%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2394">The <xref:System.Windows.UIElement3D.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2395">Переопределите <xref:System.Windows.UIElement3D.OnTouchMove%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2395">Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchMove> event.</span></span> <span data-ttu-id="a8478-2396">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnTouchMove%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2396">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-2397">Объект <see cref="T:System.Windows.Input.TouchEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2397">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a8478-2398">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement3D.TouchUp" />, которое происходит при прекращении сенсорного нажатия внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2398">Provides class handling for the <see cref="E:System.Windows.UIElement3D.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2399">Метод <xref:System.Windows.UIElement3D.OnTouchUp%2A> не имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2399">The <xref:System.Windows.UIElement3D.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="a8478-2400">Переопределите <xref:System.Windows.UIElement3D.OnTouchUp%2A> в производном классе, чтобы он обрабатывал событие <xref:System.Windows.UIElement3D.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2400">Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement3D.TouchUp> event.</span></span> <span data-ttu-id="a8478-2401">Не забудьте вызвать метод базового класса "<xref:System.Windows.UIElement3D.OnTouchUp%2A>, чтобы базовые классы получили событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-2401">Be sure to call the base class' <xref:System.Windows.UIElement3D.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateModel">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnUpdateModel" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateModel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateModel();" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateModel : unit -&gt; unit&#xA;override this.OnUpdateModel : unit -&gt; unit" Usage="uIElement3D.OnUpdateModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-2402">Участвует в операциях отрисовки при переопределении в производном классе.</span><span class="sxs-lookup"><span data-stu-id="a8478-2402">Participates in rendering operations when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2403">При наследовании класса от <xref:System.Windows.UIElement3D> класса этот метод можно использовать вместе с методом <xref:System.Windows.UIElement3D.InvalidateModel%2A> для обновления модели элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2403">When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.InvalidateModel%2A> method to refresh the model of the element.</span></span>  
  
 <span data-ttu-id="a8478-2404">Этот метод нужно вызывать только в сложных сценариях.</span><span class="sxs-lookup"><span data-stu-id="a8478-2404">You only need to call this method in advanced scenarios.</span></span> <span data-ttu-id="a8478-2405">Один из таких сложных сценариев состоит в том, что производный класс имеет несколько свойств, влияющих на внешний вид, и вы хотите обновить базовую модель только один раз.</span><span class="sxs-lookup"><span data-stu-id="a8478-2405">One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.</span></span> <span data-ttu-id="a8478-2406">В методе <xref:System.Windows.UIElement3D.OnUpdateModel%2A> можно обновить свойство <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> класса <xref:System.Windows.Media.Media3D.Visual3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2406">Within the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method you could update the <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> property of the <xref:System.Windows.Media.Media3D.Visual3D> class.</span></span>  
  
 <span data-ttu-id="a8478-2407">Этот метод не имеет реализации по умолчанию в классе <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2407">This method has no default implementation in the <xref:System.Windows.UIElement3D> class.</span></span>  
  
 <span data-ttu-id="a8478-2408"><xref:System.Windows.UIElement3D.OnUpdateModel%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2408"><xref:System.Windows.UIElement3D.OnUpdateModel%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2409">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2409">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8478-2410">В следующем примере показано, как выполнить наследование от класса <xref:System.Windows.UIElement3D>, чтобы создать `Sphere` класс:</span><span class="sxs-lookup"><span data-stu-id="a8478-2410">The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:</span></span>  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 <span data-ttu-id="a8478-2411">Полный пример см. в разделе [Пример UIElement3D Sphere](https://go.microsoft.com/fwlink/?LinkID=160044).</span><span class="sxs-lookup"><span data-stu-id="a8478-2411">For the complete sample, see [UIElement3D Sphere Sample](https://go.microsoft.com/fwlink/?LinkID=160044).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement3D.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="a8478-2412">Предыдущий родительский элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2412">The previous parent.</span></span> <span data-ttu-id="a8478-2413">Может быть предоставлен в качестве <see langword="null" />, если <see cref="T:System.Windows.DependencyObject" /> не имел родительский элемент ранее.</span><span class="sxs-lookup"><span data-stu-id="a8478-2413">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="a8478-2414">Вызывается, когда родительский элемент данного <see cref="T:System.Windows.UIElement3D" /> сообщает об изменении в его базовом визуальном родителе.</span><span class="sxs-lookup"><span data-stu-id="a8478-2414">Invoked when the parent element of this <see cref="T:System.Windows.UIElement3D" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2415"><xref:System.Windows.UIElement3D.OnVisualParentChanged%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2415"><xref:System.Windows.UIElement3D.OnVisualParentChanged%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2416">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2416">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8478-2417">При переопределении этого метода всегда вызывайте базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="a8478-2417">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="a8478-2418">Базовая реализация по умолчанию выполняет определенное внутреннее обслуживание состояния свойства, наследуемого с обратным наследованием.</span><span class="sxs-lookup"><span data-stu-id="a8478-2418">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="a8478-2419">Если не вызвать базовую реализацию, это состояние станет недействительным.</span><span class="sxs-lookup"><span data-stu-id="a8478-2419">Failing to call the base implementation will invalidate this state.</span></span>  
  
<span data-ttu-id="a8478-2420">Этот метод переопределяет метод <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2420">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="a8478-2421"><see cref="T:System.Windows.FrameworkElement" /> и <see cref="T:System.Windows.Window" /> также переопределяют <see cref="T:System.Windows.UIElement3D" />ную реализацию <see cref="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />и <see cref="T:System.Windows.Window" /> запечатывает ее.</span><span class="sxs-lookup"><span data-stu-id="a8478-2421"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement3D" /> implementation of <see cref="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement3D.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a8478-2422">Главное направление запроса на перемещение фокуса.</span><span class="sxs-lookup"><span data-stu-id="a8478-2422">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="a8478-2423">При переопределении в производном классе возвращает элемент, который должен получить фокус для указанного направления перемещения фокуса без перемещения фокуса на этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2423">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="a8478-2424">Элемент, который мог получить фокус при фактическом вызове <see cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2424">The element that would have received focus if <see cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2425">Реализация по умолчанию этого метода в этом классе является неполной и всегда возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="a8478-2425">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 <span data-ttu-id="a8478-2426"><xref:System.Windows.UIElement3D.PredictFocus%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2426"><xref:System.Windows.UIElement3D.PredictFocus%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2427">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2427">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2428">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2428">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2429">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewDragEnter> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2429">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2430">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewDragEnter>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2430">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2431"><xref:System.Windows.UIElement3D.PreviewDragEnter> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2431"><xref:System.Windows.UIElement3D.PreviewDragEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2432">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2432">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2433">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2433">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2434">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2434">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|  
|<span data-ttu-id="a8478-2435">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2435">Routing strategy</span></span>|<span data-ttu-id="a8478-2436">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2436">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2437">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2437">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-2438">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2438">The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragEnter>.</span></span>  
  
-   <span data-ttu-id="a8478-2439">Переопределите <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2439">Override <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2440">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewDragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2440">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2441">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2441">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2442">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2442">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2443">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2443">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2444">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2444">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2445">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2445">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2446"><xref:System.Windows.UIElement3D.PreviewDragEnterEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2446"><xref:System.Windows.UIElement3D.PreviewDragEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2447">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2447">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2448">Возникает, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания этот элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2448">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2449">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewDragLeave> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2449">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2450">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewDragLeave>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2450">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2451"><xref:System.Windows.UIElement3D.PreviewDragLeave> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2451"><xref:System.Windows.UIElement3D.PreviewDragLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2452">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2452">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2453">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2453">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2454">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2454">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|  
|<span data-ttu-id="a8478-2455">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2455">Routing strategy</span></span>|<span data-ttu-id="a8478-2456">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2456">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2457">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2457">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-2458">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2458">The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragLeave>.</span></span>  
  
-   <span data-ttu-id="a8478-2459">Переопределите <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2459">Override <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2460">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewDragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2460">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2461">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2461">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2462">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2462">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2463">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2463">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2464">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2464">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2465">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2465">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2466"><xref:System.Windows.UIElement3D.PreviewDragLeaveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2466"><xref:System.Windows.UIElement3D.PreviewDragLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2467">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2467">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2468">Происходит, когда подсистема ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели данный элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2468">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2469">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewDragOver> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2469">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2470">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewDragOver>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2470">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2471"><xref:System.Windows.UIElement3D.PreviewDragOver> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2471"><xref:System.Windows.UIElement3D.PreviewDragOver> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2472">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2472">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2473">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2473">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2474">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2474">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|  
|<span data-ttu-id="a8478-2475">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2475">Routing strategy</span></span>|<span data-ttu-id="a8478-2476">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2476">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2477">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2477">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-2478">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2478">The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragOver>.</span></span>  
  
-   <span data-ttu-id="a8478-2479">Переопределите <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2479">Override <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2480">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewDragOver" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2480">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2481">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2481">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2482">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2482">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2483">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2483">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2484">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2484">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2485">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2485">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2486"><xref:System.Windows.UIElement3D.PreviewDragOverEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2486"><xref:System.Windows.UIElement3D.PreviewDragOverEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2487">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2487">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2488">Происходит, когда система ввода сообщает о базовом событии удаления с этим элементом в качестве цели удаления.</span><span class="sxs-lookup"><span data-stu-id="a8478-2488">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2489">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewDrop> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2489">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2490">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewDrop>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2490">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2491"><xref:System.Windows.UIElement3D.PreviewDrop> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2491"><xref:System.Windows.UIElement3D.PreviewDrop> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2492">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2492">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2493">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2493">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2494">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2494">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewDropEvent>|  
|<span data-ttu-id="a8478-2495">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2495">Routing strategy</span></span>|<span data-ttu-id="a8478-2496">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2496">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2497">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2497">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a8478-2498">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.Drop>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2498">The corresponding bubbling event is <xref:System.Windows.UIElement3D.Drop>.</span></span>  
  
-   <span data-ttu-id="a8478-2499">Переопределите <xref:System.Windows.UIElement3D.OnPreviewDrop%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2499">Override <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2500">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewDrop" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2500">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2501">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2501">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2502">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2502">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2503">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2503">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2504">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2504">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2505">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2505">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2506"><xref:System.Windows.UIElement3D.PreviewDropEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2506"><xref:System.Windows.UIElement3D.PreviewDropEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2507">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2507">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2508">Происходит при начале операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-2508">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2509">Событие <xref:System.Windows.UIElement3D.PreviewGiveFeedback> позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы дать пользователю визуальную обратную связь во время операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-2509">The <xref:System.Windows.UIElement3D.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="a8478-2510">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewGiveFeedback> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2510">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2511">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewGiveFeedback>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2511">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2512"><xref:System.Windows.UIElement3D.PreviewGiveFeedback> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2512"><xref:System.Windows.UIElement3D.PreviewGiveFeedback> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2513">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2513">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2514">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2515">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2515">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="a8478-2516">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2516">Routing strategy</span></span>|<span data-ttu-id="a8478-2517">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2517">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2518">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2518">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="a8478-2519">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2519">The corresponding bubbling event is <xref:System.Windows.UIElement3D.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="a8478-2520">Переопределите <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2520">Override <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2521">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2521">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2522">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2522">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2523">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2523">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2524">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2524">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2525">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2525">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2526">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2526">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2527"><xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2527"><xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2528">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2528">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2529">Происходит при получении данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-2529">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2530">Так как это событие использует маршрутизацию нисходящей маршрутизации, элемент, имеющий фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-2530">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-2531">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-2531">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="a8478-2532">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2532">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2533">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2533">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2534"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2534"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2535">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2535">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2536">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2536">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2537">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2537">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="a8478-2538">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2538">Routing strategy</span></span>|<span data-ttu-id="a8478-2539">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2539">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2540">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2540">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8478-2541">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2541">The corresponding bubbling event is <xref:System.Windows.UIElement3D.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8478-2542">Переопределите <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2542">Override <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2543">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2543">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2544">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2544">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2545">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2545">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2546">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2546">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2547">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2547">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2548">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2548">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2549"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2549"><xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2550">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2550">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2551">Происходит при нажатии клавиши, если фокус ввода с клавиатуры находится на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="a8478-2551">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2552">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="a8478-2552">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a8478-2553">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewKeyDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2553">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2554">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewKeyDown>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2554">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2555"><xref:System.Windows.UIElement3D.PreviewKeyDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2555"><xref:System.Windows.UIElement3D.PreviewKeyDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2556">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2556">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2557">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2557">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2558">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2558">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|  
|<span data-ttu-id="a8478-2559">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2559">Routing strategy</span></span>|<span data-ttu-id="a8478-2560">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2560">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2561">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2561">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8478-2562">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2562">The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyDown>.</span></span>  
  
-   <span data-ttu-id="a8478-2563">Переопределите <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2563">Override <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2564">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2564">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2565">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2565">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2566">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2566">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2567">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2567">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2568">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2568">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2569">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2569">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2570"><xref:System.Windows.UIElement3D.PreviewKeyDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2570"><xref:System.Windows.UIElement3D.PreviewKeyDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2571">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2571">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2572">Происходит при отпускании клавиши, если фокус ввода с клавиатуры находится на данном элементе.</span><span class="sxs-lookup"><span data-stu-id="a8478-2572">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2573">Обработка ключей взаимодействует с другими функциями платформы, такими как команды и компоновка текста.</span><span class="sxs-lookup"><span data-stu-id="a8478-2573">Key handling interacts with other platform features such as commanding and text composition.</span></span>  
  
 <span data-ttu-id="a8478-2574">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewKeyUp> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2574">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2575">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewKeyUp>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2575">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2576"><xref:System.Windows.UIElement3D.PreviewKeyUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2576"><xref:System.Windows.UIElement3D.PreviewKeyUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2577">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2577">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2578">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2578">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2579">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2579">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|  
|<span data-ttu-id="a8478-2580">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2580">Routing strategy</span></span>|<span data-ttu-id="a8478-2581">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2581">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2582">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2582">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a8478-2583">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2583">The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyUp>.</span></span>  
  
-   <span data-ttu-id="a8478-2584">Переопределите <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2584">Override <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2585">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2585">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2586">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2586">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2587">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2587">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2588">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2588">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2589">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2589">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2590">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2590">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2591"><xref:System.Windows.UIElement3D.PreviewKeyUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2591"><xref:System.Windows.UIElement3D.PreviewKeyUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2592">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2592">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2593">Происходит при потере данным элементом фокуса ввода с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="a8478-2593">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2594">Так как это событие использует маршрутизацию нисходящей маршрутизации, элемент, который потерял фокус, может быть дочерним элементом, а не элементом, к которому фактически присоединен обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-2594">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a8478-2595">Проверьте <xref:System.Windows.RoutedEventArgs.Source%2A> в данных события, чтобы определить фактический элемент, который потерял фокус.</span><span class="sxs-lookup"><span data-stu-id="a8478-2595">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a8478-2596">Это событие создает псевдоним для <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2596">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2597">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, присоединяются к базовому <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2597">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2598"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2598"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2599">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2599">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2600">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2601">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2601">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="a8478-2602">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2602">Routing strategy</span></span>|<span data-ttu-id="a8478-2603">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2603">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2604">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2604">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a8478-2605">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2605">The corresponding bubbling event is <xref:System.Windows.UIElement3D.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a8478-2606">Переопределите <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2606">Override <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2607">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2607">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2608">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2608">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2609">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2609">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2610">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2610">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2611">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2611">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2612">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2612">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2613"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2613"><xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2614">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2614">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2615">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2615">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2616">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewMouseDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2616">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2617">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewMouseDown>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2617">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2618">Событие <xref:System.Windows.UIElement3D.PreviewMouseDown> часто возникает вместе с <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> или <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, которое соответствует нажатию одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-2618">The <xref:System.Windows.UIElement3D.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8478-2619"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> и <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2619"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8478-2620">См. раздел Примечания для <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> или <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2620">See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.</span></span>  
  
 <span data-ttu-id="a8478-2621"><xref:System.Windows.UIElement3D.PreviewMouseDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2621"><xref:System.Windows.UIElement3D.PreviewMouseDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2622">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2622">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2623">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2623">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2624">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2624">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|  
|<span data-ttu-id="a8478-2625">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2625">Routing strategy</span></span>|<span data-ttu-id="a8478-2626">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2626">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2627">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2627">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2628">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2628">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseDown>.</span></span>  
  
-   <span data-ttu-id="a8478-2629">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2629">Override <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2630">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2630">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2631">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2631">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2632">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2632">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2633">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2633">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2634">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2634">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2635">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2635">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2636"><xref:System.Windows.UIElement3D.PreviewMouseDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2636"><xref:System.Windows.UIElement3D.PreviewMouseDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2637">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2637">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2638">Происходит при нажатии левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2638">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2639">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2639">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2640">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2640">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-2641">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2641">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-2642">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2642">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-2643">Если пометить <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-2643">If you mark <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8478-2644">Это может быть событие, созданное обработчиком класса, например <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2644">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8478-2645">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-2645">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-2646">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2646">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-2647">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2647">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2648"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2648"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2649">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2649">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2650">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2650">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2651">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2651">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="a8478-2652">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2652">Routing strategy</span></span>|<span data-ttu-id="a8478-2653">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-2653">Direct</span></span>|  
|<span data-ttu-id="a8478-2654">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2654">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2655">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2655">Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2656">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2656">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2657">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2657">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2658">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2658">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2659">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2659">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2660">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2660">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2661">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2661">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2662"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2662"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2663">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2663">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2664">Происходит при отпускании левой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2664">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2665">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2665">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2666">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2666">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-2667">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2667">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-2668">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2668">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-2669">Если пометить <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-2669">If you mark <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8478-2670">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-2670">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-2671">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2671">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-2672">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2672">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2673"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2673"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2674">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2674">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2675">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2675">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2676">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2676">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="a8478-2677">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2677">Routing strategy</span></span>|<span data-ttu-id="a8478-2678">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-2678">Direct</span></span>|  
|<span data-ttu-id="a8478-2679">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2679">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2680">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2680">Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2681">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2681">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2682">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2682">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2683">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2683">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2684">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2684">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2685">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2685">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2686">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2686">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2687"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2687"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2688">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2688">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2689">Происходит при перемещении указателя мыши, когда он находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2689">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2690">Это событие возникает, когда указатель мыши впервые попадает в границы элемента, а также когда указатель мыши перемещается, пока остается в пределах границ элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-2690">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="a8478-2691">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewMouseMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2691">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2692">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewMouseMove>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2692">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2693"><xref:System.Windows.UIElement3D.PreviewMouseMove> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2693"><xref:System.Windows.UIElement3D.PreviewMouseMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2694">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2694">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2695">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2695">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2696">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2696">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|  
|<span data-ttu-id="a8478-2697">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2697">Routing strategy</span></span>|<span data-ttu-id="a8478-2698">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2698">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2699">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2699">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a8478-2700">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2700">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseMove>.</span></span>  
  
-   <span data-ttu-id="a8478-2701">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2701">Override <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2702">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2702">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2703">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2703">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2704">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2704">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2705">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2705">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2706">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2706">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2707">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2707">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2708"><xref:System.Windows.UIElement3D.PreviewMouseMoveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2708"><xref:System.Windows.UIElement3D.PreviewMouseMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2709">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2709">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2710">Происходит при нажатии правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2710">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2711">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2711">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2712">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2712">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-2713">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2713">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-2714">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2714">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-2715">Если пометить <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-2715">If you mark <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="a8478-2716">Это может быть событие, созданное обработчиком класса, например <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2716">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="a8478-2717">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-2717">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-2718">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2718">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-2719">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2719">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2720"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2720"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2721">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2721">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2722">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2722">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2723">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2723">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="a8478-2724">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2724">Routing strategy</span></span>|<span data-ttu-id="a8478-2725">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-2725">Direct</span></span>|  
|<span data-ttu-id="a8478-2726">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2726">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2727">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2727">Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2728">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2728">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2729">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2729">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2730">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2730">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2731">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2731">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2732">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2732">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2733">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2733">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2734"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2734"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2735">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2735">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2736">Происходит при отпускании правой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2736">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2737">Несмотря на то что в [обзоре перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) предполагается, что он проходит по нисходящему маршруту через дерево элементов, он фактически является прямым перенаправленным событием, которое вызывается и передается по дереву элементов каждым <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2737">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2738">Это событие является одним из нескольких связанных событий, которые сообщают о характере для кнопки мыши базового события <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>, которое является вложенным событием, которое обрабатывается каждым элементом в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2738">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a8478-2739">Данные события этого события предоставляют данные о событии базового <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2739">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a8478-2740">Если это событие помечено как обработанное в маршруте события, события, связанные с кнопкой мыши, по-прежнему вызываются. Однако обработчики событий, связанных с кнопками мыши, должны добавляться путем явного вызова <xref:System.Windows.UIElement3D.AddHandler%2A>с параметром для обработки событий, которые уже помечены как обработанные, для того, чтобы они были прослушивателями события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2740">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="a8478-2741">Если пометить <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> как обработанные, то, по сути, помечается <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> обрабатываться для всех последующих прослушивателей в маршруте и для всех связанных событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-2741">If you mark <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="a8478-2742">Концептуально Представьте это событие (а также другие события кнопки мыши в <xref:System.Windows.UIElement3D>) как "служба" (с определением службы, предоставленным классом <xref:System.Windows.Input.Mouse>).</span><span class="sxs-lookup"><span data-stu-id="a8478-2742">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a8478-2743">Это событие добавляет ненужное для проверки состояния кнопки мыши (слева направо, вверх-вниз) исходных событий мыши в данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2743">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a8478-2744">Для более сложных сценариев, таких как проверка состояния нестандартных кнопок, может потребоваться использовать API-интерфейсы в <xref:System.Windows.Input.Mouse> классе, а не на <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2744">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the APIs on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-2745"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2745"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2746">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2746">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2747">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2747">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2748">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2748">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="a8478-2749">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2749">Routing strategy</span></span>|<span data-ttu-id="a8478-2750">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-2750">Direct</span></span>|  
|<span data-ttu-id="a8478-2751">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2751">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2752">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2752">Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2753">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2753">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2754">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2754">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2755">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2755">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2756">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2756">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2757">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2757">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2758">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2758">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2759"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2759"><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2760">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2760">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2761">Происходит при отпускании любой кнопки мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2761">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2762">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewMouseUp> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2762">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2763">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewMouseUp>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2763">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2764">Событие <xref:System.Windows.UIElement3D.PreviewMouseUp> часто возникает вместе с <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> или <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, которое соответствует нажатию одной из двух стандартных кнопок мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-2764">The <xref:System.Windows.UIElement3D.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a8478-2765"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> и <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> также являются перенаправленными событиями, но они являются прямыми перенаправленными событиями, а соответствующее событие, зависящее от кнопки, возникает, когда событие <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> достигает этого элемента в маршруте события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2765"><xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a8478-2766">См. раздел Примечания для <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> или <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2766">See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.</span></span>  
  
 <span data-ttu-id="a8478-2767"><xref:System.Windows.UIElement3D.PreviewMouseUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2767"><xref:System.Windows.UIElement3D.PreviewMouseUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2768">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2768">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2769">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2769">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2770">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2770">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|  
|<span data-ttu-id="a8478-2771">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2771">Routing strategy</span></span>|<span data-ttu-id="a8478-2772">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2772">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2773">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2773">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2774">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2774">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseUp>.</span></span>  
  
-   <span data-ttu-id="a8478-2775">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2775">Override <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2776">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2776">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2777">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2777">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2778">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2778">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2779">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2779">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2780">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2780">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2781">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2781">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2782"><xref:System.Windows.UIElement3D.PreviewMouseUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2782"><xref:System.Windows.UIElement3D.PreviewMouseUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2783">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2783">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2784">Происходит при вращении колесика мыши в тот момент, когда указатель мыши находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2784">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2785">Фокус или захват мыши имеют приоритет над местом, где находится указатель мыши; Таким образом, если это событие получится от элемента с заданным или захваченным элементом, то указатель мыши на самом деле может находиться над другим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2785">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="a8478-2786">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewMouseMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2786">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2787">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewMouseMove>, присоединяются к базовому <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2787">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2788"><xref:System.Windows.UIElement3D.PreviewMouseWheel> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2788"><xref:System.Windows.UIElement3D.PreviewMouseWheel> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2789">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2789">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2790">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2790">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2791">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2791">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|  
|<span data-ttu-id="a8478-2792">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2792">Routing strategy</span></span>|<span data-ttu-id="a8478-2793">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2793">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2794">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2794">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="a8478-2795">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2795">The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="a8478-2796">Переопределите <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2796">Override <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2797">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2797">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2798">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2798">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2799">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2799">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2800">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2800">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2801">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2801">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2802">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2802">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2803"><xref:System.Windows.UIElement3D.PreviewMouseWheelEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2803"><xref:System.Windows.UIElement3D.PreviewMouseWheelEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2804">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2804">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2805">Происходит, когда состояние клавиши или кнопки мыши изменяется в ходе операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-2805">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2806">Событие <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> позволяет источнику перетаскивания объявить, следует ли отменить операцию перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-2806">The <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="a8478-2807">Это событие создает псевдоним для <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2807">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2808">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>, присоединяются к базовому <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2808">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2809"><xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2809"><xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2810">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2810">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2811">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2811">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2812">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2812">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="a8478-2813">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2813">Routing strategy</span></span>|<span data-ttu-id="a8478-2814">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2814">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2815">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2815">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="a8478-2816">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2816">The corresponding bubbling event is <xref:System.Windows.UIElement3D.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="a8478-2817">Переопределите <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2817">Override <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2818">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2818">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2819">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2819">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2820">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2820">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2821">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2821">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2822">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2822">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2823">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2823">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2824"><xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2824"><xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2825">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2825">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2826">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2826">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2827">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2827">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2828">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2828">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2829">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2829">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2830">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2830">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2831"><xref:System.Windows.UIElement3D.PreviewStylusButtonDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2831"><xref:System.Windows.UIElement3D.PreviewStylusButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2832">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2832">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2833">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2833">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2834">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2834">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="a8478-2835">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2835">Routing strategy</span></span>|<span data-ttu-id="a8478-2836">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2836">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2837">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2837">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2838">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2838">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="a8478-2839">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2839">Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2840">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2840">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2841">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2841">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2842">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2842">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2843">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2843">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2844">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2844">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2845">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2845">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2846"><xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2846"><xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2847">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2847">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2848">Происходит при отпускании кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2848">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2849">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2849">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2850">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2850">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2851">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2851">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2852">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2852">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2853"><xref:System.Windows.UIElement3D.PreviewStylusButtonUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2853"><xref:System.Windows.UIElement3D.PreviewStylusButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2854">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2854">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2855">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2855">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2856">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2856">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="a8478-2857">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2857">Routing strategy</span></span>|<span data-ttu-id="a8478-2858">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2858">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2859">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2859">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-2860">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2860">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="a8478-2861">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2861">Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2862">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2862">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2863">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2863">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2864">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2864">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2865">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2865">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2866">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2866">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2867">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2867">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2868"><xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2868"><xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2869">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2869">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2870">Происходит при касании дигитайзера пером в тот момент, когда оно находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2870">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2871">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2871">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2872">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2872">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2873">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2873">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2874">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2874">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2875"><xref:System.Windows.UIElement3D.PreviewStylusDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2875"><xref:System.Windows.UIElement3D.PreviewStylusDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2876">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2876">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2877">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2877">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2878">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2878">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|  
|<span data-ttu-id="a8478-2879">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2879">Routing strategy</span></span>|<span data-ttu-id="a8478-2880">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2880">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2881">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2881">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="a8478-2882">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2882">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusDown>.</span></span>  
  
-   <span data-ttu-id="a8478-2883">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2883">Override <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2884">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2884">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2885">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2885">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2886">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2886">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2887">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2887">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2888">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2888">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2889">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2889">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2890"><xref:System.Windows.UIElement3D.PreviewStylusDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2890"><xref:System.Windows.UIElement3D.PreviewStylusDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2891">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2891">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2892">Происходит при движении пера над элементом без касания дигитайзера.</span><span class="sxs-lookup"><span data-stu-id="a8478-2892">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2893">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2893">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2894">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2894">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2895">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2895">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2896">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2896">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2897"><xref:System.Windows.UIElement3D.PreviewStylusInAirMove> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2897"><xref:System.Windows.UIElement3D.PreviewStylusInAirMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2898">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2898">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2899">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2899">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2900">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2900">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="a8478-2901">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2901">Routing strategy</span></span>|<span data-ttu-id="a8478-2902">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2902">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2903">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2903">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-2904">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2904">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="a8478-2905">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2905">Override <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2906">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2906">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2907">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2907">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2908">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2908">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2909">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2909">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2910">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2910">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2911">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2911">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2912"><xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2912"><xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2913">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2913">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2914">Происходит при нахождении пера над данным элементом достаточно близко для того, чтобы перо было обнаружено дигитайзером.</span><span class="sxs-lookup"><span data-stu-id="a8478-2914">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2915">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusInRange> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2915">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2916">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusInRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2916">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2917">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2917">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2918">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2918">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2919"><xref:System.Windows.UIElement3D.PreviewStylusInRange> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2919"><xref:System.Windows.UIElement3D.PreviewStylusInRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2920">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2920">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2921">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2922">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2922">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="a8478-2923">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2923">Routing strategy</span></span>|<span data-ttu-id="a8478-2924">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2924">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2925">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2925">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-2926">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2926">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="a8478-2927">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2927">Override <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2928">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2928">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2929">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2929">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2930">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2930">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2931">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2931">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2932">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2932">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2933">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2933">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2934"><xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2934"><xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2935">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2935">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2936">Происходит при перемещении пера над элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-2936">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="a8478-2937">Для вызова этого события перемещаемое перо должно быть обнаружено дигитайзером; в противном случае вызывается <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2937">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2938">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2938">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2939">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2939">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2940">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2940">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2941">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2941">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2942"><xref:System.Windows.UIElement3D.PreviewStylusMove> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2942"><xref:System.Windows.UIElement3D.PreviewStylusMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2943">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2943">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2944">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2944">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2945">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2945">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|  
|<span data-ttu-id="a8478-2946">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2946">Routing strategy</span></span>|<span data-ttu-id="a8478-2947">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2947">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2948">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2948">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-2949">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2949">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusMove>.</span></span>  
  
-   <span data-ttu-id="a8478-2950">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2950">Override <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2951">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2951">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2952">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2952">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2953">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2953">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2954">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2954">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2955">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2955">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2956">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2956">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2957"><xref:System.Windows.UIElement3D.PreviewStylusMoveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2957"><xref:System.Windows.UIElement3D.PreviewStylusMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2958">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2958">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2959">Происходит, когда перо находится слишком далеко от дигитайзера, чтобы быть обнаруженным.</span><span class="sxs-lookup"><span data-stu-id="a8478-2959">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2960">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2960">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2961">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2961">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2962">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2962">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2963">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2963">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2964"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2964"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2965">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2965">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2966">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2966">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2967">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2967">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="a8478-2968">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2968">Routing strategy</span></span>|<span data-ttu-id="a8478-2969">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2969">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2970">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2970">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-2971">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2971">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="a8478-2972">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2972">Override <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2973">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2973">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2974">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2974">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2975">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2975">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2976">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2976">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-2977">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2977">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-2978">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2978">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-2979"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2979"><xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2980">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2980">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2981">Происходит при использовании пользователем одного из жестов пером.</span><span class="sxs-lookup"><span data-stu-id="a8478-2981">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2982">Дополнительные сведения о жестах пера см. в разделе <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2982">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="a8478-2983">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-2983">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-2984">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2984">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-2985">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-2985">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-2986">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2986">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-2987"><xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-2987"><xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-2988">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-2988">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-2989">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-2989">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-2990">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-2990">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="a8478-2991">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-2991">Routing strategy</span></span>|<span data-ttu-id="a8478-2992">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-2992">Tunneling</span></span>|  
|<span data-ttu-id="a8478-2993">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-2993">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="a8478-2994">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-2994">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="a8478-2995">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-2995">Override <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-2996">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-2996">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-2997">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-2997">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-2998">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-2998">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-2999">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-2999">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3000">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3000">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3001">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3001">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3002"><xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3002"><xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3003">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3003">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3004">Происходит, когда пользователь отрывает перо от поверхности дигитайзера в тот момент, когда оно находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3004">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3005">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewStylusDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3005">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3006">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewStylusDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3006">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3007">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3007">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3008">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3008">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3009"><xref:System.Windows.UIElement3D.PreviewStylusUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3009"><xref:System.Windows.UIElement3D.PreviewStylusUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3010">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3010">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3011">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3011">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3012">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3012">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|  
|<span data-ttu-id="a8478-3013">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3013">Routing strategy</span></span>|<span data-ttu-id="a8478-3014">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-3014">Tunneling</span></span>|  
|<span data-ttu-id="a8478-3015">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3015">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3016">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3016">The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusUp>.</span></span>  
  
-   <span data-ttu-id="a8478-3017">Переопределите <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3017">Override <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3018">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3018">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3019">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3019">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3020">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3020">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3021">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3021">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3022">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3022">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3023">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3023">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3024"><xref:System.Windows.UIElement3D.PreviewStylusUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3024"><xref:System.Windows.UIElement3D.PreviewStylusUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3025">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3025">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3026">Происходит при получении этим элементом текста аппаратно-независимым способом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3026">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3027">Событие <xref:System.Windows.UIElement3D.PreviewTextInput> позволяет компоненту или приложению ожидать ввода текста независимым от устройства образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3027">The <xref:System.Windows.UIElement3D.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="a8478-3028">Клавиатура является основным средством <xref:System.Windows.UIElement3D.PreviewTextInput>; но речь, рукописный ввод и другие устройства ввода также могут создавать <xref:System.Windows.UIElement3D.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3028">The keyboard is the primary means of <xref:System.Windows.UIElement3D.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement3D.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="a8478-3029">Из-за сочетаний клавиш — либо на клавиатуре по умолчанию, либо с помощью редакторов методов ввода. несколько ключевых событий могут вызывать только одно событие текстового ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-3029">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="a8478-3030">Это событие создает псевдоним для <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.PreviewTextInput> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3030">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3031">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.PreviewTextInput>, присоединяются к базовому <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3031">Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3032"><xref:System.Windows.UIElement3D.PreviewTextInput> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3032"><xref:System.Windows.UIElement3D.PreviewTextInput> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3033">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3033">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3034">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3034">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3035">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3035">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|  
|<span data-ttu-id="a8478-3036">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3036">Routing strategy</span></span>|<span data-ttu-id="a8478-3037">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-3037">Tunneling</span></span>|  
|<span data-ttu-id="a8478-3038">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3038">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="a8478-3039">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3039">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TextInput>.</span></span>  
  
-   <span data-ttu-id="a8478-3040">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3040">Override <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3041">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewTextInput" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3041">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3042">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3042">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3043">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3043">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3044">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3044">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3045">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3045">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3046">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3046">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3047"><xref:System.Windows.UIElement3D.PreviewTextInputEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3047"><xref:System.Windows.UIElement3D.PreviewTextInputEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3048">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3048">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3049">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3049">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3050">По умолчанию события <xref:System.Windows.UIElement3D.PreviewTouchDown> и <xref:System.Windows.UIElement3D.TouchDown> не возникают, пока палец не касается экрана и не перемещается.</span><span class="sxs-lookup"><span data-stu-id="a8478-3050">By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="a8478-3051">Нажатие пальца на экране и удерживания его без перемещения приводит к поведению нажатия и удерживания <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3051">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="a8478-3052">Поведение нажатия и удерживания эквивалентно щелчку правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-3052">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="a8478-3053">Чтобы события <xref:System.Windows.UIElement3D.PreviewTouchDown> и <xref:System.Windows.UIElement3D.TouchDown> происходили сразу после того, как палец касается экрана, установите для свойства присоединено <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> значение `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3053">To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3054">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3054">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3055">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3055">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|  
|<span data-ttu-id="a8478-3056">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3056">Routing strategy</span></span>|<span data-ttu-id="a8478-3057">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-3057">Tunneling</span></span>|  
|<span data-ttu-id="a8478-3058">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3058">Delegate</span></span>|<span data-ttu-id="a8478-3059"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3059"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3060">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3060">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchDown>.</span></span>  
  
-   <span data-ttu-id="a8478-3061">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3061">Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3062">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3062">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3063">Возникает при перемещении пальца по экрану при условии, если палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3063">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3064">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3064">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3065">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3065">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|  
|<span data-ttu-id="a8478-3066">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3066">Routing strategy</span></span>|<span data-ttu-id="a8478-3067">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-3067">Tunneling</span></span>|  
|<span data-ttu-id="a8478-3068">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3068">Delegate</span></span>|<span data-ttu-id="a8478-3069"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3069"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3070">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3070">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchMove>.</span></span>  
  
-   <span data-ttu-id="a8478-3071">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3071">Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3072">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3072">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3073">Возникает, когда палец отрывается от экрана при условии, что палец находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3073">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3074">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3074">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3075">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3075">Identifier field</span></span>|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|  
|<span data-ttu-id="a8478-3076">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3076">Routing strategy</span></span>|<span data-ttu-id="a8478-3077">Туннелирование</span><span class="sxs-lookup"><span data-stu-id="a8478-3077">Tunneling</span></span>|  
|<span data-ttu-id="a8478-3078">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3078">Delegate</span></span>|<span data-ttu-id="a8478-3079"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3079"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3080">Соответствующее событие восходящей маршрутизации <xref:System.Windows.UIElement3D.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3080">The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchUp>.</span></span>  
  
-   <span data-ttu-id="a8478-3081">Переопределите <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3081">Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3082">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3082">Identifies the <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3083">Происходит, когда состояние клавиши или кнопки мыши изменяется в ходе операции перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-3083">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3084">Событие <xref:System.Windows.UIElement3D.QueryContinueDrag> позволяет источнику перетаскивания определить, следует ли отменить операцию перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="a8478-3084">The <xref:System.Windows.UIElement3D.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="a8478-3085">Это событие создает псевдоним для <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.QueryContinueDrag> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3085">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3086">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.QueryContinueDrag>, присоединяются к базовому <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3086">Event handlers that are attached to the <xref:System.Windows.UIElement3D.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3087"><xref:System.Windows.UIElement3D.QueryContinueDrag> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3087"><xref:System.Windows.UIElement3D.QueryContinueDrag> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3088">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3088">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3089">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3089">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3090">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3090">Identifier field</span></span>|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|  
|<span data-ttu-id="a8478-3091">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3091">Routing strategy</span></span>|<span data-ttu-id="a8478-3092">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3092">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3093">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3093">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="a8478-3094">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3094">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="a8478-3095">Переопределите <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3095">Override <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3096">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3096">Identifies the <see cref="E:System.Windows.UIElement3D.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3097">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3097">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3098">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3098">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3099">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3099">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3100">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3100">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3101">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3101">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3102"><xref:System.Windows.UIElement3D.QueryContinueDragEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3102"><xref:System.Windows.UIElement3D.QueryContinueDragEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3103">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3103">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3104">Происходит при запросе отображения курсора.</span><span class="sxs-lookup"><span data-stu-id="a8478-3104">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="a8478-3105">Это событие возникает для элемента каждый раз, когда указатель мыши перемещается в новое положение, что может послужить причиной изменения его внешнего вида.</span><span class="sxs-lookup"><span data-stu-id="a8478-3105">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3106">Это событие создает псевдоним для <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.QueryCursor> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3106">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3107">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.QueryCursor>, присоединяются к базовому <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3107">Event handlers that are attached to the <xref:System.Windows.UIElement3D.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3108">Курсор, на который ссылается это имя события, не обязательно является текстовым курсором (иногда называемым точкой вставки).</span><span class="sxs-lookup"><span data-stu-id="a8478-3108">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="a8478-3109">Вместо этого курсор в этом контексте представляет собой объект, объявляющий графическое изображение на экране, связанное с несколькими возможными устройствами ввода или понятиями, связанными с вводом в программировании Windows.</span><span class="sxs-lookup"><span data-stu-id="a8478-3109">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="a8478-3110">Этот объект представлен классом <xref:System.Windows.Input.Cursor> в WPF.</span><span class="sxs-lookup"><span data-stu-id="a8478-3110">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="a8478-3111">Система ввода WPF позволяет изменить этот курсор, если он представляет позицию указателя мыши на экране.</span><span class="sxs-lookup"><span data-stu-id="a8478-3111">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="a8478-3112">Можно использовать предопределенные значения из перечисления <xref:System.Windows.Input.Cursors> или можно объявить пользовательский курсор в качестве файла изображения.</span><span class="sxs-lookup"><span data-stu-id="a8478-3112">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="a8478-3113">Прослушивание события <xref:System.Windows.UIElement3D.QueryCursor> не является эффективным приемом для управления курсорами.</span><span class="sxs-lookup"><span data-stu-id="a8478-3113">Listening for the <xref:System.Windows.UIElement3D.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="a8478-3114">Вместо этого каждый элемент должен определять собственное поведение курсора с <xref:System.Windows.FrameworkContentElement.Cursor%2A> и <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3114">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="a8478-3115">Следует полагаться только на <xref:System.Windows.UIElement3D.QueryCursor>, если не используются базовые элементы уровня среды WPF или в исключительных обстоятельствах, когда определение поведения курсора для отдельных элементов не соответствует вашим потребностям.</span><span class="sxs-lookup"><span data-stu-id="a8478-3115">You should only rely on <xref:System.Windows.UIElement3D.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="a8478-3116">Дополнительные сведения о реализации поведения курсора в ответ на <xref:System.Windows.UIElement3D.QueryCursor>см. в разделе <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3116">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement3D.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
 <span data-ttu-id="a8478-3117"><xref:System.Windows.UIElement3D.QueryCursor> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3117"><xref:System.Windows.UIElement3D.QueryCursor> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3118">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3118">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3119">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3119">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3120">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3120">Identifier field</span></span>|<xref:System.Windows.UIElement3D.QueryCursorEvent>|  
|<span data-ttu-id="a8478-3121">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3121">Routing strategy</span></span>|<span data-ttu-id="a8478-3122">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3122">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3123">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3123">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="a8478-3124">Не определено соответствующее событие туннелирования.</span><span class="sxs-lookup"><span data-stu-id="a8478-3124">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a8478-3125">Переопределите <xref:System.Windows.UIElement3D.OnQueryCursor%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3125">Override <xref:System.Windows.UIElement3D.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3126">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3126">Identifies the <see cref="E:System.Windows.UIElement3D.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3127">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3127">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3128">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3128">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3129">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3129">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3130">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3130">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3131">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3131">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3132"><xref:System.Windows.UIElement3D.QueryCursorEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3132"><xref:System.Windows.UIElement3D.QueryCursorEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3133">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3133">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8478-3134">Объект <see cref="T:System.Windows.RoutedEventArgs" />, который содержит данные события, а также определяет инициируемое событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-3134">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="a8478-3135">Инициирует определенное перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="a8478-3135">Raises a specific routed event.</span></span> <span data-ttu-id="a8478-3136">Инициируемое событие <see cref="T:System.Windows.RoutedEvent" /> указывается в предоставленном экземпляре <see cref="T:System.Windows.RoutedEventArgs" /> (как свойство <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> данных этого события).</span><span class="sxs-lookup"><span data-stu-id="a8478-3136">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3137">Параметр `e` типизирован как общий базовый тип для всех перенаправленных данных события; Однако данные события должны быть предоставлены как наиболее конкретный тип данных события, доступный для создаваемого события, поскольку <xref:System.Windows.RoutedEventArgs> производные классы содержат фактически определенные свойства данных, предназначенные для конкретного события при его возникновении.</span><span class="sxs-lookup"><span data-stu-id="a8478-3137">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="a8478-3138"><xref:System.Windows.RoutedEventArgs> не только свойства состояния для события; Он также определяет, какое перенаправленное событие следует вызывать.</span><span class="sxs-lookup"><span data-stu-id="a8478-3138"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="a8478-3139">Этот шаблон генерации событий и данные перенаправленного события отличаются от [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] событий и классов данных, которые обычно содержат только свойства, связанные с событием.</span><span class="sxs-lookup"><span data-stu-id="a8478-3139">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
 <span data-ttu-id="a8478-3140"><xref:System.Windows.UIElement3D.RaiseEvent%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3140"><xref:System.Windows.UIElement3D.RaiseEvent%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3141">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3141">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement3D.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-3142">Освобождает все полученные сенсорные устройства для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3142">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement3D.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-3143">Освобождает мышь, если элемент произвел ее захват.</span><span class="sxs-lookup"><span data-stu-id="a8478-3143">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3144">Если этот элемент не удерживает записи, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="a8478-3144">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="a8478-3145">Рассмотрите возможность проверки значения <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="a8478-3145">Consider checking the value of <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> before you call this method.</span></span>  
  
 <span data-ttu-id="a8478-3146"><xref:System.Windows.UIElement3D.ReleaseMouseCapture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3146"><xref:System.Windows.UIElement3D.ReleaseMouseCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3147">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3147">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement3D.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-3148">Освобождает перо, если элемент произвел его захват.</span><span class="sxs-lookup"><span data-stu-id="a8478-3148">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3149">Если этот элемент не удерживает записи, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="a8478-3149">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="a8478-3150">Рассмотрите возможность проверки значения <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="a8478-3150">Consider checking the value of <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 <span data-ttu-id="a8478-3151"><xref:System.Windows.UIElement3D.ReleaseStylusCapture%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3151"><xref:System.Windows.UIElement3D.ReleaseStylusCapture%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3152">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3152">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement3D.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="a8478-3153">Освобождаемое устройство.</span><span class="sxs-lookup"><span data-stu-id="a8478-3153">The device to release.</span></span></param>
        <summary><span data-ttu-id="a8478-3154">Предпринимает попытку освободить заданное сенсорное устройство из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3154">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="a8478-3155">Значение <see langword="true" />, если устройство сенсорного ввода освобождено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3155"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8478-3156"><paramref name="touchDevice" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3156"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement3D.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="a8478-3157">Идентификатор перенаправленного события, к которому прикреплен обработчик.</span><span class="sxs-lookup"><span data-stu-id="a8478-3157">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="a8478-3158">Конкретная реализация удаляемого обработчика из коллекции обработчиков событий этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3158">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="a8478-3159">Удаляет указанный обработчик маршрутизируемого события из этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3159">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3160">Наиболее распространенным сценарием использования этого API является то, что вы реализуете событие [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "оболочки", связанное с пользовательским перенаправленным событием, особенно при реализации логики "Удалить" для обработчиков на уровне [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a8478-3160">The most common scenario for using this API is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span>  
  
 <span data-ttu-id="a8478-3161">Вызов этого метода не имеет силы, если нет зарегистрированных обработчиков с критериями, соответствующими входным параметрам для вызова метода.</span><span class="sxs-lookup"><span data-stu-id="a8478-3161">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="a8478-3162">Если присоединено несколько обработчиков, соответствующих критериям, удаляется только первый обработчик в хранилище обработчиков событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-3162">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="a8478-3163">Это поведение согласуется с [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]ным поведением оператора `-=`.</span><span class="sxs-lookup"><span data-stu-id="a8478-3163">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="a8478-3164">Невозможно `null`ни `routedEvent`, ни `handler`.</span><span class="sxs-lookup"><span data-stu-id="a8478-3164">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="a8478-3165">Попытка предоставить любое значение, так как `null` вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="a8478-3165">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="a8478-3166">Этот метод игнорирует сведения о параметрах `handledEventsToo`, которые предоставляются при первом добавлении обработчика с сигнатурой <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>, которая позволяет обрабатывать уже обработанные события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3166">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="a8478-3167">Удаляется любой из типов обработчиков.</span><span class="sxs-lookup"><span data-stu-id="a8478-3167">Either type of handler is removed.</span></span>  
  
 <span data-ttu-id="a8478-3168"><xref:System.Windows.UIElement3D.RemoveHandler%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3168"><xref:System.Windows.UIElement3D.RemoveHandler%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3169">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3169">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement3D.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-3170">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.UIElement3D.CommandBindings" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-3170">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement3D.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="a8478-3171">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.UIElement3D.CommandBindings" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3171"><see langword="true" /> if the <see cref="P:System.Windows.UIElement3D.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3172">Это приведет к возвращению `true`, если <xref:System.Windows.UIElement3D.CommandBindings%2A> установлен локально.</span><span class="sxs-lookup"><span data-stu-id="a8478-3172">This will return `true` if <xref:System.Windows.UIElement3D.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="a8478-3173">Этот метод `ShouldSerialize` предоставляется, так как свойство <xref:System.Windows.UIElement3D.CommandBindings%2A> не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-3173">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a8478-3174">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-3174">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a8478-3175">Этот метод обычно вызывается при разработке конструктора или при разработке собственного элемента управления, включающего <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3175">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-3176">Дополнительные сведения см. [в разделе Определение значений по умолчанию с помощью методов ShouldSerialize и Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3176">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 <span data-ttu-id="a8478-3177"><xref:System.Windows.UIElement3D.ShouldSerializeCommandBindings%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3177"><xref:System.Windows.UIElement3D.ShouldSerializeCommandBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3178">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3178">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement3D.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8478-3179">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.UIElement3D.InputBindings" /> в экземплярах данного класса.</span><span class="sxs-lookup"><span data-stu-id="a8478-3179">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement3D.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="a8478-3180">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.UIElement3D.InputBindings" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3180"><see langword="true" /> if the <see cref="P:System.Windows.UIElement3D.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3181">Это приведет к возвращению `true`, если <xref:System.Windows.UIElement3D.InputBindings%2A> установлен локально.</span><span class="sxs-lookup"><span data-stu-id="a8478-3181">This will return `true` if <xref:System.Windows.UIElement3D.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="a8478-3182">Этот метод `ShouldSerialize` предоставляется, так как свойство <xref:System.Windows.UIElement3D.InputBindings%2A> не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-3182">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a8478-3183">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a8478-3183">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a8478-3184">Этот метод обычно вызывается при разработке конструктора или при разработке собственного элемента управления, включающего <xref:System.Windows.UIElement3D>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3184">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.</span></span>  
  
 <span data-ttu-id="a8478-3185">Дополнительные сведения см. [в разделе Определение значений по умолчанию с помощью методов ShouldSerialize и Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3185">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 <span data-ttu-id="a8478-3186"><xref:System.Windows.UIElement3D.ShouldSerializeInputBindings%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3186"><xref:System.Windows.UIElement3D.ShouldSerializeInputBindings%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3187">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3187">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3188">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3188">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3189">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusButtonDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3189">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3190">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusButtonDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3190">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3191">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3191">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3192">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3192">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3193"><xref:System.Windows.UIElement3D.StylusButtonDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3193"><xref:System.Windows.UIElement3D.StylusButtonDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3194">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3194">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3195">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3195">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3196">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3196">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|  
|<span data-ttu-id="a8478-3197">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3197">Routing strategy</span></span>|<span data-ttu-id="a8478-3198">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3198">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3199">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3199">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-3200">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3200">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="a8478-3201">Переопределите <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3201">Override <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3202">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3202">Identifies the <see cref="E:System.Windows.UIElement3D.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3203">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3203">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3204">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3204">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3205">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3205">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3206">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3206">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3207">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3207">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3208"><xref:System.Windows.UIElement3D.StylusButtonDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3208"><xref:System.Windows.UIElement3D.StylusButtonDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3209">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3209">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3210">Происходит при отпускании кнопки пера в тот момент, когда указатель находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3210">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3211">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusButtonUp> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3211">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3212">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusButtonUp>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3212">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3213">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3213">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3214">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3214">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3215"><xref:System.Windows.UIElement3D.StylusButtonUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3215"><xref:System.Windows.UIElement3D.StylusButtonUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3216">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3216">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3217">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3217">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3218">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3218">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|  
|<span data-ttu-id="a8478-3219">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3219">Routing strategy</span></span>|<span data-ttu-id="a8478-3220">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3220">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3221">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3221">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a8478-3222">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3222">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="a8478-3223">Переопределите <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3223">Override <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3224">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3224">Identifies the <see cref="E:System.Windows.UIElement3D.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3225">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3225">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3226">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3227">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3227">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3228">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3228">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3229">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3229">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3230"><xref:System.Windows.UIElement3D.StylusButtonUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3230"><xref:System.Windows.UIElement3D.StylusButtonUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3231">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3231">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3232">Происходит при касании дигитайзера пером в тот момент, когда оно находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3232">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3233">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusDown> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3233">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3234">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusDown>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3234">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3235">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3235">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3236">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3236">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3237"><xref:System.Windows.UIElement3D.StylusDown> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3237"><xref:System.Windows.UIElement3D.StylusDown> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3238">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3238">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3239">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3239">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3240">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3240">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusDownEvent>|  
|<span data-ttu-id="a8478-3241">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3241">Routing strategy</span></span>|<span data-ttu-id="a8478-3242">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3242">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3243">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3243">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="a8478-3244">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3244">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="a8478-3245">Переопределите <xref:System.Windows.UIElement3D.OnStylusDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3245">Override <xref:System.Windows.UIElement3D.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3246">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3246">Identifies the <see cref="E:System.Windows.UIElement3D.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3247">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3247">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3248">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3248">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3249">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3249">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3250">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3250">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3251">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3251">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3252"><xref:System.Windows.UIElement3D.StylusDownEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3252"><xref:System.Windows.UIElement3D.StylusDownEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3253">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3253">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3254">Происходит, когда перо попадает внутрь границ данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3254">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3255"><xref:System.Windows.UIElement3D.StylusEnter> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-3255"><xref:System.Windows.UIElement3D.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8478-3256">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="a8478-3256">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a8478-3257">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="a8478-3257">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a8478-3258">Хотя <xref:System.Windows.UIElement3D.StylusEnter> отслеживает, когда перо попадает внутрь границ элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.UIElement3D.IsStylusOver%2A> изменилось с `false` на `true` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3258">Although <xref:System.Windows.UIElement3D.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="a8478-3259">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusEnter> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3259">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3260">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusEnter>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3260">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3261">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3261">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3262">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3262">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3263"><xref:System.Windows.UIElement3D.StylusEnter> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3263"><xref:System.Windows.UIElement3D.StylusEnter> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3264">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3264">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3265">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3265">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3266">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3266">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusEnterEvent>|  
|<span data-ttu-id="a8478-3267">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3267">Routing strategy</span></span>|<span data-ttu-id="a8478-3268">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-3268">Direct</span></span>|  
|<span data-ttu-id="a8478-3269">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3269">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3270">Переопределите <xref:System.Windows.UIElement3D.OnStylusEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3270">Override <xref:System.Windows.UIElement3D.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3271">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3271">Identifies the <see cref="E:System.Windows.UIElement3D.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3272">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3272">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3273">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3273">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3274">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3274">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3275">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3275">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3276">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3276">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3277"><xref:System.Windows.UIElement3D.StylusEnterEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3277"><xref:System.Windows.UIElement3D.StylusEnterEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3278">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3278">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3279">Происходит при движении пера над элементом без касания дигитайзера.</span><span class="sxs-lookup"><span data-stu-id="a8478-3279">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3280">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusInAirMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3280">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3281">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusInAirMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3281">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3282">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3282">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3283">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3283">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3284"><xref:System.Windows.UIElement3D.StylusInAirMove> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3284"><xref:System.Windows.UIElement3D.StylusInAirMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3285">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3285">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3286">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3286">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3287">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3287">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|  
|<span data-ttu-id="a8478-3288">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3288">Routing strategy</span></span>|<span data-ttu-id="a8478-3289">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3289">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3290">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3290">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3291">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3291">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="a8478-3292">Переопределите <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3292">Override <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3293">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3293">Identifies the <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3294">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3295">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3296">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3297">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3298">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3299"><xref:System.Windows.UIElement3D.StylusInAirMoveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3299"><xref:System.Windows.UIElement3D.StylusInAirMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3300">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3300">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3301">Происходит при нахождении пера над данным элементом достаточно близко для того, чтобы перо было обнаружено дигитайзером.</span><span class="sxs-lookup"><span data-stu-id="a8478-3301">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3302">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusInRange> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3302">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3303">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusInRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3303">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3304">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3304">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3305">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3305">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3306"><xref:System.Windows.UIElement3D.StylusInRange> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3306"><xref:System.Windows.UIElement3D.StylusInRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3307">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3307">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3308">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3308">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3309">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3309">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|  
|<span data-ttu-id="a8478-3310">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3310">Routing strategy</span></span>|<span data-ttu-id="a8478-3311">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3311">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3312">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3312">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3313">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3313">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="a8478-3314">Переопределите <xref:System.Windows.UIElement3D.OnStylusInRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3314">Override <xref:System.Windows.UIElement3D.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3315">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3315">Identifies the <see cref="E:System.Windows.UIElement3D.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3316">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3316">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3317">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3317">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3318">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3318">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3319">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3319">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3320">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3320">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3321"><xref:System.Windows.UIElement3D.StylusInRangeEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3321"><xref:System.Windows.UIElement3D.StylusInRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3322">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3322">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3323">Происходит, когда перо покидает границы элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3323">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3324"><xref:System.Windows.UIElement3D.StylusLeave> является [обзором перенаправленных событий](~/docs/framework/wpf/advanced/routed-events-overview.md) , который использует стратегию маршрутизации прямой обработки событий.</span><span class="sxs-lookup"><span data-stu-id="a8478-3324"><xref:System.Windows.UIElement3D.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a8478-3325">Прямые перенаправленные события не вызываются вдоль маршрута; Вместо этого они обрабатываются в том же элементе, где они создаются.</span><span class="sxs-lookup"><span data-stu-id="a8478-3325">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a8478-3326">Однако они включают другие аспекты поведения перенаправленных событий, такие как триггеры событий в стилях.</span><span class="sxs-lookup"><span data-stu-id="a8478-3326">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a8478-3327">Несмотря на то, что <xref:System.Windows.UIElement3D.StylusLeave> отслеживается, когда перо покидает границы элемента, это событие более буквально сообщает, что значение свойства <xref:System.Windows.UIElement3D.IsStylusOver%2A> изменилось с `true` на `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3327">Although <xref:System.Windows.UIElement3D.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="a8478-3328">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusLeave> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3328">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3329">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusLeave>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3329">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3330">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3330">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3331">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3331">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3332"><xref:System.Windows.UIElement3D.StylusLeave> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3332"><xref:System.Windows.UIElement3D.StylusLeave> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3333">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3333">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3334">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3334">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3335">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3335">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|  
|<span data-ttu-id="a8478-3336">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3336">Routing strategy</span></span>|<span data-ttu-id="a8478-3337">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-3337">Direct</span></span>|  
|<span data-ttu-id="a8478-3338">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3338">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3339">Переопределите <xref:System.Windows.UIElement3D.OnStylusLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3339">Override <xref:System.Windows.UIElement3D.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3340">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3340">Identifies the <see cref="E:System.Windows.UIElement3D.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3341">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3341">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3342">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3342">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3343">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3343">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3344">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3344">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3345">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3345">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3346"><xref:System.Windows.UIElement3D.StylusLeaveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3346"><xref:System.Windows.UIElement3D.StylusLeaveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3347">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3347">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3348">Происходит при движении пера над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3348">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="a8478-3349">Для вызова этого события перо должно перемещаться по дигитайзеру.</span><span class="sxs-lookup"><span data-stu-id="a8478-3349">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="a8478-3350">В противном случае вызывается событие <see cref="E:System.Windows.UIElement3D.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3350">Otherwise, <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3351">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusMove> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3351">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3352">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusMove>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3352">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3353">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3353">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3354">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3354">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3355"><xref:System.Windows.UIElement3D.StylusMove> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3355"><xref:System.Windows.UIElement3D.StylusMove> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3356">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3356">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3357">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3358">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3358">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusMoveEvent>|  
|<span data-ttu-id="a8478-3359">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3359">Routing strategy</span></span>|<span data-ttu-id="a8478-3360">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3360">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3361">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3361">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3362">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3362">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="a8478-3363">Переопределите <xref:System.Windows.UIElement3D.OnStylusMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3363">Override <xref:System.Windows.UIElement3D.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3364">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3364">Identifies the <see cref="E:System.Windows.UIElement3D.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3365">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3365">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3366">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3366">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3367">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3367">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3368">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3368">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3369">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3369">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3370"><xref:System.Windows.UIElement3D.StylusMoveEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3370"><xref:System.Windows.UIElement3D.StylusMoveEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3371">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3371">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3372">Возникает, когда расстояние между пером и дигитайзером слишком велико для обнаружения пера при условии, что перо находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3372">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3373">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusOutOfRange> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3373">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3374">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusOutOfRange>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3374">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3375">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3375">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3376">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3376">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3377"><xref:System.Windows.UIElement3D.StylusOutOfRange> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3377"><xref:System.Windows.UIElement3D.StylusOutOfRange> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3378">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3378">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3379">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3380">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3380">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|  
|<span data-ttu-id="a8478-3381">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3381">Routing strategy</span></span>|<span data-ttu-id="a8478-3382">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3382">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3383">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3383">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3384">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3384">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="a8478-3385">Переопределите <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3385">Override <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3386">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3386">Identifies the <see cref="E:System.Windows.UIElement3D.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3387">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3387">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3388">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3388">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3389">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3389">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3390">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3390">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3391">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3391">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3392"><xref:System.Windows.UIElement3D.StylusOutOfRangeEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3392"><xref:System.Windows.UIElement3D.StylusOutOfRangeEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3393">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3393">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3394">Происходит при использовании пользователем одного из жестов пером.</span><span class="sxs-lookup"><span data-stu-id="a8478-3394">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3395">Дополнительные сведения о жестах пера см. в разделе <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3395">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="a8478-3396">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusSystemGesture> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3396">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3397">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusSystemGesture>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3397">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3398">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3398">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3399">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3399">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3400"><xref:System.Windows.UIElement3D.StylusSystemGesture> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3400"><xref:System.Windows.UIElement3D.StylusSystemGesture> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3401">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3401">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3402">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3402">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3403">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3403">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|  
|<span data-ttu-id="a8478-3404">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3404">Routing strategy</span></span>|<span data-ttu-id="a8478-3405">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3405">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3406">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3406">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="a8478-3407">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3407">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="a8478-3408">Переопределите <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3408">Override <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3409">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3409">Identifies the <see cref="E:System.Windows.UIElement3D.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3410">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3410">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3411">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3411">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3412">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3412">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3413">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3413">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3414">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3414">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3415"><xref:System.Windows.UIElement3D.StylusSystemGestureEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3415"><xref:System.Windows.UIElement3D.StylusSystemGestureEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3416">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3416">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3417">Происходит, когда пользователь отрывает перо от поверхности дигитайзера в тот момент, когда оно находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3417">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3418">Это событие создает псевдоним для <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.StylusUp> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3418">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.StylusUp> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3419">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.StylusUp>, присоединяются к базовому <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3419">Event handlers that are attached to the <xref:System.Windows.UIElement3D.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3420">Ввод с помощью сенсорного ввода, мыши и пера существует в определенной связи.</span><span class="sxs-lookup"><span data-stu-id="a8478-3420">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a8478-3421">Дополнительные сведения см. [в разделе Поддержка сенсорного ввода в Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) и [Общие сведения о входе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3421">For more information, see [Touch Input Support in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a8478-3422"><xref:System.Windows.UIElement3D.StylusUp> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3422"><xref:System.Windows.UIElement3D.StylusUp> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3423">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3423">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3424">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3424">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3425">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3425">Identifier field</span></span>|<xref:System.Windows.UIElement3D.StylusUpEvent>|  
|<span data-ttu-id="a8478-3426">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3426">Routing strategy</span></span>|<span data-ttu-id="a8478-3427">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3427">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3428">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3428">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a8478-3429">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3429">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="a8478-3430">Переопределите <xref:System.Windows.UIElement3D.OnStylusUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3430">Override <xref:System.Windows.UIElement3D.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3431">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3431">Identifies the <see cref="E:System.Windows.UIElement3D.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3432">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3432">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3433">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3433">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3434">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3434">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3435">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3435">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3436">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3436">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3437"><xref:System.Windows.UIElement3D.StylusUpEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3437"><xref:System.Windows.UIElement3D.StylusUpEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3438">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3438">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3439">Происходит при получении этим элементом текста аппаратно-независимым способом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3439">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3440">Событие <xref:System.Windows.UIElement3D.TextInput> позволяет компоненту или приложению ожидать ввода текста независимым от устройства образом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3440">The <xref:System.Windows.UIElement3D.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="a8478-3441">Клавиатура является основным средством <xref:System.Windows.UIElement3D.TextInput>, но при этом также могут вызываться <xref:System.Windows.UIElement3D.TextInput>речи, рукописного ввода и других устройств ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-3441">The keyboard is the primary means of <xref:System.Windows.UIElement3D.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement3D.TextInput>.</span></span>  
  
 <span data-ttu-id="a8478-3442">Из-за сочетаний клавиш — либо на клавиатуре по умолчанию, либо с помощью редакторов методов ввода. несколько ключевых событий могут вызывать только одно событие текстового ввода.</span><span class="sxs-lookup"><span data-stu-id="a8478-3442">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="a8478-3443">Это событие создает псевдоним для <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> присоединенного события для этого класса, поэтому <xref:System.Windows.UIElement3D.TextInput> является частью списка членов класса, когда <xref:System.Windows.UIElement3D> наследуется как базовый элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3443">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement3D.TextInput> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element.</span></span> <span data-ttu-id="a8478-3444">Обработчики событий, присоединенные к событию <xref:System.Windows.UIElement3D.TextInput>, присоединяются к базовому <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> присоединенному событию и получают тот же экземпляр данных события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3444">Event handlers that are attached to the <xref:System.Windows.UIElement3D.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a8478-3445"><xref:System.Windows.UIElement3D.TextInput> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3445"><xref:System.Windows.UIElement3D.TextInput> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3446">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3446">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3447">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3447">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3448">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3448">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TextInputEvent>|  
|<span data-ttu-id="a8478-3449">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3449">Routing strategy</span></span>|<span data-ttu-id="a8478-3450">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3450">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3451">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3451">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="a8478-3452">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3452">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="a8478-3453">Переопределите <xref:System.Windows.UIElement3D.OnTextInput%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3453">Override <xref:System.Windows.UIElement3D.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3454">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.TextInput" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3454">Identifies the <see cref="E:System.Windows.UIElement3D.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3455">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="a8478-3455">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a8478-3456">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="a8478-3456">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a8478-3457">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="a8478-3457">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a8478-3458">Дополнительные сведения о регистрации перенаправленных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3458">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a8478-3459">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3459">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 <span data-ttu-id="a8478-3460"><xref:System.Windows.UIElement3D.TextInputEvent> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3460"><xref:System.Windows.UIElement3D.TextInputEvent> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3461">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3461">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3462">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3462">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3463">По умолчанию события <xref:System.Windows.UIElement3D.PreviewTouchDown> и <xref:System.Windows.UIElement3D.TouchDown> не возникают, пока палец не касается экрана и не перемещается.</span><span class="sxs-lookup"><span data-stu-id="a8478-3463">By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="a8478-3464">Нажатие пальца на экране и удерживания его без перемещения приводит к поведению нажатия и удерживания <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3464">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="a8478-3465">Поведение нажатия и удерживания эквивалентно щелчку правой кнопкой мыши.</span><span class="sxs-lookup"><span data-stu-id="a8478-3465">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="a8478-3466">Чтобы события <xref:System.Windows.UIElement3D.PreviewTouchDown> и <xref:System.Windows.UIElement3D.TouchDown> происходили сразу после того, как палец касается экрана, установите для свойства присоединено <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> значение `false` для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3466">To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3467">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3467">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3468">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3468">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchDownEvent>|  
|<span data-ttu-id="a8478-3469">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3469">Routing strategy</span></span>|<span data-ttu-id="a8478-3470">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3470">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3471">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3471">Delegate</span></span>|<span data-ttu-id="a8478-3472"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3472"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3473">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3473">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="a8478-3474">Переопределите <xref:System.Windows.UIElement3D.OnTouchDown%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3474">Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3475">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.TouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3475">Identifies the <see cref="E:System.Windows.UIElement3D.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3476">Происходит при перемещении касания внутрь данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3476">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3477">Это событие всегда вызывается, независимо от того, захвачено ли сенсорное устройство данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3477">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3478">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3478">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3479">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3479">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchEnterEvent>|  
|<span data-ttu-id="a8478-3480">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3480">Routing strategy</span></span>|<span data-ttu-id="a8478-3481">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-3481">Direct</span></span>|  
|<span data-ttu-id="a8478-3482">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3482">Delegate</span></span>|<span data-ttu-id="a8478-3483"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3483"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3484">Переопределите <xref:System.Windows.UIElement3D.OnTouchEnter%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3484">Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3485">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.TouchEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3485">Identifies the <see cref="E:System.Windows.UIElement3D.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3486">Получает все сенсорные устройства, переданные в данный элемент.</span><span class="sxs-lookup"><span data-stu-id="a8478-3486">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="a8478-3487">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, полученных этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3487">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3488">Получает все сенсорные устройства, переданные в этот элемент или какой-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-3488">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a8478-3489">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, полученных этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-3489">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3490">Получает все сенсорные устройства, находящиеся над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3490">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="a8478-3491">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, находящихся над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3491">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3492">Получает все сенсорные устройства, находящиеся над этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-3492">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a8478-3493">Перечисление объектов <see cref="T:System.Windows.Input.TouchDevice" />, которые находятся над этим элементом или каким-либо из его дочерних элементов в визуальном дереве.</span><span class="sxs-lookup"><span data-stu-id="a8478-3493">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3494">Происходит при перемещении касания за границы элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3494">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3495">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3495">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3496">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3496">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchLeaveEvent>|  
|<span data-ttu-id="a8478-3497">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3497">Routing strategy</span></span>|<span data-ttu-id="a8478-3498">Direct</span><span class="sxs-lookup"><span data-stu-id="a8478-3498">Direct</span></span>|  
|<span data-ttu-id="a8478-3499">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3499">Delegate</span></span>|<span data-ttu-id="a8478-3500"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3500"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3501">Переопределите <xref:System.Windows.UIElement3D.OnTouchLeave%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3501">Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3502">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.TouchLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3502">Identifies the <see cref="E:System.Windows.UIElement3D.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3503">Возникает при перемещении пальца по экрану при условии, если палец находится над данным элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3503">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3504">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3504">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3505">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3505">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchMoveEvent>|  
|<span data-ttu-id="a8478-3506">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3506">Routing strategy</span></span>|<span data-ttu-id="a8478-3507">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3507">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3508">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3508">Delegate</span></span>|<span data-ttu-id="a8478-3509"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3509"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3510">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3510">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="a8478-3511">Переопределите <xref:System.Windows.UIElement3D.OnTouchMove%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3511">Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3512">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.TouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3512">Identifies the <see cref="E:System.Windows.UIElement3D.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3513">Возникает, когда палец отрывается от экрана при условии, что палец находится над этим элементом.</span><span class="sxs-lookup"><span data-stu-id="a8478-3513">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8478-3514">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="a8478-3514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3515">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3515">Identifier field</span></span>|<xref:System.Windows.UIElement3D.TouchUpEvent>|  
|<span data-ttu-id="a8478-3516">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3516">Routing strategy</span></span>|<span data-ttu-id="a8478-3517">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="a8478-3517">Bubbling</span></span>|  
|<span data-ttu-id="a8478-3518">делегат</span><span class="sxs-lookup"><span data-stu-id="a8478-3518">Delegate</span></span>|<span data-ttu-id="a8478-3519"><xref:System.EventHandler%601> имеет тип данных <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3519"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a8478-3520">Соответствующее событие туннелирования — <xref:System.Windows.UIElement3D.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3520">The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="a8478-3521">Переопределите <xref:System.Windows.UIElement3D.OnTouchUp%2A>, чтобы реализовать обработку класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="a8478-3521">Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3522">Идентифицирует направленное событие <see cref="E:System.Windows.UIElement3D.TouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3522">Identifies the <see cref="E:System.Windows.UIElement3D.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement3D.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3523">Возвращает или задает видимость [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] данного элемента.</span><span class="sxs-lookup"><span data-stu-id="a8478-3523">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span></summary>
        <value><span data-ttu-id="a8478-3524">Значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="a8478-3524">A value of the enumeration.</span></span> <span data-ttu-id="a8478-3525">Значение по умолчанию — <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3525">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3526">Установка этого свойства влияет на значение <xref:System.Windows.UIElement3D.IsVisible%2A>, которое, в свою очередь, может вызвать событие <xref:System.Windows.UIElement3D.IsVisibleChanged>.</span><span class="sxs-lookup"><span data-stu-id="a8478-3526">Setting this property affects the value of <xref:System.Windows.UIElement3D.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event.</span></span> <span data-ttu-id="a8478-3527">Однако <xref:System.Windows.UIElement3D.IsVisible%2A> имеет другие факторы, влияющие на него, например параметры видимости родительских элементов, содержащих его.</span><span class="sxs-lookup"><span data-stu-id="a8478-3527">However, <xref:System.Windows.UIElement3D.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="a8478-3528">Элементы, где <xref:System.Windows.UIElement3D.Visibility%2A> не <xref:System.Windows.Visibility.Visible>, не участвуют в событиях ввода (или командах) и не регистрируются при проверке нажатия.</span><span class="sxs-lookup"><span data-stu-id="a8478-3528">Elements where <xref:System.Windows.UIElement3D.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands) and are not reported in hit testing.</span></span>  
  
 <span data-ttu-id="a8478-3529"><xref:System.Windows.UIElement3D.Visibility%2A> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3529"><xref:System.Windows.UIElement3D.Visibility%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3530">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3530">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8478-3531">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="a8478-3531">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8478-3532">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="a8478-3532">Identifier field</span></span>|<xref:System.Windows.UIElement3D.VisibilityProperty>|  
|<span data-ttu-id="a8478-3533">Для свойств метаданных задано значение `true`</span><span class="sxs-lookup"><span data-stu-id="a8478-3533">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8478-3534">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="a8478-3534">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8478-3535">Идентифицирует свойство зависимостей <see cref="P:System.Windows.UIElement3D.Visibility" />.</span><span class="sxs-lookup"><span data-stu-id="a8478-3535">Identifies the <see cref="P:System.Windows.UIElement3D.Visibility" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8478-3536"><xref:System.Windows.UIElement3D.VisibilityProperty> введен в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="a8478-3536"><xref:System.Windows.UIElement3D.VisibilityProperty> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8478-3537">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="a8478-3537">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
