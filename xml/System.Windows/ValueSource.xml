<Type Name="ValueSource" FullName="System.Windows.ValueSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9b2f2c569798c43932db9b71677e6a6716103c9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70440830" /></Metadata><TypeSignature Language="C#" Value="public struct ValueSource" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueSource extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValueSource" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueSource" />
  <TypeSignature Language="C++ CLI" Value="public value class ValueSource" />
  <TypeSignature Language="F#" Value="type ValueSource = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e0d07-101">Предоставляет информацию, возвращенную из <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-101">Reports the information returned from <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-102">Большая часть сведений, передаваемых, <xref:System.Windows.ValueSource> содержится <xref:System.Windows.ValueSource.BaseValueSource%2A> в свойстве.</span><span class="sxs-lookup"><span data-stu-id="e0d07-102">Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property.</span></span> <span data-ttu-id="e0d07-103">Это свойство содержит значение перечисления, определяющее только один аспект общей [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] системы свойств, который отвечает за эффективное значение свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="e0d07-103">This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.</span></span>  
  
 <span data-ttu-id="e0d07-104">Помимо базового значения, другая информация, которая может представлять интерес к значению свойства зависимости, заключается в том, является ли значение анимированным, и включает ли значение выражение (например, привязку или ссылку на динамический ресурс).</span><span class="sxs-lookup"><span data-stu-id="e0d07-104">Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</span></span> <span data-ttu-id="e0d07-105">Эта информация сообщается <xref:System.Windows.ValueSource.IsAnimated%2A> и <xref:System.Windows.ValueSource.IsExpression%2A> соответственно.</span><span class="sxs-lookup"><span data-stu-id="e0d07-105">This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively.</span></span> <span data-ttu-id="e0d07-106">Кроме того, если приведение выполняется к значению свойства, свойство оставляет нужное значение, а значение свойства будет пытаться достичь этого значения, если ограничения конкретного приведения будут изменены или ликвидированы.</span><span class="sxs-lookup"><span data-stu-id="e0d07-106">Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</span></span> <span data-ttu-id="e0d07-107">Приведенное свойство, не соответствующее требуемому значению, будет сообщать <xref:System.Windows.ValueSource.IsCoerced%2A> , `true`что.</span><span class="sxs-lookup"><span data-stu-id="e0d07-107">A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyHelper" />
    <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
  </Docs>
  <Members>
    <Member MemberName="BaseValueSource">
      <MemberSignature Language="C#" Value="public System.Windows.BaseValueSource BaseValueSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.BaseValueSource BaseValueSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.BaseValueSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseValueSource As BaseValueSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::BaseValueSource BaseValueSource { System::Windows::BaseValueSource get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseValueSource : System.Windows.BaseValueSource" Usage="System.Windows.ValueSource.BaseValueSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.BaseValueSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0d07-108">Возвращает значение перечисления <see cref="T:System.Windows.BaseValueSource" />, сообщающее об источнике, присвоившем системе свойства зависимостей значение.</span><span class="sxs-lookup"><span data-stu-id="e0d07-108">Gets a value of the <see cref="T:System.Windows.BaseValueSource" /> enumeration, which reports the source that provided the dependency property system with a value.</span></span></summary>
        <value><span data-ttu-id="e0d07-109">Значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="e0d07-109">A value of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-110">Базовое значение не является эффективным значением, если для свойства действует приведение или анимация.</span><span class="sxs-lookup"><span data-stu-id="e0d07-110">The base value is not the effective value if either coercion or animation is acting on the property.</span></span> <span data-ttu-id="e0d07-111">Установите <xref:System.Windows.ValueSource.IsAnimated%2A> флажок <xref:System.Windows.ValueSource.IsCoerced%2A> и, если нужно определить, является ли базовое значение эффективным.</span><span class="sxs-lookup"><span data-stu-id="e0d07-111">Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.</span></span>  
  
 <span data-ttu-id="e0d07-112">Также может потребоваться проверить <xref:System.Windows.ValueSource.IsExpression%2A> , было ли базовое значение вычислено из выражения.</span><span class="sxs-lookup"><span data-stu-id="e0d07-112">You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueSource.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e0d07-113">Объект, который требуется сравнить с данным объектом <see cref="T:System.Windows.ValueSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-113">The object to compare with this <see cref="T:System.Windows.ValueSource" />.</span></span></param>
        <summary><span data-ttu-id="e0d07-114">Возвращает значение, указывающее, равен ли данный <see cref="T:System.Windows.ValueSource" /> заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="e0d07-114">Returns a value indicating whether this <see cref="T:System.Windows.ValueSource" /> is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="e0d07-115"><see langword="true" />, если указанный объект эквивалентен текущему <see cref="T:System.Windows.ValueSource" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-115"><see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.ValueSource" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-116">Эта реализация поддерживает равенство значений на основе всех значений свойств каждой <xref:System.Windows.ValueSource> структуры.</span><span class="sxs-lookup"><span data-stu-id="e0d07-116">This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueSource.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0d07-117">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.ValueSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-117">Returns the hash code for this <see cref="T:System.Windows.ValueSource" />.</span></span></summary>
        <returns><span data-ttu-id="e0d07-118">Хэш-код 32-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="e0d07-118">A 32-bit unsigned integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-119">Этот хэш-код основан на <xref:System.Windows.ValueSource.BaseValueSource%2A> значении.</span><span class="sxs-lookup"><span data-stu-id="e0d07-119">This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="IsAnimated">
      <MemberSignature Language="C#" Value="public bool IsAnimated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnimated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsAnimated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnimated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnimated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnimated : bool" Usage="System.Windows.ValueSource.IsAnimated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0d07-120">Возвращает значение, определяющее, анимировано ли свойство.</span><span class="sxs-lookup"><span data-stu-id="e0d07-120">Gets a value that declares whether the property is being animated.</span></span></summary>
        <value><span data-ttu-id="e0d07-121">Если свойство анимируется, значение <see langword="true" />; если нет, значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-121"><see langword="true" /> if the property is animated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-122">Для любого свойства, которое в данный момент анимируется, источник, сообщаемый <xref:System.Windows.ValueSource.BaseValueSource%2A> , не является немедленно релевантным, так как анимация работает с более высоким приоритетом свойства зависимости, чем базовое значение.</span><span class="sxs-lookup"><span data-stu-id="e0d07-122">For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</span></span> <span data-ttu-id="e0d07-123">Дополнительные сведения о приоритетах и анимациях см. в разделе [приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="e0d07-123">For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsCoerced">
      <MemberSignature Language="C#" Value="public bool IsCoerced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCoerced" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsCoerced" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCoerced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCoerced { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCoerced : bool" Usage="System.Windows.ValueSource.IsCoerced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0d07-124">Возвращает значение, объявляющее, было ли это значение получено из реализации <see cref="T:System.Windows.CoerceValueCallback" />, применяемой к свойству зависимостей.</span><span class="sxs-lookup"><span data-stu-id="e0d07-124">Gets a value that declares whether this value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property.</span></span></summary>
        <value><span data-ttu-id="e0d07-125"><see langword="true" /> если значение является результатом реализации <see cref="T:System.Windows.CoerceValueCallback" /> примененной к свойству зависимостей; иначе — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-125"><see langword="true" /> if the value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-126">Если приведение выполняется к значению свойства, свойство оставляет нужное значение, а значение свойства будет пытаться достичь этого значения, если ограничения конкретного приведения будут изменены или ликвидированы.</span><span class="sxs-lookup"><span data-stu-id="e0d07-126">If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</span></span> <span data-ttu-id="e0d07-127">Приведенное свойство, не соответствующее требуемому значению, будет сообщать <xref:System.Windows.ValueSource.IsCoerced%2A> , `true`что.</span><span class="sxs-lookup"><span data-stu-id="e0d07-127">A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.</span></span>  
  
 <span data-ttu-id="e0d07-128">Приведение выполняется с более высоким приоритетом, чем базовое значение, и не строго говорит участнику в том, как устанавливается базовое значение.</span><span class="sxs-lookup"><span data-stu-id="e0d07-128">Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</span></span> <span data-ttu-id="e0d07-129">Таким образом, состояние приведения указывается этим свойством, а не значением <xref:System.Windows.BaseValueSource> перечисления.</span><span class="sxs-lookup"><span data-stu-id="e0d07-129">Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration.</span></span> <span data-ttu-id="e0d07-130">Дополнительные сведения о приведении, базовых значениях и приоритете см. в разделе [Приоритет значения свойства зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="e0d07-130">For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrent">
      <MemberSignature Language="C#" Value="public bool IsCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsCurrent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrent : bool" Usage="System.Windows.ValueSource.IsCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0d07-131">Получает значение, указывающее, было ли значение задано методом <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-131">Gets whether the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method.</span></span></summary>
        <value><span data-ttu-id="e0d07-132">Значение <see langword="true" />, если значение было задано методом <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-132"><see langword="true" /> if the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpression">
      <MemberSignature Language="C#" Value="public bool IsExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpression" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpression { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpression : bool" Usage="System.Windows.ValueSource.IsExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0d07-133">Возвращает значение, определяющее, является ли значение результатом вычисленного уравнения.</span><span class="sxs-lookup"><span data-stu-id="e0d07-133">Gets a value that declares whether this value resulted from an evaluated expression.</span></span> <span data-ttu-id="e0d07-134">Это может быть <see cref="T:System.Windows.Data.BindingExpression" />, поддерживающий привязку или одно из внутренних уравнений, поддерживающее [расширение разметки DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="e0d07-134">This might be a <see cref="T:System.Windows.Data.BindingExpression" /> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span></span></summary>
        <value><span data-ttu-id="e0d07-135"><see langword="true" />, если значение является результатом уравнения; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-135"><see langword="true" /> if the value came from an evaluated expression; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-136">Вычисленное выражение также будет сообщать конкретное базовое значение параметра, в котором было применено выражение, как <xref:System.Windows.ValueSource.BaseValueSource%2A>значение в.</span><span class="sxs-lookup"><span data-stu-id="e0d07-136">An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span></span> <span data-ttu-id="e0d07-137">Объект <xref:System.Windows.ValueSource.BaseValueSource%2A> по-прежнему имеет важное значение для любого <xref:System.Windows.ValueSource.IsExpression%2A> свойства `true`, где имеет значение.</span><span class="sxs-lookup"><span data-stu-id="e0d07-137">The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`.</span></span> <span data-ttu-id="e0d07-138">Определить, может ли значение следовать за выражением, особенно полезно, если значение было задано косвенно, например с помощью шаблона или значения унаследованного свойства.</span><span class="sxs-lookup"><span data-stu-id="e0d07-138">Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</span></span>  
  
 <span data-ttu-id="e0d07-139">Если выражение не удается вычислить (произошел сбой привязки; ресурс с таким именем не найден), то значение будет получено от другого участника в системе свойств, скорее всего, в качестве значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e0d07-139">If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</span></span> <span data-ttu-id="e0d07-140">Этот источник затем будет передан в <xref:System.Windows.ValueSource.BaseValueSource%2A>отчет.</span><span class="sxs-lookup"><span data-stu-id="e0d07-140">That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span></span> <span data-ttu-id="e0d07-141">Неудачные вычисления выражений будут `false` возвращать для <xref:System.Windows.ValueSource.IsExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0d07-141">Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.ValueSource vs1, valuetype System.Windows.ValueSource vs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (vs1 As ValueSource, vs2 As ValueSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::ValueSource vs1, System::Windows::ValueSource vs2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.ValueSource * System.Windows.ValueSource -&gt; bool" Usage="vs1 = vs2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vs1" Type="System.Windows.ValueSource" />
        <Parameter Name="vs2" Type="System.Windows.ValueSource" />
      </Parameters>
      <Docs>
        <param name="vs1"><span data-ttu-id="e0d07-142">Первый экземпляр <see cref="T:System.Windows.ValueSource" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="e0d07-142">The first <see cref="T:System.Windows.ValueSource" /> to compare.</span></span></param>
        <param name="vs2"><span data-ttu-id="e0d07-143">Второй экземпляр <see cref="T:System.Windows.ValueSource" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="e0d07-143">The second <see cref="T:System.Windows.ValueSource" /> to compare.</span></span></param>
        <summary><span data-ttu-id="e0d07-144">Определяет, равны ли значения двух экземпляров <see cref="T:System.Windows.ValueSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-144">Determines whether two <see cref="T:System.Windows.ValueSource" /> instances have the same value.</span></span></summary>
        <returns><span data-ttu-id="e0d07-145"><see langword="true" />, если два экземпляра <see cref="T:System.Windows.ValueSource" /> эквивалентны; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-145"><see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-146">Эта реализация вызывает <xref:System.Windows.ValueSource.Equals%2A>и поддерживает равенство значений на основе всех <xref:System.Windows.ValueSource>свойств.</span><span class="sxs-lookup"><span data-stu-id="e0d07-146">This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.ValueSource vs1, valuetype System.Windows.ValueSource vs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (vs1 As ValueSource, vs2 As ValueSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::ValueSource vs1, System::Windows::ValueSource vs2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.ValueSource * System.Windows.ValueSource -&gt; bool" Usage="System.Windows.ValueSource.op_Inequality (vs1, vs2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vs1" Type="System.Windows.ValueSource" />
        <Parameter Name="vs2" Type="System.Windows.ValueSource" />
      </Parameters>
      <Docs>
        <param name="vs1"><span data-ttu-id="e0d07-147">Первый экземпляр <see cref="T:System.Windows.ValueSource" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="e0d07-147">The first <see cref="T:System.Windows.ValueSource" /> to compare.</span></span></param>
        <param name="vs2"><span data-ttu-id="e0d07-148">Второй экземпляр <see cref="T:System.Windows.ValueSource" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="e0d07-148">The second <see cref="T:System.Windows.ValueSource" /> to compare.</span></span></param>
        <summary><span data-ttu-id="e0d07-149">Определяет, не равны ли значения двух экземпляров <see cref="T:System.Windows.ValueSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-149">Determines whether two <see cref="T:System.Windows.ValueSource" /> instances do not have the same value.</span></span></summary>
        <returns><span data-ttu-id="e0d07-150"><see langword="true" /> если два экземпляра <see cref="T:System.Windows.ValueSource" /> не равнозначны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0d07-150"><see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are not equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d07-151">Эта реализация вызывает <xref:System.Windows.ValueSource.Equals%2A>, возвращает свое отрицание и поддерживает равенство значений на основе всех <xref:System.Windows.ValueSource>свойств.</span><span class="sxs-lookup"><span data-stu-id="e0d07-151">This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
  </Members>
</Type>
