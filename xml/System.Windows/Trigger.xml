<Type Name="Trigger" FullName="System.Windows.Trigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="543dc8563afbea27b6446486b071f0bde1709edb" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180036" /></Metadata><TypeSignature Language="C#" Value="public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Trigger extends System.Windows.TriggerBase implements class System.ComponentModel.ISupportInitialize, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Trigger" />
  <TypeSignature Language="VB.NET" Value="Public Class Trigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trigger : System::Windows::TriggerBase, System::ComponentModel::ISupportInitialize, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Trigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет триггер, который применяет значения свойств или выполняет действия условно.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] определяет свойства, соответствующие действиям конечных пользователей, например свойство <xref:System.Windows.UIElement.IsMouseOver%2A>, для которого задано значение `true`, когда пользователь наводит указатель мыши на <xref:System.Windows.UIElement> или соответствующее свойство <xref:System.Windows.ContentElement.IsMouseOver%2A> <xref:System.Windows.ContentElement>. Представление действий конечных пользователей в значениях свойств вместе с элементом <xref:System.Windows.Trigger> позволяет [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]ным стилям изменять значения свойств на основе этих действий конечных пользователей в разметке.  
  
 Свойства, измененные триггерами, автоматически сбрасываются до предыдущего значения, когда активированное условие больше не выполняется. Триггеры оптимизированы для временных состояний, которые должны быть изменены и возвращаться в исходное состояние, например <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> в <xref:System.Windows.Controls.Button> и <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> на <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Trigger.Property%2A> интерес должен быть свойством зависимостей.  
  
 Обратите внимание, что для того чтобы триггер был осмысленным, необходимо указать свойства <xref:System.Windows.Trigger.Property%2A> и <xref:System.Windows.Trigger.Value%2A> в <xref:System.Windows.Trigger>. Если одно или оба свойства не заданы, возникает исключение.  
  
 Свойство <xref:System.Windows.Trigger.Setters%2A> объекта <xref:System.Windows.Trigger> может состоять только из <xref:System.Windows.Setter> объектов. Добавление дочернего <xref:System.Windows.Setter> в объект <xref:System.Windows.Trigger> неявно добавляет его в <xref:System.Windows.SetterBaseCollection> для объекта <xref:System.Windows.Trigger>. <xref:System.Windows.EventSetter> объекты не поддерживаются; <xref:System.Windows.EventSetter> объекты поддерживаются только <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>.  
  
 Существуют другие типы триггеров. <xref:System.Windows.MultiTrigger> позволяет применять изменения в зависимости от состояния нескольких свойств. <xref:System.Windows.EventTrigger> позволяет применять изменения при возникновении события. <xref:System.Windows.DataTrigger> и <xref:System.Windows.MultiDataTrigger> предназначены для свойств, привязанных к данным.  
  
   
  
## Examples  
 В следующем примере показано именованное <xref:System.Windows.Style>, доступное для <xref:System.Windows.Controls.Button> элементов управления. <xref:System.Windows.Style> определяет элемент <xref:System.Windows.Trigger>, который изменяет свойство <xref:System.Windows.Controls.Control.Foreground%2A> кнопки, если <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> свойство имеет значение `true`.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Введение в Пример стилизации и создания шаблонов</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Trigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Trigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Trigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.Trigger.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство, которое возвращает значение, сравниваемое со свойством <see cref="P:System.Windows.Trigger.Value" /> триггера. Данное сравнение является проверкой равенства ссылок.</summary>
        <value>Объект <see cref="T:System.Windows.DependencyProperty" />, который возвращает значение свойства элемента. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, возвращаемое этим свойством, сравнивается со значением, заданным свойством <xref:System.Windows.Trigger.Value%2A>. Выполняемое сравнение является проверкой равенства ссылок. Если два значения совпадают, то связанная <xref:System.Windows.Setter>s применяет указанные значения свойств.  
  
 Используйте синтаксис `ClassName.PropertyName` для определения свойства, которое вы указываете, если стиль или шаблон, содержащий этот триггер, не имеет набора свойств `TargetType`.  
  
 Обратите внимание, что для того чтобы триггер был осмысленным, необходимо указать свойства <xref:System.Windows.Trigger.Property%2A> и <xref:System.Windows.Trigger.Value%2A> в <xref:System.Windows.Trigger>. Если одно или оба свойства не заданы, возникает исключение.  
  
   
  
## Examples  
 В следующем примере содержатся два триггера. Первый изменяет свойство <xref:System.Windows.Controls.Control.Background%2A> <xref:System.Windows.Controls.Button>, когда свойство <xref:System.Windows.UIElement.IsMouseOver%2A> `true`. Второй элемент изменяет свойство <xref:System.Windows.Controls.Control.Foreground%2A> кнопки, если свойство <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> имеет значение `true`. <xref:System.Windows.Style.TargetType%2A> <xref:System.Windows.Style> имеет значение <xref:System.Windows.Controls.Button>, поэтому нет необходимости уточнять свойства `Property` именем класса.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Windows.Style" /> не может включать триггер <see cref="T:System.Windows.Trigger" />, который ссылается на свойство <see cref="T:System.Windows.Style" />.</exception>
        <exception cref="T:System.InvalidOperationException">После того как триггер <see cref="T:System.Windows.Trigger" /> использован, его нельзя изменить.</exception>
        <altmember cref="P:System.Windows.Trigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Введение в Пример стилизации и создания шаблонов</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveTypeConverter : obj * System.Windows.Markup.XamlSetTypeConverterEventArgs -&gt; unit" Usage="System.Windows.Trigger.ReceiveTypeConverter (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">Объект, в котором преобразователь типов устанавливает значение.</param>
        <param name="eventArgs">Данные, относящиеся к обработке преобразователя типов.</param>
        <summary>Обрабатывает случаи, когда преобразователь типов предоставляет значение для свойства объекта <see cref="T:System.Windows.Trigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это метод, на который ссылается примененный атрибут <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> на уровне класса, что означает, что этот метод обрабатывает все попытки установки значений <xref:System.Windows.Trigger> с преобразователем типов. Обычно этот метод не вызывается напрямую.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Trigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию объектов <see cref="T:System.Windows.Setter" />, описывающих значения свойств, которые должны применяться, если выполняется определенное условие.</summary>
        <value>Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *зерурморесеттерс*  
 Ноль или более <xref:System.Windows.Setter> объектов. Это не поддерживает объект <xref:System.Windows.EventSetter>.  
  
 <xref:System.Windows.Trigger> позволяет использовать <xref:System.Windows.Setter>s для применения значений свойств, если элемент соответствует заданному условию. Например, может потребоваться изменить цвет фона элемента, когда он находится в фокусе.  
  
 Если одно и то же свойство задано несколько раз, будет применено последнее значение свойства.  
  
 Свойство <xref:System.Windows.Trigger.Setters%2A> объекта <xref:System.Windows.Trigger> может состоять только из <xref:System.Windows.Setter> объектов. Добавление дочернего <xref:System.Windows.Setter> в объект <xref:System.Windows.Trigger> неявно добавляет его в <xref:System.Windows.SetterBaseCollection> для объекта <xref:System.Windows.Trigger>. <xref:System.Windows.EventSetter> объекты не поддерживаются; <xref:System.Windows.EventSetter> объекты поддерживаются только <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Как упоминалось выше, добавление дочернего <xref:System.Windows.Setter> в объект <xref:System.Windows.Trigger> неявно добавляет его в <xref:System.Windows.SetterBaseCollection> для объекта <xref:System.Windows.Trigger>. В следующем примере `<Trigger.Setters>` является неявным.  
  
 [!code-xaml[PhotoStoreDemoStyled#TriggerSettersRef](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#triggersettersref)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Введение в Пример стилизации и создания шаблонов</related>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.Trigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя объекта со свойством, которое вызывает применение соответствующих переключателей.</summary>
        <value>Свойство по умолчанию имеет значение <see langword="null" />. Если это свойство имеет значение <see langword="null" />, свойство <see cref="P:System.Windows.Trigger.Property" /> оценивается по отношению к элементу, к которому применяется данный стиль или шаблон (родитель стиля или родитель шаблона).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этому свойству можно присвоить имя любого элемента в области, где применяется коллекция триггеров (коллекция, частью которой является данный <xref:System.Windows.Trigger>). Обычно это именованный элемент, который находится в шаблоне, содержащем эту <xref:System.Windows.Trigger>.  
  
 Имя объекта можно присвоить с помощью синтаксиса [директивы x:Name](~/docs/framework/xaml-services/x-name-directive.md) .  
  
   
  
## Examples  
 Одним из сценариев, когда используется свойство <xref:System.Windows.Trigger.SourceName%2A>, является ситуация, когда интересующее свойство не является свойством родительского элемента, как показано в следующем примере:  
  
 [!code-xaml[ControlTemplateExamples#TriggerSourceName](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/menu.xaml#triggersourcename)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">После того как триггер <see cref="T:System.Windows.Trigger" /> использован, его нельзя изменить.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сигнализирует объекту, что инициализация начинается.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Setter> приведен к типу интерфейса <xref:System.ComponentModel.ISupportInitialize>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сигнализирует объекту, что инициализация завершена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Setter> приведен к типу интерфейса <xref:System.ComponentModel.ISupportInitialize>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Добавляемый дочерний объект.</param>
        <summary>Добавляет дочерний объект.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Trigger> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст для добавления в объект.</param>
        <summary>Добавляет текстовое содержимое узла в объект.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Trigger> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Trigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Property")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("SourceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение для сравнения с значением свойства элемента. Данное сравнение является проверкой равенства ссылок.</summary>
        <value>Значение по умолчанию — <see langword="null" />. Также см. раздел "Исключения".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение сравнивается со значением свойства, возвращаемым свойством <xref:System.Windows.Trigger.Property%2A> <xref:System.Windows.Trigger>. Выполняемое сравнение — это проверка качества ссылок. Если два значения равны, то связанная <xref:System.Windows.Setter>s применяет указанные значения свойств.  
  
 Обратите внимание, что для того чтобы триггер был осмысленным, необходимо указать свойства <xref:System.Windows.Trigger.Property%2A> и <xref:System.Windows.Trigger.Value%2A> в <xref:System.Windows.Trigger>. Таким образом, если одно или оба свойства не указаны, создается исключение.  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
   
  
## Examples  
 В следующем примере изменяется свойство <xref:System.Windows.Controls.Control.Foreground%2A> кнопки, если свойство <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> имеет значение `true`.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Исключения, например, привязки, не поддерживаются.</exception>
        <exception cref="T:System.InvalidOperationException">После того как триггер <see cref="T:System.Windows.Trigger" /> использован, его нельзя изменить.</exception>
        <altmember cref="P:System.Windows.Trigger.Property" />
        <altmember cref="P:System.Windows.Trigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>
