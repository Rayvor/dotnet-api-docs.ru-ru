<Type Name="IWeakEventListener" FullName="System.Windows.IWeakEventListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56c23c281fad327a8782e15b932a4c0347858871" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64185579" /></Metadata><TypeSignature Language="C#" Value="public interface IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IWeakEventListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWeakEventListener" />
  <TypeSignature Language="F#" Value="type IWeakEventListener = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="47c6f-101">Предоставляет поддержку прослушивания событий для классов, ожидающих получения событий через шаблон WeakEvent и <see cref="T:System.Windows.WeakEventManager" />.</span><span class="sxs-lookup"><span data-stu-id="47c6f-101">Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a <see cref="T:System.Windows.WeakEventManager" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c6f-102"><xref:System.Windows.WeakEventManager> (Диспетчер) пересылает события путем вызова <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> метод в классах, которые реализуют этот интерфейс, и, были добавлены в качестве прослушивателей, вызвав <xref:System.Windows.WeakEventManager> методы заранее.</span><span class="sxs-lookup"><span data-stu-id="47c6f-102">The <xref:System.Windows.WeakEventManager> (a dispatcher) forwards an event by calling the <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> method on classes that implement this interface, and that have been added as listeners by calling <xref:System.Windows.WeakEventManager> methods beforehand.</span></span>  
  
 <span data-ttu-id="47c6f-103">Следующий шаблон WeakEvent основной причиной является после источника события времени жизни объекта, потенциально независимого от прослушивателей событий.</span><span class="sxs-lookup"><span data-stu-id="47c6f-103">The principal reason for following the WeakEvent pattern is when the event source has an object lifetime that is potentially independent of the event listeners.</span></span> <span data-ttu-id="47c6f-104">С помощью централизованной диспетчеризации событий <xref:System.Windows.WeakEventManager> включает обработчики прослушивателей сборщику мусора собранные (или ручной очистке) даже если время жизни объекта источника выходит за пределы прослушиватели.</span><span class="sxs-lookup"><span data-stu-id="47c6f-104">Using the central event dispatching of a <xref:System.Windows.WeakEventManager> enables the handlers for listeners to be garbage collected (or manually purged) even if the source object lifetime extends beyond the listeners.</span></span> <span data-ttu-id="47c6f-105">Напротив привязка обычных событий с помощью `+=` или потенциально постоянного подключенного источника, для хранения строгую ссылку на обработчик вызывает синтаксис эквивалентного события конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="47c6f-105">By contrast, a normal event hookup using `+=` or equivalent language-specific event syntax causes the potentially still-connected source to hold a strong reference to the handlers.</span></span> <span data-ttu-id="47c6f-106">Это позволяет сборщику мусора своевременно ссылки прослушивателя.</span><span class="sxs-lookup"><span data-stu-id="47c6f-106">This keeps the listener references from being garbage collected in a timely fashion.</span></span>  
  
 <span data-ttu-id="47c6f-107">Одна из распространенных ситуаций, где связи между источниками и прослушивателями предлагает использовать этот шаблон является обработка событий обновления, поступающих из источников для привязок данных.</span><span class="sxs-lookup"><span data-stu-id="47c6f-107">One common situation where the relationships between sources and listeners suggests the use of this pattern is the handling of update events coming from sources for data bindings.</span></span>  
  
 <span data-ttu-id="47c6f-108">Шаблон WeakEvent можно использовать для прослушивания событий, которые являются внешними по отношению к приложению.</span><span class="sxs-lookup"><span data-stu-id="47c6f-108">You can use the WeakEvent pattern to listen for events that are external to your application.</span></span> <span data-ttu-id="47c6f-109">Необходимо определить <xref:System.Windows.WeakEventManager> , обеспечить прослушивания поведение в <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>и использовать <xref:System.Windows.WeakEventManager> присоединить обработчик ссылающегося вместо `+=`.</span><span class="sxs-lookup"><span data-stu-id="47c6f-109">You only need to define a <xref:System.Windows.WeakEventManager> for it, provide listening behavior in <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>, and use the <xref:System.Windows.WeakEventManager> to attach the handler references rather than `+=`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
  </Docs>
  <Members>
    <Member MemberName="ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="public bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveWeakEvent : Type * obj * EventArgs -&gt; bool" Usage="iWeakEventListener.ReceiveWeakEvent (managerType, sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="47c6f-110">Тип объекта <see cref="T:System.Windows.WeakEventManager" />, который вызывает этот метод.</span><span class="sxs-lookup"><span data-stu-id="47c6f-110">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span></param>
        <param name="sender"><span data-ttu-id="47c6f-111">Объект, в котором произошло событие.</span><span class="sxs-lookup"><span data-stu-id="47c6f-111">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="47c6f-112">Данные события.</span><span class="sxs-lookup"><span data-stu-id="47c6f-112">Event data.</span></span></param>
        <summary><span data-ttu-id="47c6f-113">Получает события от централизованного диспетчера событий.</span><span class="sxs-lookup"><span data-stu-id="47c6f-113">Receives events from the centralized event manager.</span></span></summary>
        <returns><span data-ttu-id="47c6f-114"><see langword="true" />, если прослушиватель обработал событие.</span><span class="sxs-lookup"><span data-stu-id="47c6f-114"><see langword="true" /> if the listener handled the event.</span></span> <span data-ttu-id="47c6f-115">При обработке диспетчером <see cref="T:System.Windows.WeakEventManager" /> в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] регистрация прослушивателя для события, которое он не обрабатывает, считается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="47c6f-115">It is considered an error by the <see cref="T:System.Windows.WeakEventManager" /> handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] to register a listener for an event that the listener does not handle.</span></span> <span data-ttu-id="47c6f-116">Вне зависимости от этого, метод должен вернуть <see langword="false" /> в случае получения события, которое он не может распознать или обработать.</span><span class="sxs-lookup"><span data-stu-id="47c6f-116">Regardless, the method should return <see langword="false" /> if it receives an event that it does not recognize or handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47c6f-117">В следующем примере реализуется <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> для обеспечения поддержки шаблон WeakEvent двух гипотетических событий `ClockwiseSpin` и `CounterclockwiseSpin` каждый из которых содержит специальный <xref:System.Windows.WeakEventManager> (не показано).</span><span class="sxs-lookup"><span data-stu-id="47c6f-117">The following example implements <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> to provide WeakEvent pattern support for two hypothetical events `ClockwiseSpin` and `CounterclockwiseSpin` that each have a dedicated <xref:System.Windows.WeakEventManager> (not shown).</span></span> <span data-ttu-id="47c6f-118">Такая реализация вызывает заглушки обработчиков класса для каждого поддерживаемого события, приведение данных события (в этом случае два события совместно использовать тот же тип данных `SpinEventArgs`).</span><span class="sxs-lookup"><span data-stu-id="47c6f-118">This implementation calls class handler stubs for each supported event, casting the event data (in this case the two events share an event data type `SpinEventArgs`).</span></span> <span data-ttu-id="47c6f-119">Реализация возвращает `false` Если полученное событие не ожидается.</span><span class="sxs-lookup"><span data-stu-id="47c6f-119">The implementation returns `false` if the event received is not one that is expected.</span></span>  
  
 [!code-csharp[CorePseudocode#IWeakEventListener](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#iweakeventlistener)]
 [!code-vb[CorePseudocode#IWeakEventListener](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#iweakeventlistener)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47c6f-120">Этот метод предназначен для получения всех возможных событий, где находится получателя в список прослушивателей.</span><span class="sxs-lookup"><span data-stu-id="47c6f-120">This method is intended to receive all possible events where the receiver is in a listener list.</span></span> <span data-ttu-id="47c6f-121">Особенно в том случае, если реализация для класса, который будет прослушивать несколько событий, необходимо проверить тип входящего <paramref name="managerType" /> соответствующий параметр, чтобы определить, какое событие вызова.</span><span class="sxs-lookup"><span data-stu-id="47c6f-121">Particularly if implementing for a class that is listening for more than one event, you must check the type of the incoming <paramref name="managerType" /> parameter in order to know which event the call corresponds to.</span></span> <span data-ttu-id="47c6f-122">Именно поэтому каждое событие, который должен быть частью шаблона должен иметь специальный <see cref="T:System.Windows.WeakEventManager" />.</span><span class="sxs-lookup"><span data-stu-id="47c6f-122">This is why each event that is to be part of the pattern must have a dedicated <see cref="T:System.Windows.WeakEventManager" />.</span></span> <span data-ttu-id="47c6f-123">Кроме того <paramref name="e" /> параметр типизируется как Общие <see cref="T:System.EventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="47c6f-123">Also, the <paramref name="e" /> parameter is typed as the general <see cref="T:System.EventArgs" />.</span></span> <span data-ttu-id="47c6f-124">Таким образом, для получения свойств из данных события, для реализации необходимо для приведения к типу данных определенного события.</span><span class="sxs-lookup"><span data-stu-id="47c6f-124">Therefore, in order get any specific properties out of the event data, your implementation will need to cast to the specific event data type.</span></span>  
  
<span data-ttu-id="47c6f-125">Как правило, после проверки того, для идентификации события в зависимости от <see cref="T:System.Windows.WeakEventManager" /> типа, реализация должна вызывать обработчик закрытый класс.</span><span class="sxs-lookup"><span data-stu-id="47c6f-125">Typically, after checking for the identity of the event based on the <see cref="T:System.Windows.WeakEventManager" /> type, your implementation should call a private class handler.</span></span> <span data-ttu-id="47c6f-126">Обработчик класса предположительно может быть очень же обработчика класса, который используется для обработки этого события для прослушивателей, которые добавляются с помощью стандартный шаблон добавления <see langword="+=" /> событие на стороне отправителя.</span><span class="sxs-lookup"><span data-stu-id="47c6f-126">Your class handler could conceivably be the very same class handler that is used to handle that event for listeners that are added through the conventional event pattern of adding via <see langword="+=" /> to the event on the sender.</span></span> <span data-ttu-id="47c6f-127">В следующем разделе примере приведены примерный шаблон реализации.</span><span class="sxs-lookup"><span data-stu-id="47c6f-127">The following example section provides a rough implementation template.</span></span></para></block>
        <altmember cref="T:System.Windows.WeakEventManager" />
      </Docs>
    </Member>
  </Members>
</Type>