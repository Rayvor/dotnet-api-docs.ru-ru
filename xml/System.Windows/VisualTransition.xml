<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28b6863b2a2868d20f566573bd386ff0b3324735" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432670" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет визуальное поведение, имеющее место при переходе элемента управления из одного состояния в другое.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При переходе между состояниями можно указать визуальное поведение элемента управления, добавив <xref:System.Windows.VisualTransition> объекты. При создании <xref:System.Windows.VisualTransition>можно указать один или несколько из следующих элементов:  
  
-   Время, необходимое для перехода между состояниями, путем установки <xref:System.Windows.VisualTransition.GeneratedDuration%2A> свойства.  
  
-   Дополнительные изменения внешнего вида элемента управления, происходящие во время перехода, путем задания <xref:System.Windows.VisualTransition.Storyboard%2A> свойства.  
  
-   При применении с помощью <xref:System.Windows.VisualTransition.To%2A> задания свойств и <xref:System.Windows.VisualTransition.From%2A>. <xref:System.Windows.VisualTransition>  
  
   
  
## Examples  
 В следующем примере создается объект <xref:System.Windows.VisualTransition> , указывающий, что когда пользователь перемещает указатель мыши за пределы элемента управления, граница элемента управления изменяется на синий, затем на желтый, а затем на черный в 1,5 секунд. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.VisualTransition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя визуального состояния <see cref="T:System.Windows.VisualState" />, из которого переходит элемент управления.</summary>
        <value>Имя визуального состояния <see cref="T:System.Windows.VisualState" />, из которого переходит элемент управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.From%2A> Свойство является необязательным. <xref:System.Windows.VisualTransition> Может быть ограничена только определенными состояниями, или его можно применять при каждом переходе элемента управления между состояниями. Вы ограничиваете <xref:System.Windows.VisualTransition> применение, <xref:System.Windows.VisualTransition.To%2A> устанавливая свойства и <xref:System.Windows.VisualTransition.From%2A> . В таблице ниже приведено описание уровней ограничений от наибольшего до наименьшего.  
  
|Тип ограничения|Состояние, из которого выполняется переход|Состояние, в которое выполняется переход|  
|-------------------------|-------------------|-----------------|  
|Из указанного состояния в другое указанное состояние|Имя<xref:System.Windows.VisualState>|Имя<xref:System.Windows.VisualState>|  
|Из любого состояния в указанное состояние|Не задано|Имя<xref:System.Windows.VisualState>|  
|Из указанного состояния в любое состояние|Имя<xref:System.Windows.VisualState>|Не задано|  
|Из любого состояния в любое другое состояние|Не задано|Не задано|  
  
 В можно иметь несколько <xref:System.Windows.VisualTransition> объектов ,ссылающихсянаодноитожесостояние,ноонибудутиспользоватьсявпорядке,указанномвпредыдущейтаблице.<xref:System.Windows.VisualStateGroup>  
  
 Это поведение можно изменить, создав новый класс, наследующий от <xref:System.Windows.VisualStateManager> и <xref:System.Windows.VisualStateManager.GoToStateCore%2A> переопределяющий метод.  
  
   
  
## Examples  
 В следующем примере создаются два <xref:System.Windows.VisualTransition> объекта. Когда элемент управления переходит из `Pressed` состояния `MouseOver` в состояние, используется объект <xref:System.Windows.VisualTransition> , который имеет оба <xref:System.Windows.VisualTransition.From%2A> параметра <xref:System.Windows.VisualTransition.To%2A> и. Когда элемент управления переходит из состояния, отличного от `Pressed`, в состояние `MouseOver`, используется другой объект.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает время, которое занимает переход из одного состояния в другое.</summary>
        <value>Время, которое занимает переход из одного состояния в другое.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать, как долго выполняется переход, задав <xref:System.Windows.VisualTransition.GeneratedDuration%2A> свойство. При задании <xref:System.Windows.VisualTransition.GeneratedDuration%2A> свойства указывается время, затрачиваемое на выполнение перехода.  
  
   
  
## Examples  
 В следующем примере указывается, что элемент управления занимает одну половину секунды для перехода в `MouseOver` состояние. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает настраиваемую математическую формулу, используемую для перехода между состояниями.</summary>
        <value>Настраиваемая математическая формула, используемая для перехода между состояниями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно задать <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> свойство, чтобы указать способ перехода. Например, можно указать функцию плавности для ускорения или замедления перехода. Дополнительные сведения см. в разделе [функции плавности](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 В следующем примере создается объект <xref:System.Windows.VisualTransition> , который <xref:System.Windows.Shapes.Rectangle> вызывает перемещение по вертикали, когда пользователь нажимает кнопку мыши над <xref:System.Windows.Controls.Canvas>. В примере <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> свойству присваивается значение объекта, что приводит <xref:System.Windows.Shapes.Rectangle> к тому, что будет выглядеть так, как только <xref:System.Windows.Media.Animation.BounceEase> достигает места назначения. , Который используется, когда пользователь отпускает кнопку, имеет другой <xref:System.Windows.Media.Animation.BounceEase> объект, вызывающий <xref:System.Windows.Shapes.Rectangle> возврат к исходному положению. <xref:System.Windows.VisualTransition>  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 В следующем примере показан обработчик событий для <xref:System.Windows.UIElement3D.MouseDown> событий и. <xref:System.Windows.UIElement.MouseUp> В примере вызывается <xref:System.Windows.VisualStateManager.GoToElementState%2A> метод для <xref:System.Windows.VisualState> изменения объекта Canvas.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает раскадровку <see cref="T:System.Windows.Media.Animation.Storyboard" />, используемую при осуществлении перехода.</summary>
        <value>Раскадровка <see cref="T:System.Windows.Media.Animation.Storyboard" />, используемая при осуществлении перехода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если объект <xref:System.Windows.VisualTransition> <xref:System.Windows.VisualTransition> содержит, запускается<xref:System.Windows.Media.Animation.Storyboard> каждый раз, когда применяется. <xref:System.Windows.Media.Animation.Storyboard> Например, если нужно, <xref:System.Windows.Controls.Button> чтобы граница элемента изменила цвета, когда пользователь перемещает указатель мыши из него, можно создать объект <xref:System.Windows.VisualTransition> <xref:System.Windows.Media.Animation.Storyboard> с тем, который изменяет фон кнопки.  
  
   
  
## Examples  
 В следующем примере создается объект <xref:System.Windows.VisualTransition> , указывающий, что когда пользователь перемещает указатель мыши за пределы элемента управления, граница элемента управления изменяется на синий, затем на желтый, а затем на черный в 1,5 секунд. Полный пример см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя состояния <see cref="T:System.Windows.VisualState" />, в которое осуществляется переход.</summary>
        <value>Имя действия <see cref="T:System.Windows.VisualState" />, к которому должен быть осуществлен переход.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.To%2A> Свойство является необязательным. <xref:System.Windows.VisualTransition> Может быть ограничена только определенными состояниями, или его можно применять при каждом переходе элемента управления между состояниями. Вы ограничиваете <xref:System.Windows.VisualTransition> применение, <xref:System.Windows.VisualTransition.To%2A> устанавливая свойства и <xref:System.Windows.VisualTransition.From%2A> . В таблице ниже приведено описание уровней ограничений от наибольшего до наименьшего.  
  
|Тип ограничения|Состояние, из которого выполняется переход|Состояние, в которое выполняется переход|  
|-------------------------|-------------------|-----------------|  
|Из указанного состояния в другое указанное состояние|Имя<xref:System.Windows.VisualState>|Имя<xref:System.Windows.VisualState>|  
|Из любого состояния в указанное состояние|Не задано|Имя<xref:System.Windows.VisualState>|  
|Из указанного состояния в любое состояние|Имя<xref:System.Windows.VisualState>|Не задано|  
|Из любого состояния в любое другое состояние|Не задано|Не задано|  
  
 В можно иметь несколько <xref:System.Windows.VisualTransition> объектов ,ссылающихсянаодноитожесостояние,ноонибудутиспользоватьсявпорядке,указанномвпредыдущейтаблице.<xref:System.Windows.VisualStateGroup>  
  
 Это поведение можно изменить, создав новый класс, наследующий от <xref:System.Windows.VisualStateManager> и <xref:System.Windows.VisualStateManager.GoToStateCore%2A> переопределяющий метод.  
  
   
  
## Examples  
 В следующем примере создаются два <xref:System.Windows.VisualTransition> объекта. Когда элемент управления переходит из `Pressed` состояния `MouseOver` в состояние, используется объект <xref:System.Windows.VisualTransition> , который имеет оба <xref:System.Windows.VisualTransition.From%2A> параметра <xref:System.Windows.VisualTransition.To%2A> и. Когда элемент управления переходит из состояния, отличного от `Pressed`, в состояние `MouseOver`, используется другой объект.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
